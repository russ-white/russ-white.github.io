import { Particle } from "../Particle";
import { Constructable, ParameterPair } from "../TypeUtil";
export interface ShapeJSON {
    type: string;
    radius?: number;
    arc?: number;
    thickness?: number;
    angle?: number;
    mesh?: string;
    particleSystem?: string;
}
export interface EmitterShape {
    type: string;
    initialize(particle: Particle): void;
    toJSON(): ShapeJSON;
    clone(): EmitterShape;
}
export interface EmitterShapePlugin {
    type: string;
    constructor: Constructable<EmitterShape>;
    params: ParameterPair[];
    loadJSON: (json: any) => EmitterShape;
}
export declare const EmitterShapes: {
    [key: string]: EmitterShapePlugin;
};
export declare function EmitterFromJSON(json: ShapeJSON): EmitterShape;
