import { Particle } from "../Particle";
import { Constructable, ParameterPair } from "../TypeUtil";
import { ParticleSystem } from "../ParticleSystem";
export interface Behavior {
    type: string;
    initialize(particle: Particle): void;
    update(particle: Particle, delta: number): void;
    frameUpdate(delta: number): void;
    toJSON(): any;
    clone(): Behavior;
}
export interface BehaviorPlugin {
    type: string;
    constructor: Constructable<Behavior>;
    params: ParameterPair[];
    loadJSON: (json: any, particleSystem: ParticleSystem) => Behavior;
}
export declare const BehaviorTypes: {
    [key: string]: BehaviorPlugin;
};
export declare function BehaviorFromJSON(json: any, particleSystem: ParticleSystem): Behavior;
