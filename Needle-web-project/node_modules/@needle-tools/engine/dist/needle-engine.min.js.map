{
  "version": 3,
  "sources": ["../../node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/bufferbuilder.js", "../../node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/binarypack.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/utils.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/filtericeservers.js", "../../node_modules/peerjs/node_modules/sdp/sdp.js", "../../node_modules/peerjs/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getusermedia.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/edge_shim.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/safari/safari_shim.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/common_shim.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_factory.js", "../../node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_core.js", "../../node_modules/peerjs/dist/adapter.ts", "../../node_modules/peerjs/dist/supports.ts", "../../node_modules/peerjs/dist/util.ts", "../../node_modules/peerjs/node_modules/eventemitter3/index.js", "../../node_modules/peerjs/dist/logger.ts", "../../node_modules/peerjs/dist/enums.ts", "../../node_modules/peerjs/dist/socket.ts", "../../node_modules/peerjs/dist/negotiator.ts", "../../node_modules/peerjs/dist/baseconnection.ts", "../../node_modules/peerjs/dist/mediaconnection.ts", "../../node_modules/peerjs/dist/encodingQueue.ts", "../../node_modules/peerjs/dist/dataconnection.ts", "../../node_modules/peerjs/dist/api.ts", "../../node_modules/peerjs/dist/peer.ts", "../../node_modules/peerjs/dist/exports.ts", "../../node_modules/crypt/crypt.js", "../../node_modules/charenc/charenc.js", "../../node_modules/is-buffer/index.js", "../../node_modules/md5/md5.js", "../../engine/engine_utils.ts", "../../engine/engine_networking_utils.ts", "../../engine/engine_setup.ts", "../../engine/engine_input.ts", "../../engine/debug/debug_console.ts", "../../engine/debug/debug.ts", "../../engine/engine_default_parameters.ts", "../../engine/extensions/extension_utils.ts", "../../engine/engine_typestore.ts", "../../engine/extensions/NEEDLE_persistent_assets.ts", "../../engine/engine_serialization_core.ts", "../../engine/engine_physics.ts", "../../engine/engine_three_utils.ts", "../../engine/engine_math.ts", "../../engine/engine_types.ts", "../../engine/engine_generic_utils.js", "../../engine/engine_constants.ts", "../../engine/engine_mainloop_utils.ts", "../../engine/engine_networking_instantiate.ts", "../../node_modules/uuid/dist/esm-browser/regex.js", "../../node_modules/uuid/dist/esm-browser/validate.js", "../../node_modules/uuid/dist/esm-browser/stringify.js", "../../node_modules/uuid/dist/esm-browser/parse.js", "../../node_modules/uuid/dist/esm-browser/v35.js", "../../node_modules/uuid/dist/esm-browser/sha1.js", "../../node_modules/uuid/dist/esm-browser/v5.js", "../../engine-components/js-extensions/ExtensionUtils.ts", "../../engine-components/js-extensions/Object3D.ts", "../../engine/engine_components.ts", "../../engine/engine_instancing.ts", "../../engine/engine_gameobject.ts", "../../engine/engine_gizmos.ts", "../../engine/engine_time.ts", "../../engine/engine_networking.ts", "../../node_modules/flatbuffers/mjs/utils.js", "../../node_modules/flatbuffers/mjs/long.js", "../../node_modules/flatbuffers/mjs/encoding.js", "../../node_modules/flatbuffers/mjs/byte-buffer.js", "../../node_modules/flatbuffers/mjs/builder.js", "../../engine-schemes/schemes.ts", "../../engine/engine_networking_peer.ts", "../../engine/engine_networking_files.ts", "../../engine/engine_web_api.ts", "../../engine/engine_networking_files_default_components.ts", "../../engine/engine_gltf.ts", "../../engine/engine_assetdatabase.ts", "../../engine/engine_rendererdata.ts", "../../engine/engine_fileloader.js", "../../engine/engine_shaders.ts", "../../engine/engine_addressables.ts", "../../engine/engine_application.ts", "../../engine/extensions/NEEDLE_lightmaps.ts", "../../engine/engine_lightdata.ts", "../../engine/engine_playerview.ts", "../../engine/engine_element_overlay.ts", "../../engine/debug/debug_overlay.ts", "../../engine-components/Component.ts", "../../engine/engine_util_decorator.ts", "../../engine/engine_element_loading.ts", "../../engine/engine_loaders.ts", "../../engine/extensions/NEEDLE_animator_controller_model.ts", "../../engine-components/AnimatorController.ts", "../../engine/engine_serialization_decorator.ts", "../../engine-components/Animator.ts", "../../engine-components/Animation.ts", "../../engine/engine_scenetools.ts", "../../engine/extensions/NEEDLE_techniques_webgl.ts", "../../engine/extensions/NEEDLE_components.ts", "../../engine/extensions/EXT_texture_exr.ts", "../../engine/extensions/NEEDLE_gameobject_data.ts", "../../engine/extensions/NEEDLE_lighting_settings.ts", "../../engine/extensions/NEEDLE_render_objects.ts", "../../engine/extensions/NEEDLE_progressive.ts", "../../engine/extensions/extensions.ts", "../../engine-components/AlignmentConstraint.ts", "../../engine-components/AnimationCurve.ts", "../../engine-components/AudioListener.ts", "../../engine-components/AudioSource.ts", "../../engine-components/Camera.ts", "../../engine-components/js-extensions/RGBAColor.ts", "../../engine-components/AvatarLoader.ts", "../../engine-components/AxesHelper.ts", "../../engine-components/BasicIKConstraint.ts", "../../engine-components/BoxHelperComponent.ts", "../../engine-components/CharacterController.ts", "../../engine/engine_serialization_builtin_serializer.ts", "../../engine-components/EventList.ts", "../../engine/engine_texture.ts", "../../engine-components/RigidBody.ts", "../../engine-components/Collider.ts", "../../engine-components/Interactable.ts", "../../engine-components/DeleteBox.ts", "../../engine-components/DeviceFlag.ts", "../../engine-components/SyncedTransform.ts", "../../engine-schemes/vec3.ts", "../../engine-schemes/transform.ts", "../../engine-schemes/synced-transform-model.ts", "../../engine-components/DragControls.ts", "../../engine-components/WebXR.ts", "../../include/three/ARButton.js", "../../include/three/VRButton.js", "../../engine-components/Voip.ts", "../../engine-components/WebARSessionRoot.ts", "../../engine-components/WebXRController.ts", "../../engine-components/avatar/Avatar_Brain_LookAt.ts", "../../engine-components/WebXRAvatar.ts", "../../engine-components/XRFlag.ts", "../../engine-components/ui/BaseUIComponent.ts", "../../engine-components/OrbitControls.ts", "../../engine-components/LookAtConstraint.ts", "../../engine-components/ui/PointerEvents.ts", "../../engine-components/ui/EventSystem.ts", "../../engine-components/ui/RaycastUtils.ts", "../../engine-components/WebXRRig.ts", "../../engine-components/Gizmos.ts", "../../engine-components/WebXRSync.ts", "../../engine-schemes/vec4.ts", "../../engine-schemes/vr-user-state-buffer.ts", "../../engine-components/Networking.ts", "../../engine-components/DropListener.ts", "../../engine-components/Duplicatable.ts", "../../engine-components/EventTrigger.ts", "../../engine-components/FlyControls.ts", "../../engine-components/GridHelper.ts", "../../engine-components/GroundProjection.ts", "../../engine-components/Joints.ts", "../../engine-components/Light.ts", "../../engine-components/LODGroup.ts", "../../engine-components/NestedGltf.ts", "../../engine-components/OffsetConstraint.ts", "../../engine-components/ParticleSystem.ts", "../../engine-components/ParticleSystemModules.ts", "../../engine-components/ParticleSystemSubEmitter.ts", "../../engine-components/PlayerColor.ts", "../../engine/engine_coroutine.ts", "../../engine-components/ReflectionProbe.ts", "../../engine-components/Renderer.ts", "../../engine-components/RendererLightmap.ts", "../../engine/js-extensions/Layers.ts", "../../engine-components/VideoPlayer.ts", "../../engine/engine_input_utils.ts", "../../engine/engine_create_objects.ts", "../../engine-components/ScreenCapture.ts", "../../engine-components/ShadowCatcher.ts", "../../engine-components/Skybox.ts", "../../engine/engine_networking_auto.ts", "../../engine-components/SmoothFollow.ts", "../../engine-components/SpatialTrigger.ts", "../../engine-components/SpectatorCamera.ts", "../../engine-components/SpriteRenderer.ts", "../../engine-schemes/synced-camera-model.ts", "../../engine-components/SyncedCamera.ts", "../../engine-components/SyncedRoom.ts", "../../engine/tests/test_utils.ts", "../../engine-components/TestRunner.ts", "../../engine-components/TransformGizmo.ts", "../../engine-components/Volume.ts", "../../engine-components/WebXRGrabRendering.ts", "../../engine-components/avatar/AvatarBlink_Simple.ts", "../../engine-components/avatar/AvatarEyeLook_Rotation.ts", "../../engine-components/avatar/Avatar_MouthShapes.ts", "../../engine-components/avatar/Avatar_MustacheShake.ts", "../../engine-components/codegen/components.ts", "../../engine-components/debug/LogStats.ts", "../../engine-components/timeline/PlayableDirector.ts", "../../engine-components/timeline/SignalAsset.ts", "../../engine-components/timeline/TimelineTracks.ts", "../../engine-components/ui/Image.ts", "../../engine-components/ui/Graphic.ts", "../../engine-components/ui/RectTransform.ts", "../../engine-components/ui/Utils.ts", "../../engine-components/ui/Button.ts", "../../engine-components/ui/Canvas.ts", "../../engine-components/ui/CanvasGroup.ts", "../../engine-components/ui/Text.ts", "../../engine-components/ui/InputField.ts", "../../engine-components/ui/Keyboard.ts", "../../engine-components/ui/Layout.ts", "../../engine-components/ui/Raycaster.ts", "../../engine-components/ui/SpatialHtml.ts", "../../engine-components/export/gltf/GltfExport.ts", "../../include/three/EXT_mesh_gpu_instancing_exporter.js", "../../engine-components/export/usdz/USDZExporter.ts", "../../engine-components/export/usdz/extensions/Animation.ts", "../../engine-components/export/usdz/utils/quicklook.ts", "../../engine-components/export/usdz/utils/timeutils.ts", "../../engine-components/export/usdz/utils/animationutils.ts", "../../engine-components-experimental/Presentation.ts", "../../engine-components-experimental/annotation/LineDrawer.ts", "../../engine-components-experimental/annotation/LinesManager.ts", "../../engine-components-experimental/networking/PlayerSync.ts", "../../engine/codegen/register_types.js", "../../engine/engine_gltf_builtin_components.ts", "../../engine/engine_element.ts", "../../needle-engine.ts"],
  "sourcesContent": ["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n", "var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n", "/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n", "/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attr\u0456bute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all field\u0455 are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // \u0455dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete\u2025\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n", "import webRTCAdapter from \"webrtc-adapter\";\n\nexport { webRTCAdapter };\n", "import { webRTCAdapter } from './adapter';\n\nexport const Supports = new class {\n  readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n  readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n  readonly minFirefoxVersion = 59;\n  readonly minChromeVersion = 72;\n  readonly minSafariVersion = 605;\n\n  isWebRTCSupported(): boolean {\n    return typeof RTCPeerConnection !== 'undefined';\n  }\n\n  isBrowserSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = this.getVersion();\n\n    const validBrowser = this.supportedBrowsers.includes(browser);\n\n    if (!validBrowser) return false;\n\n    if (browser === 'chrome') return version >= this.minChromeVersion;\n    if (browser === 'firefox') return version >= this.minFirefoxVersion;\n    if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n    return false;\n  }\n\n  getBrowser(): string {\n    return webRTCAdapter.browserDetails.browser;\n  }\n\n  getVersion(): number {\n    return webRTCAdapter.browserDetails.version || 0;\n  }\n\n  isUnifiedPlanSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = webRTCAdapter.browserDetails.version || 0;\n\n    if (browser === 'chrome' && version < 72) return false;\n    if (browser === 'firefox' && version >= 59) return true;\n    if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n\n    let tempPc: RTCPeerConnection;\n    let supported = false;\n\n    try {\n      tempPc = new RTCPeerConnection();\n      tempPc.addTransceiver('audio');\n      supported = true;\n    } catch (e) { }\n    finally {\n      if (tempPc) {\n        tempPc.close();\n      }\n    }\n\n    return supported;\n  }\n\n  toString(): string {\n    return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n  }\n}", "import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"turn:0.peerjs.com:3478\", username: \"peerjs\", credential: \"peerjsp\" }\n  ],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport const util = new class {\n  noop(): void { }\n\n  readonly CLOUD_HOST = \"0.peerjs.com\";\n  readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  readonly browser = Supports.getBrowser();\n  readonly browserVersion = Supports.getVersion();\n\n  // Lists which features are supported\n  readonly supports = (function () {\n    const supported: UtilSupportsObj = {\n      browser: Supports.isBrowserSupported(),\n      webRTC: Supports.isWebRTCSupported(),\n      audioVideo: false,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n      supported.audioVideo = true;\n\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = \"blob\";\n          supported.binaryBlob = !Supports.isIOS;\n        } catch (e) {\n        }\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    return supported;\n  })();\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number, n: number, total: number, data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();", "export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId\n        },\n        dst: peerId\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState changed to disconnected on the connection with \" +\n            peerId\n          );\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[],\n      count: number,\n      total: number\n    }\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue = new EncodingQueue();\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!util.supports.binaryBlob || util.supports.reliable) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = (e) => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data as Blob, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data as string);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number, n: number, total: number, data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      if (!chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = util.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated \n   * Return type will change from Object to Map<string,[]> \n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (this._options.host === \"/\") {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== \"/\") {\n        this._options.path = \"/\" + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\n        this._options.path += \"/\";\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n      this._options.secure = util.isSecure();\n    } else if (this._options.host == util.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !util.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(\n      this._options.secure,\n      this._options.host!,\n      this._options.port!,\n      this._options.path!,\n      this._options.key!,\n      this._options.pingInterval\n    );\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error(\"Aborting!\");\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error(\"Error:\", err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === \"string\") {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n", "import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n", "(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n", "var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n", "/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n", "(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n", "// use for typesafe interface method calls\r\nimport { SourceIdentifier } from \"./engine_types\";\r\n\r\n// https://schneidenbach.gitbooks.io/typescript-cookbook/content/nameof-operator.html\r\nexport const nameofFactory = <T>() => (name: keyof T) => name;\r\nexport function nameof<T>(name: keyof T) {\r\n    return nameofFactory<T>()(name);\r\n}\r\n\r\n\r\nexport function isDebugMode(): boolean {\r\n    return getParam(\"debug\") ? true : false;\r\n}\r\n\r\n\r\n\r\nexport class CircularBuffer<T> {\r\n    private _factory: () => T;\r\n    private _cache: T[] = [];\r\n    private _maxSize: number;\r\n    private _index: number = 0;\r\n\r\n    constructor(factory: () => T, maxSize: number) {\r\n        this._factory = factory;\r\n        this._maxSize = maxSize;\r\n    }\r\n\r\n    get(): T {\r\n        let i = this._index++;\r\n        if (i >= this._cache.length) {\r\n            if (i >= this._maxSize) {\r\n                i = this._index = 0;\r\n            }\r\n            else {\r\n                this._cache.push(this._factory());\r\n            }\r\n        }\r\n        return this._cache[i];\r\n    }\r\n}\r\n\r\n\r\n\r\nlet saveParams: boolean = false;\r\nconst requestedParams: Array<string> = [];\r\nsetTimeout(() => {\r\n    if (saveParams)\r\n        console.log(requestedParams);\r\n}, 100);\r\n\r\nexport function getUrlParams() {\r\n    return new URLSearchParams(window.location.search);\r\n}\r\n\r\nexport function getParam(paramName: string): string | boolean {\r\n\r\n    if (saveParams && !requestedParams.includes(paramName))\r\n        requestedParams.push(paramName);\r\n    const urlParams = getUrlParams();\r\n    if (urlParams.has(paramName)) {\r\n        const val = urlParams.get(paramName);\r\n        if (val) {\r\n            return val;\r\n        }\r\n        else return true;\r\n    }\r\n    return false;\r\n}\r\nsaveParams = getParam(\"help\") === true;\r\n\r\nexport function setParam(paramName: string, paramValue: string): void {\r\n    const urlParams = getUrlParams();\r\n    if (urlParams.has(paramName)) {\r\n        urlParams.set(paramName, paramValue);\r\n    }\r\n    else\r\n        urlParams.append(paramName, paramValue);\r\n    document.location.search = urlParams.toString();\r\n}\r\n\r\nexport function setParamWithoutReload(paramName: string, paramValue: string, appendHistory = true): void {\r\n    const urlParams = getUrlParams();\r\n    if (urlParams.has(paramName)) {\r\n        urlParams.set(paramName, paramValue);\r\n    }\r\n    else\r\n        urlParams.append(paramName, paramValue);\r\n    if (appendHistory) pushState(paramName, urlParams);\r\n    else setState(paramName, urlParams);\r\n}\r\n\r\nexport function setOrAddParamsToUrl(url: URLSearchParams, paramName: string, paramValue: string | number): void {\r\n    if (url.has(paramName)) {\r\n        url.set(paramName, paramValue.toString());\r\n    }\r\n    else\r\n        url.append(paramName, paramValue.toString());\r\n}\r\n\r\nexport function pushState(title: string, urlParams: URLSearchParams) {\r\n    window.history.pushState(null, title, \"?\" + urlParams.toString());\r\n}\r\n\r\nexport function setState(title: string, urlParams: URLSearchParams) {\r\n    window.history.replaceState(null, title, \"?\" + urlParams.toString());\r\n}\r\n\r\n// for room id\r\nexport function makeId(length): string {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() *\r\n            charactersLength));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function randomNumber(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst adjectives = [\"smol\", \"tiny\", \"giant\", \"interesting\", \"smart\", \"bright\", \"dull\", \"extreme\", \"beautiful\", \"pretty\", \"dark\", \"epic\", \"salty\", \"silly\", \"funny\", \"lame\", \"lazy\", \"loud\", \"lucky\", \"mad\", \"mean\", \"mighty\", \"mysterious\", \"nasty\", \"odd\", \"old\", \"powerful\", \"quiet\", \"rapid\", \"scary\", \"shiny\", \"shy\", \"silly\", \"smooth\", \"sour\", \"spicy\", \"stupid\", \"sweet\", \"tasty\", \"terrible\", \"ugly\", \"unusual\", \"vast\", \"wet\", \"wild\", \"witty\", \"wrong\", \"zany\", \"zealous\", \"zippy\", \"zombie\", \"zorro\"];\r\nconst nouns = [\"cat\", \"dog\", \"mouse\", \"pig\", \"cow\", \"horse\", \"sheep\", \"chicken\", \"duck\", \"goat\", \"panda\", \"tiger\", \"lion\", \"elephant\", \"monkey\", \"bird\", \"fish\", \"snake\", \"frog\", \"turtle\", \"hamster\", \"penguin\", \"kangaroo\", \"whale\", \"dolphin\", \"crocodile\", \"snail\", \"ant\", \"bee\", \"beetle\", \"butterfly\", \"dragon\", \"eagle\", \"fish\", \"giraffe\", \"lizard\", \"panda\", \"penguin\", \"rabbit\", \"snake\", \"spider\", \"tiger\", \"zebra\"]\r\nexport function makeIdFromRandomWords(): string {\r\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\r\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\r\n    return randomAdjective + \"_\" + randomNoun;\r\n}\r\n\r\n// for url parameters\r\nexport function sanitizeString(str): string {\r\n    str = str.replace(/[^a-z0-9\u00E1\u00E9\u00ED\u00F3\u00FA\u00F1\u00FC \\.,_-]/gim, \"\");\r\n    return str.trim();\r\n}\r\n\r\n\r\n// TODO: taken from scene utils\r\nexport function tryFindObject(globalObjectIdentifier: string, obj, recursive: boolean = true, searchComponents: boolean = false) {\r\n    if (obj === undefined || obj === null) return null;\r\n\r\n    if (obj.userData && obj.userData.guid === globalObjectIdentifier) return obj;\r\n    else if (obj.guid == globalObjectIdentifier) return obj;\r\n\r\n    if (searchComponents) {\r\n        if (obj.userData?.components) {\r\n            for (const comp of obj.userData.components) {\r\n                if (comp.guid === globalObjectIdentifier) return comp;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (recursive) {\r\n\r\n        if (obj.scenes) {\r\n            for (const i in obj.scenes) {\r\n                const scene = obj.scenes[i];\r\n                const found = tryFindObject(globalObjectIdentifier, scene, recursive, searchComponents);\r\n                if (found) return found;\r\n            }\r\n        }\r\n\r\n        if (obj.children) {\r\n            for (const i in obj.children) {\r\n                const child = obj.children[i];\r\n                const found = tryFindObject(globalObjectIdentifier, child, recursive, searchComponents);\r\n                if (found) return found;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndeclare type deepClonePredicate = (owner: any, propertyName: string, current: any) => boolean;\r\n\r\nexport function deepClone(obj: any, predicate?: deepClonePredicate): any {\r\n    if (obj !== null && obj !== undefined && typeof obj === \"object\") {\r\n        let clone;\r\n        if (Array.isArray(obj)) clone = [];\r\n        else {\r\n            clone = Object.create(obj);\r\n            Object.assign(clone, obj);\r\n        }\r\n        for (const key of Object.keys(obj)) {\r\n            const val = obj[key];\r\n            if (predicate && !predicate(obj, key, val)) {\r\n                // console.log(\"SKIP\", val);\r\n                clone[key] = val;\r\n            }\r\n            else if (val?.clone !== undefined && typeof val.clone === \"function\")\r\n                clone[key] = val.clone();\r\n            else\r\n                clone[key] = deepClone(val, predicate);\r\n        }\r\n        return clone;\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function delay(milliseconds: number): Promise<void> {\r\n    return new Promise((res, _) => {\r\n        setTimeout(res, milliseconds);\r\n    });\r\n}\r\n\r\n// if a timeline is exported via menu item the audio clip path is relative to the glb (same folder)\r\n// we need to detect that here and build the new audio source path relative to the new glb location\r\n// the same is/might be true for any file that is/will be exported via menu item\r\nconst debugGetPath = getParam(\"debugsourcepath\");\r\nexport function getPath(source: SourceIdentifier | undefined, uri: string): string {\r\n    if (source === undefined) {\r\n        if (debugGetPath) console.warn(\"getPath: source is undefined, returning uri\", uri);\r\n        return uri;\r\n    }\r\n    if (uri.startsWith(\"http\")) {\r\n        if (debugGetPath) console.warn(\"getPath: uri is absolute, returning uri\", uri);\r\n        return uri;\r\n    }\r\n    const pathIndex = source.lastIndexOf(\"/\");\r\n    if (pathIndex >= 0) {\r\n        let newUri = source.substring(0, pathIndex + 1);\r\n\r\n        const uriDirectoryIndex = uri.lastIndexOf(\"/\");\r\n        if (uriDirectoryIndex >= 0) {\r\n            newUri += uri.substring(uriDirectoryIndex + 1);\r\n        } else {\r\n            newUri += uri;\r\n        }\r\n        if (debugGetPath) console.log(\"getPath:\", source, \" - changed uri from\\n\", uri, \"\\n\u2192 \", newUri);\r\n        return newUri;\r\n    }\r\n    return uri;\r\n}\r\n// export function getPath(glbLocation: SourceIdentifier | undefined, path: string) {\r\n//     if (path && glbLocation && !path.includes(\"/\")) {\r\n//         // get directory of glb and prepend it to the audio file path\r\n//         const pathIndex = glbLocation.lastIndexOf(\"/\");\r\n//         if (pathIndex >= 0) {\r\n//             const newPath = glbLocation.substring(0, pathIndex + 1) + path;\r\n//             return newPath;\r\n//         }\r\n//     }\r\n//     return path;\r\n// }\r\n\r\n\r\nexport type WriteCallback = (data: any, prop: string) => void;\r\n\r\nexport interface IWatch {\r\n    subscribeWrite(callback: WriteCallback);\r\n    apply();\r\n    revoke();\r\n    dispose();\r\n}\r\n\r\n\r\n// TODO: make it possible to add multiple watches to the same object property\r\nclass WatchImpl implements IWatch {\r\n    subscribeWrite(callback: WriteCallback) {\r\n        this.writeCallbacks.push(callback);\r\n    }\r\n    private writeCallbacks: (WriteCallback)[] = [];\r\n\r\n    constructor(object: object, prop: string) {\r\n        this._object = object;\r\n        this._prop = prop;\r\n        this._wrapperProp = Symbol(\"$\" + prop);\r\n        this.apply();\r\n    }\r\n\r\n    private _applied: boolean = false;\r\n    private _object: any;\r\n    private _prop: string;\r\n    private _wrapperProp: symbol;\r\n\r\n    apply() {\r\n        if (this._applied) return;\r\n        if (!this._object) return;\r\n        const object = this._object;\r\n        const prop = this._prop;\r\n        if (object[prop] === undefined) return;\r\n        this._applied = true;\r\n\r\n        if (object[this._wrapperProp] !== undefined) {\r\n            console.warn(\"Watcher is being applied to an object that already has a wrapper property. This is not (yet) supported\");\r\n        }\r\n\r\n        // create a wrapper property\r\n        const current = object[prop];\r\n        object[this._wrapperProp] = current;\r\n        // create wrapper methods\r\n        const getter = () => {\r\n            return object[this._wrapperProp];\r\n        }\r\n        const setter = (value) => {\r\n            object[this._wrapperProp] = value;\r\n            for (const write of this.writeCallbacks) {\r\n                write(value, this._prop);\r\n            }\r\n        }\r\n        // add the wrapper to the object\r\n        Object.defineProperty(object, prop, {\r\n            get: getter,\r\n            set: setter\r\n        });\r\n    }\r\n\r\n    revoke() {\r\n        if (!this._applied) return;\r\n        if (!this._object) return;\r\n        this._applied = false;\r\n        const object = this._object;\r\n        const prop = this._prop;\r\n        Reflect.deleteProperty(object, prop);\r\n        const current = object[this._wrapperProp];\r\n        object[prop] = current;\r\n        Reflect.deleteProperty(object, this._wrapperProp);\r\n    }\r\n\r\n    dispose() {\r\n        this.revoke();\r\n        this.writeCallbacks.length = 0;\r\n        this._object = null;\r\n    }\r\n}\r\n\r\nexport class Watch implements IWatch {\r\n\r\n    private readonly _watches: IWatch[] = [];\r\n\r\n    constructor(object: object, str: string[] | string) {\r\n        if (Array.isArray(str)) {\r\n            for (const s of str) {\r\n                this._watches.push(new Watch(object, s));\r\n            }\r\n        }\r\n        else {\r\n            this._watches.push(new WatchImpl(object, str));\r\n        }\r\n    }\r\n\r\n    subscribeWrite(callback: WriteCallback) {\r\n        for (const w of this._watches) {\r\n            w.subscribeWrite(callback);\r\n        }\r\n    }\r\n\r\n    apply() {\r\n        for (const w of this._watches) {\r\n            w.apply();\r\n        }\r\n    }\r\n\r\n    revoke() {\r\n        for (const w of this._watches) {\r\n            w.revoke();\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        for (const w of this._watches) {\r\n            w.dispose();\r\n        }\r\n        this._watches.length = 0;\r\n    }\r\n}\r\n\r\n\r\nexport function isMobileDevice() {\r\n    return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\r\n}\r\n\r\nexport function isMozillaXR() {\r\n    return /WebXRViewer\\//i.test(navigator.userAgent);\r\n}\r\n\r\nconst iosDevices = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'];\r\nexport function isiOS() {\r\n    return iosDevices.includes(navigator.platform)\r\n        // iPad on iOS 13 detection\r\n        || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\r\n}\r\n\r\nexport function isSafari() {\r\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n}", "\r\n\r\n// const testUrls = [\"https://192.254.384.122:3000/\", \"https://my-glitch-page.glitch.me/\"]\r\n// for (let url of testUrls)\r\n//     console.log(\"Testing url: \" + url, isLocalNetwork(url));\r\n\r\nexport function isLocalNetwork(hostname = window.location.hostname) {\r\n    const isLocalNetwork = new RegExp(\"[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|localhost\", \"gm\").test(hostname);\r\n    if (isLocalNetwork === true) return true;\r\n    return false;\r\n}\r\n\r\nexport function isHostedOnGlitch() {\r\n    return window.location.hostname.includes(\"glitch.me\");\r\n}", "import { DepthTexture, PerspectiveCamera, WebGLRenderer, WebGLRenderTarget } from 'three'\r\nimport * as THREE from 'three'\r\nimport { Input } from './engine_input';\r\nimport { Physics } from './engine_physics';\r\nimport { Time } from './engine_time';\r\nimport { NetworkConnection } from './engine_networking';\r\nimport { beginListenDestroy, beginListenInstantiate } from './engine_networking_instantiate';\r\n\r\nimport * as looputils from './engine_mainloop_utils';\r\nimport * as utils from \"./engine_utils\";\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\n\r\nimport { beginListenFileSpawn } from './engine_networking_files';\r\nimport { AssetDatabase } from './engine_assetdatabase';\r\n\r\nimport { logHierarchy } from './engine_three_utils';\r\n\r\nimport * as Stats from 'three/examples/jsm/libs/stats.module';\r\nimport { RendererData } from './engine_rendererdata';\r\nimport { Addressables } from './engine_addressables';\r\nimport { Application } from './engine_application';\r\nimport { LightDataRegistry, ILightDataRegistry } from './engine_lightdata';\r\nimport { PlayerViewManager } from './engine_playerview';\r\n\r\nimport { ICamera, IComponent, ILight } from \"./engine_types\"\r\nimport { destroy, foreachComponent } from './engine_gameobject';\r\n\r\n\r\nconst debug = utils.getParam(\"debugSetup\");\r\nconst stats = utils.getParam(\"stats\");\r\nconst debugActive = utils.getParam(\"debugactive\");\r\n\r\n\r\n// this is where functions that setup unity scenes will be pushed into\r\n// those will be accessed from our custom html element to load them into their context\r\nexport const build_scene_functions: { [name: string]: (context: Context) => Promise<void> } = {};\r\n\r\ndeclare type CoroutineData = {\r\n\tcomp: IComponent,\r\n\tmain: Generator,\r\n\tchained?: Array<Generator>\r\n}\r\n\r\nexport declare class LoadingProgressArgs {\r\n\tname: string;\r\n\tprogress: ProgressEvent;\r\n\tindex: number;\r\n\tcount: number;\r\n}\r\nexport declare class LoadingOptions {\r\n\tprogress: (args: LoadingProgressArgs) => void;\r\n}\r\n\r\nexport class ContextArgs {\r\n\tname: string | undefined | null;\r\n\talias: string | undefined | null = undefined;\r\n\tdomElement: HTMLElement | null;\r\n\trenderer?: THREE.WebGLRenderer = undefined;\r\n\thash?: string;\r\n\r\n\tconstructor(domElement: HTMLElement | null) {\r\n\t\tthis.domElement = domElement ?? document.body;\r\n\t}\r\n}\r\n\r\nexport enum FrameEvent {\r\n\tEarlyUpdate = 0,\r\n\tUpdate = 1,\r\n\tLateUpdate = 2,\r\n\tOnBeforeRender = 3,\r\n\tOnAfterRender = 4,\r\n\tPrePhysicsStep = 9,\r\n\tPostPhysicsStep = 10,\r\n}\r\n\r\nexport enum XRSessionMode {\r\n\tImmersiveVR = \"immersive-vr\",\r\n\tImmersiveAR = \"immersive-ar\",\r\n}\r\n\r\nexport declare type OnBeforeRenderCallback = (renderer: THREE.WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera, geometry: THREE.BufferGeometry, material: THREE.Material, group: THREE.Group) => void\r\n\r\n\r\nexport function registerComponent(script: IComponent, context?: Context) {\r\n\tif (!script) return;\r\n\tconst new_scripts = context?.new_scripts ?? Context.Current.new_scripts;\r\n\tif (!new_scripts.includes(script)) {\r\n\t\tnew_scripts.push(script);\r\n\t}\r\n}\r\n\r\nexport class Context {\r\n\r\n\tprivate static _current: Context;\r\n\r\n\tstatic get Current(): Context {\r\n\t\treturn this._current;\r\n\t}\r\n\r\n\tstatic set Current(context: Context) {\r\n\t\tthis._current = context;\r\n\t}\r\n\r\n\tname: string;\r\n\talias: string | undefined | null;\r\n\tisManagedExternally: boolean = false;\r\n\tisPaused: boolean = false;\r\n\trunInBackground: boolean = false;\r\n\r\n\t/** used to append to loaded assets */\r\n\thash?: string;\r\n\r\n\tdomElement: HTMLElement;\r\n\tget resolutionScaleFactor() { return this._resolutionScaleFactor; }\r\n\t/** use to scale the resolution up or down of the renderer. default is 1 */\r\n\tset resolutionScaleFactor(val: number) {\r\n\t\tif (val === this._resolutionScaleFactor) return;\r\n\t\tif (typeof val !== \"number\") return;\r\n\t\tif (val <= 0) {\r\n\t\t\tconsole.error(\"Invalid resolution scale factor\", val);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._resolutionScaleFactor = val;\r\n\t\tthis.updateSize();\r\n\t}\r\n\tprivate _resolutionScaleFactor: number = 1;\r\n\r\n\t// domElement.clientLeft etc doesnt return absolute position\r\n\tprivate _boundingClientRectFrame: number = -1;\r\n\tprivate _boundingClientRect: DOMRect | null = null;\r\n\tprivate _domX; private _domY;\r\n\tprivate calculateBoundingClientRect() {\r\n\t\t// workaround for mozilla webXR viewer\r\n\t\tif (this.isInAR) {\r\n\t\t\tthis._domX = 0;\r\n\t\t\tthis._domY = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._boundingClientRectFrame === this.time.frame) return;\r\n\t\tthis._boundingClientRectFrame = this.time.frame;\r\n\t\tthis._boundingClientRect = this.domElement.getBoundingClientRect();\r\n\t\tthis._domX = this._boundingClientRect.x;\r\n\t\tthis._domY = this._boundingClientRect.y;\r\n\t}\r\n\r\n\tget domWidth(): number {\r\n\t\t// for mozilla XR\r\n\t\tif(this.isInAR) return window.innerWidth;\r\n\t\treturn this.domElement.clientWidth;\r\n\t}\r\n\tget domHeight(): number {\r\n\t\t// for mozilla XR\r\n\t\tif(this.isInAR) return window.innerHeight;\r\n\t\treturn this.domElement.clientHeight;\r\n\t}\r\n\tget domX(): number {\r\n\t\tthis.calculateBoundingClientRect();\r\n\t\treturn this._domX;\r\n\t}\r\n\tget domY(): number {\r\n\t\tthis.calculateBoundingClientRect();\r\n\t\treturn this._domY;\r\n\t}\r\n\tget isInXR() { return this.renderer.xr?.isPresenting || false; }\r\n\txrSessionMode: XRSessionMode | undefined = undefined;\r\n\tget isInVR() { return this.xrSessionMode === XRSessionMode.ImmersiveVR; }\r\n\tget isInAR() { return this.xrSessionMode === XRSessionMode.ImmersiveAR; }\r\n\tget xrSession() { return this.renderer.xr?.getSession(); }\r\n\tget arOverlayElement(): HTMLElement {\r\n\t\tconst el = this.domElement as any;\r\n\t\tif (typeof el.getAROverlayContainer === \"function\")\r\n\t\t\treturn el.getAROverlayContainer();\r\n\t\treturn this.domElement;\r\n\t}\r\n\t/** Current event of the update cycle */\r\n\tget currentFrameEvent(): FrameEvent {\r\n\t\treturn this._currentFrameEvent;\r\n\t}\r\n\tprivate _currentFrameEvent: FrameEvent = -1;\r\n\r\n\tscene: THREE.Scene;\r\n\trenderer: THREE.WebGLRenderer;\r\n\tcomposer: EffectComposer | null = null;\r\n\r\n\t// all scripts\r\n\tscripts: IComponent[] = [];\r\n\tscripts_pausedChanged: IComponent[] = [];\r\n\t// scripts with update event\r\n\tscripts_earlyUpdate: IComponent[] = [];\r\n\tscripts_update: IComponent[] = [];\r\n\tscripts_lateUpdate: IComponent[] = [];\r\n\tscripts_onBeforeRender: IComponent[] = [];\r\n\tscripts_onAfterRender: IComponent[] = [];\r\n\tscripts_WithCorroutines: IComponent[] = [];\r\n\tcoroutines: { [FrameEvent: number]: Array<CoroutineData> } = {}\r\n\r\n\tget mainCamera(): THREE.Camera | null {\r\n\t\tif (this.mainCameraComponent) {\r\n\t\t\tconst cam = this.mainCameraComponent as ICamera;\r\n\t\t\tif (!cam.cam)\r\n\t\t\t\tcam.buildCamera();\r\n\t\t\treturn cam.cam;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tmainCameraComponent: ICamera | undefined;\r\n\r\n\tpost_setup_callbacks: Function[] = [];\r\n\tpre_update_callbacks: Function[] = [];\r\n\tpre_render_callbacks: Function[] = [];\r\n\tpost_render_callbacks: Function[] = [];\r\n\r\n\tnew_scripts: IComponent[] = [];\r\n\tnew_script_start: IComponent[] = [];\r\n\tnew_scripts_pre_setup_callbacks: Function[] = [];\r\n\tnew_scripts_post_setup_callbacks: Function[] = [];\r\n\r\n\tapplication: Application;\r\n\ttime: Time;\r\n\tinput: Input;\r\n\tphysics: Physics;\r\n\tconnection: NetworkConnection;\r\n\t/** \r\n\t * @deprecated AssetDataBase is deprecated\r\n\t */\r\n\tassets: AssetDatabase;\r\n\tmainLight: ILight | null = null;\r\n\trendererData: RendererData;\r\n\taddressables: Addressables;\r\n\tlightmaps: ILightDataRegistry;\r\n\tplayers: PlayerViewManager;\r\n\r\n\tprivate _sizeChanged: boolean = false;\r\n\tprivate _isCreated: boolean = false;\r\n\tprivate _isVisible: boolean = false;\r\n\r\n\tprivate _stats: Stats.default | null = stats ? Stats.default() : null;\r\n\r\n\tconstructor(args: ContextArgs | undefined) {\r\n\t\tthis.name = args?.name || \"\";\r\n\t\tthis.alias = args?.alias;\r\n\t\tthis.domElement = args?.domElement || document.body;\r\n\t\tthis.hash = args?.hash;\r\n\t\tif (args?.renderer) {\r\n\t\t\tthis.renderer = args.renderer;\r\n\t\t\tthis.isManagedExternally = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst useComposer = utils.getParam(\"postfx\");\r\n\t\t\tthis.renderer = new WebGLRenderer({ antialias: true, });\r\n\r\n\t\t\t// some tonemapping other than \"NONE\" is required for adjusting exposure with EXR environments\r\n\t\t\tthis.renderer.toneMappingExposure = 1; // range [0...inf] instead of the usual -15..15\r\n\t\t\tthis.renderer.toneMapping = THREE.NoToneMapping; // could also set to LinearToneMapping, ACESFilmicToneMapping\r\n\r\n\t\t\tthis.renderer.setClearColor(new THREE.Color('lightgrey'), 0);\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.renderer.antialias = true;\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.renderer.alpha = false;\r\n\t\t\tthis.renderer.shadowMap.enabled = true;\r\n\t\t\tthis.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\t\t\tthis.renderer.setSize(this.domWidth, this.domHeight);\r\n\t\t\tthis.renderer.outputEncoding = THREE.sRGBEncoding;\r\n\t\t\tthis.renderer.physicallyCorrectLights = true;\r\n\r\n\t\t\tthis.composer = useComposer ? new EffectComposer(this.renderer) : null;\r\n\t\t}\r\n\r\n\t\tthis.scene = new THREE.Scene();\r\n\r\n\t\tthis.application = new Application(this);\r\n\t\tthis.time = new Time();\r\n\t\tthis.input = new Input(this);\r\n\t\tthis.physics = new Physics(this);\r\n\t\tthis.connection = new NetworkConnection(this);\r\n\t\tthis.assets = new AssetDatabase();\r\n\t\tthis.rendererData = new RendererData(this);\r\n\t\tthis.addressables = new Addressables(this);\r\n\t\tthis.lightmaps = new LightDataRegistry(this);\r\n\t\tthis.players = new PlayerViewManager(this);\r\n\r\n\t\tconst resizeCallback = () => this._sizeChanged = true;\r\n\t\twindow.addEventListener('resize', resizeCallback);\r\n\t\tthis._disposeCallbacks.push(() => window.removeEventListener('resize', resizeCallback));\r\n\r\n\t\tconst resizeObserver = new ResizeObserver(_ => this._sizeChanged = true);\r\n\t\tresizeObserver.observe(this.domElement);\r\n\t\tthis._disposeCallbacks.push(() => resizeObserver.disconnect());\r\n\r\n\t\tconst intersectionObserver = new IntersectionObserver(entries => { this._isVisible = entries[0].isIntersecting; });\r\n\t\tintersectionObserver.observe(this.domElement);\r\n\t\tthis._disposeCallbacks.push(() => intersectionObserver.disconnect());\r\n\t}\r\n\r\n\tprivate _disposeCallbacks: Function[] = [];\r\n\r\n\t// private _requestSizeUpdate : boolean = false;\r\n\r\n\tprivate updateSize() {\r\n\t\tif (!this.isManagedExternally && !this.renderer.xr.isPresenting) {\r\n\t\t\tthis._sizeChanged = false;\r\n\t\t\tconst scaleFactor = this.resolutionScaleFactor;\r\n\t\t\tconst width = this.domWidth * scaleFactor;\r\n\t\t\tconst height = this.domHeight * scaleFactor;\r\n\t\t\tconst camera = this.mainCamera as PerspectiveCamera;\r\n\t\t\tthis.updateAspect(camera);\r\n\t\t\tthis.renderer.setSize(width, height);\r\n\t\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\r\n\t\t\t// avoid setting pixel values here since this can cause pingpong updates\r\n\t\t\t// e.g. when system scale is set to 125%\r\n\t\t\t// https://github.com/needle-tools/needle-engine-support/issues/69\r\n\t\t\tthis.renderer.domElement.style.width = \"100%\";\r\n\t\t\tthis.renderer.domElement.style.height = \"100%\";\r\n\t\t\tif (this.composer) {\r\n\t\t\t\tthis.composer.setSize(width, height);\r\n\t\t\t\tthis.composer.setPixelRatio(window.devicePixelRatio);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateAspect(camera: THREE.PerspectiveCamera) {\r\n\t\tif (!camera) return;\r\n\t\tconst width = this.domWidth;\r\n\t\tconst height = this.domHeight;\r\n\t\tconst pa = camera.aspect;\r\n\t\tcamera.aspect = width / height;\r\n\t\tif (pa !== camera.aspect)\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\t}\r\n\r\n\tonCreate(buildScene?: (context: Context, loadingOptions?: LoadingOptions) => Promise<void>, opts?: LoadingOptions) {\r\n\t\tif (this._isCreated) {\r\n\t\t\tconsole.warn(\"Context already created\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis._isCreated = true;\r\n\t\treturn this.internalOnCreate(buildScene, opts);\r\n\t}\r\n\r\n\tonDestroy() {\r\n\t\tif (!this._isCreated) return;\r\n\t\tthis._isCreated = false;\r\n\t\tdestroy(this.scene, true);\r\n\t\tthis.renderer?.setAnimationLoop(null);\r\n\t\tif (!this.isManagedExternally) {\r\n\t\t\tthis.renderer?.dispose();\r\n\t\t}\r\n\t\tfor (const cb of this._disposeCallbacks) {\r\n\t\t\ttry {\r\n\t\t\t\tcb();\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tconsole.error(\"Error in on dispose callback:\", e, cb);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.domElement?.parentElement) {\r\n\t\t\tthis.domElement.parentElement.removeChild(this.domElement);\r\n\t\t}\r\n\t}\r\n\r\n\tregisterCoroutineUpdate(script: IComponent, coroutine: Generator, evt: FrameEvent): Generator {\r\n\t\tif (!this.coroutines[evt]) this.coroutines[evt] = [];\r\n\t\tthis.coroutines[evt].push({ comp: script, main: coroutine });\r\n\t\treturn coroutine;\r\n\t}\r\n\r\n\tunregisterCoroutineUpdate(coroutine: Generator, evt: FrameEvent): void {\r\n\t\tif (!this.coroutines[evt]) return;\r\n\t\tconst idx = this.coroutines[evt].findIndex(c => c.main === coroutine);\r\n\t\tif (idx >= 0) this.coroutines[evt].splice(idx, 1);\r\n\t}\r\n\r\n\tstopAllCoroutinesFrom(script: IComponent) {\r\n\t\tfor (const evt in this.coroutines) {\r\n\t\t\tconst rout: CoroutineData[] = this.coroutines[evt];\r\n\t\t\tfor (let i = rout.length - 1; i >= 0; i--) {\r\n\t\t\t\tconst r = rout[i];\r\n\t\t\t\tif (r.comp === script) {\r\n\t\t\t\t\trout.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _cameraStack: ICamera[] = [];\r\n\r\n\tsetCurrentCamera(cam: ICamera) {\r\n\t\tif (!cam) return;\r\n\t\tif (!cam.cam) cam.buildCamera(); // < to build camera\r\n\t\tif (!cam.cam) {\r\n\t\t\tconsole.warn(\"Camera component is missing camera\", cam)\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst index = this._cameraStack.indexOf(cam);\r\n\t\tif (index >= 0) this._cameraStack.splice(index, 1);\r\n\t\tthis._cameraStack.push(cam);\r\n\t\tthis.mainCameraComponent = cam;\r\n\t\tconst camera = cam.cam as THREE.PerspectiveCamera;\r\n\t\tif (camera.isPerspectiveCamera)\r\n\t\t\tthis.updateAspect(camera);\r\n\t\t(this.mainCameraComponent as ICamera)?.applyClearFlagsIfIsActiveCamera();\r\n\t}\r\n\r\n\tremoveCamera(cam?: ICamera | null) {\r\n\t\tif (!cam) return;\r\n\t\tconst index = this._cameraStack.indexOf(cam);\r\n\t\tif (index >= 0) this._cameraStack.splice(index, 1);\r\n\r\n\t\tif (this.mainCameraComponent === cam) {\r\n\t\t\tthis.mainCameraComponent = undefined;\r\n\r\n\t\t\tif (this._cameraStack.length > 0) {\r\n\t\t\t\tconst last = this._cameraStack[this._cameraStack.length - 1];\r\n\t\t\t\tthis.setCurrentCamera(last);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onBeforeRenderListeners: { [key: string]: OnBeforeRenderCallback[] } = {};\r\n\r\n\t/** use this to subscribe to onBeforeRender events on threejs objects */\r\n\taddBeforeRenderListener(target: THREE.Object3D, callback: OnBeforeRenderCallback) {\r\n\t\tif (!this._onBeforeRenderListeners[target.uuid]) {\r\n\t\t\tthis._onBeforeRenderListeners[target.uuid] = [];\r\n\t\t\tconst onBeforeRenderCallback = (renderer, scene, camera, geometry, material, group) => {\r\n\t\t\t\tconst arr = this._onBeforeRenderListeners[target.uuid];\r\n\t\t\t\tif (!arr) return;\r\n\t\t\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\t\t\tconst fn = arr[i];\r\n\t\t\t\t\tfn(renderer, scene, camera, geometry, material, group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget.onBeforeRender = onBeforeRenderCallback as any;\r\n\t\t}\r\n\t\tthis._onBeforeRenderListeners[target.uuid].push(callback);\r\n\t}\r\n\r\n\tremoveBeforeRenderListener(target: THREE.Object3D, callback: OnBeforeRenderCallback) {\r\n\t\tif (this._onBeforeRenderListeners[target.uuid]) {\r\n\t\t\tconst arr = this._onBeforeRenderListeners[target.uuid];\r\n\t\t\tconst idx = arr.indexOf(callback);\r\n\t\t\tif (idx >= 0) arr.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _requireDepthTexture: boolean = false;\r\n\tprivate _requireColorTexture: boolean = false;\r\n\tprivate _renderTarget?: WebGLRenderTarget;\r\n\tprivate _isRendering: boolean = false;\r\n\r\n\tget isRendering() { return this._isRendering; }\r\n\r\n\tsetRequireDepth(val: boolean) {\r\n\t\tthis._requireDepthTexture = val;\r\n\t}\r\n\r\n\tsetRequireColor(val: boolean) {\r\n\t\tthis._requireColorTexture = val;\r\n\t}\r\n\r\n\tget depthTexture(): THREE.DepthTexture | null {\r\n\t\treturn this._renderTarget?.depthTexture || null;\r\n\t}\r\n\r\n\tget opaqueColorTexture(): THREE.Texture | null {\r\n\t\treturn this._renderTarget?.texture || null;\r\n\t}\r\n\r\n\t/** returns true if the dom element is visible on screen */\r\n\tget isVisibleToUser() {\r\n\t\tif (this.isInXR) return true;\r\n\t\tif (!this._isVisible) return false;\r\n\t\tconst style = getComputedStyle(this.domElement);\r\n\t\treturn style.visibility !== \"hidden\" && style.display !== \"none\" && style.opacity !== \"0\";\r\n\t}\r\n\r\n\tprivate async internalOnCreate(buildScene?: (context: Context, opts?: LoadingOptions) => Promise<void>, opts?: LoadingOptions) {\r\n\r\n\t\t// TODO: we could configure if we need physics\r\n\t\tawait this.physics.createWorld();\r\n\r\n\t\t// load and create scene\r\n\t\tlet prepare_succeeded = true;\r\n\t\ttry {\r\n\t\t\tContext.Current = this;\r\n\t\t\tif (buildScene)\r\n\t\t\t\tawait buildScene(this, opts);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\tprepare_succeeded = false;\r\n\t\t}\r\n\t\tif (!prepare_succeeded) return;\r\n\r\n\t\t// console.log(prepare_succeeded);\r\n\r\n\t\tif (!this.isManagedExternally)\r\n\t\t\tthis.domElement.prepend(this.renderer.domElement);\r\n\r\n\t\tbeginListenInstantiate(this);\r\n\t\tbeginListenDestroy(this);\r\n\t\tbeginListenFileSpawn(this);\r\n\r\n\t\t// Setup\r\n\t\tContext._current = this;\r\n\t\tfor (let i = 0; i < this.new_scripts.length; i++) {\r\n\t\t\tconst script = this.new_scripts[i];\r\n\t\t\tif (script.gameObject !== undefined && script.gameObject !== null) {\r\n\t\t\t\tif (script.gameObject.userData === undefined) script.gameObject.userData = {};\r\n\t\t\t\tif (script.gameObject.userData.components === undefined) script.gameObject.userData.components = [];\r\n\t\t\t\tconst arr = script.gameObject.userData.components;\r\n\t\t\t\tif (!arr.includes(script)) arr.push(script);\r\n\t\t\t}\r\n\t\t\t// if (script.gameObject && !this.raycastTargets.includes(script.gameObject)) {\r\n\t\t\t// \tthis.raycastTargets.push(script.gameObject);\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\t// const context = new SerializationContext(this.scene);\r\n\t\t// for (let i = 0; i < this.new_scripts.length; i++) {\r\n\t\t// \tconst script = this.new_scripts[i];\r\n\t\t// \tconst ser = script as unknown as ISerializable;\r\n\t\t// \tif (ser.$serializedTypes === undefined) continue;\r\n\t\t// \tcontext.context = this;\r\n\t\t// \tcontext.object = script.gameObject;\r\n\t\t// \tdeserializeObject(ser, script, context);\r\n\t\t// }\r\n\r\n\t\t// resolve post setup callbacks (things that rely on threejs objects having references to components)\r\n\t\tif (this.post_setup_callbacks) {\r\n\t\t\tfor (let i = 0; i < this.post_setup_callbacks.length; i++) {\r\n\t\t\t\tContext._current = this;\r\n\t\t\t\tawait this.post_setup_callbacks[i](this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.mainCamera) {\r\n\t\t\tContext._current = this;\r\n\t\t\tlet camera: ICamera | null = null;\r\n\t\t\tforeachComponent(this.scene, comp => {\r\n\t\t\t\tconst cam = comp as ICamera;\r\n\t\t\t\tif (cam?.isCamera) {\r\n\t\t\t\t\tif (cam.tag === \"MainCamera\") {\r\n\t\t\t\t\t\tcamera = cam;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse camera = cam;\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t});\r\n\t\t\tif (camera) {\r\n\t\t\t\tthis.setCurrentCamera(camera);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tconsole.error(\"MISSING camera\", this);\r\n\t\t}\r\n\r\n\t\tContext._current = this;\r\n\t\tlooputils.processNewScripts(this);\r\n\r\n\t\t// const mainCam = this.mainCameraComponent as Camera;\r\n\t\t// if (mainCam) {\r\n\t\t// \tmainCam.applyClearFlagsIfIsActiveCamera();\r\n\t\t// }\r\n\r\n\t\tif (!this.isManagedExternally && this.composer && this.mainCamera) {\r\n\t\t\tconst renderPass = new RenderPass(this.scene, this.mainCamera);\r\n\t\t\tthis.renderer.setSize(this.domWidth, this.domHeight);\r\n\t\t\tthis.composer.addPass(renderPass);\r\n\t\t\tthis.composer.setSize(this.domWidth, this.domHeight);\r\n\t\t}\r\n\r\n\t\tthis._sizeChanged = true;\r\n\r\n\t\tif (this._stats) {\r\n\t\t\tthis._stats.showPanel(1);\r\n\t\t\tthis.domElement.appendChild(this._stats.dom);\r\n\t\t}\r\n\r\n\t\tthis.renderer.setAnimationLoop(this.render.bind(this));\r\n\r\n\t\tif (debug)\r\n\t\t\tlogHierarchy(this.scene, true);\r\n\t}\r\n\r\n\tprivate render(_, frame) {\r\n\r\n\t\tthis._currentFrameEvent = -1;\r\n\r\n\t\tif (this.onHandlePaused()) return;\r\n\r\n\t\tthis._stats?.begin();\r\n\r\n\t\tContext._current = this;\r\n\t\tthis.time.update();\r\n\r\n\t\tlooputils.processNewScripts(this);\r\n\t\tlooputils.updateIsActive();\r\n\t\tlooputils.processStart(this);\r\n\r\n\t\twhile (this._cameraStack.length > 0 && (!this.mainCameraComponent || this.mainCameraComponent.destroyed)) {\r\n\t\t\tthis._cameraStack.splice(this._cameraStack.length - 1, 1);\r\n\t\t\tconst last = this._cameraStack[this._cameraStack.length - 1];\r\n\t\t\tthis.setCurrentCamera(last);\r\n\t\t}\r\n\r\n\t\tif (this.pre_update_callbacks) {\r\n\t\t\tfor (const i in this.pre_update_callbacks) {\r\n\t\t\t\tthis.pre_update_callbacks[i]();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._currentFrameEvent = FrameEvent.EarlyUpdate;\r\n\r\n\t\tfor (let i = 0; i < this.scripts_earlyUpdate.length; i++) {\r\n\t\t\tconst script = this.scripts_earlyUpdate[i];\r\n\t\t\tif (!script.activeAndEnabled) continue;\r\n\t\t\tif (script.earlyUpdate !== undefined) {\r\n\t\t\t\tContext._current = this;\r\n\t\t\t\tscript.earlyUpdate();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.executeCoroutines(FrameEvent.EarlyUpdate);\r\n\t\tif (this.onHandlePaused()) return;\r\n\r\n\t\tthis._currentFrameEvent = FrameEvent.Update;\r\n\r\n\t\tfor (let i = 0; i < this.scripts_update.length; i++) {\r\n\t\t\tconst script = this.scripts_update[i];\r\n\t\t\tif (!script.activeAndEnabled) continue;\r\n\t\t\tif (script.update !== undefined) {\r\n\t\t\t\tContext._current = this;\r\n\t\t\t\tscript.update();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.executeCoroutines(FrameEvent.Update);\r\n\t\tif (this.onHandlePaused()) return;\r\n\r\n\t\tthis._currentFrameEvent = FrameEvent.LateUpdate;\r\n\r\n\t\tfor (let i = 0; i < this.scripts_lateUpdate.length; i++) {\r\n\t\t\tconst script = this.scripts_lateUpdate[i];\r\n\t\t\tif (!script.activeAndEnabled) continue;\r\n\t\t\tif (script.lateUpdate !== undefined) {\r\n\t\t\t\tContext._current = this;\r\n\t\t\t\tscript.lateUpdate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this.mainLight = null;\r\n\t\tthis.executeCoroutines(FrameEvent.LateUpdate);\r\n\t\tif (this.onHandlePaused()) return;\r\n\r\n\t\tconst physicsSteps = 1;\r\n\t\tconst dt = this.time.deltaTime / physicsSteps;\r\n\t\tfor (let i = 0; i < physicsSteps; i++) {\r\n\t\t\tthis._currentFrameEvent = FrameEvent.PrePhysicsStep;\r\n\t\t\tthis.executeCoroutines(FrameEvent.PrePhysicsStep);\r\n\t\t\tthis.physics.step(dt);\r\n\t\t\tthis._currentFrameEvent = FrameEvent.PostPhysicsStep;\r\n\t\t\tthis.executeCoroutines(FrameEvent.PostPhysicsStep);\r\n\t\t}\r\n\t\tthis.physics.postStep();\r\n\t\tif (this.onHandlePaused()) return;\r\n\r\n\t\tif (this.isVisibleToUser) {\r\n\r\n\t\t\tthis._currentFrameEvent = FrameEvent.OnBeforeRender;\r\n\r\n\t\t\t// should we move these callbacks in the regular three onBeforeRender events?\r\n\t\t\tfor (let i = 0; i < this.scripts_onBeforeRender.length; i++) {\r\n\t\t\t\tconst script = this.scripts_onBeforeRender[i];\r\n\t\t\t\tif (!script.activeAndEnabled) continue;\r\n\t\t\t\t// if(script.isActiveAndEnabled === false) continue;\r\n\t\t\t\tif (script.onBeforeRender !== undefined) {\r\n\t\t\t\t\tContext._current = this;\r\n\t\t\t\t\tscript.onBeforeRender(frame);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.executeCoroutines(FrameEvent.OnBeforeRender);\r\n\r\n\t\t\tif (this._sizeChanged)\r\n\t\t\t\tthis.updateSize();\r\n\r\n\t\t\tif (this.pre_render_callbacks) {\r\n\t\t\t\tfor (const i in this.pre_render_callbacks) {\r\n\t\t\t\t\tthis.pre_render_callbacks[i]();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentFrameEvent = -10;\r\n\r\n\t\t\tthis._isRendering = true;\r\n\t\t\tthis.renderRequiredTextures();\r\n\t\t\tif (!this.isManagedExternally) {\r\n\t\t\t\tif (this.composer && !this.isInXR) {\r\n\t\t\t\t\tthis.composer.render();\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.mainCamera) {\r\n\t\t\t\t\tthis.renderer.render(this.scene, this.mainCamera);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._isRendering = false;\r\n\r\n\t\t\tthis._currentFrameEvent = FrameEvent.OnAfterRender;\r\n\r\n\t\t\tfor (let i = 0; i < this.scripts_onAfterRender.length; i++) {\r\n\t\t\t\tconst script = this.scripts_onAfterRender[i];\r\n\t\t\t\tif (!script.activeAndEnabled) continue;\r\n\t\t\t\tif (script.onAfterRender !== undefined) {\r\n\t\t\t\t\tContext._current = this;\r\n\t\t\t\t\tscript.onAfterRender();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.executeCoroutines(FrameEvent.OnAfterRender);\r\n\r\n\t\t\tif (this.post_render_callbacks) {\r\n\t\t\t\tfor (const i in this.post_render_callbacks) {\r\n\t\t\t\t\tthis.post_render_callbacks[i]();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._currentFrameEvent = -1;\r\n\r\n\t\tthis.connection.sendBufferedMessagesNow();\r\n\r\n\t\tthis._stats?.end();\r\n\t}\r\n\r\n\t/** returns true if we should return out of the frame loop */\r\n\tprivate _wasPaused: boolean = false;\r\n\tprivate onHandlePaused(): boolean {\r\n\t\tconst paused = this.evaluatePaused();\r\n\t\tif (this._wasPaused !== paused) {\r\n\t\t\tif(debugActive) console.log(\"Paused?\", paused, \"context:\" + this.alias);\r\n\t\t\tfor (let i = 0; i < this.scripts_pausedChanged.length; i++) {\r\n\t\t\t\tconst script = this.scripts_pausedChanged[i];\r\n\t\t\t\tif (!script.activeAndEnabled) continue;\r\n\t\t\t\tif (script.onPausedChanged !== undefined) {\r\n\t\t\t\t\tContext._current = this;\r\n\t\t\t\t\tscript.onPausedChanged(paused, this._wasPaused);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._wasPaused = paused;\r\n\t\treturn paused;\r\n\t}\r\n\r\n\tprivate evaluatePaused() {\r\n\t\tif (this.isInXR) return false;\r\n\t\tif (this.isPaused) return true;\r\n\t\t// if the element is not visible use the runInBackground flag to determine if we should continue\r\n\t\tif (this.runInBackground) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn !this.isVisibleToUser;\r\n\t}\r\n\r\n\tprivate renderRequiredTextures() {\r\n\t\tif (!this.mainCamera) return;\r\n\t\tif (!this._requireDepthTexture && !this._requireColorTexture) return;\r\n\t\tif (!this._renderTarget) {\r\n\t\t\tthis._renderTarget = new THREE.WebGLRenderTarget(this.domWidth, this.domHeight);\r\n\t\t\tif (this._requireDepthTexture) {\r\n\t\t\t\tconst dt = new DepthTexture(this.domWidth, this.domHeight);;\r\n\t\t\t\tthis._renderTarget.depthTexture = dt;\r\n\t\t\t}\r\n\t\t\tif (this._requireColorTexture) {\r\n\t\t\t\tthis._renderTarget.texture = new THREE.Texture();\r\n\t\t\t\tthis._renderTarget.texture.generateMipmaps = false;\r\n\t\t\t\tthis._renderTarget.texture.minFilter = THREE.NearestFilter;\r\n\t\t\t\tthis._renderTarget.texture.magFilter = THREE.NearestFilter;\r\n\t\t\t\tthis._renderTarget.texture.format = THREE.RGBAFormat;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst rt = this._renderTarget;\r\n\t\tif (rt.texture) {\r\n\t\t\trt.texture.encoding = this.renderer.outputEncoding;\r\n\t\t}\r\n\t\tconst prevTarget = this.renderer.getRenderTarget();\r\n\t\tthis.renderer.setRenderTarget(rt);\r\n\t\tthis.renderer.render(this.scene, this.mainCamera);\r\n\t\tthis.renderer.setRenderTarget(prevTarget);\r\n\t}\r\n\r\n\tprivate executeCoroutines(evt: FrameEvent) {\r\n\t\tif (this.coroutines[evt]) {\r\n\t\t\tconst evts = this.coroutines[evt];\r\n\t\t\tfor (let i = 0; i < evts.length; i++) {\r\n\t\t\t\tconst evt = evts[i];\r\n\t\t\t\t// TODO we might want to keep coroutines playing even if the component is disabled or inactive\r\n\t\t\t\tconst remove = !evt.comp || evt.comp.destroyed || !evt.main || evt.comp[\"enabled\"] === false;\r\n\t\t\t\tif (remove) {\r\n\t\t\t\t\tevts.splice(i, 1);\r\n\t\t\t\t\t--i;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst iter = evt.chained;\r\n\t\t\t\tif (iter && iter.length > 0) {\r\n\t\t\t\t\tconst last: Generator = iter[iter.length - 1];\r\n\t\t\t\t\tconst res = last.next();\r\n\t\t\t\t\tif (res.done) {\r\n\t\t\t\t\t\titer.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isGenerator(res)) {\r\n\t\t\t\t\t\tif (!evt.chained) evt.chained = [];\r\n\t\t\t\t\t\tevt.chained.push(res.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!res.done) continue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst res = evt.main.next();\r\n\t\t\t\tif (res.done === true) {\r\n\t\t\t\t\tevts.splice(i, 1);\r\n\t\t\t\t\t--i;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst val = res.value;\r\n\t\t\t\tif (isGenerator(val)) {\r\n\t\t\t\t\t// invoke once if its a generator\r\n\t\t\t\t\t// this means e.g. WaitForFrame(1) works and will capture\r\n\t\t\t\t\t// the frame it was created\r\n\t\t\t\t\tconst gen = val as Generator;\r\n\t\t\t\t\tconst res = gen.next();\r\n\t\t\t\t\tif (res.done) continue;\r\n\t\t\t\t\tif (!evt.chained) evt.chained = [];\r\n\t\t\t\t\tevt.chained.push(val as Generator);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction isGenerator(val: any): boolean {\r\n\t\t\tif (val) {\r\n\t\t\t\tif (val.next && val.return) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n// const scene = new THREE.Scene();\r\n// const useComposer = utils.getParam(\"postfx\");\r\n// const renderer = new WebGLRenderer({ antialias: true });\r\n// const composer = useComposer ? new EffectComposer(renderer) : undefined;\r\n\r\n// renderer.setClearColor(new THREE.Color('lightgrey'), 0)\r\n// renderer.antialias = true;\r\n// renderer.alpha = false;\r\n// renderer.shadowMap.enabled = true;\r\n// renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n// renderer.setSize(window.innerWidth, window.innerHeight);\r\n// renderer.outputEncoding = THREE.sRGBEncoding;\r\n// renderer.physicallyCorrectLights = true;\r\n// document.body.appendChild(renderer.domElement);\r\n\r\n// // generation pushes loading requests in this array\r\n// const sceneData: {\r\n//     mainCamera: THREE.Camera | undefined\r\n// } = {\r\n//     preparing: [],\r\n//     resolving: [],\r\n//     scripts: [],\r\n//     raycastTargets: [],\r\n//     mainCamera: undefined,\r\n//     mainCameraComponent: undefined,\r\n// };\r\n\r\n// // contains a list of functions to be called after loading is done\r\n// const post_setup_callbacks = [];\r\n\r\n// const pre_render_Callbacks = [];\r\n// const post_render_callbacks = [];\r\n\r\n// const new_scripts = [];\r\n// const new_scripts_post_setup_callbacks = [];\r\n// const new_scripts_pre_setup_callbacks = [];\r\n\r\n// export {\r\n//     scene, renderer, composer,\r\n//     new_scripts,\r\n//     new_scripts_post_setup_callbacks, new_scripts_pre_setup_callbacks,\r\n//     sceneData,\r\n//     post_setup_callbacks,\r\n//     pre_render_Callbacks,\r\n//     post_render_callbacks\r\n// }\r\n", "import * as THREE from 'three';\r\nimport { Vector2 } from 'three';\r\nimport { showBalloonMessage, showBalloonWarning } from './debug/debug';\r\nimport { assign } from './engine_serialization_core';\r\nimport { Context } from './engine_setup';\r\nimport { Vec2 } from './engine_types';\r\nimport { getParam } from './engine_utils';\r\n\r\nconst debug = getParam(\"debuginput\");\r\n\r\nexport declare type PointerEventArgs = {\r\n    pointerType: string,\r\n    button: number;\r\n    clientX: number;\r\n    clientY: number;\r\n    // pointerId: number,\r\n    movementX?: number,\r\n    movementY?: number,\r\n    source?: Event\r\n};\r\n\r\nexport class KeyEventArgs {\r\n    key: string;\r\n    keyType: string;\r\n    source?: Event;\r\n    constructor(evt: KeyboardEvent) {\r\n        this.key = evt.key;\r\n        this.keyType = evt.type;\r\n        this.source = evt;\r\n    }\r\n}\r\n\r\nexport enum InputEvents {\r\n    PointerDown = \"pointerdown\",\r\n    PointerUp = \"pointerup\",\r\n    PointerMove = \"pointermove\",\r\n    KeyDown = \"keydown\",\r\n    KeyUp = \"keyup\",\r\n    KeyPressed = \"keypress\"\r\n}\r\n\r\nexport enum PointerType {\r\n    Mouse = \"mouse\",\r\n    Touch = \"touch\",\r\n}\r\n// export class InputEvent extends Event {\r\n\r\n//     args : PointerEventArgs;\r\n\r\n//     constructor(type: string, args: PointerEventArgs) {\r\n//         super(type);\r\n//         this.args = args;\r\n//     }\r\n// }\r\n\r\nexport class Input extends EventTarget {\r\n\r\n    _doubleClickTimeThreshold = .2;\r\n    _longPressTimeThreshold = 1;\r\n\r\n    get mousePosition(): THREE.Vector2 { return this._pointerPositions[0]; };\r\n    get mousePositionRC(): THREE.Vector2 { return this._pointerPositionsRC[0]; }\r\n    get mouseDown(): boolean { return this._pointerDown[0]; }\r\n    get mouseUp(): boolean { return this._pointerUp[0]; }\r\n    get mouseClick(): boolean { return this._pointerClick[0]; }\r\n    get mouseDoubleClick(): boolean { return this._pointerDoubleClick[0]; }\r\n    get mousePressed(): boolean { return this._pointerPressed[0]; }\r\n    get mouseWheelChanged(): boolean { return this.getMouseWheelChanged(0); }\r\n\r\n    private _specialCursorTrigger: number = 0;\r\n\r\n    setCursorPointer() {\r\n        this._specialCursorTrigger += 1;\r\n        this.context.domElement.style.cursor = \"pointer\";\r\n    }\r\n    setCursorNormal() {\r\n        this._specialCursorTrigger -= 1;\r\n        this._specialCursorTrigger = Math.max(0, this._specialCursorTrigger);\r\n        if (this._specialCursorTrigger === 0)\r\n            this.context.domElement.style.cursor = \"default\";\r\n    }\r\n\r\n    getPointerPressedCount(): number {\r\n        let count = 0;\r\n        for (let i = 0; i < this._pointerPressed.length; i++) {\r\n            if (this._pointerPressed[i]) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    getPointerPosition(i: number): THREE.Vector2 | null {\r\n        if (i >= this._pointerPositions.length) return null;\r\n        return this._pointerPositions[i];\r\n    }\r\n    getPointerPositionLastFrame(i: number): THREE.Vector2 | null {\r\n        if (i >= this._pointerPositionsLastFrame.length) return null;\r\n        return this._pointerPositionsLastFrame[i];\r\n    }\r\n    getPointerPositionDelta(i: number): THREE.Vector2 | null {\r\n        if (i >= this._pointerPositionsDelta.length) return null;\r\n        return this._pointerPositionsDelta[i];\r\n    }\r\n    getPointerPositionRC(i: number): THREE.Vector2 | null {\r\n        if (i >= this._pointerPositionsRC.length) return null;\r\n        return this._pointerPositionsRC[i];\r\n    }\r\n    getPointerDown(i: number): boolean {\r\n        if (i >= this._pointerDown.length) return false;\r\n        return this._pointerDown[i];\r\n    }\r\n    getPointerUp(i: number): boolean {\r\n        if (i >= this._pointerUp.length) return false;\r\n        return this._pointerUp[i];\r\n    }\r\n    getPointerPressed(i: number): boolean {\r\n        if (i >= this._pointerPressed.length) return false;\r\n        return this._pointerPressed[i];\r\n    }\r\n    getPointerClicked(i: number): boolean {\r\n        if (i >= this._pointerClick.length) return false;\r\n        return this._pointerClick[i];\r\n    }\r\n    getPointerDoubleClicked(i: number): boolean {\r\n        if (i >= this._pointerDoubleClick.length) return false;\r\n        return this._pointerDoubleClick[i];\r\n    }\r\n    getPointerDownTime(i: number): number {\r\n        if (i >= this._pointerDownTime.length) return -1;\r\n        return this._pointerDownTime[i];\r\n    }\r\n    getPointerUpTime(i: number): number {\r\n        if (i >= this._pointerUpTime.length) return -1;\r\n        return this._pointerUpTime[i];\r\n    }\r\n    getPointerLongPress(i: number): boolean {\r\n        if (i >= this._pointerDownTime.length) return false;\r\n        return this.getPointerPressed(i) && this.context.time.time - this._pointerDownTime[i] > this._longPressTimeThreshold;\r\n    }\r\n    getIsMouse(i: number): boolean {\r\n        if (i < 0 || i >= this._pointerTypes.length) return false;\r\n        return this._pointerTypes[i] === PointerType.Mouse;\r\n    }\r\n    getIsTouch(i: number): boolean {\r\n        if (i < 0 || i >= this._pointerTypes.length) return false;\r\n        return this._pointerTypes[i] === PointerType.Touch;\r\n    }\r\n    getTouchesPressedCount(): number {\r\n        let count = 0;\r\n        for (let i = 0; i < this._pointerPressed.length; i++) {\r\n            if (this._pointerPressed[i] && this.getIsTouch(i)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    getMouseWheelChanged(i: number = 0): boolean {\r\n        if (i >= this._mouseWheelChanged.length) return false;\r\n        return this._mouseWheelChanged[i];\r\n    }\r\n    getMouseWheelDeltaY(i: number = 0): number {\r\n        if (i >= this._mouseWheelDeltaY.length) return 0;\r\n        return this._mouseWheelDeltaY[i];\r\n    }\r\n    getPointerEvent(i: number): Event | undefined {\r\n        if (i >= this._pointerEvent.length) return undefined;\r\n        return this._pointerEvent[i] ?? undefined;\r\n    }\r\n    *foreachPointerId(pointerType?: string | PointerType | string[] | PointerType[]): Generator<number> {\r\n        for (let i = 0; i < this._pointerTypes.length; i++) {\r\n            // check if the pointer is active\r\n            if (this._pointerIsActive[i]) {\r\n                // if specific pointer types are requested\r\n                if (pointerType !== undefined) {\r\n                    const type = this._pointerTypes[i];\r\n                    if (Array.isArray(pointerType)) {\r\n                        let isInArray = false;\r\n                        for (const t of pointerType) {\r\n                            if (type === t) {\r\n                                isInArray = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!isInArray) continue;\r\n                    } else {\r\n                        if (pointerType !== type) continue;\r\n                    }\r\n                }\r\n                yield i;\r\n            }\r\n        }\r\n    }\r\n    *foreachTouchId(): Generator<number> {\r\n        for (let i = 0; i < this._pointerTypes.length; i++) {\r\n            const type = this._pointerTypes[i];\r\n            if (type !== PointerType.Touch) continue;\r\n            if (this._pointerIsActive[i])\r\n                yield i;\r\n        }\r\n    }\r\n\r\n    private _pointerIsActive(index: number) {\r\n        if(index < 0) return false;\r\n        return this._pointerPressed[index] || this._pointerDown[index] || this._pointerUp[index];\r\n    }\r\n\r\n    private context: Context;\r\n\r\n    private _pointerDown: boolean[] = [false];\r\n    private _pointerUp: boolean[] = [false];\r\n    private _pointerClick: boolean[] = [false];\r\n    private _pointerDoubleClick: boolean[] = [false];\r\n    private _pointerPressed: boolean[] = [false];\r\n    private _pointerPositions: THREE.Vector2[] = [new THREE.Vector2()];\r\n    private _pointerPositionsLastFrame: THREE.Vector2[] = [new THREE.Vector2()];\r\n    private _pointerPositionsDelta: THREE.Vector2[] = [new THREE.Vector2()];\r\n    private _pointerPositionsRC: THREE.Vector2[] = [new THREE.Vector2()];\r\n    private _pointerPositionDown: THREE.Vector2[] = [new THREE.Vector2()];\r\n    private _pointerDownTime: number[] = [];\r\n    private _pointerUpTime: number[] = [];\r\n    private _pointerIds: number[] = [];\r\n    private _pointerTypes: string[] = [\"\"];\r\n    private _mouseWheelChanged: boolean[] = [false];\r\n    private _mouseWheelDeltaY: number[] = [0];\r\n    private _pointerEvent: Event[] = [];\r\n\r\n    getKeyDown(): string | null {\r\n        for (const key in this.keysPressed) {\r\n            const k = this.keysPressed[key];\r\n            if (k.startFrame === this.context.time.frameCount) return k.key;\r\n        }\r\n        return null;\r\n    }\r\n    getKeyPressed(): string | null {\r\n        for (const key in this.keysPressed) {\r\n            const k = this.keysPressed[key];\r\n            if (k.pressed)\r\n                return k.key;\r\n        }\r\n        return null;\r\n    }\r\n    isKeyDown(keyCode: KeyCode | string | number) {\r\n        if (typeof keyCode === \"number\") {\r\n            console.warn(\"Use of keycode as number is not recommended, please use KeyCode or string instead\");\r\n            keyCode = String.fromCharCode(keyCode);\r\n        }\r\n        // console.log( this.keysPressed[keyCode]?.frame, time.frameCount);\r\n        return this.context.application.isVisible && this.context.application.hasFocus && this.keysPressed[keyCode]?.startFrame === this.context.time.frameCount && this.keysPressed[keyCode].pressed;\r\n    }\r\n    isKeyUp(keyCode: KeyCode | string | number) {\r\n        if (typeof keyCode === \"number\") {\r\n            console.warn(\"Use of keycode as number is not recommended, please use KeyCode or string instead\");\r\n            keyCode = String.fromCharCode(keyCode);\r\n        }\r\n        return this.context.application.isVisible && this.context.application.hasFocus && this.keysPressed[keyCode]?.frame === this.context.time.frameCount && !this.keysPressed[keyCode].pressed;\r\n    }\r\n    isKeyPressed(keyCode: KeyCode | string | number) {\r\n        if (typeof keyCode === \"number\") {\r\n            keyCode = String.fromCharCode(keyCode);\r\n        }\r\n        return this.context.application.isVisible && this.context.application.hasFocus && this.keysPressed[keyCode]?.pressed;// && time.frameCount - this.keysPressed[keyCode].frame < 100;\r\n    }\r\n\r\n    createPointerDown(args: PointerEventArgs) {\r\n        if (debug) showBalloonMessage(\"Create Pointer down\");\r\n        this.onDown(args);\r\n    }\r\n\r\n    createPointerMove(args: PointerEventArgs) {\r\n        if (debug) showBalloonMessage(\"Create Pointer move\");\r\n        this.onMove(args);\r\n    }\r\n\r\n    createPointerUp(args: PointerEventArgs) {\r\n        if (debug) showBalloonMessage(\"Create Pointer up\");\r\n        this.onUp(args);\r\n    }\r\n\r\n    convertScreenspaceToRaycastSpace(vec2: Vec2) {\r\n        vec2.x = (vec2.x - this.context.domX) / this.context.domWidth * 2 - 1;\r\n        vec2.y = -((vec2.y - this.context.domY) / this.context.domHeight) * 2 + 1;\r\n    }\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this.context = context;\r\n        this.context.post_render_callbacks.push(this.onEndOfFrame.bind(this));\r\n\r\n        // const eventElement = this.context.renderer.domElement;\r\n\r\n        // this.context.renderer.domElement.addEventListener('mousedown', this.onMouseDown.bind(this), false);\r\n        // this.context.renderer.domElement.addEventListener('mousemove', this.onMouseMove.bind(this), false);\r\n        // this.context.renderer.domElement.addEventListener('mouseup', this.onMouseUp.bind(this), false);\r\n\r\n        window.addEventListener('touchstart', this.onTouchStart.bind(this), false);\r\n        window.addEventListener('touchmove', this.onTouchMove.bind(this), { passive: true });\r\n        window.addEventListener('touchend', this.onTouchUp.bind(this), false);\r\n\r\n        window.addEventListener('mousedown', this.onMouseDown.bind(this), false);\r\n        window.addEventListener('mousemove', this.onMouseMove.bind(this), false);\r\n        window.addEventListener('mouseup', this.onMouseUp.bind(this), false);\r\n        window.addEventListener('wheel', this.onMouseWheel.bind(this), { passive: true });\r\n\r\n        window.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\r\n        window.addEventListener(\"keypress\", this.onKeyPressed.bind(this), false);\r\n        window.addEventListener(\"keyup\", this.onKeyUp.bind(this), false);\r\n\r\n        // e.g. when using sharex to capture we loose focus thus dont get e.g. key up events\r\n        window.addEventListener('blur', this.onLostFocus.bind(this));\r\n\r\n        // setTimeout(() => {\r\n        //     this.createPointerDown({ pointerId: 0, button: 0, clientX: 0, clientY: 0, pointerType: \"mouse\" });\r\n        //     setTimeout(() => {\r\n        //         this.createPointerUp({ pointerId: 0, button: 0, clientX: 0, clientY: 0, pointerType: \"mouse\" });\r\n        //     }, 1000);\r\n        // }, 2000);\r\n    }\r\n\r\n    private onLostFocus() {\r\n        for (const kp in this.keysPressed) {\r\n            this.keysPressed[kp].pressed = false;\r\n        }\r\n    }\r\n\r\n    private onEndOfFrame() {\r\n        for (let i = 0; i < this._pointerUp.length; i++)\r\n            this._pointerUp[i] = false;\r\n        for (let i = 0; i < this._pointerDown.length; i++)\r\n            this._pointerDown[i] = false;\r\n        for (let i = 0; i < this._pointerClick.length; i++)\r\n            this._pointerClick[i] = false;\r\n        for (let i = 0; i < this._pointerDoubleClick.length; i++)\r\n            this._pointerDoubleClick[i] = false;\r\n        for (const pt of this._pointerPositionsDelta)\r\n            pt.set(0, 0);\r\n        for (let i = 0; i < this._mouseWheelChanged.length; i++)\r\n            this._mouseWheelChanged[i] = false;\r\n        for (let i = 0; i < this._mouseWheelDeltaY.length; i++)\r\n            this._mouseWheelDeltaY[i] = 0;\r\n    }\r\n\r\n\r\n    private keysPressed: { [key: number]: { pressed: boolean, frame: number, startFrame: number, key: string } } = {};\r\n\r\n    private onKeyDown(evt: KeyboardEvent) {\r\n        if (!this.context.application.hasFocus)\r\n            return;\r\n        const ex = this.keysPressed[evt.key];\r\n        if (ex && ex.pressed) return;\r\n        this.keysPressed[evt.key] = { pressed: true, frame: this.context.time.frameCount + 1, startFrame: this.context.time.frameCount + 1, key: evt.key };\r\n        this.onDispatchEvent(InputEvents.KeyDown, new KeyEventArgs(evt));\r\n    }\r\n    private onKeyPressed(evt: KeyboardEvent) {\r\n        if (!this.context.application.hasFocus)\r\n            return;\r\n        const p = this.keysPressed[evt.key];\r\n        if (!p) return;\r\n        p.pressed = true;\r\n        p.frame = this.context.time.frameCount + 1;\r\n        this.onDispatchEvent(InputEvents.KeyPressed, new KeyEventArgs(evt));\r\n\r\n    }\r\n    private onKeyUp(evt: KeyboardEvent) {\r\n        if (!this.context.application.hasFocus)\r\n            return;\r\n        const p = this.keysPressed[evt.key];\r\n        if (!p) return;\r\n        p.pressed = false;\r\n        p.frame = this.context.time.frameCount + 1;\r\n        this.onDispatchEvent(InputEvents.KeyUp, new KeyEventArgs(evt));\r\n    }\r\n\r\n    private onMouseWheel(evt: WheelEvent) {\r\n        if (this._mouseWheelDeltaY.length <= 0) this._mouseWheelDeltaY.push(0);\r\n        if (this._mouseWheelChanged.length <= 0) this._mouseWheelChanged.push(false);\r\n        this._mouseWheelChanged[0] = true;\r\n        const current = this._mouseWheelDeltaY[0];\r\n        this._mouseWheelDeltaY[0] = current + evt.deltaY;\r\n    }\r\n\r\n    private onTouchStart(evt: TouchEvent) {\r\n        if (evt.changedTouches.length <= 0) return;\r\n        for (let i = 0; i < evt.changedTouches.length; i++) {\r\n            const touch = evt.changedTouches[i];\r\n            const id = this.getPointerIndex(touch.identifier)\r\n            const args: PointerEventArgs = { button: id, clientX: touch.clientX, clientY: touch.clientY, pointerType: PointerType.Touch, source: evt };\r\n            this.onDown(args);\r\n        }\r\n    }\r\n\r\n    private onTouchMove(evt: TouchEvent) {\r\n        if (evt.changedTouches.length <= 0) return;\r\n        for (let i = 0; i < evt.changedTouches.length; i++) {\r\n            const touch = evt.changedTouches[i];\r\n            const id = this.getPointerIndex(touch.identifier)\r\n            const args: PointerEventArgs = { button: id, clientX: touch.clientX, clientY: touch.clientY, pointerType: PointerType.Touch, source: evt };\r\n            this.onMove(args);\r\n        }\r\n    }\r\n\r\n    private onTouchUp(evt) {\r\n        if (evt.changedTouches.length <= 0) return;\r\n        for (let i = 0; i < evt.changedTouches.length; i++) {\r\n            const touch = evt.changedTouches[i];\r\n            const id = this.getPointerIndex(touch.identifier)\r\n            const args: PointerEventArgs = { button: id, clientX: touch.clientX, clientY: touch.clientY, pointerType: PointerType.Touch, source: evt };\r\n            this.onUp(args);\r\n        }\r\n    }\r\n\r\n    private onMouseDown(evt: MouseEvent) {\r\n        if (evt.defaultPrevented) return;\r\n        let i = evt.button;\r\n        this.onDown({ button: i, clientX: evt.clientX, clientY: evt.clientY, pointerType: PointerType.Mouse, source: evt });\r\n    }\r\n\r\n    private onMouseMove(evt: MouseEvent) {\r\n        if (evt.defaultPrevented) return;\r\n        let i = evt.button;\r\n        const args: PointerEventArgs = { button: i, clientX: evt.clientX, clientY: evt.clientY, pointerType: PointerType.Mouse, source: evt, movementX: evt.movementX, movementY: evt.movementY };\r\n        this.onMove(args);\r\n    }\r\n\r\n    private onMouseUp(evt: MouseEvent) {\r\n        if (evt.defaultPrevented) return;\r\n        let i = evt.button;\r\n        this.onUp({ button: i, clientX: evt.clientX, clientY: evt.clientY, pointerType: PointerType.Mouse, source: evt });\r\n    }\r\n\r\n    private isInRect(e: { clientX: number, clientY: number }): boolean {\r\n        if(this.context.isInXR) return true;\r\n        const rect = this.context.domElement.getBoundingClientRect();\r\n        const px = e.clientX;\r\n        const py = e.clientY;\r\n        const isInRect = px >= rect.x && px <= rect.right && py >= rect.y && py <= rect.bottom;\r\n        if(debug && !isInRect) console.log(\"Not in rect\", rect, px, py);\r\n        return isInRect;\r\n\r\n    }\r\n\r\n    private onDown(evt: PointerEventArgs) {\r\n        if (debug) console.log(evt.pointerType, \"DOWN\", evt.button);\r\n        if (!this.isInRect(evt)) return;\r\n        this.setPointerState(evt.button, this._pointerPressed, true);\r\n        this.setPointerState(evt.button, this._pointerDown, true);\r\n        this.setPointerStateT(evt.button, this._pointerEvent, evt.source);\r\n\r\n        while (evt.button >= this._pointerTypes.length) this._pointerTypes.push(evt.pointerType);\r\n        this._pointerTypes[evt.button] = evt.pointerType;\r\n\r\n        while (evt.button >= this._pointerPositionDown.length) this._pointerPositionDown.push(new THREE.Vector2());\r\n        this._pointerPositionDown[evt.button].set(evt.clientX, evt.clientY);\r\n\r\n        if (evt.button >= this._pointerDownTime.length) this._pointerDownTime.push(0);\r\n        this._pointerDownTime[evt.button] = this.context.time.time;\r\n\r\n        this.updatePointerPosition(evt);\r\n        // console.log(\"DOWN\", this._pointerDown, this.mousePositionRC);\r\n\r\n        this.onDispatchEvent(InputEvents.PointerDown, evt);\r\n    }\r\n    // moveEvent?: Event;\r\n    private onMove(evt: PointerEventArgs) {\r\n        const isDown = this.getPointerPressed(evt.button);\r\n        if (isDown === false && !this.isInRect(evt)) return;\r\n        if (evt.pointerType === PointerType.Touch && !isDown) return;\r\n        if (debug) console.log(evt.pointerType, \"MOVE\", evt.button)\r\n        this.updatePointerPosition(evt);\r\n        this.setPointerStateT(evt.button, this._pointerEvent, evt.source);\r\n        this.onDispatchEvent(InputEvents.PointerMove, evt);\r\n    }\r\n    private onUp(evt: PointerEventArgs) {\r\n        if (this._pointerIds?.length >= evt.button)\r\n            this._pointerIds[evt.button] = -1;\r\n        const wasDown = this._pointerPressed[evt.button];\r\n        if (!wasDown) {\r\n            if (debug) console.log(evt.pointerType, \"UP\", evt.button, \"was not down\");\r\n            return;\r\n        }\r\n        if (debug) console.log(evt.pointerType, \"UP\", evt.button);\r\n        this.setPointerState(evt.button, this._pointerPressed, false);\r\n        this.setPointerStateT(evt.button, this._pointerEvent, evt.source);\r\n\r\n        // if (!this.isInRect(evt)) {\r\n        //     if (debug) showBalloonWarning(\"Pointer out of bounds: \" + evt.clientX + \", \" + evt.clientY);\r\n        //     return;\r\n        // }\r\n        this.setPointerState(evt.button, this._pointerUp, true);\r\n\r\n        this.updatePointerPosition(evt);\r\n\r\n        if (!this._pointerPositionDown[evt.button]) {\r\n            if (debug) showBalloonWarning(\"Received pointer up event without matching down event for button: \" + evt.button);\r\n            console.warn(\"Received pointer up event without matching down event for button: \" + evt.button)\r\n            return;\r\n        }\r\n        const dx = evt.clientX - this._pointerPositionDown[evt.button].x;\r\n        const dy = evt.clientY - this._pointerPositionDown[evt.button].y;\r\n\r\n        if (evt.button >= this._pointerUpTime.length) this._pointerUpTime.push(-99);\r\n\r\n        // console.log(dx, dy);\r\n        if (Math.abs(dx) < 5 && Math.abs(dy) < 5) {\r\n            this.setPointerState(evt.button, this._pointerClick, true);\r\n\r\n            // handle double click\r\n            const lastUp = this._pointerUpTime[evt.button];\r\n            const dt = this.context.time.time - lastUp;\r\n            // console.log(dt);\r\n            if (dt < this._doubleClickTimeThreshold && dt > 0) {\r\n                this.setPointerState(evt.button, this._pointerDoubleClick, true);\r\n            }\r\n        }\r\n        this._pointerUpTime[evt.button] = this.context.time.time;\r\n\r\n        this.onDispatchEvent(InputEvents.PointerUp, evt);\r\n    }\r\n\r\n    private updatePointerPosition(evt: PointerEventArgs) {\r\n        // console.log(\"MOVE\");\r\n        while (evt.button >= this._pointerPositions.length) this._pointerPositions.push(new THREE.Vector2());\r\n        while (evt.button >= this._pointerPositionsLastFrame.length) this._pointerPositionsLastFrame.push(new THREE.Vector2());\r\n        while (evt.button >= this._pointerPositionsDelta.length) this._pointerPositionsDelta.push(new THREE.Vector2());\r\n\r\n        const lf = this._pointerPositionsLastFrame[evt.button];\r\n        lf.copy(this._pointerPositions[evt.button]);\r\n        const dx = evt.movementX !== undefined ? evt.movementX : evt.clientX - lf.x;\r\n        const dy = evt.movementY !== undefined ? evt.movementY : evt.clientY - lf.y;\r\n        this._pointerPositionsDelta[evt.button].set(dx, dy);\r\n\r\n        this._pointerPositions[evt.button].x = evt.clientX;\r\n        this._pointerPositions[evt.button].y = evt.clientY;\r\n\r\n        // we want to have the position 01 on the canvas for raycasting\r\n        const px = evt.clientX;\r\n        const py = evt.clientY;\r\n        while (evt.button >= this._pointerPositionsRC.length) this._pointerPositionsRC.push(new THREE.Vector2());\r\n        const rc = this._pointerPositionsRC[evt.button];\r\n        rc.set(px, py);\r\n        this.convertScreenspaceToRaycastSpace(rc);\r\n        // console.log(this.context.alias, rc);\r\n        // this._pointerPositionsRC[evt.button].x = (px - this.context.domX) / this.context.domWidth * 2 - 1;\r\n        // this._pointerPositionsRC[evt.button].y = -((py - this.context.domY) / this.context.domHeight) * 2 + 1;\r\n        // console.log(evt.button)\r\n    }\r\n\r\n    /** get the next free id */\r\n    private getPointerIndex(pointerId: number) {\r\n        const ids = this._pointerIds;\r\n        // test if theres a pointer with the id\r\n        let firstFreeIndex = -1;\r\n        for (let i = 0; i < ids.length; i++) {\r\n            if (ids[i] === pointerId) return i;\r\n            else if (firstFreeIndex === -1 && ids[i] === -1)\r\n                firstFreeIndex = i;\r\n        }\r\n        // if not take the free slot if any\r\n        if (firstFreeIndex !== -1) {\r\n            ids[firstFreeIndex] = pointerId;\r\n            return firstFreeIndex;\r\n        }\r\n        ids.push(pointerId);\r\n        return ids.length - 1;\r\n    }\r\n\r\n    private setPointerState(index: number, arr: boolean[], value: boolean) {\r\n        while (arr.length <= index) arr.push(false);\r\n        arr[index] = value;\r\n    }\r\n\r\n    private setPointerStateT<T>(index: number, arr: T[], value: T) {\r\n        while (arr.length <= index) arr.push(null as any);\r\n        arr[index] = value;\r\n    }\r\n\r\n    private onDispatchEvent(name: InputEvents, args: PointerEventArgs | KeyEventArgs) {\r\n        const prevContext = Context.Current;\r\n        try {\r\n\r\n            Context.Current = this.context;\r\n            const e = new Event(name);\r\n            assign(e, args);\r\n            this.dispatchEvent(e);\r\n        }\r\n        finally {\r\n            Context.Current = prevContext;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport enum KeyCode {\r\n    BACKSPACE = \"Backspace\",\r\n    TAB = \"Tab\",\r\n    ENTER = \"Enter\",\r\n    SHIFT = \"Shift\",\r\n    CTRL = \"Control\",\r\n    ALT = \"Alt\",\r\n    PAUSE = \"Pause\",\r\n    CAPS_LOCK = \"CapsLock\",\r\n    ESCAPE = \"Escape\",\r\n    SPACE = \" \",\r\n    PAGE_UP = \"PageUp\",\r\n    PAGE_DOWN = \"PageDown\",\r\n    END = \"End\",\r\n    HOME = \"Home\",\r\n    LEFT_ARROW = \"ArrowLeft\",\r\n    UP_ARROW = \"ArrowUp\",\r\n    RIGHT_ARROW = \"ArrowRight\",\r\n    DOWN_ARROW = \"ArrowDown\",\r\n    INSERT = \"Insert\",\r\n    DELETE = \"Delete\",\r\n    KEY_0 = \"0\",\r\n    KEY_1 = \"1\",\r\n    KEY_2 = \"2\",\r\n    KEY_3 = \"3\",\r\n    KEY_4 = \"4\",\r\n    KEY_5 = \"5\",\r\n    KEY_6 = \"6\",\r\n    KEY_7 = \"7\",\r\n    KEY_8 = \"8\",\r\n    KEY_9 = \"9\",\r\n    KEY_A = \"a\",\r\n    KEY_B = \"b\",\r\n    KEY_C = \"c\",\r\n    KEY_D = \"d\",\r\n    KEY_E = \"e\",\r\n    KEY_F = \"f\",\r\n    KEY_G = \"g\",\r\n    KEY_H = \"h\",\r\n    KEY_I = \"i\",\r\n    KEY_K = \"k\",\r\n    KEY_J = \"j\",\r\n    KEY_L = \"l\",\r\n    KEY_M = \"m\",\r\n    KEY_N = \"n\",\r\n    KEY_O = \"o\",\r\n    KEY_P = \"p\",\r\n    KEY_Q = \"q\",\r\n    KEY_R = \"r\",\r\n    KEY_S = \"s\",\r\n    KEY_T = \"t\",\r\n    KEY_U = \"u\",\r\n    KEY_V = \"v\",\r\n    KEY_W = \"w\",\r\n    KEY_X = \"x\",\r\n    KEY_Z = \"z\",\r\n    KEY_Y = \"y\",\r\n    SELECT = \"Select\",\r\n    NUMPAD_0 = \"Numpad0\",\r\n    NUMPAD_1 = \"Numpad1\",\r\n    NUMPAD_2 = \"Numpad2\",\r\n    NUMPAD_3 = \"Numpad3\",\r\n    NUMPAD_4 = \"Numpad4\",\r\n    NUMPAD_5 = \"Numpad5\",\r\n    NUMPAD_6 = \"Numpad6\",\r\n    NUMPAD_7 = \"Numpad7\",\r\n    NUMPAD_8 = \"Numpad8\",\r\n    NUMPAD_9 = \"Numpad9\",\r\n    MULTIPLY = \"Multiply\",\r\n    ADD = \"Add\",\r\n    SUBTRACT = \"Subtract\",\r\n    DECIMAL = \"Decimal\",\r\n    DIVIDE = \"Divide\",\r\n    F1 = \"F1\",\r\n    F2 = \"F2\",\r\n    F3 = \"F3\",\r\n    F4 = \"F4\",\r\n    F5 = \"F5\",\r\n    F6 = \"F6\",\r\n    F7 = \"F7\",\r\n    F8 = \"F8\",\r\n    F9 = \"F9\",\r\n    F10 = \"F10\",\r\n    F11 = \"F11\",\r\n    F12 = \"F12\"\r\n};\r\n\r\n\r\n    // KEY_1 = 49,\r\n    // KEY_2 = 50,\r\n    // KEY_3 = 51,\r\n    // KEY_4 = 52,\r\n    // KEY_5 = 53,\r\n    // KEY_6 = 54,\r\n    // KEY_7 = 55,\r\n    // KEY_8 = 56,\r\n    // KEY_9 = 57,\r\n    // KEY_A = 65,\r\n    // KEY_B = 66,\r\n    // KEY_C = 67,\r\n    // KEY_D = \"d\",\r\n    // KEY_E = 69,\r\n    // KEY_F = 70,\r\n    // KEY_G = 71,\r\n    // KEY_H = 72,\r\n    // KEY_I = 73,\r\n    // KEY_J = 74,\r\n    // KEY_K = 75,\r\n    // KEY_L = 76,\r\n    // KEY_M = 77,\r\n    // KEY_N = 78,\r\n    // KEY_O = 79,\r\n    // KEY_P = 80,\r\n    // KEY_Q = 81,\r\n    // KEY_R = 82,\r\n    // KEY_S = 83,\r\n    // KEY_T = 84,\r\n    // KEY_U = 85,\r\n    // KEY_V = 86,\r\n    // KEY_W = 87,\r\n    // KEY_X = 88,\r\n    // KEY_Y = 89,\r\n    // KEY_Z = 90,\r\n    // LEFT_META = 91,\r\n    // RIGHT_META = 92,\r\n    // SELECT = 93,\r\n    // NUMPAD_0 = 96,\r\n    // NUMPAD_1 = 97,\r\n    // NUMPAD_2 = 98,\r\n    // NUMPAD_3 = 99,\r\n    // NUMPAD_4 = 100,\r\n    // NUMPAD_5 = 101,\r\n    // NUMPAD_6 = 102,\r\n    // NUMPAD_7 = 103,\r\n    // NUMPAD_8 = 104,\r\n    // NUMPAD_9 = 105,\r\n    // MULTIPLY = 106,\r\n    // ADD = 107,\r\n    // SUBTRACT = 109,\r\n    // DECIMAL = 110,\r\n    // DIVIDE = 111,\r\n    // F1 = 112,\r\n    // F2 = 113,\r\n    // F3 = 114,\r\n    // F4 = 115,\r\n    // F5 = 116,\r\n    // F6 = 117,\r\n    // F7 = 118,\r\n    // F8 = 119,\r\n    // F9 = 120,\r\n    // F10 = 121,\r\n    // F11 = 122,\r\n    // F12 = 123,\r\n    // NUM_LOCK = 144,\r\n    // SCROLL_LOCK = 145,\r\n    // SEMICOLON = 186,\r\n    // EQUALS = 187,\r\n    // COMMA = 188,\r\n    // DASH = 189,\r\n    // PERIOD = 190,\r\n    // FORWARD_SLASH = 191,\r\n    // GRAVE_ACCENT = 192,\r\n    // OPEN_BRACKET = 219,\r\n    // BACK_SLASH = 220,\r\n    // CLOSE_BRACKET = 221,\r\n    // SINGLE_QUOTE = 222", "import { getErrorCount } from \"./debug_overlay\";\r\nimport { getParam, isMobileDevice } from \"../engine_utils\";\r\nimport { isLocalNetwork } from \"../engine_networking_utils\";\r\n\r\nlet consoleInstance: any = null;\r\nlet consoleHtmlElement: HTMLElement | null = null;\r\nlet consoleSwitchButton: HTMLElement | null = null;\r\nlet isLoading = false;\r\nlet isVisible = false;\r\nlet watchInterval: any = null;\r\nconst defaultButtonIcon = \"\uD83D\uDCDC\";\r\n\r\nconst showConsole = getParam(\"console\");\r\nconst suppressConsole = getParam(\"noerrors\");\r\nif (showConsole) {\r\n    showDebugConsole();\r\n}\r\n\r\nif (!suppressConsole && (showConsole || isLocalNetwork())) {\r\n    console.log(\"Add the ?console query parameter to the url to show the debug console (on mobile it will automatically open for local development when your get errors)\");\r\n    const isMobile = isMobileDevice();\r\n    if(isMobile){\r\n        beginWatchingLogs();\r\n        createConsole(true);\r\n        if (isMobile) {\r\n            const engineElement = document.querySelector(\"needle-engine\");\r\n            engineElement?.addEventListener(\"enter-ar\", () => {\r\n                if (showConsole || consoleInstance || getErrorCount() > 0) {\r\n                    if (getParam(\"noerrors\")) return;\r\n                    const overlay = engineElement[\"getAROverlayContainer\"]?.call(engineElement);\r\n                    const consoleElement = getConsoleElement();\r\n                    if (consoleElement && overlay) {\r\n                        overlay.appendChild(consoleElement);\r\n                    }\r\n                }\r\n            });\r\n            engineElement?.addEventListener(\"exit-ar\", () => {\r\n                onResetConsoleElementToDefaultParent();\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst $defaultConsoleParent = Symbol(\"consoleParent\");\r\n\r\nexport function showDebugConsole() {\r\n\r\n    if (consoleInstance !== null) {\r\n        isVisible = true;\r\n        consoleInstance.showSwitch();\r\n        return;\r\n    }\r\n    createConsole();\r\n}\r\n\r\nexport function hideDebugConsole() {\r\n    if (consoleInstance === null) return;\r\n    isVisible = false;\r\n    consoleInstance.hide();\r\n    consoleInstance.hideSwitch();\r\n}\r\n\r\nfunction beginWatchingLogs() {\r\n    if (watchInterval) return;\r\n    watchInterval = setInterval(consoleElementUpdateInterval, 500);\r\n}\r\n\r\nlet lastErrorCount = 0;\r\nfunction consoleElementUpdateInterval() {\r\n    const currentCount = getErrorCount();\r\n    const receivedNewErrors = currentCount !== lastErrorCount;\r\n    lastErrorCount = currentCount;\r\n    if (receivedNewErrors) {\r\n        onNewConsoleErrors();\r\n    }\r\n}\r\n\r\nfunction onNewConsoleErrors() {\r\n    showDebugConsole();\r\n    if (consoleSwitchButton) {\r\n        consoleSwitchButton.setAttribute(\"error\", \"true\");\r\n        consoleSwitchButton.innerText = \"\uD83E\uDD2C\"\r\n    }\r\n}\r\n\r\nfunction onConsoleSwitchButtonClicked() {\r\n    if (consoleSwitchButton) {\r\n        consoleSwitchButton.removeAttribute(\"error\");\r\n        consoleSwitchButton.innerText = defaultButtonIcon;\r\n    }\r\n}\r\n\r\nfunction onResetConsoleElementToDefaultParent() {\r\n    if (consoleHtmlElement && consoleHtmlElement[$defaultConsoleParent]) {\r\n        consoleHtmlElement[$defaultConsoleParent].appendChild(consoleHtmlElement);\r\n    }\r\n}\r\n\r\nfunction createConsole(startHidden: boolean = false) {\r\n    if (consoleInstance) return;\r\n    if (isLoading) return;\r\n    isLoading = true;\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://unpkg.com/vconsole@latest/dist/vconsole.min.js\";\r\n    script.onload = () => {\r\n        isLoading = false;\r\n        isVisible = true;\r\n        beginWatchingLogs();\r\n        //@ts-ignore\r\n        consoleInstance = new window.VConsole();\r\n        consoleHtmlElement = getConsoleElement();\r\n        if (consoleHtmlElement) {\r\n            consoleHtmlElement[$defaultConsoleParent] = consoleHtmlElement.parentElement;\r\n        }\r\n        consoleInstance.setSwitchPosition(20, 10);\r\n        consoleSwitchButton = getConsoleSwitchButton();\r\n        if (consoleSwitchButton) {\r\n            consoleSwitchButton.innerText = defaultButtonIcon;\r\n            consoleSwitchButton.addEventListener(\"click\", onConsoleSwitchButtonClicked);\r\n            const buttonStyles = document.createElement(\"style\");\r\n            const size = 40;\r\n            buttonStyles.innerHTML = `\r\n                #__vconsole .vc-switch {\r\n                    border: 1px solid rgba(255,255,255,.2);\r\n                    border-radius: 50%;\r\n                    width: ${size}px;\r\n                    height: ${size}px;\r\n                    padding: 0;\r\n                    line-height: ${size}px;\r\n                    font-size: ${size * .4}px;\r\n                    text-align: center;\r\n                    background: rgba(200,200,200,.2);\r\n                    backdrop-filter: blur(10px);\r\n                    user-select: none;\r\n                    pointer-events: auto;\r\n                    transition: transform .2s ease-in-out;\r\n                }\r\n                #__vconsole .vc-switch:hover {\r\n                    cursor: pointer;\r\n                    transform: scale(1.1);\r\n                    transition: transform .1s ease-in-out;\r\n                }\r\n                #__vconsole .vc-switch[error] {\r\n                    background: rgba(255,0,0,.2);\r\n                    animation: vconsole-notify 1s ease-in-out;\r\n                }\r\n                @keyframes vconsole-notify {\r\n                    from {\r\n                        transform: scale(1, 1);\r\n                    }\r\n                    10% {\r\n                        transform: scale(1.3, 1.3);\r\n                    }\r\n                    70% {\r\n                        transform: scale(1.4, 1.4);\r\n                    }\r\n                    to {\r\n                        transform: scale(1, 1);\r\n                    }\r\n                }\r\n            `;\r\n            document.head.appendChild(buttonStyles);\r\n            if (startHidden === true)\r\n                hideDebugConsole();\r\n        }\r\n\r\n    };\r\n    document.body.appendChild(script);\r\n}\r\n\r\nfunction getConsoleSwitchButton(): HTMLElement | null {\r\n    const el = document.querySelector(\"#__vconsole .vc-switch\");\r\n    if (el) return el as HTMLElement;\r\n    return null;\r\n}\r\n\r\nfunction getConsoleElement(): HTMLElement | null {\r\n    const el = document.querySelector(\"#__vconsole\");\r\n    if (el) return el as HTMLElement;\r\n    return null;\r\n}", "import { addLog, LogType } from \"./debug_overlay\";\r\nimport { showDebugConsole } from \"./debug_console\";\r\n\r\nexport { showDebugConsole }\r\n\r\nexport { LogType };\r\n\r\nexport function showBalloonMessage(text: string, logType: LogType = LogType.Log) {\r\n    addLog(logType, text);\r\n    // addLog(LogType.Error, text);\r\n    // addLog(LogType.Log, text);\r\n}\r\n\r\nexport function showBalloonWarning(text: string) {\r\n    showBalloonMessage(text, LogType.Warn);\r\n}", "import { getParam } from \"./engine_utils\";\r\n\r\nexport const showGizmos = getParam(\"gizmos\");\r\nexport const debugExtension = getParam(\"debugextension\");", "import { IExtensionReferenceResolver } from \"./extension_resolver\";\r\nimport { GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { debugExtension } from \"../engine_default_parameters\";\r\nimport { getParam } from \"../engine_utils\";\r\n\r\nconst debug = getParam(\"debugresolvedependencies\");\r\n\r\ndeclare type DependencyInfo = {\r\n    prefix: string,\r\n    dependencyName: string,\r\n}\r\n\r\nconst rootExtensionPrefix = [\"/extensions/\", \"extensions/\"];\r\nconst defaultDependencies = [\r\n    { prefix: \"/nodes/\", dependencyName: \"node\" },\r\n    { prefix: \"/meshes/\", dependencyName: \"mesh\" },\r\n    { prefix: \"/materials/\", dependencyName: \"material\" },\r\n    { prefix: \"/textures/\", dependencyName: \"texture\" },\r\n    { prefix: \"/animations/\", dependencyName: \"animation\" },\r\n\r\n    // legacy support\r\n    { prefix: \"nodes/\", dependencyName: \"node\" },\r\n    { prefix: \"meshes/\", dependencyName: \"mesh\" },\r\n    { prefix: \"materials/\", dependencyName: \"material\" },\r\n    { prefix: \"textures/\", dependencyName: \"texture\" },\r\n    { prefix: \"animations/\", dependencyName: \"animation\" },\r\n]\r\n\r\nexport async function resolveReferences(parser: GLTFParser, obj) {\r\n    if(debug) console.log(parser, obj);\r\n    const arr: Promise<void>[] = [];\r\n    internalResolve(defaultDependencies, parser, obj, arr);\r\n    const res = await Promise.all(arr);\r\n    if (typeof obj === \"string\" && res.length === 1) return res[0];\r\n    return res;\r\n}\r\n\r\n\r\nfunction internalResolve(paths: DependencyInfo[], parser: GLTFParser, obj, promises: Promise<void>[]) {\r\n    if (typeof obj === \"object\" && obj !== undefined && obj !== null) {\r\n        for (const key of Object.keys(obj)) {\r\n            const val = obj[key];\r\n            // handle json pointer in string variable\r\n            if (typeof val === \"string\") {\r\n                const ext = resolveExtension(parser, val);\r\n                if (ext !== null) {\r\n                    if (typeof ext.then === \"function\")\r\n                        promises.push(ext.then(res => obj[key] = res));\r\n                    else obj[key] = ext;\r\n                }\r\n                else {\r\n                    // e.g. prefix = \"materials/\";\r\n                    for (const dep of paths) {\r\n                        const index = tryGetIndex(dep.prefix, val);\r\n                        if (index >= 0) {\r\n                            // e.g. dependencyName = \"material\"\r\n                            if (debug) console.log(dep, index, dep.dependencyName);\r\n                            promises.push(parser?.getDependency(dep.dependencyName, index).then(res => {\r\n                                obj[key] = res;\r\n                                return res;\r\n                            }));\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // handle json pointers in arrays\r\n            else if (Array.isArray(val)) {\r\n                for (let i = 0; i < val.length; i++) {\r\n                    const entry = val[i];\r\n                    const ext = resolveExtension(parser, entry);\r\n                    if (ext !== null) {\r\n                        if (typeof ext.then === \"function\")\r\n                            promises.push(ext.then(res => val[i] = res));\r\n                        else val[i] = ext;\r\n                        continue;\r\n                    }\r\n                    for (const dep of paths) {\r\n                        const index = tryGetIndex(dep.prefix, entry);\r\n                        if (index >= 0) {\r\n                            if (debug) console.log(dep, index, dep.dependencyName);\r\n                            promises.push(parser?.getDependency(dep.dependencyName, index).then(res => val[i] = res));\r\n                            break;\r\n                        }\r\n                    }\r\n                    // recurse\r\n                    if (typeof entry === \"object\") {\r\n                        internalResolve(paths, parser, entry, promises);\r\n                    }\r\n                }\r\n            }\r\n            // recurse\r\n            else if (typeof val === \"object\") {\r\n                internalResolve(paths, parser, val, promises);\r\n            }\r\n        }\r\n    }\r\n    else if (typeof obj === \"string\") {\r\n        tryResolveDependency(paths, parser, obj, promises);\r\n    }\r\n}\r\n\r\n\r\nfunction resolveExtension(parser: GLTFParser, str): Promise<void> | null {\r\n    if (parser && parser.plugins && typeof str === \"string\") {\r\n        for (const prefix of rootExtensionPrefix) {\r\n            if (str.startsWith(prefix)) {\r\n                let name = str.substring(prefix.length);\r\n                const endIndex = name.indexOf(\"/\");\r\n                if (endIndex >= 0) name = name.substring(0, endIndex);\r\n                const ext = parser.plugins[name] as IExtensionReferenceResolver;\r\n                if (debugExtension)\r\n                    console.log(name, ext);\r\n                if (typeof ext?.resolve === \"function\") {\r\n                    const path = str.substring(prefix.length + name.length + 1);\r\n                    return ext.resolve(parser, path);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction tryResolveDependency(paths: DependencyInfo[], parser: GLTFParser, str: string, promises: Promise<void>[]): boolean {\r\n    for (const dep of paths) {\r\n        const index = tryGetIndex(dep.prefix, str);\r\n        if (index >= 0) {\r\n            // e.g. dependencyName = \"material\"\r\n            if (debug) console.log(dep, index, dep.dependencyName);\r\n            promises.push(parser?.getDependency(dep.dependencyName, index).then(res => {\r\n                return res;\r\n            }));\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction tryGetIndex(prefix: string, str: string): number {\r\n\r\n    if (typeof str === \"string\" && str.startsWith(prefix)) {\r\n        const part = str.substring(prefix.length);\r\n        const index = Number.parseInt(part);\r\n        if (index >= 0) {\r\n            return index;\r\n        }\r\n    }\r\n    return -1;\r\n}", "\r\nclass _TypeStore {\r\n\r\n    private _types = {};\r\n\r\n    public add(key, type) {\r\n        const existing = this._types[key];\r\n        if (existing === undefined)\r\n            this._types[key] = type;\r\n        else {\r\n            if (existing !== type)\r\n                console.warn(\"Type name exists multiple times in your project and may lead to runtime errors:\", key)\r\n        }\r\n    }\r\n\r\n    public get(key) {\r\n        return this._types[key];\r\n    }\r\n}\r\n\r\nexport const $BuiltInTypeFlag = Symbol(\"BuiltInType\");\r\n\r\nexport const TypeStore = new _TypeStore();", "import { resolveReferences } from \"./extension_utils\";\r\nimport { GLTF, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { IExtensionReferenceResolver } from \"./extension_resolver\";\r\nimport { debugExtension } from \"../engine_default_parameters\";\r\nimport { TypeStore } from \"../engine_typestore\";\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_persistent_assets\";\r\n\r\nexport function isPersistentAsset(asset: any): boolean {\r\n    return asset?.___persistentAsset === true;\r\n}\r\n\r\ndeclare type PersistentAsset = {\r\n    assets: Array<any>\r\n};\r\n\r\nexport class NEEDLE_persistent_assets implements GLTFLoaderPlugin, IExtensionReferenceResolver {\r\n\r\n    get name(): string {\r\n        return EXTENSION_NAME;\r\n    }\r\n\r\n    private parser: GLTFParser;\r\n\r\n    constructor(parser: GLTFParser) {\r\n        this.parser = parser;\r\n    }\r\n\r\n\r\n    async afterRoot(_result: GLTF): Promise<void> {\r\n        if (!this.parser?.json?.extensions) return;\r\n        const ext = this.parser.json.extensions[EXTENSION_NAME] as PersistentAsset;\r\n        if (!ext) return;\r\n        if (debugExtension)\r\n            console.log(ext);\r\n        const promises = new Array<Promise<any>>();\r\n        for (const e of ext?.assets) {\r\n            const p = resolveReferences(this.parser, e);\r\n            if (p) {\r\n                promises.push(p);\r\n            }\r\n        }\r\n        await Promise.all(promises);\r\n    }\r\n\r\n    resolve(parser: GLTFParser, path: string): Promise<void> | null | any {\r\n        const index = Number.parseInt(path);\r\n        if (index >= 0) {\r\n            if (debugExtension)\r\n                console.log(path);\r\n            const ext = parser.json.extensions[EXTENSION_NAME] as PersistentAsset;\r\n            if (ext) {\r\n                const asset = ext?.assets[index];\r\n                if (asset) {\r\n                    if (typeof asset === \"object\") {\r\n                        asset.___persistentAsset = true;\r\n                        const assetTypeInfo = asset[\"__type\"];\r\n                        if (assetTypeInfo) {\r\n                            const type = TypeStore.get(assetTypeInfo);\r\n                            if (type) {\r\n                                // TODO: assign types here\r\n                                // console.log(assetTypeInfo, type);\r\n                                // const instance = new type(asset);\r\n                                // assign(instance, asset);\r\n                                // ext.assets[index] = instance;\r\n                                // return instance;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return asset;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}", "import { GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { getParam } from \"./engine_utils\";\r\nimport { Object3D } from \"three\";\r\nimport { Context } from \"./engine_setup\";\r\nimport { isPersistentAsset } from \"./extensions/NEEDLE_persistent_assets\";\r\nimport { IComponent, SourceIdentifier } from \"./engine_types\";\r\nimport { debugExtension } from \"../engine/engine_default_parameters\";\r\nimport { LogType, showBalloonMessage } from \"./debug/debug\";\r\nimport { isLocalNetwork } from \"./engine_networking_utils\";\r\nimport { $BuiltInTypeFlag } from \"./engine_typestore\";\r\n\r\nconst debug = getParam(\"debugserializer\");\r\n\r\n\r\nexport type Constructor<T> = { new(...args: any[]): T };\r\nexport declare type NodeToObjectMap = { [nodeId: string]: Object3D };\r\nexport declare type ObjectToNodeMap = { [uuid: string]: number };\r\n\r\n// internal helper class that we can ask for registered type serializers\r\n// register your own type by deriving from ITypeSerializer and calling helper.register\r\nclass SerializationHelper {\r\n    register(type: string, ser: ITypeSerializer) {\r\n        if (this.typeMap[type] !== undefined) {\r\n            if (this.typeMap[type] === ser) return;\r\n            console.warn(\"Type \" + type + \" is already registered\", ser, this.typeMap[type]);\r\n        }\r\n        if (debug)\r\n            console.log(\"Register type serializer for \" + type, ser);\r\n        this.typeMap[type] = ser;\r\n    }\r\n\r\n    typeMap: { [type: string]: ITypeSerializer } = {};\r\n\r\n    getSerializer(type: string): ITypeSerializer | undefined {\r\n        if (!type) return undefined;\r\n        return this.typeMap[type];\r\n    }\r\n\r\n    getSerializerForConstructor(type: any, level: number = 0): ITypeSerializer | undefined {\r\n        if (level > 20) return undefined;\r\n        if (!type || !type.constructor) {\r\n            if (debug)\r\n                console.log(\"invalid type\");\r\n            return undefined;\r\n        }\r\n        const name = type.name ?? type.constructor?.name;\r\n        if (!name) {\r\n            if (debug)\r\n                console.log(\"invalid name\", name);\r\n            return undefined;\r\n        }\r\n        const res = this.getSerializer(name);\r\n        if (res !== undefined) {\r\n            if (debug)\r\n                console.log(\"FOUND \" + name, type.name, type.constructor.name, res, this.typeMap);\r\n            return res;\r\n        }\r\n        let parent = Object.getPrototypeOf(type);\r\n        const hasPrototypeOrConstructor = parent.prototype || parent.constructor;\r\n        // console.log(name, type, parent);\r\n        if (!hasPrototypeOrConstructor) {\r\n            if (debug)\r\n                console.warn(\"No prototype for \" + name, type, type.name, type.prototype, type.constructor.name);\r\n            // console.log(type.constructor);\r\n            // console.dir(type);\r\n            // console.log(Object.getPrototypeOf(type))\r\n            // console.dir(parent, Object.getPrototypeOf(type));\r\n            // if(level <= 0){\r\n            //     const t = TypeStore.get(type.name);\r\n            //     console.log(type['__proto__'].name);\r\n            //     if(t) return this.getSerializerForConstructor(t, level + 1);\r\n            // }\r\n            return undefined;\r\n        }\r\n        const prot = parent.prototype ?? parent.constructor;\r\n        if (prot !== type) {\r\n            const resultFromChildren = this.getSerializerForConstructor(prot, ++level);\r\n            if (resultFromChildren) {\r\n                if (debug)\r\n                    console.log(\"FOUND \" + prot.constructor.name, prot.name, prot, resultFromChildren);\r\n                // register sub type\r\n                const typeName = prot.name ?? prot.constructor.name;\r\n                if (typeName === \"Function\") {\r\n                    console.error(\"Registering Function is not allowed, something went wrong\", type, prot, resultFromChildren);\r\n                }\r\n                else\r\n                    this.register(typeName, resultFromChildren);\r\n            }\r\n            return resultFromChildren;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const helper: SerializationHelper = new SerializationHelper();\r\n\r\n\r\nexport interface ITypeSerializer {\r\n    onSerialize(data: any, context: SerializationContext): any;\r\n    onDeserialize(data: any, context: SerializationContext): any;\r\n}\r\n\r\n\r\n\r\n/**\r\n * implement and call super(<type string or array>) with the type names this serializer can handle\r\n * for example: \r\n * class ColorSerializer extends TypeSerializer { \r\n *  constructor() { \r\n *      super(\"Color\") \r\n *  } \r\n * } \r\n*/\r\nexport abstract class TypeSerializer implements ITypeSerializer {\r\n\r\n    // register<T>(c: Constructor<T> | Constructor<T>[])\r\n    // {\r\n    //     if (Array.isArray(c)) {\r\n    //         for (const t of c) {\r\n    //             helper.register(t.name, this);\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         helper.register(c.name, this);\r\n    //     }\r\n    // }\r\n\r\n    constructor(type: Constructor<any> | Constructor<any>[]) {\r\n        if (Array.isArray(type)) {\r\n            for (const key of type)\r\n                helper.register(key.name, this);\r\n        }\r\n        else\r\n            helper.register(type.name, this);\r\n    }\r\n    abstract onSerialize(data: any, context: SerializationContext): any | void;\r\n    abstract onDeserialize(data: any, context: SerializationContext): any | void;\r\n}\r\n\r\n\r\n\r\n\r\nexport interface ITypeInformation {\r\n    type?: Constructor<any>;\r\n}\r\n\r\n/** holds information if a field was undefined before serialization. This gives us info if we might want to warn the user about missing attributes */\r\nexport class ImplementationInformation {\r\n\r\n    private isDevMode = isLocalNetwork();\r\n    private cache: { [key: string]: string[] } = {};\r\n\r\n\r\n    /** only call when assigning values for the very first time */\r\n    registerDefinedKeys(typeName: string, type: object) {\r\n        if (!this.isDevMode) return;\r\n        if (this.cache[typeName] === undefined) {\r\n            this.cache[typeName] = Object.keys(type);\r\n        }\r\n    }\r\n\r\n\r\n    getDefinedKey(typeName: string, key: string) {\r\n        if (this.cache[typeName] === undefined) return false;\r\n        const keys = this.cache[typeName];\r\n        const res = keys.includes(key);\r\n        return res;\r\n    }\r\n}\r\n\r\n// passed to serializers\r\nexport class SerializationContext {\r\n    root: THREE.Object3D;\r\n\r\n    gltf?: GLTF;\r\n    gltfId?: SourceIdentifier;\r\n    object!: THREE.Object3D;\r\n    target?: object;\r\n    nodeId?: number;\r\n    nodeToObject?: NodeToObjectMap;\r\n    objectToNode?: ObjectToNodeMap;\r\n    context?: Context;\r\n    path?: string;\r\n    type?: Constructor<any>;\r\n    /** holds information if a field was undefined before serialization. This gives us info if we might want to warn the user about missing attributes */\r\n    implementationInformation?: ImplementationInformation;\r\n\r\n    constructor(root: THREE.Object3D) {\r\n        this.root = root;\r\n    }\r\n}\r\n\r\n\r\nexport interface ISerializable {\r\n    $serializedTypes?: { [key: string]: Constructor<any> | ITypeInformation | null };\r\n    // onDeserialize?(context: SerializationContext): void;\r\n    // example:\r\n    /* $serializedTypes : {\r\n\r\n        // it can be a constructor\r\n        myFieldName: Vector3,\r\n\r\n        // it can be null if it is a primitve type\r\n        myFieldName: null,\r\n\r\n        // it can be an object containing a field type that has a constructor\r\n        // this is just so we have some flexibility later if we need superspecialcustom overrides\r\n        myFieldName : { type: THREE.Color },\r\n    }\r\n    */\r\n\r\n    onBeforeDeserialize?(data: any, context: SerializationContext): void | undefined | boolean;\r\n    onBeforeDeserializeMember?(key: string, data: any, context: SerializationContext): void | undefined | boolean;\r\n    onAfterDeserializeMember?(key: string, data: any, context: SerializationContext): void;\r\n    onAfterDeserialize?(data: any, context: SerializationContext): void;\r\n};\r\n\r\n\r\nexport function serializeObject(obj: ISerializable, context: SerializationContext): object | null {\r\n    const types = obj.$serializedTypes;\r\n    if (types === undefined) return null;\r\n    const res = {};\r\n    for (const key in types) {\r\n        let val = obj[key];\r\n\r\n        // if the object bein serialized is some type of object check if we have special handling registered for it\r\n        if (val !== undefined && val !== null && typeof val === \"object\") {\r\n            // get type name\r\n            // get registered serialization handler\r\n            const ser = helper.getSerializerForConstructor(val);\r\n            if (ser) {\r\n                // serialize data using that handler\r\n                res[key] = ser.onSerialize(val, context);\r\n                continue;\r\n            }\r\n        }\r\n        res[key] = val;\r\n    }\r\n    // name is the component type\r\n    res[\"name\"] = obj.constructor.name;\r\n    // serialize guid\r\n    if (typeof obj[\"guid\"] === \"string\")\r\n        res[\"guid\"] = obj[\"guid\"];\r\n    return res;\r\n}\r\n\r\n\r\nconst buffer: Array<any> = [];\r\n\r\nfunction collectSerializedTypesInBaseTypes(obj: ISerializable, typeInfoObject?: object): object | undefined {\r\n    if (!obj) return typeInfoObject;\r\n    if (typeof obj.$serializedTypes === \"object\") {\r\n        if (!typeInfoObject) typeInfoObject = {};\r\n        Object.assign(typeInfoObject, obj.$serializedTypes);\r\n    }\r\n    const parentTarget = Object.getPrototypeOf(obj);\r\n    return collectSerializedTypesInBaseTypes(parentTarget, typeInfoObject);\r\n}\r\n\r\n\r\nexport function deserializeObject(obj: ISerializable, serializedData: object, context: SerializationContext): boolean {\r\n    if (!obj) return false;\r\n\r\n    context.target = obj;\r\n\r\n    if (obj.onBeforeDeserialize !== undefined) {\r\n        const res = obj.onBeforeDeserialize(serializedData, context);\r\n        if (typeof res === \"boolean\") return res;\r\n    }\r\n\r\n    // const typeInfo = obj.$serializedTypes;\r\n    const typeInfo = collectSerializedTypesInBaseTypes(obj);\r\n    if (serializedData) {\r\n        // restore guid (see serializeObject)\r\n        if (typeof serializedData[\"guid\"] === \"string\")\r\n            obj[\"guid\"] = serializedData[\"guid\"];\r\n\r\n        if (typeInfo) {\r\n            for (const key in typeInfo) {\r\n                const serializedEntryInfo = typeInfo[key];\r\n                const data = serializedData[key];\r\n\r\n\r\n                if (obj[key] !== undefined && data === undefined) {\r\n                    // if a field is marked as serialized and has some default value\r\n                    // but no data was serialized do not override the default value with undefined\r\n                    continue;\r\n                }\r\n\r\n                context.type = undefined;\r\n                context.path = key;\r\n\r\n                if (serializedEntryInfo === null) {\r\n                    obj[key] = data;\r\n                }\r\n                else {\r\n\r\n                    if (obj.onBeforeDeserializeMember !== undefined) {\r\n                        // callback to the instance, if it returns true assume it's done all the things itself\r\n                        if (obj.onBeforeDeserializeMember(key, data, context) === true) continue;\r\n                    }\r\n\r\n                    if (Array.isArray(serializedEntryInfo)) {\r\n                        for (let i = 0; i < serializedEntryInfo.length; i++) {\r\n                            const typeInfoOrConstructor = serializedEntryInfo[i];\r\n                            const res = tryResolve(typeInfoOrConstructor);\r\n                            if (res !== undefined || i === serializedEntryInfo.length - 1) {\r\n                                obj[key] = res;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        obj[key] = tryResolve(serializedEntryInfo);\r\n                    }\r\n\r\n                    function tryResolve(typeInfoOrConstructor) {\r\n                        const typeInformationOrConstructor = typeInfoOrConstructor as ITypeInformation;\r\n                        // if the entry does specify an object of type ITypeInformation and has the type field set\r\n                        const type = typeInformationOrConstructor.type;\r\n                        if (type) {\r\n                            return deserializeObjectWithType(data, type, context, undefined, obj[key]);\r\n                        }\r\n                        // it can also just contain a constructor\r\n                        else {\r\n                            const constructor = typeInfoOrConstructor as Constructor<any>;\r\n                            return deserializeObjectWithType(data, constructor, context, undefined, obj[key]);\r\n                        }\r\n                    }\r\n\r\n                    buffer.length = 0;\r\n\r\n                    if (obj.onAfterDeserializeMember !== undefined) {\r\n                        obj.onAfterDeserializeMember(key, data, context);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // ***\r\n        // the code below could be used to implictly assign serialized data if they are primitive types\r\n        // if we decide not to do this we always have to write out all the $serializedTypes\r\n        // *** \r\n        implictlyAssignPrimitiveTypes(obj, serializedData);\r\n    }\r\n\r\n    checkObjectAssignments(obj, serializedData, context.implementationInformation);\r\n\r\n    if (obj.onAfterDeserialize !== undefined) {\r\n        obj.onAfterDeserialize(serializedData, context);\r\n    }\r\n\r\n    context.path = undefined;\r\n    return true;\r\n}\r\n\r\nconst blockChecks = getParam(\"noerrors\");\r\nfunction checkObjectAssignments(obj: any, serializedData: any, implementationInformation?: ImplementationInformation) {\r\n    if (blockChecks) return;\r\n    if(!serializedData) return;\r\n    if (isLocalNetwork() === false) return;\r\n    if (!obj) return;\r\n\r\n    // ignore builtin components that we dont want to check\r\n    if (obj.constructor && obj.constructor[$BuiltInTypeFlag] === true) return;\r\n\r\n    const typeName = obj.constructor?.name as string;\r\n    // test if any object reference is missing serializable\r\n    const ownKeys = Object.getOwnPropertyNames(serializedData);\r\n    for (const key of ownKeys) {\r\n        if (key === \"sourceId\") continue;\r\n        const value = obj[key];\r\n        const serialized = serializedData[key];\r\n        if (implementationInformation?.getDefinedKey(typeName, key) === false) {\r\n            continue;\r\n        }\r\n        if (serialized === undefined || serialized === null) continue;\r\n        if (typeof serialized === \"object\") {\r\n            if (value === undefined || !value.isObject3D) {\r\n                if (typeof serialized[\"node\"] === \"number\" || typeof serialized[\"guid\"] === \"string\") {\r\n                    if (serialized[\"could_not_resolve\"]) {\r\n                        continue;\r\n                    }\r\n                    const hasOtherKeys = value !== undefined && Object.keys(value).length > 1;\r\n                    if (!hasOtherKeys) {\r\n                        showBalloonMessage(`<strong>Missing serialization for object reference!</strong>\\n\\nPlease change to: \\n@serializable(Object3D)\\n${key}? : Object3D;\\n\\nin script ${typeName}.ts\\n<a href=\"https://docs.needle.tools/serializable\" target=\"_blank\">documentation</a>`, LogType.Warn);\r\n                        console.warn(typeName, key, obj[key], obj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            if (serialized.endsWith(\".gltf\") || serialized.endsWith(\".glb\")) {\r\n                showBalloonMessage(`<strong>Missing serialization for object reference!</strong>\\n\\nPlease change to: \\n@serializable(AssetReference)\\n${key}? : AssetReference;\\n\\nin script ${typeName}.ts\\n<a href=\"https://docs.needle.tools/serializable\" target=\"_blank\">documentation</a>`, LogType.Warn);\r\n                console.warn(typeName, key, obj[key], obj);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction implictlyAssignPrimitiveTypes(obj: any, serializedData: any) {\r\n    // implictly assign serialized primitive fields\r\n    for (const key of Object.keys(serializedData)) {\r\n        const data = serializedData[key];\r\n        if (typeof data === \"object\" && data !== null && data !== undefined) {\r\n            const member = obj[key];\r\n            if (!member) {\r\n                if (debug)\r\n                    console.log(key, \"is undefined on\", obj);\r\n                continue;\r\n            }\r\n            for (const key of Object.keys(data)) {\r\n                const targetMember = member[key];\r\n                // implictly assign number, string, boolean if they are undefined\r\n                if (targetMember !== undefined) continue;\r\n                // resolve serialized primitive types\r\n                if (isPrimitiveType(data[key]) && !isPrimitiveType(member)) {\r\n                    // console.log(\"ASSIGN\", key, member, member[key], targetMember, data[key]);\r\n                    member[key] = data[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function isPrimitiveType(val): boolean {\r\n        switch (typeof val) {\r\n            case \"number\":\r\n            case \"string\":\r\n            case \"boolean\":\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n// this is a wrapper for the cached serializer\r\n// we use this to avoid trying to retrieve a serializer for a type multiple times\r\n// e.g. when a type is actually an array of types\r\ndeclare type TypeDeserializeReference = {\r\n    serializer?: ITypeSerializer\r\n}\r\n\r\nfunction deserializeObjectWithType(data: any, typeOrConstructor: Constructor<any>, context: SerializationContext, typeContext?: TypeDeserializeReference, currentValue?: any): any {\r\n\r\n    // e.g. @serializable((data) => { })\r\n    let typeIsFunction = typeof typeOrConstructor === \"function\" && (typeOrConstructor.prototype === undefined);\r\n    let type = typeOrConstructor;\r\n    if (typeIsFunction) {\r\n        // it's possible to assign a function to serializable to dynamically say which type we expect\r\n        // e.g. if you have an array of types and you want the array to be resolved with different class instances\r\n        try {\r\n            const resolvedType = (typeOrConstructor as any)?.call(typeOrConstructor, currentValue);\r\n            type = resolvedType;\r\n            typeIsFunction = false;\r\n            if (type === null || type === undefined) return;\r\n        }\r\n        catch (err) {\r\n            console.error(\"Error in callback\", err, data);\r\n        }\r\n    }\r\n    context.type = type;\r\n    \r\n    // e.g. when @serializable(Texture) and the texture is already resolved via json pointer from gltf\r\n    // then we dont need to do anything else\r\n    if (!typeIsFunction && currentValue instanceof type) return currentValue;\r\n\r\n    // if the value was already resolved via the persistent asset extension dont try to override that again\r\n    if (currentValue && typeof currentValue === \"object\" && isPersistentAsset(currentValue)) {\r\n        // if the persistent asset was already resolved to a concrete instance we dont need to do anything anymore\r\n        if (currentValue[\"__concreteInstance\"]) {\r\n            return currentValue[\"__concreteInstance\"];\r\n        }\r\n        const serializableInstance = currentValue as ISerializable;\r\n        if (!serializableInstance.$serializedTypes && type.prototype.$serializedTypes)\r\n            serializableInstance.$serializedTypes = type.prototype.$serializedTypes;\r\n        if (serializableInstance.$serializedTypes) {\r\n            deserializeObject(serializableInstance, data, context);\r\n        }\r\n\r\n        if (currentValue && type !== undefined) {\r\n            try {\r\n                // we create a concrete instance for a persistent asset here\r\n                // hence we want to have the same instance across all usages of this asset\r\n                const instance = new type();\r\n                if (debugExtension)\r\n                    console.log(\"Create concrete instance for persistent asset\", currentValue, \"instance:\", instance);\r\n                assign(instance, currentValue);\r\n                // save it so if another component references the same persistent asset it will automatically use the concrete instance\r\n                currentValue[\"__concreteInstance\"] = instance;\r\n                currentValue = instance;\r\n            }\r\n            catch (err) {\r\n                console.error(\"Error creating instance or creating values on instance\", err, currentValue, type);\r\n            }\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    // try to resolve the serializer for a type only once\r\n    if (!typeContext) {\r\n        typeContext = {\r\n            serializer: helper.getSerializerForConstructor(type)\r\n        }\r\n    }\r\n\r\n    // if the type is an array resolve each entries recursively\r\n    if (Array.isArray(data)) {\r\n        const newArr: any[] = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            const obj = data[i];\r\n            // debugger;\r\n            const res = deserializeObjectWithType(obj, typeOrConstructor, context, typeContext, obj)\r\n            newArr.push(res);\r\n        }\r\n        // return value;\r\n        return newArr;\r\n    }\r\n\r\n    const ser = typeContext.serializer;\r\n    if (ser) {\r\n        return ser.onDeserialize(data, context);\r\n    }\r\n\r\n    // console.log(type.prototype.get(\"$serializedTypes\"));\r\n\r\n    let instance: any = undefined;\r\n    if (data && (data.isMaterial || data.isTexture || data.isObject3D)) {\r\n        // if the data is already a threejs object we dont want to create a new instance\r\n        // e.g. if we have a serialized class with a serializable(Material)\r\n        instance = data;\r\n    }\r\n    else {\r\n        // happens when exporting e.g. Animation component with only clip assigned (clips array is marked as serialized but it might be undefined if no clips are assigned in e.g. blender)\r\n        if(data === undefined) return undefined;\r\n        // the fallback - this assumes that the type has a constructor that accepts the serialized arguments\r\n        // made originally with THREE.Vector3 in mind but SHOULD actually not be used/called anymore\r\n        instance = new type(...setBuffer(data));\r\n    }\r\n\r\n    // recurse if the deserialized member also implements Iserializable\r\n    const serializableInstance = instance as ISerializable;\r\n    if (serializableInstance.$serializedTypes) {\r\n        deserializeObject(serializableInstance, data, context);\r\n    }\r\n    return instance;\r\n}\r\n\r\nfunction setBuffer(value): Array<any> {\r\n    buffer.length = 0;\r\n    if (typeof value === \"object\" && value !== null && value !== undefined) {\r\n        for (const key of Object.keys(value)) {\r\n            buffer.push(value[key]);\r\n        }\r\n    }\r\n    return buffer;\r\n}\r\n\r\n\r\n/** set to true while assigning properties during instantiation. \r\n * Used for validate decorator to not invoke callbacks on components that are currently in the process of being built */\r\nexport const $isAssigningProperties = Symbol(\"assigned component properties\");\r\n\r\n// const developmentMode = getParam(\"dev\")\r\n\r\n/** Object.assign behaviour but check if property is writeable (e.g. getter only properties are skipped) */\r\nexport function assign(target: any, source: any, info?: ImplementationInformation) {\r\n    if (source === undefined || source === null) return;\r\n    if (target === undefined || target === null) return;\r\n\r\n    let onlyDeclared = false;\r\n    // if (onlyDeclared === true && target.constructor) {\r\n    //     if (target.constructor[ALL_PROPERTIES_MARKER] === true)\r\n    //         onlyDeclared = false;\r\n    // }\r\n\r\n    // if (onlyDeclared !== true && target.constructor) {\r\n    //     if (target.constructor[STRICT_MARKER] === true)\r\n    //         onlyDeclared = true;\r\n    // }\r\n\r\n    // if (onlyDeclared === undefined)\r\n    //     onlyDeclared = true;\r\n\r\n    // if (developmentMode)\r\n    //     onlyDeclared = false;\r\n\r\n    target[$isAssigningProperties] = true;\r\n    const typeName = target.constructor?.name ?? \"unknown\";\r\n\r\n    // register the keys that the actual type has defined\r\n    // this will be used later when checking if deserialization has assigned all properties\r\n    // or if anything could not be deserialized to warn the user\r\n    info?.registerDefinedKeys(typeName, target);\r\n\r\n    for (const key of Object.keys(source)) {\r\n        const desc = getPropertyDescriptor(target, key);\r\n        if (onlyDeclared && desc === undefined) continue;\r\n        if (!desc || desc.writable === true) {\r\n            target[key] = source[key];\r\n        }\r\n        else if (desc?.set !== undefined) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n    delete target[$isAssigningProperties];\r\n}\r\n\r\n// we need to recurse because the property might be defined in a base class\r\nfunction getPropertyDescriptor(obj: any, prop: string): PropertyDescriptor | undefined {\r\n    let desc;\r\n    do {\r\n        desc = Object.getOwnPropertyDescriptor(obj, prop);\r\n    } while (!desc && (obj = Object.getPrototypeOf(obj)));\r\n    return desc;\r\n}", "import { BasicDepthPacking, Box3, BufferAttribute, BufferGeometry, Camera, Intersection, Layers, LineBasicMaterial, LineSegments, Matrix4, Mesh, NormalAnimationBlendMode, NumberKeyframeTrack, Object3D, Quaternion, Ray, Raycaster, Sphere, Vector2, Vector3 } from 'three'\r\nimport { Context } from './engine_setup';\r\nimport { CircularBuffer, getParam } from \"./engine_utils\"\r\nimport { getWorldPosition, getWorldQuaternion, getWorldScale, setWorldPositionXYZ, setWorldQuaternion, setWorldQuaternionXYZW } from \"./engine_three_utils\"\r\nimport {\r\n    IComponent,\r\n    ICollider,\r\n    IRigidbody,\r\n    Collision,\r\n    ContactPoint,\r\n    Vec3,\r\n    IGameObject,\r\n    Vec2,\r\n} from './engine_types';\r\nimport { InstancingUtil } from './engine_instancing';\r\nimport { foreachComponent } from './engine_gameobject';\r\n\r\nimport RAPIER, { ActiveEvents, Collider, ColliderDesc, EventQueue, JointData, RigidBody, RigidBodyType, World } from '@dimforge/rapier3d-compat';\r\nimport { CollisionDetectionMode } from '../engine/engine_physics.types';\r\nimport { Gizmos } from './engine_gizmos';\r\nexport type Rapier = typeof RAPIER;\r\n\r\n\r\nconst debugPhysics = getParam(\"debugphysics\");\r\nconst debugColliderPlacement = getParam(\"debugphysicscolliders\");\r\nconst debugCollisions = getParam(\"debugcollisions\");\r\nconst showColliders = getParam(\"showcolliders\");\r\n\r\n\r\ndeclare type PhysicsBody = {\r\n    translation(): { x: number, y: number, z: number }\r\n    rotation(): { x: number, y: number, z: number, w: number }\r\n}\r\n\r\n/** on physics body and references the needle component */\r\nconst $componentKey = Symbol(\"needle component\");\r\n/** on needle component and references physics body */\r\nconst $bodyKey = Symbol(\"physics body\");\r\nconst $colliderRigidbody = Symbol(\"rigidbody\");\r\n// const $removed = Symbol(\"removed\");\r\n\r\nexport class RaycastOptions {\r\n    ray: Ray | undefined = undefined;\r\n    cam: Camera | undefined | null = undefined;\r\n    screenPoint: Vector2 | undefined = undefined;\r\n    raycaster: Raycaster | undefined = undefined;\r\n    results: Array<Intersection> | undefined = undefined;\r\n    targets: Array<Object3D> | undefined = undefined;\r\n    recursive: boolean | undefined = true;\r\n    minDistance: number | undefined = undefined;\r\n    maxDistance: number | undefined = undefined;\r\n    lineThreshold: number | undefined = undefined;\r\n    layerMask: Layers | number | undefined = undefined;\r\n    ignore: Object3D[] | undefined = undefined;\r\n\r\n    screenPointFromOffset(ox: number, oy: number) {\r\n        if (this.screenPoint === undefined) this.screenPoint = new Vector2();\r\n        this.screenPoint.x = ox / window.innerWidth * 2 - 1;\r\n        this.screenPoint.y = -(oy / window.innerHeight) * 2 + 1;\r\n    }\r\n\r\n    setMask(mask: number) {\r\n        if (!this.layerMask) this.layerMask = new Layers();\r\n        const lm = this.layerMask as Layers;\r\n        if (lm)\r\n            lm.mask = mask;\r\n        else this.layerMask = mask;\r\n    }\r\n\r\n    public static AllLayers = 0xFFFFFFFF;\r\n}\r\n\r\nexport class SphereIntersection implements Intersection {\r\n    distance: number;\r\n    point: Vector3;\r\n    object: Object3D;\r\n    constructor(object: Object3D, distance: number, point: Vector3) {\r\n        this.object = object;\r\n        this.distance = distance;\r\n        this.point = point;\r\n    }\r\n}\r\n\r\ndeclare type PhysicsRaycastResult = {\r\n    point: Vector3,\r\n    normal?: Vector3,\r\n    collider?: ICollider\r\n}\r\n\r\nexport class Physics {\r\n\r\n    // raycasting\r\n\r\n    private readonly raycaster: Raycaster = new Raycaster();\r\n    private readonly defaultRaycastOptions: RaycastOptions = new RaycastOptions();\r\n    private readonly targetBuffer: Array<Object3D> = new Array<Object3D>(1);\r\n    private readonly defaultThresholds = {\r\n        Mesh: {},\r\n        Line: { threshold: 0 },\r\n        LOD: {},\r\n        Points: { threshold: 0 },\r\n        Sprite: {}\r\n    }\r\n\r\n\r\n    private sphereResults: Array<Intersection> = new Array<Intersection>();\r\n    private sphereMask: Layers = new Layers();\r\n    public sphereOverlap(spherePos: Vector3, radius: number, traverseChildsAfterHit: boolean = true): Array<Intersection> {\r\n        this.sphereResults.length = 0;\r\n        if (!this.context.scene) return this.sphereResults;\r\n        const sphere = new Sphere(spherePos, radius);\r\n        const mask = this.sphereMask;\r\n        mask.enableAll();\r\n        mask.disable(2);\r\n        for (const ch of this.context.scene.children) {\r\n            this.onSphereOverlap(ch, sphere, mask, this.sphereResults, traverseChildsAfterHit);\r\n        }\r\n        return this.sphereResults.sort((a, b) => a.distance - b.distance);\r\n    }\r\n    private tempBoundingBox: Box3 = new Box3();\r\n    private onSphereOverlap(obj: Object3D, sp: Sphere, mask: Layers, results: Array<Intersection>, traverseChildsAfterHit: boolean): void {\r\n        if (obj.type === \"Mesh\" && obj.layers.test(mask)) {\r\n            const mesh = obj as Mesh;\r\n            const geo = mesh.geometry;\r\n            if (!geo.boundingBox)\r\n                geo.computeBoundingBox();\r\n            if (geo.boundingBox) {\r\n                if (mesh.matrixWorldNeedsUpdate) mesh.updateMatrixWorld();\r\n                const test = this.tempBoundingBox.copy(geo.boundingBox).applyMatrix4(mesh.matrixWorld);\r\n                if (sp.intersectsBox(test)) {\r\n                    // console.log(obj, obj.layers.test(mask), obj.layers.mask, mask.mask);\r\n                    const wp = getWorldPosition(obj);\r\n                    const dist = wp.distanceTo(sp.center);\r\n                    const int = new SphereIntersection(obj, dist, sp.center.clone());\r\n                    results.push(int);\r\n                    if (!traverseChildsAfterHit) return;\r\n                }\r\n            }\r\n        }\r\n        if (obj.children) {\r\n            for (const ch of obj.children) {\r\n                const len = results.length;\r\n                this.onSphereOverlap(ch, sp, mask, results, traverseChildsAfterHit);\r\n                if (len != results.length && !traverseChildsAfterHit) return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public raycastFromRay(ray: Ray, options: RaycastOptions | null = null): Array<Intersection> {\r\n        const opts = options ?? this.defaultRaycastOptions;\r\n        opts.ray = ray;\r\n        return this.raycast(opts);\r\n    }\r\n\r\n    /** raycast against rendered three objects. This might be very slow depending on your scene complexity.\r\n     * We recommend setting objects to IgnoreRaycast layer (2) when you don't need them to be raycasted.\r\n     * Raycasting SkinnedMeshes is specially expensive.\r\n     */\r\n    public raycast(options: RaycastOptions | null = null): Array<Intersection> {\r\n        if (!options) options = this.defaultRaycastOptions;\r\n        const mp = options.screenPoint ?? this.context.input.mousePositionRC;\r\n        const rc = options.raycaster ?? this.raycaster;\r\n        rc.near = options.minDistance ?? 0;\r\n        rc.far = options.maxDistance ?? Infinity;\r\n        rc.params = this.defaultThresholds;\r\n        if (options.lineThreshold)\r\n            rc.params.Line = { threshold: options.lineThreshold };\r\n        else rc.params.Line = { threshold: 0 };\r\n        if (options.ray) {\r\n            rc.ray.copy(options.ray);\r\n        }\r\n        else {\r\n            const cam = options.cam ?? this.context.mainCamera;\r\n            if (!cam) {\r\n                console.error(\"Can not perform raycast - no main camera found\");\r\n                if (this.defaultRaycastOptions.results) this.defaultRaycastOptions.results.length = 0;\r\n                return this.defaultRaycastOptions.results ?? [];\r\n            }\r\n            rc.setFromCamera(mp, cam);\r\n        }\r\n        let targets = options.targets;\r\n        if (!targets) {\r\n            targets = this.targetBuffer;\r\n            targets[0] = this.context.scene;\r\n        }\r\n        let results = options.results;\r\n        if (!results) {\r\n            if (!this.defaultRaycastOptions.results)\r\n                this.defaultRaycastOptions.results = new Array<Intersection>();\r\n            results = this.defaultRaycastOptions.results;\r\n        }\r\n\r\n        // layermask\r\n        // https://github.com/mrdoob/js/blob/master/src/core/Layers.js\r\n        if (options.layerMask !== undefined) {\r\n            if (options.layerMask instanceof Layers)\r\n                rc.layers.mask = options.layerMask.mask;\r\n            else\r\n                rc.layers.mask = options.layerMask;\r\n        }\r\n        else {\r\n            rc.layers.enableAll();\r\n            rc.layers.disable(2);\r\n        }\r\n\r\n        // console.log(rc)\r\n        // console.log(targets);\r\n\r\n        // shoot\r\n        results.length = 0;\r\n        rc.intersectObjects(targets, options.recursive, results);\r\n\r\n        // TODO: instead of doing this we should temporerly set these objects to layer 2 during raycasting\r\n        const ignorelist = options.ignore;\r\n        if (ignorelist !== undefined && ignorelist.length > 0) {\r\n            results = results.filter(r => !ignorelist.includes(r.object));\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private rapierRay = new RAPIER.Ray({ x: 0, y: 0, z: 0 }, { x: 0, y: 0, z: 1 });\r\n    private raycastVectorsBuffer = new CircularBuffer(() => new Vector3(), 10);\r\n\r\n    /** raycast against colliders */\r\n    public raycastPhysicsFast(origin: Vec2 | Vec3, direction: Vec3 | undefined = undefined, maxDistance: number = Infinity, solid: boolean = true)\r\n        : null | { point: Vector3, collider: ICollider } {\r\n\r\n        const ray = this.getPhysicsRay(this.rapierRay, origin, direction);\r\n        if (!ray) return null;\r\n\r\n        const hit = this.world?.castRay(ray, maxDistance, solid);\r\n        if (hit) {\r\n            const point = ray.pointAt(hit.toi);\r\n            const vec = this.raycastVectorsBuffer.get();\r\n            vec.set(point.x, point.y, point.z);\r\n            return { point: vec, collider: hit.collider[$componentKey] };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private getPhysicsRay(ray: RAPIER.Ray, origin: Vec2 | Vec3, direction: Vec3 | undefined = undefined): RAPIER.Ray | null {\r\n        const cam = this.context.mainCamera;\r\n        // if we get origin in 2d space we need to project it to 3d space\r\n        if (origin[\"z\"] === undefined) {\r\n            if (!cam) {\r\n                console.error(\"Can not perform raycast from 2d point - no main camera found\");\r\n                return null;\r\n            }\r\n            const vec3 = this.raycastVectorsBuffer.get();\r\n            // if the origin is in screen space we need to convert it to raycaster space\r\n            if (origin.x > 1 || origin.y > 1 || origin.y < -1 || origin.x < -1) {\r\n                this.context.input.convertScreenspaceToRaycastSpace(origin);\r\n            }\r\n            vec3.set(origin.x, origin.y, -1);\r\n            vec3.unproject(cam);\r\n            origin = vec3;\r\n        }\r\n\r\n        const o = origin as Vec3;\r\n\r\n        ray.origin.x = o.x;\r\n        ray.origin.y = o.y;\r\n        ray.origin.z = o.z;\r\n        const vec = this.raycastVectorsBuffer.get();\r\n        if (direction)\r\n            vec.set(direction.x, direction.y, direction.z);\r\n        else {\r\n            if (!cam) {\r\n                console.error(\"Can not perform raycast - no camera found\");\r\n                return null;\r\n            }\r\n            vec.set(ray.origin.x, ray.origin.y, ray.origin.z);\r\n            const camPosition = getWorldPosition(cam);\r\n            vec.sub(camPosition);\r\n        }\r\n        // we need to normalize the ray because our input is a max travel length and the direction may be not normalized\r\n        vec.normalize();\r\n        ray.dir.x = vec.x;\r\n        ray.dir.y = vec.y;\r\n        ray.dir.z = vec.z;\r\n        // Gizmos.DrawRay(ray.origin, ray.dir, 0xff0000, Infinity);\r\n        return ray;\r\n    }\r\n\r\n    // physics simulation\r\n\r\n    private _tempPosition: Vector3 = new Vector3();\r\n    private _tempQuaternion: Quaternion = new Quaternion();\r\n    private _tempScale: Vector3 = new Vector3();\r\n    private _tempMatrix: Matrix4 = new Matrix4();\r\n\r\n    private static _didLoadPhysicsEngine: boolean = false;\r\n\r\n    private _isUpdatingPhysicsWorld: boolean = false;\r\n    get isUpdating(): boolean { return this._isUpdatingPhysicsWorld; }\r\n\r\n\r\n    private context: Context;\r\n    private world?: World;\r\n    private _hasCreatedWorld: boolean = false;\r\n    private eventQueue?: EventQueue;\r\n    private collisionHandler?: PhysicsCollisionHandler;\r\n\r\n\r\n    private objects: IComponent[] = [];\r\n    private bodies: PhysicsBody[] = [];\r\n\r\n    private _meshCache: Map<string, Float32Array> = new Map<string, Float32Array>();\r\n\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    async createWorld() {\r\n        if (this._hasCreatedWorld) {\r\n            console.error(\"Invalid call to create physics world: world is already created\");\r\n            return;\r\n        }\r\n        this._hasCreatedWorld = true;\r\n        if (!Physics._didLoadPhysicsEngine) {\r\n            await RAPIER.init().then(() => RAPIER)\r\n            Physics._didLoadPhysicsEngine = true;\r\n        }\r\n        const gravity = { x: 0.0, y: -9.81, z: 0.0 };\r\n        this.world = new World(gravity);\r\n    }\r\n\r\n    clearCaches() {\r\n        this._meshCache.clear();\r\n    }\r\n\r\n    addBoxCollider(collider: ICollider, center: Vector3, size: Vector3) {\r\n        const obj = collider.gameObject;\r\n        const scale = getWorldScale(obj, this._tempPosition).multiply(size);\r\n        scale.multiplyScalar(0.5);\r\n        const desc = ColliderDesc.cuboid(scale.x, scale.y, scale.z);\r\n        this.createCollider(collider, desc, center);\r\n    }\r\n\r\n    addSphereCollider(collider: ICollider, center: Vector3, radius: number) {\r\n        const obj = collider.gameObject;\r\n        const scale = getWorldScale(obj, this._tempPosition).multiplyScalar(radius);\r\n        const desc = ColliderDesc.ball(scale.x);\r\n        this.createCollider(collider, desc, center);\r\n    }\r\n\r\n    addCapsuleCollider(collider: ICollider, center: Vector3, height: number, radius: number) {\r\n        const obj = collider.gameObject;\r\n        const scale = getWorldScale(obj, this._tempPosition);\r\n        if (debugPhysics) console.log(\"capsule scale\", scale, height, radius);\r\n        const desc = ColliderDesc.capsule(height * .5 * scale.y - radius, radius * scale.x);\r\n        this.createCollider(collider, desc, center);\r\n    }\r\n\r\n    addMeshCollider(collider: ICollider, mesh: Mesh, convex: boolean, scale:Vector3) {\r\n        const geo = mesh.geometry;\r\n        if (!geo) {\r\n            if (debugPhysics) console.warn(\"Missing mesh geometry\", mesh.name);\r\n            return;\r\n        }\r\n\r\n        let positions = geo.getAttribute(\"position\").array as Float32Array;\r\n        const indices = geo.index?.array as Uint32Array;\r\n\r\n        // console.log(geo.center())\r\n\r\n        // scaling seems not supported yet https://github.com/dimforge/rapier/issues/243\r\n        if (Math.abs(scale.x - 1) > 0.0001 || Math.abs(scale.y - 1) > 0.0001 || Math.abs(scale.z - 1) > 0.0001) {\r\n            const key = geo.uuid + \"_\" + scale.x + \"_\" + scale.y + \"_\" + scale.z + \"_\" + convex;\r\n            if (this._meshCache.has(key)) {\r\n                positions = this._meshCache.get(key)!;\r\n            }\r\n            else {\r\n                console.warn(\"Your model is using scaled mesh colliders which is not optimal for performance\", mesh.name, Object.assign({}, scale), mesh);\r\n                // showBalloonWarning(\"Your model is using scaled mesh colliders which is not optimal for performance: \" + mesh.name + \", consider using unscaled objects\");\r\n                const scaledPositions = new Float32Array(positions.length);\r\n                for (let i = 0; i < positions.length; i += 3) {\r\n                    scaledPositions[i] = positions[i] * scale.x;\r\n                    scaledPositions[i + 1] = positions[i + 1] * scale.y;\r\n                    scaledPositions[i + 2] = positions[i + 2] * scale.z;\r\n                }\r\n                positions = scaledPositions;\r\n                this._meshCache.set(key, scaledPositions);\r\n            }\r\n        }\r\n\r\n        const desc = convex ? ColliderDesc.convexMesh(positions) : ColliderDesc.trimesh(positions, indices);\r\n        if (desc) {\r\n            this.createCollider(collider, desc);\r\n            // col.setTranslationWrtParent(new Vector3(0,2,0));\r\n\r\n        }\r\n    }\r\n\r\n    private createCollider(collider: ICollider, desc: ColliderDesc, center?: Vector3) {\r\n        if (!this.world) throw new Error(\"Physics world not initialized\");\r\n        const matrix = this._tempMatrix;\r\n        const {\r\n            rigidBody,\r\n            useExplicitMassProperties\r\n        } = this.getRigidbody(collider, this._tempMatrix);\r\n\r\n        matrix.decompose(this._tempPosition, this._tempQuaternion, this._tempScale);\r\n        getWorldScale(collider.gameObject, this._tempScale);\r\n        if (center) {\r\n            center.multiply( this._tempScale);\r\n            this._tempPosition.x -= center.x;\r\n            this._tempPosition.y += center.y;\r\n            this._tempPosition.z += center.z;\r\n        }\r\n        desc.setTranslation(this._tempPosition.x, this._tempPosition.y, this._tempPosition.z);\r\n        desc.setRotation(this._tempQuaternion);\r\n        desc.setSensor(collider.isTrigger);\r\n\r\n        // if we want to use explicit mass properties, we need to set the collider density to 0\r\n        // otherwise rapier will compute the mass properties based on the collider shape and density\r\n        // https://rapier.rs/docs/user_guides/javascript/rigid_bodies#mass-properties\r\n        if (useExplicitMassProperties) {\r\n            // desc.setDensity(0);\r\n        }\r\n\r\n        const col = this.world.createCollider(desc, rigidBody);\r\n        col[$componentKey] = collider;\r\n        collider[$bodyKey] = col;\r\n        col.setActiveEvents(ActiveEvents.COLLISION_EVENTS);\r\n        this.objects.push(collider);\r\n        this.bodies.push(col);\r\n        return col;\r\n    }\r\n\r\n    private getRigidbody(collider: ICollider, _matrix: Matrix4): { rigidBody: RigidBody, useExplicitMassProperties: boolean } {\r\n\r\n        if (!this.world) throw new Error(\"Physics world not initialized\");\r\n        let rigidBody: RigidBody | null = null;\r\n        let useExplicitMassProperties = false;\r\n\r\n        if (collider.attachedRigidbody) {\r\n\r\n            const rb = collider.attachedRigidbody;\r\n            rigidBody = rb[$bodyKey];\r\n            useExplicitMassProperties = true;\r\n            if (!rigidBody) {\r\n                const kinematic = rb.isKinematic && !debugColliderPlacement;\r\n                if (debugPhysics)\r\n                    console.log(\"Create rigidbody\", kinematic);\r\n                const rigidBodyDesc = kinematic ? RAPIER.RigidBodyDesc.kinematicPositionBased() : RAPIER.RigidBodyDesc.dynamic();\r\n                const pos = getWorldPosition(collider.attachedRigidbody.gameObject);\r\n                rigidBodyDesc.setTranslation(pos.x, pos.y, pos.z);\r\n                rigidBodyDesc.setRotation(getWorldQuaternion(collider.attachedRigidbody.gameObject));\r\n                rigidBody = this.world.createRigidBody(rigidBodyDesc);\r\n                this.bodies.push(rigidBody);\r\n                this.objects.push(rb);\r\n            }\r\n            rigidBody[$componentKey] = rb;\r\n            rb[$bodyKey] = rigidBody;\r\n            this.internalUpdateProperties(rb, rigidBody);\r\n            this.getRigidbodyRelativeMatrix(collider.gameObject, rb.gameObject, _matrix);\r\n\r\n        }\r\n        else {\r\n\r\n            const rigidBodyDesc = RAPIER.RigidBodyDesc.kinematicPositionBased();\r\n            const pos = getWorldPosition(collider.gameObject);\r\n            rigidBodyDesc.setTranslation(pos.x, pos.y, pos.z);\r\n            rigidBodyDesc.setRotation(getWorldQuaternion(collider.gameObject));\r\n            rigidBody = this.world.createRigidBody(rigidBodyDesc);\r\n            _matrix.identity();\r\n            rigidBody[$componentKey] = null;\r\n\r\n        }\r\n\r\n        collider[$colliderRigidbody] = rigidBody;\r\n\r\n        return { rigidBody: rigidBody, useExplicitMassProperties: useExplicitMassProperties };\r\n    }\r\n\r\n    removeBody(obj: IComponent) {\r\n        const body = obj[$bodyKey];\r\n        obj[$bodyKey] = null;\r\n        if (body && this.world) {\r\n            const index = this.objects.findIndex(o => o === obj);\r\n            if (index >= 0) {\r\n                const body = this.bodies[index];\r\n                this.bodies.splice(index, 1);\r\n                this.objects.splice(index, 1);\r\n\r\n                if (body instanceof Collider) {\r\n                    const collider = body as Collider;\r\n                    this.world?.removeCollider(collider, true);\r\n\r\n                    // remove the rigidbody if it doesnt have colliders anymore\r\n                    const rb = collider.parent();\r\n                    if (rb && rb.numColliders() <= 0) {\r\n                        this.world?.removeRigidBody(rb);\r\n                    }\r\n                }\r\n                else if (body instanceof RigidBody) {\r\n                    // TODO: running this code below causes a crash in rapier\r\n                    // const rb = body as RigidBody;\r\n                    // console.log(\"colliders\", rb.numColliders())\r\n                    // for (let i = 0; i < rb.numColliders(); i++) {\r\n                    //     const col = rb.collider(i);\r\n                    //     this.world?.removeCollider(col, true);\r\n                    // }\r\n                    // console.log(\"colliders\", rb.numColliders(), rb)\r\n                    // console.log(rb.handle, rb.userData);\r\n                    // if (rb.userData === undefined)\r\n                    //     this.world?.removeRigidBody(rb);\r\n                }\r\n\r\n                // check if we need to remove the rigidbody too\r\n                // const col = obj as ICollider;\r\n                // if (col.isCollider && col.attachedRigidbody) {\r\n                //     const rb = col.attachedRigidbody[$bodyKey] as RigidBody;\r\n                //     if (rb && rb.numColliders() <= 0) {\r\n                //         // this.world?.removeRigidBody(rb);\r\n                //     }\r\n                // }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateBody(comp: ICollider | IRigidbody, translation: boolean, rotation: boolean) {\r\n        if (comp.destroyed || !comp.gameObject) return;\r\n        if (!translation && !rotation) return;\r\n\r\n        if ((comp as ICollider).isCollider === true) {\r\n            // const collider = comp as ICollider;\r\n            console.warn(\"TODO: implement updating collider position\");\r\n        }\r\n        else {\r\n            const rigidbody = comp as IRigidbody;\r\n            const body = rigidbody[$bodyKey];\r\n            if (body) {\r\n                this.syncPhysicsBody(rigidbody.gameObject, body, translation, rotation);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateProperties(rigidbody: IRigidbody) {\r\n        const physicsBody = rigidbody[$bodyKey]\r\n        if (physicsBody) {\r\n            this.internalUpdateProperties(rigidbody, physicsBody);\r\n        }\r\n    }\r\n\r\n    internal_getRigidbody(rb: IRigidbody): RigidBody | null {\r\n        return rb[$bodyKey] as RigidBody;\r\n    }\r\n\r\n    private internalUpdateProperties(rb: IRigidbody, rigidbody: RigidBody) {\r\n        // continuous collision detection \r\n        // https://rapier.rs/docs/user_guides/javascript/rigid_bodies#continuous-collision-detection\r\n        rigidbody.enableCcd(rb.collisionDetectionMode !== CollisionDetectionMode.Discrete);\r\n        rigidbody.setLinearDamping(rb.drag);\r\n        rigidbody.setAngularDamping(rb.angularDrag);\r\n        rigidbody.setGravityScale(rb.useGravity ? 1 : 0, true);\r\n\r\n        // https://rapier.rs/docs/user_guides/javascript/rigid_bodies#mass-properties\r\n        // rigidbody.setAdditionalMass(rb.mass, true);\r\n        // for (let i = 0; i < rigidbody.numColliders(); i++) {\r\n        //     const collider = rigidbody.collider(i);\r\n        //     if (collider) {\r\n        //         collider.setMass(rb.mass);\r\n        //         // const density = rb.mass / collider.shape.computeMassProperties().mass;\r\n        //     }\r\n        // }\r\n\r\n        // lock rotations\r\n        rigidbody.setEnabledRotations(!rb.lockRotationX, !rb.lockRotationY, !rb.lockRotationZ, true);\r\n        rigidbody.setEnabledTranslations(!rb.lockPositionX, !rb.lockPositionY, !rb.lockPositionZ, true);\r\n\r\n        if (rb.isKinematic) {\r\n            rigidbody.setBodyType(RAPIER.RigidBodyType.KinematicPositionBased);\r\n        }\r\n        else {\r\n            rigidbody.setBodyType(RAPIER.RigidBodyType.Dynamic);\r\n        }\r\n    }\r\n\r\n    // private _lastStepTime: number | undefined = 0;\r\n    private lines?: LineSegments;\r\n\r\n    public step(_deltaTime?: number) {\r\n        if (!this.world) return;\r\n        this._isUpdatingPhysicsWorld = true;\r\n        if (!this.eventQueue) {\r\n            this.eventQueue = new EventQueue(false);\r\n        }\r\n        this.world.step(this.eventQueue);\r\n        this._isUpdatingPhysicsWorld = false;\r\n        this.updateDebugRendering(this.world);\r\n    }\r\n\r\n    private updateDebugRendering(world: World) {\r\n        if (debugPhysics || debugColliderPlacement || showColliders) {\r\n            if (!this.lines) {\r\n                const material = new LineBasicMaterial({\r\n                    color: 0x227700,\r\n                    // vertexColors: THREE.VertexColors\r\n                });\r\n                const geometry = new BufferGeometry();\r\n                this.lines = new LineSegments(geometry, material);\r\n                this.context.scene.add(this.lines);\r\n            }\r\n            const buffers = world.debugRender();\r\n            this.lines.geometry.setAttribute('position', new BufferAttribute(buffers.vertices, 3));\r\n            this.lines.geometry.setAttribute('color', new BufferAttribute(buffers.colors, 4));\r\n        }\r\n    }\r\n\r\n    public postStep() {\r\n        if (!this.world) return;\r\n        this._isUpdatingPhysicsWorld = true;\r\n        this.syncObjects();\r\n        this._isUpdatingPhysicsWorld = false;\r\n\r\n        if (this.eventQueue && !this.collisionHandler) {\r\n            this.collisionHandler = new PhysicsCollisionHandler(this.world, this.eventQueue);\r\n        }\r\n        if (this.collisionHandler) {\r\n            this.collisionHandler.handleCollisionEvents();\r\n            this.collisionHandler.update();\r\n        }\r\n    }\r\n\r\n    /** sync rendered objects with physics world (except for colliders without rigidbody) */\r\n    private syncObjects() {\r\n        if (debugColliderPlacement) return;\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            const obj = this.objects[i];\r\n            const body = this.bodies[i] as Collider;\r\n\r\n            // if the collider is not attached to a rigidbody\r\n            // it means that its kinematic so we need to update its position\r\n            const col = (obj as ICollider);\r\n            if (col?.isCollider === true && !col.attachedRigidbody) {\r\n                const rigidbody = body.parent();\r\n                if (rigidbody)\r\n                    this.syncPhysicsBody(obj.gameObject, rigidbody, true, true);\r\n                continue;\r\n            }\r\n\r\n\r\n            // sync\r\n            const pos = body.translation();\r\n            const rot = body.rotation();\r\n            // make sure to keep the collider offset\r\n            const center = obj[\"center\"] as Vector3;\r\n            if (center && center.isVector3) {\r\n                this._tempQuaternion.set(rot.x, rot.y, rot.z, rot.w);\r\n                const offset = this._tempPosition.copy(center).applyQuaternion(this._tempQuaternion);\r\n                const scale = getWorldScale(obj.gameObject);\r\n                offset.multiply(scale);\r\n                pos.x -= offset.x;\r\n                pos.y -= offset.y;\r\n                pos.z -= offset.z;\r\n            }\r\n            setWorldPositionXYZ(obj.gameObject, pos.x, pos.y, pos.z);\r\n            setWorldQuaternionXYZW(obj.gameObject, rot.x, rot.y, rot.z, rot.w);\r\n        }\r\n    }\r\n\r\n    private syncPhysicsBody(obj: Object3D, body: RigidBody, translation: boolean, rotation: boolean) {\r\n\r\n        // const bodyType = body.bodyType();\r\n        // const previous = physicsBody.translation();\r\n        // const vel = physicsBody.linvel();\r\n\r\n        const worldPosition = getWorldPosition(obj, this._tempPosition);\r\n        const worldQuaternion = getWorldQuaternion(obj, this._tempQuaternion);\r\n        const type = body.bodyType();\r\n        switch (type) {\r\n            case RigidBodyType.Fixed:\r\n            case RigidBodyType.KinematicPositionBased:\r\n            case RigidBodyType.KinematicVelocityBased:\r\n                if (translation)\r\n                    body.setNextKinematicTranslation(worldPosition);\r\n                if (rotation)\r\n                    body.setNextKinematicRotation(worldQuaternion);\r\n                break;\r\n            default:\r\n                if (translation)\r\n                    body.setTranslation(worldPosition, false);\r\n                if (rotation)\r\n                    body.setRotation(worldQuaternion, false);\r\n                break;\r\n\r\n        }\r\n        body.wakeUp();\r\n        // physicsBody.setBodyType(RAPIER.RigidBodyType.Fixed);\r\n        // physicsBody.setLinvel(vel, false);\r\n\r\n        // update velocity\r\n        // const pos = physicsBody.translation();\r\n        // pos.x -= previous.x;\r\n        // pos.y -= previous.y;\r\n        // pos.z -= previous.z;\r\n        // // threhold\r\n        // const t = 1;\r\n        // const canUpdateVelocity = Math.abs(pos.x) < t && Math.abs(pos.y) < t && Math.abs(pos.z) < t;\r\n        // if (canUpdateVelocity) {\r\n        //     const damping = 1 + this.context.time.deltaTime;\r\n        //     vel.x *= damping;\r\n        //     vel.y *= damping;\r\n        //     vel.z *= damping;\r\n        //     vel.x += pos.x;\r\n        //     vel.y += pos.y;\r\n        //     vel.z += pos.z;\r\n        //     console.log(vel);\r\n        //     physicsBody.setLinvel(vel, true);\r\n        // }\r\n        // else if(debugPhysics) console.warn(\"Movement exceeded threshold, not updating velocity\", pos);\r\n\r\n        // body.setBodyType(bodyType);\r\n    }\r\n\r\n    private static _matricesBuffer: Matrix4[] = [];\r\n    private getRigidbodyRelativeMatrix(comp: Object3D, rigidbody: Object3D, mat: Matrix4, matrices?: Matrix4[]): Matrix4 {\r\n        // collect all matrices to the rigidbody and then build the rigidbody relative matrix\r\n        if (matrices === undefined) {\r\n            matrices = Physics._matricesBuffer;\r\n            matrices.length = 0;\r\n        }\r\n        if (comp === rigidbody) {\r\n            const scale = getWorldScale(comp, this._tempPosition);\r\n            mat.makeScale(scale.x, scale.y, scale.z);\r\n            for (let i = matrices.length - 1; i >= 0; i--) {\r\n                mat.multiply(matrices[i]);\r\n            }\r\n            return mat;\r\n        }\r\n        matrices.push(comp.matrix);\r\n        if (comp.parent) {\r\n            this.getRigidbodyRelativeMatrix(comp.parent, rigidbody, mat, matrices);\r\n        }\r\n        return mat;\r\n    }\r\n\r\n    private static centerConnectionPos = { x: 0, y: 0, z: 0 };\r\n    private static centerConnectionRot = { x: 0, y: 0, z: 0, w: 1 };\r\n\r\n\r\n\r\n    addFixedJoint(body1: IRigidbody, body2: IRigidbody) {\r\n        if (!this.world) {\r\n            console.error(\"Physics world not initialized\");\r\n            return;\r\n        }\r\n        const b1 = body1[$bodyKey] as RigidBody;\r\n        const b2 = body2[$bodyKey] as RigidBody;\r\n\r\n        this.calculateJointRelativeMatrices(body1.gameObject, body2.gameObject, this._tempMatrix);\r\n        this._tempMatrix.decompose(this._tempPosition, this._tempQuaternion, this._tempScale);\r\n\r\n        const params = JointData.fixed(\r\n            Physics.centerConnectionPos, Physics.centerConnectionRot,\r\n            this._tempPosition, this._tempQuaternion,\r\n        );\r\n        const joint = this.world.createImpulseJoint(params, b1, b2, true);\r\n        if (debugPhysics)\r\n            console.log(\"ADD FIXED JOINT\", joint)\r\n    }\r\n\r\n\r\n\r\n    addHingeJoint(body1: IRigidbody, body2: IRigidbody, anchor: { x: number, y: number, z: number }, axis: { x: number, y: number, z: number }) {\r\n        if (!this.world) {\r\n            console.error(\"Physics world not initialized\");\r\n            return;\r\n        }\r\n        const b1 = body1[$bodyKey] as RigidBody;\r\n        const b2 = body2[$bodyKey] as RigidBody;\r\n\r\n        this.calculateJointRelativeMatrices(body1.gameObject, body2.gameObject, this._tempMatrix);\r\n        this._tempMatrix.decompose(this._tempPosition, this._tempQuaternion, this._tempScale);\r\n\r\n        let params = RAPIER.JointData.revolute(anchor, this._tempPosition, axis);\r\n        let joint = this.world.createImpulseJoint(params, b1, b2, true);\r\n        if (debugPhysics)\r\n            console.log(\"ADD HINGE JOINT\", joint)\r\n    }\r\n\r\n\r\n    private calculateJointRelativeMatrices(body1: IGameObject, body2: IGameObject, mat: Matrix4) {\r\n        body1.updateWorldMatrix(true, false);\r\n        body2.updateWorldMatrix(true, false);\r\n        const world1 = body1.matrixWorld;\r\n        const world2 = body2.matrixWorld;\r\n        // set scale to 1\r\n        world1.elements[0] = 1;\r\n        world1.elements[5] = 1;\r\n        world1.elements[10] = 1;\r\n        world2.elements[0] = 1;\r\n        world2.elements[5] = 1;\r\n        world2.elements[10] = 1;\r\n        mat.copy(world2).premultiply(world1.invert()).invert();\r\n    }\r\n}\r\n\r\n\r\n\r\n/** responsible of processing collision events for the component system */\r\nclass PhysicsCollisionHandler {\r\n\r\n    readonly world: World;\r\n    readonly eventQueue: EventQueue;\r\n\r\n    constructor(world: World, eventQueue: EventQueue) {\r\n        this.world = world;\r\n        this.eventQueue = eventQueue;\r\n    }\r\n\r\n    private activeCollisions: Array<{ collider: ICollider, component: IComponent, collision: Collision }> = [];\r\n    private activeCollisionsStay: Array<{ collider: ICollider, component: IComponent, collision: Collision }> = [];\r\n    private activeTriggers: Array<{ collider: ICollider, component: IComponent, otherCollider: ICollider }> = [];\r\n\r\n    handleCollisionEvents() {\r\n        if (!this.eventQueue) return;\r\n        if (!this.world) return;\r\n        this.eventQueue.drainCollisionEvents((handle1, handle2, started) => {\r\n            const col1 = this.world!.getCollider(handle1);\r\n            const col2 = this.world!.getCollider(handle2);\r\n            const colliderComponent1 = col1[$componentKey];\r\n            const colliderComponent2 = col2[$componentKey];\r\n            if (debugCollisions)\r\n                console.log(\"EVT\", colliderComponent1.name, colliderComponent2.name, started, col1, col2);\r\n            if (colliderComponent1 && colliderComponent2) {\r\n                if (started) {\r\n                    this.onCollisionStarted(colliderComponent1, col1, colliderComponent2, col2);\r\n                    this.onCollisionStarted(colliderComponent2, col2, colliderComponent1, col1);\r\n                }\r\n                else {\r\n                    this.onCollisionEnded(colliderComponent1, colliderComponent2);\r\n                    this.onCollisionEnded(colliderComponent2, colliderComponent1);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.onHandleCollisionStay();\r\n    }\r\n\r\n    private onCollisionStarted(self: ICollider, selfBody: Collider, other: ICollider, otherBody: Collider) {\r\n        let collision: Collision | null = null;\r\n\r\n        // if one is a trigger we dont get collisions but want to raise the trigger events\r\n        if (self.isTrigger || other.isTrigger) {\r\n            foreachComponent(self.gameObject, (c: IComponent) => {\r\n                if (c.onTriggerEnter) {\r\n                    c.onTriggerEnter(other);\r\n                }\r\n                this.activeTriggers.push({ collider: self, component: c, otherCollider: other });\r\n            });\r\n        }\r\n        else {\r\n            const object = self.gameObject;\r\n            // TODO: we dont respect the flip value here!\r\n            this.world.contactPair(selfBody, otherBody, (manifold, _flipped) => {\r\n                foreachComponent(object, (c: IComponent) => {\r\n                    const hasDeclaredEventMethod = c.onCollisionEnter || c.onCollisionStay || c.onCollisionExit;\r\n                    if (hasDeclaredEventMethod || debugCollisions) {\r\n                        if (!collision) {\r\n                            const contacts: Array<ContactPoint> = [];\r\n                            const normal = manifold.normal();\r\n                            for (let i = 0; i < manifold.numSolverContacts(); i++) {\r\n                                // solver points are in world space\r\n                                // https://rapier.rs/docs/user_guides/javascript/advanced_collision_detection_js#the-contact-graph\r\n                                const pt = manifold.solverContactPoint(i);\r\n                                const impulse = manifold.contactImpulse(i);\r\n                                if (pt) {\r\n                                    const dist = manifold.contactDist(i);\r\n                                    const friction = manifold.solverContactFriction(i);\r\n                                    const contact = new ContactPoint(pt, dist, normal, impulse, friction);\r\n                                    contacts.push(contact);\r\n                                    if (debugCollisions) {\r\n                                        Gizmos.DrawDirection(pt, normal, 0xff0000, 3, true);\r\n                                    }\r\n                                }\r\n                            }\r\n                            collision = new Collision(object, other, contacts);\r\n                        }\r\n\r\n                        // we only need to keep track if any event exists\r\n                        if (hasDeclaredEventMethod) {\r\n                            const info = { collider: self, component: c, collision };\r\n\r\n                            this.activeCollisions.push(info);\r\n                            if (c.onCollisionStay) {\r\n                                this.activeCollisionsStay.push(info);\r\n                            }\r\n\r\n                            c.onCollisionEnter?.call(c, collision);\r\n                        }\r\n\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private onHandleCollisionStay() {\r\n        for (const active of this.activeCollisionsStay) {\r\n            const c = active.component;\r\n            if (c.activeAndEnabled && c.onCollisionStay) {\r\n                const arg = active.collision;\r\n                c.onCollisionStay(arg);\r\n            }\r\n        }\r\n        for (const active of this.activeTriggers) {\r\n            const c = active.component;\r\n            if (c.activeAndEnabled && c.onTriggerStay) {\r\n                const arg = active.otherCollider;\r\n                c.onTriggerStay(arg);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onCollisionEnded(self: ICollider, other: ICollider) {\r\n        for (let i = 0; i < this.activeCollisions.length; i++) {\r\n            const active = this.activeCollisions[i];\r\n            const collider = active.collider;\r\n            if (collider === self && active.collision.collider === other) {\r\n                const c = active.component;\r\n                this.activeCollisions.splice(i, 1);\r\n                i--;\r\n                if (c.activeAndEnabled && c.onCollisionExit) {\r\n                    const collision = active.collision;\r\n                    c.onCollisionExit(collision);\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < this.activeCollisionsStay.length; i++) {\r\n            const active = this.activeCollisionsStay[i];\r\n            const collider = active.collider;\r\n            if (collider === self && active.collision.collider === other) {\r\n                const c = active.component;\r\n                this.activeCollisionsStay.splice(i, 1);\r\n                i--;\r\n                if (c.activeAndEnabled && c.onCollisionExit) {\r\n                    const collision = active.collision;\r\n                    c.onCollisionExit(collision);\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < this.activeTriggers.length; i++) {\r\n            const active = this.activeTriggers[i];\r\n            const collider = active.collider;\r\n            if (collider === self && active.otherCollider === other) {\r\n                const c = active.component;\r\n                this.activeTriggers.splice(i, 1);\r\n                i--;\r\n                if (c.activeAndEnabled && c.onTriggerExit) {\r\n                    const collision = active.otherCollider;\r\n                    c.onTriggerExit(collision);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import * as THREE from \"three\";\r\nimport { Mathf } from \"./engine_math\"\r\nimport { WebGLRenderTarget, WebGLRenderer, Vector3, Quaternion, Uniform, Texture, Material, ShaderMaterial, CanvasTexture, AnimationAction } from \"three\";\r\nimport { CircularBuffer } from \"./engine_utils\";\r\n\r\n\r\nexport function slerp(vec: Vector3, end: Vector3, t: number) {\r\n    const len1 = vec.length();\r\n    const len2 = end.length();\r\n    const targetLen = Mathf.lerp(len1, len2, t);\r\n    return vec.lerp(end, t).normalize().multiplyScalar(targetLen);\r\n}\r\n\r\nconst flipYQuat: Quaternion = new Quaternion().setFromAxisAngle(new Vector3(0, 1, 0), Math.PI);\r\nexport function lookAtInverse(obj: THREE.Object3D, target: Vector3) {\r\n\r\n    obj.lookAt(target);\r\n    obj.quaternion.multiply(flipYQuat);\r\n}\r\n\r\n\r\nconst _worldPositions = new CircularBuffer(() => new THREE.Vector3(), 100);\r\n\r\nexport function getWorldPosition(obj: THREE.Object3D, vec: THREE.Vector3 | null = null, updateParents: boolean = true): THREE.Vector3 {\r\n    const wp = vec ?? _worldPositions.get();\r\n    if (!obj) return wp.set(0, 0, 0);\r\n    if (!obj.parent) return wp.copy(obj.position);\r\n    if (updateParents)\r\n        obj.updateWorldMatrix(true, false);\r\n    if (obj.matrixWorldNeedsUpdate)\r\n        obj.updateMatrixWorld();\r\n    wp.setFromMatrixPosition(obj.matrixWorld);\r\n    return wp;\r\n}\r\n\r\nexport function setWorldPosition(obj: THREE.Object3D, val: THREE.Vector3) {\r\n    if (!obj) return;\r\n    const wp = _worldPositions.get();\r\n    if (val !== wp)\r\n        wp.copy(val);\r\n    const obj2 = obj?.parent ?? obj;\r\n    obj2.worldToLocal(wp);\r\n    obj.position.set(wp.x, wp.y, wp.z);\r\n}\r\n\r\nexport function setWorldPositionXYZ(obj: THREE.Object3D, x: number, y: number, z: number) {\r\n    const wp = _worldPositions.get();\r\n    wp.set(x, y, z);\r\n    setWorldPosition(obj, wp);\r\n}\r\n\r\n\r\nconst _worldQuaternionBuffer: THREE.Quaternion = new THREE.Quaternion();\r\nconst _worldQuaternion: THREE.Quaternion = new THREE.Quaternion();\r\nconst _tempQuaternionBuffer2: THREE.Quaternion = new THREE.Quaternion();\r\n\r\nexport function getWorldQuaternion(obj: THREE.Object3D, target: THREE.Quaternion | null = null): THREE.Quaternion {\r\n    if (!obj) return _worldQuaternion.set(0, 0, 0, 1);\r\n    const quat = target ?? _worldQuaternion;\r\n    if (!obj.parent) return quat.copy(obj.quaternion);\r\n    obj.getWorldQuaternion(quat);\r\n    return quat;\r\n}\r\nexport function setWorldQuaternion(obj: THREE.Object3D, val: THREE.Quaternion) {\r\n    if (!obj) return;\r\n    if (val !== _worldQuaternionBuffer)\r\n        _worldQuaternionBuffer.copy(val);\r\n    const tempVec = _worldQuaternionBuffer;\r\n    const parent = obj?.parent;\r\n    parent?.getWorldQuaternion(_tempQuaternionBuffer2);\r\n    _tempQuaternionBuffer2.invert();\r\n    const q = _tempQuaternionBuffer2.multiply(tempVec);\r\n    // console.log(tempVec);\r\n    obj.quaternion.set(q.x, q.y, q.z, q.w);\r\n    // console.error(\"quaternion world to local is not yet implemented\");\r\n}\r\nexport function setWorldQuaternionXYZW(obj: THREE.Object3D, x: number, y: number, z: number, w: number) {\r\n    _worldQuaternionBuffer.set(x, y, z, w);\r\n    setWorldQuaternion(obj, _worldQuaternionBuffer);\r\n}\r\n\r\nconst _worldScale: THREE.Vector3 = new THREE.Vector3();\r\nconst _worldScale2: THREE.Vector3 = new THREE.Vector3();\r\n\r\nexport function getWorldScale(obj: THREE.Object3D, vec: THREE.Vector3 | null = null): THREE.Vector3 {\r\n    if (!obj) return _worldScale.set(0, 0, 0);\r\n    if (!obj.parent) return _worldScale.copy(obj.scale);\r\n    obj.getWorldScale(vec ?? _worldScale);\r\n    return vec ?? _worldScale;\r\n}\r\n\r\nexport function setWorldScale(obj: THREE.Object3D, vec: THREE.Vector3) {\r\n    if (!obj) return;\r\n    if (!obj.parent) {\r\n        obj.scale.copy(vec);\r\n        return;\r\n    }\r\n    const tempVec = _worldScale2;\r\n    const obj2 = obj.parent;\r\n    obj2.getWorldScale(tempVec);\r\n    tempVec.divide(vec);\r\n    obj.scale.copy(tempVec);\r\n}\r\n\r\nconst _forward = new THREE.Vector3();\r\nconst _forwardQuat = new THREE.Quaternion();\r\nexport function forward(obj: THREE.Object3D): THREE.Vector3 {\r\n    getWorldQuaternion(obj, _forwardQuat);\r\n    return _forward.set(0, 0, 1).applyQuaternion(_forwardQuat);\r\n}\r\n\r\n\r\n\r\nconst _worldEulerBuffer: THREE.Euler = new THREE.Euler();\r\nconst _worldEuler: THREE.Euler = new THREE.Euler();\r\nconst _worldRotation: THREE.Vector3 = new THREE.Vector3();\r\n\r\n\r\n\r\n// world euler (in radians)\r\nexport function getWorldEuler(obj: THREE.Object3D): THREE.Euler {\r\n    obj.getWorldQuaternion(_worldQuaternion);\r\n    _worldEuler.setFromQuaternion(_worldQuaternion);\r\n    return _worldEuler;\r\n}\r\n\r\n// world euler (in radians)\r\nexport function setWorldEuler(obj: THREE.Object3D, val: THREE.Euler) {\r\n    setWorldQuaternion(obj, _worldQuaternion.setFromEuler(val));;\r\n}\r\n\r\n// returns rotation in degrees\r\nexport function getWorldRotation(obj: THREE.Object3D): THREE.Vector3 {\r\n    const rot = getWorldEuler(obj);\r\n    const wr = _worldRotation;\r\n    wr.set(rot.x, rot.y, rot.z);\r\n    wr.x = Mathf.toDegrees(wr.x);\r\n    wr.y = Mathf.toDegrees(wr.y);\r\n    wr.z = Mathf.toDegrees(wr.z);\r\n    return wr;\r\n}\r\n\r\nexport function setWorldRotation(obj: THREE.Object3D, val: THREE.Vector3) {\r\n    setWorldRotationXYZ(obj, val.x, val.y, val.z, true);\r\n}\r\n\r\nexport function setWorldRotationXYZ(obj: THREE.Object3D, x: number, y: number, z: number, degrees: boolean = true) {\r\n    if (degrees) {\r\n        x = Mathf.toRadians(x);\r\n        y = Mathf.toRadians(y);\r\n        z = Mathf.toRadians(z);\r\n    }\r\n    _worldEulerBuffer.set(x, y, z);\r\n    _worldQuaternionBuffer.setFromEuler(_worldEulerBuffer);\r\n    setWorldQuaternion(obj, _worldQuaternionBuffer);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// from https://github.com/mrdoob/three.js/pull/10995#issuecomment-287614722\r\nexport function logHierarchy(root: THREE.Object3D | null | undefined, collapsible: boolean = true) {\r\n    if (!root) return;\r\n    if (collapsible) {\r\n        (function printGraph(obj: THREE.Object3D) {\r\n            console.groupCollapsed((obj.name ? obj.name : '(no name : ' + obj.type + ')') + ' %o', obj);\r\n            obj.children.forEach(printGraph);\r\n            console.groupEnd();\r\n        }(root));\r\n\r\n    } else {\r\n        root.traverse(function (obj: THREE.Object3D) {\r\n            var s = '|___';\r\n            var obj2 = obj;\r\n            while (obj2.parent !== null) {\r\n                s = '\\t' + s;\r\n                obj2 = obj2.parent;\r\n            }\r\n            console.log(s + obj.name + ' <' + obj.type + '>');\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function isAnimationAction(obj:object){\r\n    if(obj){\r\n        // this doesnt work :(\r\n        // return obj instanceof AnimationAction;\r\n        // instead we do this:\r\n        const act = obj as AnimationAction;\r\n        return act.blendMode !== undefined && act.clampWhenFinished !== undefined && act.enabled !== undefined && act.fadeIn !== undefined && act.getClip !== undefined;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\n\r\n\r\nexport class Graphics {\r\n    private static planeGeometry = new THREE.PlaneGeometry(2, 2, 1, 1);\r\n    private static renderer = new WebGLRenderer({ antialias: false });\r\n    private static perspectiveCam = new THREE.PerspectiveCamera();\r\n    private static scene = new THREE.Scene();\r\n    private static readonly vertex = `\r\n    varying vec2 vUv;\r\n    void main(){\r\n        vUv = uv;\r\n        gl_Position = vec4(position.xy * 1.0,0.,.999999);\r\n    }`;\r\n    private static readonly fragment = `\r\n    uniform sampler2D map; \r\n    varying vec2 vUv;\r\n    void main(){ \r\n        vec2 uv = vUv;\r\n        uv.y = 1.0 - uv.y;\r\n        gl_FragColor = texture2D( map, uv);\r\n        // gl_FragColor = vec4(uv.xy, 0, 1);\r\n    }`;\r\n    private static readonly blipMaterial = new ShaderMaterial({\r\n        uniforms: { map: new Uniform(null) },\r\n        vertexShader: this.vertex,\r\n        fragmentShader: this.fragment\r\n    });\r\n\r\n    static createBlitMaterial(fragment: string): ShaderMaterial {\r\n        return new ShaderMaterial({\r\n            uniforms: { map: new Uniform(null) },\r\n            vertexShader: this.vertex,\r\n            fragmentShader: fragment\r\n        });\r\n    }\r\n    private static readonly mesh = new THREE.Mesh(this.planeGeometry, this.blipMaterial);\r\n\r\n    static copyTexture(texture: Texture, blitMaterial?: ShaderMaterial) {\r\n        const material = blitMaterial ?? this.blipMaterial;\r\n        material.uniforms.map.value = texture;\r\n        material.needsUpdate = true;\r\n        material.uniformsNeedUpdate = true;\r\n        const mesh = this.mesh;\r\n        mesh.material = material;\r\n        mesh.frustumCulled = false;\r\n        this.scene.children.length = 0;\r\n        this.scene.add(mesh);\r\n        this.renderer.setSize(texture.image.width, texture.image.height);\r\n        this.renderer.clear();\r\n        this.renderer.render(this.scene, this.perspectiveCam);\r\n        const tex = new Texture(this.renderer.domElement);\r\n        tex.name = \"Copy\";\r\n        tex.needsUpdate = true; // < important!\r\n        return tex;\r\n    }\r\n\r\n    // static blit(src: Texture, target: Texture, blitMaterial?: ShaderMaterial) {\r\n    //     let material = blitMaterial ?? this.blipMaterial;\r\n    //     material.uniforms.map.value = src;\r\n    //     this.mesh.material = material;\r\n    //     this.mesh.frustumCulled = false;\r\n    //     this.mesh.matrix.identity();\r\n    //     this.scene.children.length = 0;\r\n    //     this.scene.add(this.mesh);\r\n    //     this.renderer.setSize(src.image.width, src.image.height);\r\n    //     this.renderer.clear();\r\n    //     this.renderer.render(this.scene, this.perspectiveCam);\r\n    //     return new Texture(this.renderer.domElement);\r\n    // }\r\n\r\n    static textureToCanvas(texture: Texture, force: boolean) {\r\n        if (!texture) return null;\r\n\r\n        if (force === true || texture[\"isCompressedTexture\"] === true) {\r\n            texture = copyTexture(texture);\r\n        }\r\n        const image = texture.image;\r\n        if (isImageBitmap(image)) {\r\n\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = image.width;\r\n            canvas.height = image.height;\r\n\r\n            const context = canvas.getContext('2d');\r\n            if (!context) {\r\n                console.error(\"Failed getting canvas 2d context\");\r\n                return null;\r\n            }\r\n            context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n            return canvas;\r\n\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n/**@obsolete use Graphics.copyTexture */\r\nexport function copyTexture(texture: THREE.Texture): THREE.Texture {\r\n    return Graphics.copyTexture(texture);\r\n}\r\n\r\n/**@obsolete use Graphics.textureToCanvas */\r\nexport function textureToCanvas(texture: THREE.Texture, force: boolean = false): HTMLCanvasElement | null {\r\n    return Graphics.textureToCanvas(texture, force);\r\n}\r\n\r\ndeclare class OffscreenCanvas { };\r\n\r\nfunction isImageBitmap(image) {\r\n    return (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement) ||\r\n        (typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement) ||\r\n        (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) ||\r\n        (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap);\r\n}", "import { inverseLerp } from \"three/src/math/MathUtils\";\r\n\r\n\r\n\r\nclass MathHelper {\r\n\r\n    random(): number {\r\n        return Math.random();\r\n    }\r\n\r\n    clamp(value: number, min: number, max: number) {\r\n\r\n        if (value < min) {\r\n            return min;\r\n        }\r\n        else if (value > max) {\r\n            return max;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    clamp01(value: number) {\r\n        return this.clamp(value, 0, 1);\r\n    }\r\n\r\n    lerp(value1: number, value2: number, t: number) {\r\n        t = t < 0 ? 0 : t;\r\n        t = t > 1 ? 1 : t;\r\n        return value1 + (value2 - value1) * t;\r\n    }\r\n\r\n    inverseLerp(value1: number, value2: number, t: number) {\r\n        return (t - value1) / (value2 - value1);\r\n    }\r\n\r\n    remap(value: number, min1: number, max1: number, min2: number, max2: number) {\r\n        return min2 + (max2 - min2) * (value - min1) / (max1 - min1);\r\n    }\r\n\r\n    moveTowards(value1: number, value2: number, amount: number) {\r\n        value1 += amount;\r\n        if (amount < 0 && value1 < value2) value1 = value2;\r\n        else if (amount > 0 && value1 > value2) value1 = value2;\r\n        return value1;\r\n    }\r\n\r\n    toDegrees(radians: number) {\r\n        return radians * 180 / Math.PI;\r\n    }\r\n\r\n    toRadians(degrees: number) {\r\n        return degrees * Math.PI / 180;\r\n    }\r\n\r\n    gammaToLinear(gamma: number) {\r\n        return Math.pow(gamma, 2.2);\r\n    }\r\n\r\n    linearToGamma(linear: number) {\r\n        return Math.pow(linear, 1 / 2.2);\r\n    }\r\n    \r\n};\r\n\r\nconst Mathf = new MathHelper();\r\n\r\nexport { Mathf };", "import { Camera, Color, Material, Object3D, Vector3, Quaternion, Ray } from \"three\";\r\nimport { RGBAColor } from \"../engine-components/js-extensions/RGBAColor\";\r\nimport { CollisionDetectionMode, RigidbodyConstraints } from \"./engine_physics.types\";\r\nimport { getWorldPosition } from \"./engine_three_utils\";\r\nimport { CircularBuffer } from \"./engine_utils\";\r\n\r\n/** used to find data registered via gltf files e.g. find lightmaps for a Renderer component that were shipped inside a gltf */\r\nexport declare type SourceIdentifier = string;\r\n\r\n// TODO: figure out what is best here!\r\n// https://stackoverflow.com/a/67229348\r\n// https://stackoverflow.com/questions/36886082/abstract-constructor-type-in-typescript\r\n// type Constructor<T> = Function & { prototype: T } // << this includes abstract constructor types\r\nexport type Constructor<T> = abstract new (...args: any[]) => T; // abstract to support @serializable and also getComponent with abstract types\r\nexport type ConstructorConcrete<T> = new (...args: any[]) => T;\r\nexport type GuidsMap = { [key: string]: string };\r\n\r\nexport interface UIDProvider {\r\n    seed: number;\r\n    generateUUID(): string;\r\n}\r\n\r\nexport declare interface INeedleEngineComponent extends HTMLElement {\r\n    getAROverlayContainer(): HTMLElement;\r\n    onEnterAR(session: XRSession, overlayContainer: HTMLElement);\r\n    onExitAR(session: XRSession);\r\n}\r\n\r\nexport declare interface IGameObject extends Object3D {\r\n    guid: string | undefined;\r\n\r\n    activeSelf: boolean;\r\n    addNewComponent<T>(type: Constructor<T>): T | null;\r\n    removeComponent(comp: IComponent): IComponent;\r\n    getOrAddComponent<T>(typeName: Constructor<T> | null): T;\r\n    getComponent<T>(type: Constructor<T>): T | null;\r\n    getComponents<T>(type: Constructor<T>, arr?: T[]): Array<T>;\r\n    getComponentInChildren<T>(type: Constructor<T>): T | null;\r\n    getComponentsInChildren<T>(type: Constructor<T>, arr?: T[]): Array<T>;\r\n    getComponentInParent<T>(type: Constructor<T>): T | null;\r\n    getComponentsInParent<T>(type: Constructor<T>, arr?: T[]): Array<T>;\r\n}\r\n\r\nexport interface IComponent {\r\n    get isComponent(): boolean;\r\n\r\n\r\n    gameObject: IGameObject;\r\n    guid: string;\r\n    enabled: boolean;\r\n    sourceId?: SourceIdentifier;\r\n\r\n    get name(): string;\r\n    get layer(): number;\r\n    get destroyed(): boolean;\r\n    get tag(): string;\r\n\r\n    context: any;\r\n\r\n    get activeAndEnabled(): boolean;\r\n\r\n    __internalNewInstanceCreated();\r\n    __internalAwake();\r\n    __internalStart();\r\n    __internalEnable();\r\n    __internalDisable();\r\n    __internalDestroy();\r\n    resolveGuids?(guidsMap: GuidsMap): void;\r\n\r\n    awake();\r\n    onEnable();\r\n    onDisable();\r\n    onDestroy();\r\n    destroy();\r\n\r\n    /** called for properties decorated with the @validate decorator */\r\n    onValidate?(property?: string);\r\n    /** called when this.context.isPaused changes or when rendering loop changes due to changing DOM element visibility\r\n     * e.g. when the DOM element becomes hidden or out ot view\r\n     */\r\n    onPausedChanged?(isPaused:boolean, wasPaused:boolean);\r\n\r\n    start?(): void;\r\n    earlyUpdate?(): void;\r\n    update?(): void;\r\n    lateUpdate?(): void;\r\n    onBeforeRender?(frame: XRFrame | null): void;\r\n    onAfterRender?(): void;\r\n\r\n    onCollisionEnter?(col: Collision);\r\n    onCollisionExit?(col: Collision);\r\n    onCollisionStay?(col: Collision);\r\n\r\n    onTriggerEnter?(col: ICollider);\r\n    onTriggerStay?(col: ICollider);\r\n    onTriggerExit?(col: ICollider);\r\n\r\n    get forward(): Vector3;\r\n    get worldPosition(): Vector3;\r\n    get worldQuaternion(): Quaternion;\r\n}\r\n\r\n\r\nexport declare interface ICamera extends IComponent {\r\n    get isCamera(): boolean;\r\n    applyClearFlagsIfIsActiveCamera(): unknown;\r\n    buildCamera();\r\n    get cam(): Camera;\r\n    nearClipPlane: number;\r\n    farClipPlane: number;\r\n    backgroundColor: RGBAColor | null;\r\n    clearFlags: number;\r\n    aspect: number;\r\n    fieldOfView: number;\r\n    screenPointToRay(x: number, y: number, ray?: Ray): Ray;\r\n}\r\n\r\nexport declare interface ILight extends IComponent {\r\n    intensity: number;\r\n    color: Color;\r\n}\r\n\r\nexport declare interface ISharedMaterials {\r\n    [num: number]: Material;\r\n    get length(): number;\r\n}\r\n\r\nexport declare interface IRenderer extends IComponent {\r\n    sharedMaterial: Material;\r\n    get sharedMaterials(): ISharedMaterials;\r\n}\r\n\r\n// export declare interface IPhysicsComponent extends IComponent {\r\n//     get type() : string;\r\n// }\r\n\r\nexport declare interface ICollider extends IComponent {\r\n    get isCollider();\r\n    attachedRigidbody: IRigidbody | null;\r\n    isTrigger: boolean;\r\n}\r\n\r\nexport declare interface IRigidbody extends IComponent {\r\n    constraints: RigidbodyConstraints;\r\n    isKinematic: boolean;\r\n    mass: number;\r\n    drag: number;\r\n    angularDrag: number;\r\n    useGravity: boolean;\r\n    collisionDetectionMode: CollisionDetectionMode;\r\n\r\n    lockPositionX: boolean;\r\n    lockPositionY: boolean;\r\n    lockPositionZ: boolean;\r\n    lockRotationX: boolean;\r\n    lockRotationY: boolean;\r\n    lockRotationZ: boolean;\r\n}\r\n\r\n\r\nexport const $physicsKey = Symbol(\"object\");\r\n\r\n\r\nexport declare type ICollisionContext = {\r\n    getCollider(obj: Object3D): ICollider;\r\n}\r\n\r\n\r\nexport type Vec2 = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport type Vec3 = {\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n}\r\n\r\nexport type Vec4 = {\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    w: number,\r\n}\r\n\r\nconst contactsVectorBuffer = new CircularBuffer(() => new Vector3(), 20);\r\n\r\nexport class ContactPoint {\r\n\r\n    private readonly _point: Vec3;\r\n    private readonly _normal: Vec3;\r\n\r\n    readonly distance: number;\r\n    readonly impulse: number;\r\n    readonly friction: number;\r\n\r\n    /** worldspace point */\r\n    get point() {\r\n        const target = contactsVectorBuffer.get();\r\n        return target.set(this._point.x, this._point.y, this._point.z);\r\n    }\r\n\r\n    /** worldspace normal */\r\n    get normal() {\r\n        const target = contactsVectorBuffer.get();\r\n        return target.set(this._normal.x, this._normal.y, this._normal.z);\r\n    }\r\n\r\n    constructor(point: Vec3, dist: number, normal: Vec3, impulse: number, friction: number) {\r\n        this._point = point;\r\n        this.distance = dist;\r\n        this._normal = normal;\r\n        this.impulse = impulse;\r\n        this.friction = friction;\r\n    }\r\n}\r\n\r\n/// all info in here must be readonly because the object is only created once per started collision\r\nexport class Collision {\r\n    readonly contacts: ContactPoint[];\r\n\r\n    constructor(obj: Object3D, otherCollider: ICollider, contacts: ContactPoint[]) {\r\n        this.me = obj;\r\n        this._collider = otherCollider;\r\n        this._gameObject = otherCollider.gameObject;\r\n        this.contacts = contacts;\r\n    }\r\n\r\n    readonly me: Object3D;\r\n    private _collider: ICollider;\r\n\r\n    /** the collider the collision happened with */\r\n    get collider(): ICollider {\r\n        return this._collider;\r\n    }\r\n\r\n    /** the object the collision happened with */\r\n    private _gameObject: Object3D;\r\n    get gameObject(): Object3D {\r\n        return this._gameObject;\r\n    }\r\n\r\n    /** the rigidbody we hit, null if none attached */\r\n    get rigidBody(): IRigidbody | null {\r\n        return this.collider?.attachedRigidbody;\r\n    }\r\n\r\n\r\n\r\n    // private _normal?: Vector3;\r\n    // get normal(): Vector3 {\r\n    //     if (!this._normal) {\r\n    //         const vec = this.collision.contact.ni;\r\n    //         this._normal = new Vector3(vec.x, vec.y, vec.z);\r\n    //     }\r\n    //     return this._normal;\r\n    // }\r\n\r\n\r\n    // private _point?: Vector3;\r\n    // get point(): Vector3 {\r\n    //     if (!this._point) {\r\n    //         const c = this.collision.contact;\r\n    //         const point = c.bi.position.clone().vadd(c.ri);\r\n    //         this._point = new Vector3(point.x, point.y, point.z);\r\n    //     }\r\n    //     return this._point;\r\n    // }\r\n}", "\r\n\r\nexport function safeInvoke(fun, args) {\r\n    try {\r\n        if (args)\r\n            fun(args);\r\n        else fun();\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return false;\r\n    }\r\n    return true;\r\n}", "\r\nexport const activeInHierarchyFieldName = \"__isActiveInHierarchy\";\r\nexport const builtinComponentKeyName = \"builtin_components\";", "import { Context } from './engine_setup';\r\nimport * as utils from \"./engine_generic_utils\";\r\nimport * as constants from \"./engine_constants\";\r\nimport { getParam } from './engine_utils';\r\nimport { Object3D } from 'three';\r\nimport { IComponent } from './engine_types';\r\nimport { isActiveSelf, setActive } from './engine_gameobject';\r\n\r\nconst debug = getParam(\"debugnewscripts\");\r\n\r\n// if some other script adds new scripts in onEnable or awake \r\n// the original array should be cleared before processing it\r\n// so we use this copy buffer\r\nconst new_scripts_buffer: any[] = [];\r\n\r\nexport function processNewScripts(context: Context) {\r\n    if (context.new_scripts.length <= 0) return;\r\n    if (debug)\r\n        console.log(\"Register new components\", context.new_scripts.length, context.alias ? (\"element: \" + context.alias) : \"\");\r\n\r\n    // if(new_scripts_post_setup_callbacks.length > 0) console.log(new_scripts_post_setup_callbacks);\r\n    if (context.new_scripts_pre_setup_callbacks.length > 0) {\r\n        for (const cb of context.new_scripts_pre_setup_callbacks) {\r\n            if (!cb) continue;\r\n            cb();\r\n        }\r\n        context.new_scripts_pre_setup_callbacks.length = 0;\r\n    }\r\n\r\n    // TODO: update all the code from above to use this logic\r\n    // basically code gen should add the scripts to new scripts\r\n    // and this code below should go into some util method\r\n    new_scripts_buffer.length = 0;\r\n    if (context.new_scripts.length > 0) {\r\n        new_scripts_buffer.push(...context.new_scripts);\r\n    }\r\n    context.new_scripts.length = 0;\r\n\r\n    // Check valid scripts and add all valid to the scripts array\r\n    for (let i = 0; i < new_scripts_buffer.length; i++) {\r\n        try {\r\n            const script: IComponent = new_scripts_buffer[i];\r\n            if (script.destroyed) continue;\r\n            if (!script.gameObject) {\r\n                console.error(\"MISSING GAMEOBJECT - will ignore\", script);\r\n                new_scripts_buffer.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            script.context = context;\r\n            updateActiveInHierarchyWithoutEventCall(script.gameObject);\r\n            addScriptToArrays(script, context);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            removeScriptFromContext(new_scripts_buffer[i], context);\r\n            new_scripts_buffer.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n\r\n    // Awake\r\n    for (let i = 0; i < new_scripts_buffer.length; i++) {\r\n        try {\r\n            const script: IComponent = new_scripts_buffer[i];\r\n            if (script.destroyed) {\r\n                removeScriptFromContext(new_scripts_buffer[i], context);\r\n                new_scripts_buffer.splice(i, 1);\r\n                i--; continue;\r\n            }\r\n            // console.log(script, script.gameObject)\r\n            // TODO: we should not call awake on components with inactive gameobjects\r\n            if (script.__internalAwake !== undefined) {\r\n                if (!script.gameObject) {\r\n                    console.error(\"MISSING GAMEOBJECT\", script, script.gameObject);\r\n                }\r\n                updateActiveInHierarchyWithoutEventCall(script.gameObject);\r\n                if (script.activeAndEnabled)\r\n                    utils.safeInvoke(script.__internalAwake.bind(script));\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            removeScriptFromContext(new_scripts_buffer[i], context);\r\n            new_scripts_buffer.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n\r\n    // OnEnable\r\n    for (let i = 0; i < new_scripts_buffer.length; i++) {\r\n        try {\r\n            const script: IComponent = new_scripts_buffer[i];\r\n            if (script.destroyed) continue;\r\n            // console.log(script, script.enabled, script.activeAndEnabled);\r\n            if (script.enabled === false) continue;\r\n            updateActiveInHierarchyWithoutEventCall(script.gameObject);\r\n            if (script.activeAndEnabled === false) continue;\r\n            if (script.__internalEnable !== undefined) {\r\n                script.enabled = true;\r\n                utils.safeInvoke(script.__internalEnable.bind(script));\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            removeScriptFromContext(new_scripts_buffer[i], context);\r\n            new_scripts_buffer.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n\r\n    // Enqueue Start\r\n    for (let i = 0; i < new_scripts_buffer.length; i++) {\r\n        try {\r\n            const script = new_scripts_buffer[i];\r\n            if (script.destroyed) continue;\r\n            if (!script.gameObject) continue;\r\n            context.new_script_start.push(script);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            removeScriptFromContext(new_scripts_buffer[i], context);\r\n            new_scripts_buffer.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n\r\n    // for (const script of new_scripts_buffer) {\r\n    //     if (script.destroyed) continue;\r\n    //     context.scripts.push(script);\r\n    // }\r\n    new_scripts_buffer.length = 0;\r\n\r\n    // if(new_scripts_post_setup_callbacks.length > 0) console.log(new_scripts_post_setup_callbacks);\r\n    for (const cb of context.new_scripts_post_setup_callbacks) {\r\n        if (cb)\r\n            cb();\r\n    }\r\n    context.new_scripts_post_setup_callbacks.length = 0;\r\n}\r\n\r\nexport function processRemoveFromScene(script: IComponent) {\r\n    if (!script) return;\r\n    script.__internalDisable();\r\n    removeScriptFromContext(script, script.context);\r\n}\r\n\r\nexport function processStart(context: Context, object?: Object3D) {\r\n    // Call start on scripts\r\n    for (let i = 0; i < context.new_script_start.length; i++) {\r\n        try {\r\n            const script = context.new_script_start[i];\r\n            if (object !== undefined && script.gameObject !== object) continue;\r\n            if (script.destroyed) continue;\r\n            if (script.activeAndEnabled === false) {\r\n                continue;\r\n            }\r\n            // keep them in queue until script has started\r\n            // call awake if the script was inactive before\r\n            utils.safeInvoke(script.__internalAwake.bind(script));\r\n            utils.safeInvoke(script.__internalEnable.bind(script));\r\n            // now call start\r\n            utils.safeInvoke(script.__internalStart.bind(script));\r\n            context.new_script_start.splice(i, 1);\r\n            i--;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            removeScriptFromContext(context.new_script_start[i], context);\r\n            context.new_script_start.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addScriptToArrays(script: any, context: Context) {\r\n    // TODO: not sure if this is ideal - maybe we should add a map if we have many scripts?\r\n    const index = context.scripts.indexOf(script);\r\n    if (index !== -1) return;\r\n    context.scripts.push(script);\r\n    if (script.earlyUpdate) context.scripts_earlyUpdate.push(script);\r\n    if (script.update) context.scripts_update.push(script);\r\n    if (script.lateUpdate) context.scripts_lateUpdate.push(script);\r\n    if (script.onBeforeRender) context.scripts_onBeforeRender.push(script);\r\n    if (script.onAfterRender) context.scripts_onAfterRender.push(script);\r\n    if (script.onPausedChanged) context.scripts_pausedChanged.push(script);\r\n}\r\n\r\n\r\nexport function removeScriptFromContext(script: any, context: Context) {\r\n    removeFromArray(script, context.new_scripts);\r\n    removeFromArray(script, context.new_script_start);\r\n    removeFromArray(script, context.scripts);\r\n    removeFromArray(script, context.scripts_earlyUpdate);\r\n    removeFromArray(script, context.scripts_update);\r\n    removeFromArray(script, context.scripts_lateUpdate);\r\n    removeFromArray(script, context.scripts_onBeforeRender);\r\n    removeFromArray(script, context.scripts_onAfterRender);\r\n    removeFromArray(script, context.scripts_pausedChanged);\r\n    context.stopAllCoroutinesFrom(script);\r\n}\r\n\r\nfunction removeFromArray(script: any, array: any[]) {\r\n    const index = array.indexOf(script);\r\n    if (index >= 0) array.splice(index, 1);\r\n}\r\n\r\nconst previousActiveMap: { [key: string]: boolean } = {};\r\nconst previousActiveInHierarchyMap: { [key: string]: boolean } = {};\r\n\r\nexport function updateIsActive(obj?: Object3D) {\r\n    if (!obj) obj = Context.Current.scene;\r\n    if (!obj) {\r\n        console.trace(\"Invalid call - no current context.\");\r\n        return;\r\n    }\r\n    updateIsActiveInHierarchyRecursiveRuntime(obj, isActiveSelf(obj), true);\r\n}\r\n\r\n// const $wasSetVisibleBefore = Symbol(\"wasSetVisibleBefore\");\r\n\r\nfunction updateIsActiveInHierarchyRecursiveRuntime(go: THREE.Object3D, activeInHierarchy: boolean, allowEventCall: boolean) {\r\n    let activeStateChanged: boolean = false;\r\n\r\n    const active = isActiveSelf(go);\r\n\r\n    // this is a test if we dont control active state from visibility and set\r\n    // active to true by default (even if the object is invisible) in engine_gameobjects:isActiveSelf\r\n    // then we need to check if the object is set to visible for the first time\r\n    // const visible = go.visible;\r\n    // if (!active && visible) {\r\n    //     if (!go[$wasSetVisibleBefore]) {\r\n    //         go[$wasSetVisibleBefore] = true;\r\n    //         setActive(go, true);\r\n    //     }\r\n    // }\r\n\r\n    // if (activeInHierarchy) {\r\n    //     const prevActive = previousActiveMap[go.uuid];\r\n    //     if (prevActive !== undefined) {\r\n    //         if (prevActive !== active) {\r\n    //             activeStateChanged = true;\r\n    //             if (allowEventCall) {\r\n    //                 perComponent(go, comp => {\r\n    //                     if (active) {\r\n    //                         utils.safeInvoke(comp.__internalAwake.bind(comp));\r\n    //                         comp.onEnable();\r\n    //                     }\r\n    //                     else comp.onDisable();\r\n    //                 });\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n    previousActiveMap[go.uuid] = active;\r\n\r\n\r\n    if (activeInHierarchy) activeInHierarchy = isActiveSelf(go);\r\n    go[constants.activeInHierarchyFieldName] = activeInHierarchy;\r\n\r\n    // only raise events here if we didnt call enable etc already\r\n    if (!activeStateChanged) {\r\n        const prevActiveInHierarchy = previousActiveInHierarchyMap[go.uuid];\r\n        if (prevActiveInHierarchy !== undefined) {\r\n            if (prevActiveInHierarchy !== activeInHierarchy) {\r\n                // console.log(\"CHANGE\", go.name, activeInHierarchy);\r\n                if (allowEventCall) {\r\n                    perComponent(go, comp => {\r\n                        if (activeInHierarchy) {\r\n                            utils.safeInvoke(comp.__internalAwake.bind(comp));\r\n                            comp.enabled = true;\r\n                            // comp.onEnable();\r\n                        }\r\n                        else comp.enabled = false;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    previousActiveInHierarchyMap[go.uuid] = activeInHierarchy;\r\n\r\n    if (go.children) {\r\n        for (const ch of go.children) {\r\n            updateIsActiveInHierarchyRecursiveRuntime(ch, activeInHierarchy, allowEventCall);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateActiveInHierarchyWithoutEventCall(go: THREE.Object3D) {\r\n    let activeInHierarchy = true;\r\n    let current: THREE.Object3D | null = go;\r\n    let foundScene: boolean = false;\r\n    while (current) {\r\n        if (!current) break;\r\n        if (current.type === \"Scene\") foundScene = true;\r\n        if (!isActiveSelf(current)) {\r\n            activeInHierarchy = false;\r\n            break;\r\n        }\r\n        current = current.parent;\r\n    }\r\n    if (!go) {\r\n        console.error(\"GO is null\");\r\n        return;\r\n    }\r\n    previousActiveInHierarchyMap[go.uuid] = activeInHierarchy;\r\n    go[constants.activeInHierarchyFieldName] = activeInHierarchy && foundScene;\r\n}\r\n\r\nfunction perComponent(go: THREE.Object3D, evt: (comp: IComponent) => void) {\r\n    if (go.userData?.components) {\r\n        for (const comp of go.userData.components) {\r\n            evt(comp);\r\n        }\r\n    }\r\n}", "// import { IModel, NetworkConnection } from \"./engine_networking\"\r\nimport * as THREE from \"three\";\r\nimport { Context } from \"./engine_setup\"\r\nimport * as utils from \"./engine_utils\"\r\nimport { INetworkConnection } from \"./engine_networking_types\";\r\nimport { IGameObject as GameObject, IComponent as Component } from \"./engine_types\"\r\n\r\n// https://github.com/uuidjs/uuid\r\n// v5 takes string and namespace\r\nimport { v5, v1 } from 'uuid';\r\nimport { UIDProvider } from \"./engine_types\";\r\nimport { IModel } from \"./engine_networking_types\";\r\nimport { SendQueue } from \"./engine_networking_types\";\r\nimport { destroy, findByGuid, instantiate } from \"./engine_gameobject\";\r\nimport { Object3D } from \"three\";\r\nimport { InstantiateOptions } from \"./engine_gameobject\";\r\n\r\n\r\nconst debug = utils.getParam(\"debugcomponents\");\r\n\r\n\r\n\r\nconst ID_NAMESPACE = 'eff8ba80-635d-11ec-90d6-0242ac120003';\r\n\r\nexport class InstantiateIdProvider implements UIDProvider {\r\n\r\n    get seed() {\r\n        return this._seed;\r\n    }\r\n\r\n    set seed(val: number) {\r\n        this._seed = val;\r\n    }\r\n\r\n    private _originalSeed: number;\r\n    private _seed: number;\r\n\r\n    constructor(seed: string | number) {\r\n        if (typeof seed === \"string\") {\r\n            seed = InstantiateIdProvider.hash(seed);\r\n        }\r\n        this._originalSeed = seed;\r\n        this._seed = seed;\r\n    }\r\n\r\n    reset() {\r\n        this._seed = this._originalSeed;\r\n    }\r\n\r\n    generateUUID(str?: string) {\r\n        if (typeof str === \"string\") {\r\n            return v5(str, ID_NAMESPACE);\r\n        }\r\n        const s = this._seed;\r\n        this._seed -= 1;\r\n        // console.log(s);\r\n        return v5(s.toString(), ID_NAMESPACE);\r\n    }\r\n\r\n    initialize(strOrNumber: string | number) {\r\n        if (typeof strOrNumber === \"string\") {\r\n            this._seed = InstantiateIdProvider.hash(strOrNumber);\r\n        }\r\n        else {\r\n            this._seed = strOrNumber;\r\n        }\r\n    }\r\n\r\n    static createFromString(str: string) {\r\n        return new InstantiateIdProvider(this.hash(str));\r\n    }\r\n\r\n    private static hash(str: string): number {\r\n        let hash = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n        return hash;\r\n    }\r\n}\r\n\r\nexport enum InstantiateEvent {\r\n    NewInstanceCreated = \"new-instance-created\",\r\n    InstanceDestroyed = \"instance-destroyed\",\r\n}\r\n\r\n\r\nclass DestroyInstanceModel implements IModel {\r\n    guid: string;\r\n    constructor(guid: string) {\r\n        this.guid = guid;\r\n    }\r\n}\r\n\r\nexport interface IBeforeNetworkedDestroy {\r\n    onBeforeNetworkedDestroy(networkIds: string[]): void;\r\n}\r\n\r\nexport function syncDestroy(obj: GameObject | Component, con: INetworkConnection, recursive: boolean = true) {\r\n    if (!obj) return;\r\n    const go = obj as GameObject;\r\n    destroy(obj, recursive);\r\n\r\n    if (!con) {\r\n        console.warn(\"Can not send destroy: No networking connection provided\", obj.guid);\r\n        return;\r\n    }\r\n\r\n    if (!con.isConnected) {\r\n        console.warn(\"Can not send destroy: not connected\", obj.guid);\r\n        return;\r\n    }\r\n\r\n    let guid: string | undefined | null = obj.guid;\r\n    if (!guid && go.uuid) {\r\n        guid = go.uuid;\r\n    }\r\n    if (!guid) {\r\n        console.warn(\"Can not send destroy: failed to find guid\", obj);\r\n        return;\r\n    }\r\n\r\n    const model = new DestroyInstanceModel(guid);\r\n    con.send(InstantiateEvent.InstanceDestroyed, model, SendQueue.Queued);\r\n}\r\n\r\nexport function sendDestroyed(guid: string, con: INetworkConnection) {\r\n    const model = new DestroyInstanceModel(guid);\r\n    con.send(InstantiateEvent.InstanceDestroyed, model, SendQueue.Queued);\r\n}\r\n\r\nexport function beginListenDestroy(context: Context) {\r\n    context.connection.beginListen(InstantiateEvent.InstanceDestroyed, (data: DestroyInstanceModel) => {\r\n        if (debug)\r\n            console.log(\"[Remote] Destroyed\", context.scene, data);\r\n        // TODO: create global lookup table for guids\r\n        const obj = findByGuid(data.guid, context.scene);\r\n        if (obj) destroy(obj);\r\n    });\r\n}\r\n\r\n\r\n// when a file is instantiated via some server (e.g. via file drop) we also want to send the info where the file can be downloaded\r\n// doing it this route will ensure we have \r\nexport class HostData {\r\n    filename: string;\r\n    hash: string;\r\n    size: number;\r\n\r\n    constructor(filename: string, hash: string, size: number) {\r\n        this.filename = filename;\r\n        this.hash = hash;\r\n        this.size = size;\r\n    }\r\n}\r\n\r\nclass NewInstanceModel implements IModel {\r\n    guid: string;\r\n    originalGuid: string;\r\n    seed: number | undefined;\r\n    visible: boolean | undefined;\r\n    hostData: HostData | undefined;\r\n    dontSave?: boolean | undefined;\r\n\r\n    parent: string | undefined;\r\n    position: { x: number, y: number, z: number } | undefined;\r\n    rotation: { x: number, y: number, z: number, w: number } | undefined;\r\n    scale: { x: number, y: number, z: number } | undefined;\r\n\r\n    constructor(originalGuid: string, newGuid: string) {\r\n        this.originalGuid = originalGuid;\r\n        this.guid = newGuid;\r\n    }\r\n}\r\n\r\nexport function syncInstantiate(object: GameObject | Object3D, opts: InstantiateOptions, hostData?: HostData, save?: boolean): GameObject | null {\r\n\r\n    const obj: GameObject = object as GameObject;\r\n\r\n    if (!obj.guid) {\r\n        console.warn(\"Can not instantiate: No guid\", obj);\r\n        return null;\r\n    }\r\n\r\n    if (!opts.context) opts.context = Context.Current;\r\n\r\n    if (!opts.context) {\r\n        console.error(\"Missing network instantiate options / reference to network connection in sync instantiate\");\r\n        return null;\r\n    }\r\n\r\n    const originalOpts = opts ? { ...opts } : null;\r\n    const { instance, seed } = instantiateSeeded(obj, opts);\r\n    if (instance) {\r\n        const go = instance as GameObject;\r\n        // if (go.guid) {\r\n        //     const listener = GameObject.addNewComponent(go, DestroyListener);\r\n        //     listener.target = go;\r\n        // }\r\n        if (go.guid) {\r\n            if (debug)\r\n                console.log(\"[Local] new instance\", \"gameobject:\", instance?.guid);\r\n            const model = new NewInstanceModel(obj.guid, go.guid);\r\n            model.seed = seed;\r\n            if (originalOpts) {\r\n                if (originalOpts.position)\r\n                    model.position = { x: originalOpts.position.x, y: originalOpts.position.y, z: originalOpts.position.z };\r\n                if (originalOpts.rotation)\r\n                    model.rotation = { x: originalOpts.rotation.x, y: originalOpts.rotation.y, z: originalOpts.rotation.z, w: originalOpts.rotation.w };\r\n                if (originalOpts.scale)\r\n                    model.scale = { x: originalOpts.scale.x, y: originalOpts.scale.y, z: originalOpts.scale.z };\r\n            }\r\n            if (!model.position)\r\n                model.position = { x: go.position.x, y: go.position.y, z: go.position.z };\r\n            if (!model.rotation)\r\n                model.rotation = { x: go.quaternion.x, y: go.quaternion.y, z: go.quaternion.z, w: go.quaternion.w };\r\n            if (!model.scale)\r\n                model.scale = { x: go.scale.x, y: go.scale.y, z: go.scale.z };\r\n\r\n            model.visible = obj.visible;\r\n            if (originalOpts?.parent) {\r\n                if (typeof originalOpts.parent === \"string\")\r\n                    model.parent = originalOpts.parent;\r\n                else model.parent = originalOpts.parent[\"guid\"];\r\n            }\r\n            // console.log(model.parent);\r\n            model.hostData = hostData;\r\n            if (save === false) model.dontSave = true;\r\n            opts?.context?.connection.send(InstantiateEvent.NewInstanceCreated, model);\r\n        }\r\n        else console.warn(\"Missing guid, can not send new instance event\", go);\r\n    }\r\n    return instance;\r\n}\r\n\r\nexport function generateSeed(): number {\r\n    return Math.random() * 9_999_999;// Number.MAX_VALUE;;\r\n}\r\n\r\nexport function beginListenInstantiate(context: Context) {\r\n    context.connection.beginListen(InstantiateEvent.NewInstanceCreated, async (model: NewInstanceModel) => {\r\n        const obj: GameObject | null = await tryResolvePrefab(model.originalGuid, context.scene) as GameObject;\r\n        if (!obj) {\r\n            console.warn(\"could not find object that was instantiated: \" + model.guid);\r\n            return;\r\n        }\r\n        // console.log(model);\r\n        const options = new InstantiateOptions();\r\n        if (model.position)\r\n            options.position = new THREE.Vector3(model.position.x, model.position.y, model.position.z);\r\n        if (model.rotation)\r\n            options.rotation = new THREE.Quaternion(model.rotation.x, model.rotation.y, model.rotation.z, model.rotation.w);\r\n        if (model.scale)\r\n            options.scale = new THREE.Vector3(model.scale.x, model.scale.y, model.scale.z);\r\n        options.parent = model.parent;\r\n        if (model.seed)\r\n            options.idProvider = new InstantiateIdProvider(model.seed);\r\n        options.visible = model.visible;\r\n        options.context = context;\r\n        if (debug && context.alias)\r\n            console.log(\"[Remote] instantiate in: \" + context.alias);\r\n        const inst = instantiate(obj as GameObject, options);\r\n\r\n        if (inst) {\r\n            if (model.parent === \"scene\")\r\n                context.scene.add(inst);\r\n            // console.log(inst, model.parent === \"scene\");\r\n            // if (inst.guid) {\r\n            //     const listener = GameObject.addNewComponent(inst, DestroyListener);\r\n            //     listener.target = inst;\r\n            // }\r\n            if (debug)\r\n                console.log(\"[Remote] new instance\", \"gameobject:\", inst?.guid, obj);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nfunction instantiateSeeded(obj: GameObject, opts: InstantiateOptions | null): { instance: GameObject | null, seed: number } {\r\n    const seed = generateSeed();\r\n    const options = opts ?? new InstantiateOptions();\r\n    options.idProvider = new InstantiateIdProvider(seed);\r\n    const instance = instantiate(obj, options);\r\n    return { seed: seed, instance: instance };\r\n}\r\n\r\nexport declare type PrefabProviderCallback = (guid: string) => Promise<GameObject | null>;\r\n\r\nconst registeredPrefabProviders: { [key: string]: PrefabProviderCallback } = {};\r\n\r\n//** e.g. provide a function that can return a instantiated object when instantiation event is received */\r\nexport function registerPrefabProvider(key: string, fn: PrefabProviderCallback) {\r\n    registeredPrefabProviders[key] = fn;\r\n}\r\n\r\nasync function tryResolvePrefab(guid: string, obj: THREE.Object3D): Promise<THREE.Object3D | null> {\r\n    const prov = registeredPrefabProviders[guid];\r\n    if (prov !== null && prov !== undefined) {\r\n        const res = await prov(guid);\r\n        if (res) return res;\r\n    }\r\n    return tryFindObjectByGuid(guid, obj) as THREE.Object3D;\r\n}\r\n\r\nfunction tryFindObjectByGuid(guid: string, obj: THREE.Object3D): THREE.Object3D | null {\r\n    if (obj === null) return null;\r\n    if (!guid) return null;\r\n    if (obj[\"guid\"] === guid) {\r\n        return obj;\r\n    }\r\n\r\n    if (obj.children) {\r\n        for (const ch of obj.children) {\r\n            const found = tryFindObjectByGuid(guid, ch);\r\n            if (found) {\r\n                return found;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n// class DestroyListener extends Behaviour {\r\n\r\n//     target: GameObject | Component | null = null;\r\n\r\n//     private destroyCallback: any;\r\n\r\n//     awake(): void {\r\n//         if (!this.target) {\r\n//             console.log(\"Missing target to watch\", this);\r\n//             return;\r\n//         }\r\n//         this.destroyCallback = this.onObjectDestroyed.bind(this);\r\n//         this.context.connection.beginListen(InstantiateEvent.InstanceDestroyed, this.destroyCallback);\r\n//     }\r\n\r\n//     onDestroy(): void {\r\n//         this.context.connection.stopListening(InstantiateEvent.InstanceDestroyed, this.destroyCallback);\r\n//         if (this.target && this.target.guid && this.gameObject.guid === this.target.guid) {\r\n//             sendDestroyed(this.target.guid, this.context.connection);\r\n//         }\r\n//     }\r\n\r\n//     private onObjectDestroyed(evt: DestroyInstanceModel) {\r\n//         if (evt.guid === this.target?.guid) {\r\n//             if (debug)\r\n//                 console.log(\"RECEIVED destroyed event\", evt.guid);\r\n//             GameObject.destroy(this.target);\r\n//         }\r\n//     }\r\n// }", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { Object3D } from \"three\";\r\nimport { Constructor } from \"../../engine/engine_types\";\r\n\r\nconst handlers: Map<any, ApplyPrototypeExtension> = new Map();\r\n\r\nexport function applyPrototypeExtensions<T>(obj: any, prototype : Constructor<T>) {\r\n    if (!obj) return;\r\n    // const prototype = Object.getPrototypeOf(obj);\r\n    // console.log(\"TEST\", prototype)\r\n    if (!prototype) {\r\n        console.warn(\"No prototype found\", obj, obj.prototype, obj.constructor);\r\n        return;\r\n    }\r\n    let handler = handlers.get(prototype);\r\n    if (handler) {\r\n        // console.log(\"OK\", prototype);\r\n        handler.apply(obj);\r\n    }\r\n    // applyPrototypeExtensions(prototype);\r\n}\r\n\r\nexport function registerPrototypeExtensions<T>(type: Constructor<T>) {\r\n    // console.log(\"Register\", type.prototype.constructor.name);\r\n    const handler = createPrototypeExtensionHandler(type.prototype);\r\n    handlers.set(type, handler);\r\n}\r\n\r\n\r\nfunction createPrototypeExtensionHandler(prototype: any) {\r\n    return new ApplyPrototypeExtension(prototype);\r\n}\r\n\r\nexport interface IApplyPrototypeExtension {\r\n    apply(object: object): void;\r\n}\r\n\r\nclass ApplyPrototypeExtension implements IApplyPrototypeExtension {\r\n\r\n    private readonly $symbol: symbol;\r\n    private readonly extensions: string[];\r\n    private readonly descriptors: Array<PropertyDescriptor | undefined>;\r\n\r\n    constructor(prototype: object) {\r\n        this.$symbol = Symbol(\"prototype-extension\");\r\n        // used to decorate cloned object3D objects with the same added components defined above\r\n        this.extensions = Object.keys(prototype);\r\n        // console.log(this.extensions);\r\n        this.descriptors = new Array<PropertyDescriptor | undefined>();\r\n        for (let i = 0; i < this.extensions.length; i++) {\r\n            const key = this.extensions[i];\r\n            // console.log(key);\r\n            const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n            if (descriptor) {\r\n                this.descriptors.push(descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    apply(object: Object3D): void {\r\n\r\n        if (object[this.$symbol]) return;\r\n        object[this.$symbol] = true;\r\n\r\n        // const prototype = object.constructor.prototype;\r\n\r\n        for (let i = 0; i < this.extensions.length; i++) {\r\n            const key = this.extensions[i];\r\n            const desc = this.descriptors[i];\r\n            if (desc) {\r\n                // if (prototype) {\r\n                //     const exists = Object.getOwnPropertyDescriptor(prototype, key);\r\n                //     if (exists) {\r\n                //         continue;\r\n                //     }\r\n                // }\r\n                // console.warn(\"DEFINE\", object, key);\r\n                Object.defineProperty(object, key, desc);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { applyPrototypeExtensions, registerPrototypeExtensions } from \"./ExtensionUtils\";\r\nimport { Object3D } from \"three\";\r\nimport { Constructor, ConstructorConcrete, IComponent } from \"../../engine/engine_types\"\r\nimport { IComponent as Component } from \"../../engine/engine_types\";\r\nimport { addNewComponent, getComponent, getComponentInChildren, getComponentInParent, getComponents, getComponentsInChildren, getComponentsInParent, getOrAddComponent, removeComponent } from \"../../engine/engine_components\";\r\nimport { isActiveSelf, setActive } from \"../../engine/engine_gameobject\";\r\n\r\n// used to decorate cloned object3D objects with the same added components defined above\r\nexport function apply(object: Object3D) {\r\n    if (object && object.isObject3D === true) {\r\n        applyPrototypeExtensions(object, Object3D);\r\n    }\r\n}\r\n\r\n\r\n\r\n// do we still need this?\r\nObject3D.prototype[\"SetActive\"] = function (active: boolean) {\r\n    this.visible = active;\r\n}\r\n\r\nObject3D.prototype[\"addNewComponent\"] = function <T extends Component>(type: ConstructorConcrete<T>) {\r\n    return addNewComponent(this, new type());\r\n}\r\n\r\nObject3D.prototype[\"removeComponent\"] = function (inst: Component) {\r\n    return removeComponent(this, inst);\r\n}\r\n\r\nObject3D.prototype[\"getOrAddComponent\"] = function <T extends IComponent>(typeName: ConstructorConcrete<T>): T {\r\n    return getOrAddComponent<T>(this, typeName);\r\n}\r\n\r\nObject3D.prototype[\"getComponent\"] = function <T extends IComponent>(type: Constructor<T>) {\r\n    return getComponent(this, type);\r\n}\r\n\r\nObject3D.prototype[\"getComponents\"] = function <T extends IComponent>(type: Constructor<T>, arr?: []) {\r\n    return getComponents(this, type, arr);\r\n}\r\n\r\nObject3D.prototype[\"getComponentInChildren\"] = function <T extends IComponent>(type: Constructor<T>) {\r\n    return getComponentInChildren(this, type);\r\n}\r\n\r\nObject3D.prototype[\"getComponentsInChildren\"] = function <T extends IComponent>(type: Constructor<T>, arr?: []) {\r\n    return getComponentsInChildren(this, type, arr);\r\n}\r\n\r\nObject3D.prototype[\"getComponentInParent\"] = function <T extends IComponent>(type: Constructor<T>) {\r\n    return getComponentInParent(this, type);\r\n}\r\n\r\nObject3D.prototype[\"getComponentsInParent\"] = function <T>(type: Constructor<T>, arr?: []) {\r\n    return getComponentsInParent(this, type, arr);\r\n}\r\n\r\n// this is a fix to allow gameObject active animation be applied to a three object\r\nif (!Object.getOwnPropertyDescriptor(Object3D.prototype, \"activeSelf\")) {\r\n    Object.defineProperty(Object3D.prototype, \"activeSelf\", {\r\n        get: function () {\r\n            return isActiveSelf(this)\r\n        },\r\n        set: function (val: boolean | number) {\r\n            setActive(this, val, true);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// do this after adding the component extensions\r\nregisterPrototypeExtensions(Object3D);\r\n", "import { Object3D, Scene } from \"three\";\r\nimport { Constructor, ConstructorConcrete, IComponent as Component, IComponent, IGameObject } from \"./engine_types\";\r\nimport { Context, registerComponent } from \"./engine_setup\";\r\nimport { getParam } from \"./engine_utils\";\r\nimport { removeScriptFromContext, updateActiveInHierarchyWithoutEventCall } from \"./engine_mainloop_utils\";\r\nimport { activeInHierarchyFieldName } from \"./engine_constants\";\r\nimport { apply } from \"../engine-components/js-extensions/Object3D\";\r\n\r\nconst debug = getParam(\"debuggetcomponent\");\r\n\r\n\r\nfunction tryGetObject(obj) {\r\n    if (obj === null || obj === undefined) return obj;\r\n    if (obj.isObject3D) return obj;\r\n    // handle threejs intersection object\r\n    if (obj.object && obj.object.isObject3D) return obj.object;\r\n    return obj;\r\n}\r\n\r\n\r\nexport function removeComponent(go: Object3D, componentInstance: IComponent) {\r\n    if (!go) return;\r\n    if (!go.userData.components) return;\r\n    const index = go.userData.components.indexOf(componentInstance);\r\n    if (index < 0) return;\r\n    //@ts-ignore\r\n    componentInstance.gameObject = null;\r\n    go.userData.components.splice(index, 1);\r\n}\r\n\r\nexport function getOrAddComponent<T extends IComponent>(go: Object3D, typeName: ConstructorConcrete<T>): T {\r\n    const comp = getComponent(go, typeName);\r\n    if (comp) return comp;\r\n    const newInstance = new typeName();\r\n    return addNewComponent(go, newInstance) as unknown as T;\r\n}\r\n\r\nexport function addNewComponent<T extends IComponent>(obj: Object3D, componentInstance: T, callAwake = true): IComponent {\r\n    if (!obj) {\r\n        new Error(\"Can not add componet to null object\");\r\n    }\r\n    if (!obj.userData) obj.userData = {};\r\n    if (!obj.userData.components) obj.userData.components = [];\r\n    obj.userData.components.push(componentInstance);\r\n    componentInstance.gameObject = obj as IGameObject;\r\n    apply(obj);\r\n    // componentInstance.transform = obj;\r\n    registerComponent(componentInstance);\r\n    try {\r\n        if (componentInstance.__internalAwake && callAwake) {\r\n            updateActiveInHierarchyWithoutEventCall(obj);\r\n            componentInstance.__internalAwake();\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n    return componentInstance;\r\n}\r\n\r\nexport function moveComponentInstance(obj: Object3D, componentInstance: IComponent) {\r\n    if (componentInstance.gameObject === obj) return;\r\n    // TODO: update raycast array\r\n    if (componentInstance.gameObject && componentInstance.gameObject.userData.components) {\r\n        const index = componentInstance.gameObject.userData.components.indexOf(componentInstance);\r\n        componentInstance.gameObject.userData.components.splice(index, 1);\r\n    }\r\n    if (!obj.userData.components) obj.userData.components = [];\r\n    else if (obj.userData.components.includes(componentInstance)) return;\r\n    obj.userData.components.push(componentInstance);\r\n    componentInstance.gameObject = obj as IGameObject;\r\n    // componentInstance.transform = obj;\r\n}\r\n\r\n\r\nexport function destroyComponentInstance(componentInstance: IComponent) {\r\n    // console.log(\"destroy\", componentInstance, componentInstance.onDestroy);\r\n    // TODO: update raycast array\r\n    if (componentInstance.gameObject && componentInstance.gameObject.userData.components) {\r\n        const index = componentInstance.gameObject.userData.components.indexOf(componentInstance);\r\n        componentInstance.gameObject.userData.components.splice(index, 1);\r\n    }\r\n    // should we call these methods frame delayed?\r\n    if (componentInstance.__internalDisable) componentInstance.__internalDisable();\r\n    if (componentInstance.onDestroy) componentInstance.onDestroy();\r\n    removeScriptFromContext(componentInstance, componentInstance.context ?? Context.Current);\r\n    componentInstance.__internalDestroy();\r\n    //@ts-ignore\r\n    componentInstance.gameObject = null;\r\n    // console.log(\"destroyed\", index, componentInstance);\r\n}\r\n\r\nlet didWarnAboutComponentAccess: boolean = false;\r\n\r\nfunction onGetComponent<T>(obj: Object3D | null | undefined, componentType: Constructor<T>, arr?: T[]) {\r\n    if (obj === null || obj === undefined) return;\r\n    if (!obj.isObject3D) {\r\n        console.error(\"Object is not object3D\");\r\n        return;\r\n    }\r\n    if (!(obj?.userData?.components)) return null;\r\n    if (typeof componentType === \"string\") {\r\n        if (!didWarnAboutComponentAccess) {\r\n            didWarnAboutComponentAccess = true;\r\n            console.warn(`Accessing components by name is not supported.\\nPlease use the component type instead. This may keep working in local development but it will fail when bundling your application.\\n\\nYou can import other modules your main module to get access to types\\nor if you use npmdefs you can make types available globally using globalThis:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis`, componentType);\r\n        }\r\n    }\r\n    if (debug)\r\n        console.log(\"FIND\", componentType);\r\n    if (componentType === undefined || componentType === null) return;\r\n    for (let i = 0; i < obj.userData.components.length; i++) {\r\n        const component = obj.userData.components[i];\r\n        if (componentType === null || component.constructor.name === componentType[\"name\"] || component.constructor.name === componentType) {\r\n            if (debug)\r\n                console.log(\"MATCH BY NAME\", component)\r\n            if (arr) arr.push(component);\r\n            else return component;\r\n        }\r\n    }\r\n    // find in base classes\r\n    for (let i = 0; i < obj.userData.components.length; i++) {\r\n        const component = obj.userData.components[i];\r\n        let parent = Object.getPrototypeOf(component.constructor);\r\n        do {\r\n            if (parent === componentType) {\r\n                if (debug)\r\n                    console.log(\"MATCH BY PROTOYPE\", parent);\r\n                if (arr) arr.push(component);\r\n                else return component;\r\n            }\r\n            parent = Object.getPrototypeOf(parent);\r\n        }\r\n        while (parent);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport function getComponent<T>(obj: Object3D, componentType: Constructor<T>) {\r\n    return onGetComponent(obj, componentType);\r\n}\r\n\r\nexport function getComponents<T>(obj: Object3D, componentType: Constructor<T>, arr?: T[] | null): T[] {\r\n    if (!arr) arr = [];\r\n    return onGetComponent(obj, componentType, arr);\r\n}\r\n\r\nexport function getComponentInChildren<T>(obj: Object3D, componentType: Constructor<T>, includeInactive?: boolean) {\r\n    const res = getComponent(obj, componentType);\r\n    if (includeInactive === false && res?.enabled === false) return null;\r\n    if (res) return res;\r\n    for (let i = 0; i < obj?.children?.length; i++) {\r\n        const res = getComponentInChildren(obj.children[i], componentType);\r\n        if (res) return res;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getComponentsInChildren<T>(obj: Object3D, componentType: Constructor<T>, arr?: T[]) {\r\n    if (!arr) arr = [];\r\n    getComponents(obj, componentType, arr);\r\n    for (let i = 0; i < obj?.children?.length; i++) {\r\n        getComponentsInChildren(obj.children[i], componentType, arr);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport function getComponentInParent<T>(obj: Object3D, componentType: Constructor<T>) {\r\n    if (!obj) return null;\r\n    if (Array.isArray(obj)) {\r\n        for (let i = 0; i < obj.length; i++) {\r\n            const o = tryGetObject(obj[i]);\r\n            const res = getComponentInParent(o, componentType);\r\n            if (res) return res;\r\n        }\r\n        return null;\r\n    }\r\n    // console.log(obj);\r\n    const res = getComponent(obj, componentType);\r\n    if (res) return res;\r\n    if (obj.parent)\r\n        return getComponentInParent(obj.parent, componentType);\r\n    return null;\r\n}\r\n\r\nexport function getComponentsInParent<T>(obj: Object3D, componentType: Constructor<T>, arr?: T[] | null): T[] {\r\n    if (!arr) arr = [];\r\n    if (!obj) return arr;\r\n    getComponents(obj, componentType, arr);\r\n    if (obj.parent)\r\n        return getComponentsInParent(obj.parent, componentType, arr);\r\n    return arr;\r\n}\r\n\r\nexport function findObjectOfType<T>(type: Constructor<T>, contextOrScene: Object3D | { scene: Scene }, includeInactive) {\r\n    if (!type) return null;\r\n    if (!contextOrScene) {\r\n        contextOrScene = Context.Current;\r\n        if (!contextOrScene) {\r\n            console.error(\"Can not search object without any needle context or scene!!!\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    let scene = contextOrScene as Scene;\r\n    if (!scene.isScene) scene = (contextOrScene as { scene: Scene })?.scene;\r\n    if (!scene) return null;\r\n\r\n    // const scene = contextOrScene.isScene === true || contextOrScene.isObject3D === true ? contextOrScene : contextOrScene?.scene;\r\n    for (const i in scene.children) {\r\n        const child = scene.children[i];\r\n        if (includeInactive === false && child[activeInHierarchyFieldName] === false) continue;\r\n        if (child.constructor == type) return child;\r\n        const res = getComponentInChildren(child, type);\r\n        if (res) return res;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function findObjectsOfType<T>(type: Constructor<T>, array: T[], contextOrScene): T[] {\r\n    if (!type) return array;\r\n    if (!contextOrScene) {\r\n        contextOrScene = Context.Current;\r\n        if (!contextOrScene) {\r\n            console.error(\"Can not search object without any needle context or scene!!!\");\r\n            return array;\r\n        }\r\n    }\r\n    const scene = contextOrScene.isScene === true || contextOrScene.isObject3D === true ? contextOrScene : contextOrScene?.scene;\r\n    if (!scene) return array;\r\n    for (const i in scene.children) {\r\n        const child = scene.children[i];\r\n        if (child.constructor == type) return child;\r\n        getComponentsInChildren(child, type, array);\r\n    }\r\n    return array;\r\n}", "export const NEED_UPDATE_INSTANCE_KEY = Symbol(\"NEEDLE_NEED_UPDATE_INSTANCE\");\r\n\r\n\r\n\r\nexport class InstancingUtil {\r\n    \r\n    static isUsingInstancing(instance: THREE.Object3D): boolean { return instance[\"__isUsingInstancing\"] === true; }\r\n\r\n    // TODO: change this so it does not set matrix world directly but some flag that is only used by instancing\r\n    static markDirty(go: THREE.Object3D | null, recursive: boolean = true) {\r\n        if (!go) return;\r\n        // potential optimization:\r\n        // if(go.matrixWorldNeedsUpdate) return;\r\n        // console.trace(go, GameObject.isUsingInstancing(go));\r\n        if (this.isUsingInstancing(go)) {\r\n            go[NEED_UPDATE_INSTANCE_KEY] = true;\r\n            go.matrixWorldNeedsUpdate = true;\r\n        }\r\n        if (recursive) {\r\n            for (const child of go.children) {\r\n                InstancingUtil.markDirty(child, true);\r\n            }\r\n        }\r\n    }\r\n}", "import { Object3D } from \"three\";\r\nimport { processNewScripts } from \"./engine_mainloop_utils\";\r\nimport { InstantiateIdProvider } from \"./engine_networking_instantiate\";\r\nimport { Context, registerComponent } from \"./engine_setup\";\r\nimport { logHierarchy, setWorldPosition, setWorldQuaternion } from \"./engine_three_utils\";\r\nimport { GuidsMap, IComponent as Component, IComponent, IGameObject as GameObject, UIDProvider } from \"./engine_types\";\r\nimport { getParam, tryFindObject } from \"./engine_utils\";\r\nimport { apply } from \"../engine-components/js-extensions/Object3D\";\r\nimport { InstancingUtil } from \"./engine_instancing\";\r\nimport { activeInHierarchyFieldName } from \"./engine_constants\";\r\nimport { assign } from \"./engine_serialization_core\";\r\n\r\nconst debug = getParam(\"debuggetcomponent\");\r\n\r\n\r\nexport enum HideFlags {\r\n    None = 0,\r\n    HideInHierarchy = 1,\r\n    HideInInspector = 2,\r\n    DontSaveInEditor = 4,\r\n    NotEditable = 8,\r\n    DontSaveInBuild = 16, // 0x00000010\r\n    DontUnloadUnusedAsset = 32, // 0x00000020\r\n    DontSave = DontUnloadUnusedAsset | DontSaveInBuild | DontSaveInEditor, // 0x00000034\r\n    HideAndDontSave = DontSave | NotEditable | HideInHierarchy, // 0x0000003D\r\n}\r\n\r\n\r\nexport class InstantiateOptions {\r\n    idProvider?: UIDProvider | undefined;\r\n\r\n    //** parent guid */\r\n    parent?: string | undefined | Object3D;\r\n    /** for duplicatable parenting */\r\n    keepWorldPosition?: boolean\r\n    position?: THREE.Vector3 | undefined;\r\n    rotation?: THREE.Quaternion | undefined;\r\n    scale?: THREE.Vector3 | undefined;\r\n\r\n    visible?: boolean | undefined;\r\n\r\n    context?: Context | undefined;\r\n}\r\n\r\n\r\n// export function setActive(go: Object3D, active: boolean, processStart: boolean = true) {\r\n//     if (!go) return;\r\n//     go.visible = active;\r\n//     main.updateActiveInHierarchyWithoutEventCall(go);\r\n//     if (active && processStart)\r\n//         main.processStart(Context.Current, go);\r\n// }\r\n\r\nconst $isActive = Symbol(\"isActive\");\r\n\r\nexport function isActiveSelf(go: Object3D): boolean {\r\n    const visible = go.visible || isUsingInstancing(go);\r\n    if (go[$isActive] === undefined) {\r\n        // initialize object to active so if someone's object start invisible and is set to visible = true\r\n        // it should activate the components\r\n        go[$isActive] = true;\r\n    }\r\n    return go[$isActive] && visible;\r\n}\r\n\r\nexport function setActive(go: Object3D, active: boolean | number, setVisible = true): boolean {\r\n    if (typeof active === \"number\") active = active > .5;\r\n    go[$isActive] = active;\r\n    if (setVisible) go.visible = active;\r\n    return go[$isActive];\r\n}\r\n\r\nexport function isActiveInHierarchy(go: Object3D): boolean {\r\n    return go[activeInHierarchyFieldName] || isUsingInstancing(go);\r\n}\r\n\r\nexport function markAsInstancedRendered(go: THREE.Object3D, instanced: boolean) {\r\n    go[\"__isUsingInstancing\"] = instanced;\r\n}\r\n\r\nexport function isUsingInstancing(instance: THREE.Object3D): boolean { return InstancingUtil.isUsingInstancing(instance); }\r\n\r\n\r\nexport function findByGuid(guid: string, hierarchy: THREE.Object3D): GameObject | IComponent | null | undefined {\r\n    return tryFindObject(guid, hierarchy, true, true);\r\n}\r\n\r\n\r\nexport function destroy(instance: Object3D | Component, recursive: boolean = true, isRoot: boolean = true) {\r\n    const comp = instance as Component;\r\n    if (comp.isComponent) {\r\n        comp.__internalDisable();\r\n        comp.__internalDestroy();\r\n        return;\r\n    }\r\n\r\n    const obj = instance as GameObject;\r\n    if (debug) console.log(obj);\r\n\r\n    if (recursive && obj.children) {\r\n        for (const ch of obj.children) {\r\n            destroy(ch, recursive, false);\r\n        }\r\n    }\r\n\r\n    const components = obj.userData.components;\r\n    if (components) {\r\n        let lastLength = components.length;\r\n        for (let i = 0; i < components.length; i++) {\r\n            const comp: Component = components[i];\r\n            comp.__internalDisable();\r\n            comp.__internalDestroy();\r\n            // if (comp.destroy) {\r\n            //     if (debug) console.log(\"destroying\", comp);\r\n            //     comp.destroy();\r\n            // }\r\n            // components will  be removed from componentlist in destroy\r\n            if (components.length < lastLength) {\r\n                lastLength = components.length;\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    if (isRoot)\r\n        obj.removeFromParent();\r\n}\r\n\r\n\r\nexport function foreachComponent(instance: THREE.Object3D, cb: (comp: Component) => any, recursive: boolean = true): any {\r\n    if (!instance) return;\r\n    if (!instance.isObject3D) {\r\n        new Error(\"Expected Object3D but got \" + instance);\r\n    }\r\n    if (instance.userData?.components) {\r\n        for (let i = 0; i < instance.userData.components.length; i++) {\r\n            const comp = instance.userData.components[i];\r\n            if (comp?.isComponent === true) {\r\n                const res = cb(comp);\r\n                if (res !== undefined) return res;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (recursive && instance.children) {\r\n        for (let i = 0; i < instance.children.length; i++) {\r\n            const child = instance.children[i];\r\n            if (!child) continue;\r\n            const res = foreachComponent(child, cb, recursive);\r\n            if (res !== undefined) return res;\r\n        }\r\n    }\r\n}\r\n\r\n\r\ndeclare class NewGameObjectReferenceInfo {\r\n    original: THREE.Object3D;\r\n    clone: THREE.Object3D;\r\n}\r\n\r\nexport function instantiate(instance: GameObject | Object3D | null, opts: InstantiateOptions | null = null): GameObject | null {\r\n    if (instance === null) return null;\r\n\r\n    let options: InstantiateOptions | null = null;\r\n    if (opts !== null) {\r\n        // if x is defined assume this is a vec3 - this is just to not break everything at once and stay a little bit backwards compatible\r\n        if (opts[\"x\"] !== undefined) {\r\n            options = new InstantiateOptions();\r\n            options.position = opts as unknown as THREE.Vector3;\r\n        }\r\n        else {\r\n            // if (opts instanceof InstantiateOptions)\r\n            options = opts as InstantiateOptions;\r\n            // else {\r\n            //     options = new InstantiateOptions();\r\n            //     Object.assign(options, opts);\r\n            // }\r\n        }\r\n    }\r\n\r\n    let context = Context.Current;\r\n    if (options?.context) context = options.context;\r\n    if (debug && context.alias)\r\n        console.log(\"context\", context.alias);\r\n\r\n    // we need to create the id provider before calling internal instantiate because cloned gameobjects also create new guids\r\n    if (options && !options.idProvider) {\r\n        options.idProvider = new InstantiateIdProvider(Date.now());\r\n    }\r\n\r\n    const components: Array<Component> = [];\r\n    const goMapping: { [key: string]: NewGameObjectReferenceInfo } = {}; // used to resolve references on components to components on other gameobjects to their new counterpart\r\n    const skinnedMeshes: { [key: string]: NewGameObjectReferenceInfo } = {};\r\n    const clone = internalInstantiate(context, instance, options, components, goMapping, skinnedMeshes);\r\n\r\n    if (clone) {\r\n        resolveReferences(goMapping);\r\n        resolveAndBindSkinnedMeshBones(skinnedMeshes, goMapping);\r\n    }\r\n\r\n    if (debug) {\r\n        logHierarchy(instance, true);\r\n        logHierarchy(clone, true);\r\n    }\r\n\r\n    const guidsMap: GuidsMap = {};\r\n    for (const i in components) {\r\n        const copy = components[i];\r\n        const oldGuid = copy.guid;\r\n        if (options && options.idProvider) {\r\n            copy.guid = options.idProvider.generateUUID();\r\n            guidsMap[oldGuid] = copy.guid;\r\n            if (debug)\r\n                console.log(copy.name, copy.guid)\r\n        }\r\n        registerComponent(copy, context);\r\n        if (copy.__internalNewInstanceCreated)\r\n            copy.__internalNewInstanceCreated();\r\n    }\r\n    for (const i in components) {\r\n        const copy = components[i];\r\n        if (copy.resolveGuids)\r\n            copy.resolveGuids(guidsMap);\r\n        if (copy.enabled === false) continue;\r\n        else copy.enabled = true;\r\n    }\r\n\r\n    processNewScripts(context);\r\n\r\n    return clone as GameObject;\r\n}\r\n\r\n\r\nfunction internalInstantiate(\r\n    context: Context, instance: GameObject | THREE.Object3D, opts: InstantiateOptions | null,\r\n    componentsList: Array<Component>,\r\n    newGameObjectsMap: { [key: string]: NewGameObjectReferenceInfo },\r\n    skinnedMeshesMap: { [key: string]: NewGameObjectReferenceInfo }\r\n)\r\n    : GameObject | THREE.Object3D | null {\r\n    if (!instance) return null;\r\n    // prepare, remove things that dont work out of the box\r\n    // e.g. user data we want to manually clone\r\n    // also children throw errors (e.g. recursive toJson with nested meshes)\r\n    const userData = instance.userData;\r\n    instance.userData = {};\r\n    const children = instance.children;\r\n    instance.children = [];\r\n    let clone: THREE.Object3D | GameObject;\r\n    clone = instance.clone(false);\r\n    apply(clone);\r\n    instance.userData = userData;\r\n    instance.children = children;\r\n\r\n    // make reference from old id to new object\r\n    newGameObjectsMap[instance.uuid] = { original: instance, clone: clone };\r\n\r\n    if (instance.type === \"SkinnedMesh\") {\r\n        skinnedMeshesMap[instance.uuid] = { original: instance, clone: clone };\r\n    }\r\n\r\n    // DO NOT EVER RENAME BECAUSE IT BREAKS / MIGHT BREAK ANIMATIONS\r\n    // clone.name += \" (Clone)\";\r\n\r\n    if (opts?.visible !== undefined)\r\n        clone.visible = opts.visible;\r\n\r\n    if (opts?.idProvider) {\r\n        clone.uuid = opts.idProvider.generateUUID();\r\n        const cloneGo: GameObject = clone as GameObject;\r\n        if (cloneGo) cloneGo.guid = clone.uuid;\r\n    }\r\n\r\n    if (instance.animations && instance.animations.length > 0) {\r\n        clone.animations = [...instance.animations];\r\n    }\r\n\r\n    const parent = instance.parent;\r\n    if (parent) {\r\n        parent.add(clone);\r\n    }\r\n\r\n    // apply transform\r\n    if (opts?.position) {\r\n        setWorldPosition(clone, opts.position);\r\n    }\r\n    else clone.position.copy(instance.position);\r\n    if (opts?.rotation) {\r\n        setWorldQuaternion(clone, opts.rotation);\r\n        // clone.quaternion.copy(opts.rotation);\r\n    }\r\n    else clone.quaternion.copy(instance.quaternion);\r\n    if (opts?.scale) {\r\n        // TODO: make set world scale work\r\n        clone.scale.copy(opts.scale);\r\n    }\r\n    else clone.scale.copy(instance.scale);\r\n\r\n    if (opts?.parent && opts.parent !== \"scene\") {\r\n        let requestedParent: Object3D | null = null;\r\n        if (typeof opts.parent === \"string\") {\r\n            requestedParent = tryFindObject(opts.parent, context.scene, true);\r\n        }\r\n        else {\r\n            requestedParent = opts.parent;\r\n        }\r\n        if (requestedParent) {\r\n            const func = opts.keepWorldPosition === true ? requestedParent.attach : requestedParent.add;\r\n            if (!func) console.error(\"Invalid parent object\", requestedParent, \"received when instantiating:\", instance);\r\n            else func.call(requestedParent, clone);\r\n        }\r\n        else console.warn(\"could not find parent:\", opts.parent);\r\n    }\r\n\r\n    for (const [key, value] of Object.entries(instance.userData)) {\r\n        if (key === \"components\") continue;\r\n        clone.userData[key] = value;\r\n    }\r\n\r\n    if (instance.userData?.components) {\r\n        const components = instance.userData.components;\r\n        const newComponents: Component[] = [];\r\n        clone.userData.components = newComponents;\r\n        for (let i = 0; i < components.length; i++) {\r\n            const comp = components[i];\r\n            const copy = Object.create(comp);\r\n            assign(copy, comp);\r\n            newComponents.push(copy);\r\n            copy.gameObject = clone;\r\n            // copy.transform = clone;\r\n            componentsList.push(copy);\r\n        }\r\n    }\r\n\r\n    // children should just clone the original transform\r\n    if (opts) {\r\n        opts.position = undefined;\r\n        opts.rotation = undefined;\r\n        opts.scale = undefined;\r\n        opts.parent = undefined;\r\n    }\r\n\r\n    for (const ch in instance.children) {\r\n        const child = instance.children[ch];\r\n        const newChild = internalInstantiate(context, child as GameObject, opts, componentsList, newGameObjectsMap, skinnedMeshesMap);\r\n        if (newChild)\r\n            clone.add(newChild);\r\n    }\r\n\r\n    return clone;\r\n\r\n}\r\n\r\nfunction resolveAndBindSkinnedMeshBones(\r\n    skinnedMeshes: { [key: string]: NewGameObjectReferenceInfo },\r\n    newObjectsMap: { [key: string]: NewGameObjectReferenceInfo }\r\n) {\r\n    for (const key in skinnedMeshes) {\r\n        const val = skinnedMeshes[key];\r\n        const original = val.original as THREE.SkinnedMesh;\r\n        const originalSkeleton = original.skeleton;\r\n        const clone = val.clone as THREE.SkinnedMesh;\r\n        // clone.updateWorldMatrix(true, true);\r\n        if (!originalSkeleton) {\r\n            console.warn(\"Skinned mesh has no skeleton?\", val);\r\n            continue;\r\n        }\r\n        const originalBones = originalSkeleton.bones;\r\n        const clonedSkeleton = clone.skeleton.clone();\r\n\r\n        clone.skeleton = clonedSkeleton;\r\n        clone.bindMatrix.clone().copy(original.bindMatrix);\r\n        // console.log(clone.bindMatrix)\r\n        clone.bindMatrixInverse.copy(original.bindMatrixInverse);\r\n        // clone.bindMatrix.multiplyScalar(.025);\r\n        // console.assert(originalSkeleton.uuid !== clonedSkeleton.uuid);\r\n        // console.assert(originalBones.length === clonedSkeleton.bones.length);\r\n        const bones: Array<THREE.Bone> = [];\r\n        clonedSkeleton.bones = bones;\r\n        for (let i = 0; i < originalBones.length; i++) {\r\n            const bone = originalBones[i];\r\n            const newBoneInfo = newObjectsMap[bone.uuid];\r\n            const clonedBone = newBoneInfo.clone as THREE.Bone;\r\n            // console.log(\"NEW BONE: \", clonedBone, \"BEFORE\", newBoneInfo.original);\r\n            bones.push(clonedBone);\r\n        }\r\n        // clone.skeleton = new THREE.Skeleton(bones);\r\n        // clone.skeleton.update();\r\n        // clone.pose();\r\n        // clone.scale.set(1,1,1);\r\n        // clone.position.y += .1;\r\n        // console.log(\"ORIG\", original, \"CLONE\", clone);\r\n    }\r\n    for (const key in skinnedMeshes) {\r\n        const clone = skinnedMeshes[key].clone as THREE.SkinnedMesh;\r\n        clone.skeleton.update();\r\n        // clone.skeleton.calculateInverses();\r\n        clone.bind(clone.skeleton, clone.bindMatrix);\r\n        clone.updateMatrixWorld(true);\r\n        // clone.pose();\r\n    }\r\n}\r\n\r\n// private static bindNewSkinnedMeshBones(source, clone) {\r\n//     const sourceLookup = new Map();\r\n//     const cloneLookup = new Map();\r\n//     // const clone = source.clone(false);\r\n\r\n//     function parallelTraverse(a, b, callback) {\r\n//         callback(a, b);\r\n//         for (let i = 0; i < a.children.length; i++) {\r\n//             parallelTraverse(a.children[i], b.children[i], callback);\r\n//         }\r\n//     }\r\n//     parallelTraverse(source, clone, function (sourceNode, clonedNode) {\r\n//         sourceLookup.set(clonedNode, sourceNode);\r\n//         cloneLookup.set(sourceNode, clonedNode);\r\n//     });\r\n\r\n//     clone.traverse(function (node) {\r\n//         if (!node.isSkinnedMesh) return;\r\n//         const clonedMesh = node;\r\n//         const sourceMesh = sourceLookup.get(node);\r\n//         const sourceBones = sourceMesh.skeleton.bones;\r\n\r\n//         clonedMesh.skeleton = sourceMesh.skeleton.clone();\r\n//         clonedMesh.bindMatrix.copy(sourceMesh.bindMatrix);\r\n\r\n//         clonedMesh.skeleton.bones = sourceBones.map(function (bone) {\r\n//             return cloneLookup.get(bone);\r\n//         });\r\n//         clonedMesh.bind(clonedMesh.skeleton, clonedMesh.bindMatrix);\r\n//     });\r\n//     return clone;\r\n\r\n// }\r\n\r\nfunction resolveReferences(newObjectsMap: { [key: string]: NewGameObjectReferenceInfo }) {\r\n    // for every object that is newly created we want to update references to their newly created counterparts\r\n    // e.g. a collider instance referencing a rigidbody instance should be updated so that \r\n    // the cloned collider does not reference the cloned rigidbody (instead of the original rigidbody)\r\n    for (const key in newObjectsMap) {\r\n        const val = newObjectsMap[key];\r\n        const clone = val.clone;\r\n        // resolve references\r\n        if (clone.userData?.components) {\r\n            for (let i = 0; i < clone.userData.components.length; i++) {\r\n                const copy = clone.userData.components[i];\r\n                // find referenced within a cloned gameobject\r\n                const entries = Object.entries(copy);\r\n                // console.log(copy, entries);\r\n                for (const [key, value] of entries) {\r\n                    if (Array.isArray(value)) {\r\n                        const clonedArray: Array<any> = [];\r\n                        copy[key] = clonedArray;\r\n                        // console.log(copy, key, value, copy[key]);\r\n                        for (let i = 0; i < value.length; i++) {\r\n                            const entry = value[i];\r\n                            // push value types into new array\r\n                            if (typeof entry !== \"object\") {\r\n                                clonedArray.push(entry);\r\n                                continue;\r\n                            }\r\n                            const res: any = postProcessNewInstance(copy, key, entry, newObjectsMap);\r\n                            if (res !== undefined)\r\n                                clonedArray.push(res);\r\n                            else clonedArray.push(entry);\r\n                        }\r\n                        // console.log(copy[key])\r\n                    }\r\n                    else if (typeof value === \"object\") {\r\n                        const res = postProcessNewInstance(copy, key, value as IComponent | Object3D, newObjectsMap);\r\n                        if (res !== undefined) {\r\n                            copy[key] = res;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction postProcessNewInstance(copy: THREE.Object3D, key: string, value: IComponent | Object3D | any, newObjectsMap: { [key: string]: NewGameObjectReferenceInfo }) {\r\n    if (value === null || value === undefined) return;\r\n    if ((value as IComponent).isComponent === true) {\r\n        const originalGameObjectReference = value[\"gameObject\"];\r\n        // console.log(key, value, originalGameObjectReference);\r\n        if (originalGameObjectReference) {\r\n            const id = originalGameObjectReference.uuid;\r\n            const newGameObject = newObjectsMap[id]?.clone;\r\n            if (!newGameObject) {\r\n                // reference has not changed!\r\n                if (debug)\r\n                    console.log(\"reference did not change\", key, copy, value);\r\n                return;\r\n            }\r\n            const index = originalGameObjectReference.userData.components.indexOf(value);\r\n            if (index >= 0) {\r\n                if (debug)\r\n                    console.log(key, id);\r\n                const found = newGameObject.userData.components[index];\r\n                return found;\r\n            }\r\n            else {\r\n                console.warn(\"could not find component\", key, value);\r\n            }\r\n        }\r\n    } else if ((value as Object3D).isObject3D === true) {\r\n        // console.log(value);\r\n        if (key === \"gameObject\") return;\r\n        const originalGameObjectReference = value as Object3D;\r\n        if (originalGameObjectReference) {\r\n            const id = originalGameObjectReference.uuid;\r\n            const newGameObject = newObjectsMap[id]?.clone;\r\n            if (newGameObject) {\r\n                if (debug)\r\n                    console.log(key, \"old\", value, \"new\", newGameObject);\r\n                return newGameObject;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // create new instances for some types that we know should usually not be shared and can safely be cloned\r\n        if (value.isVector4 || value.isVector3 || value.isVector2 || value.isQuaternion || value.isEuler) {\r\n            return value.clone();\r\n        }\r\n    }\r\n}", "import * as THREE from 'three';\r\nimport { BufferAttribute, Line, BoxGeometry, EdgesGeometry, Color, LineSegments, LineBasicMaterial, Object3D, Mesh, SphereGeometry, ColorRepresentation, Vector3, Box3, Quaternion } from 'three';\r\nimport { Context } from './engine_setup';\r\nimport { setWorldPosition, setWorldPositionXYZ } from './engine_three_utils';\r\nimport { Vec3, Vec4 } from './engine_types';\r\n\r\nconst _tmp = new Vector3();\r\nconst _quat = new Quaternion();\r\n\r\nconst defaultColor: ColorRepresentation = 0x888888;\r\n\r\nexport class Gizmos {\r\n\r\n    static DrawRay(origin: Vec3, dir: Vec3, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true) {\r\n        const obj = Internal.getLine(duration);\r\n        const positions = obj.geometry.getAttribute(\"position\");\r\n        positions.setXYZ(0, origin.x, origin.y, origin.z);\r\n        _tmp.set(dir.x, dir.y, dir.z).multiplyScalar(999999999);\r\n        positions.setXYZ(1, origin.x + _tmp.x, origin.y + _tmp.y, origin.z + _tmp.z);\r\n        positions.needsUpdate = true;\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n    }\r\n\r\n    static DrawDirection(pt: Vec3, direction: Vec3 | Vec4, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true, lengthFactor: number = 1) {\r\n        const obj = Internal.getLine(duration);\r\n        const positions = obj.geometry.getAttribute(\"position\");\r\n        positions.setXYZ(0, pt.x, pt.y, pt.z);\r\n        if (direction[\"w\"] !== undefined) {\r\n            _tmp.set(0, 0, -lengthFactor);\r\n            _quat.set(direction[\"x\"], direction[\"y\"], direction[\"z\"], direction[\"w\"]);\r\n            _tmp.applyQuaternion(_quat);\r\n        }\r\n        else {\r\n            _tmp.set(direction.x, direction.y, direction.z);\r\n            _tmp.multiplyScalar(lengthFactor);\r\n        }\r\n        positions.setXYZ(1, pt.x + _tmp.x, pt.y + _tmp.y, pt.z + _tmp.z);\r\n        positions.needsUpdate = true;\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n\r\n    }\r\n\r\n    static DrawLine(pt0: Vec3, pt1: Vec3, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true) {\r\n        const obj = Internal.getLine(duration);\r\n\r\n        const positions = obj.geometry.getAttribute(\"position\");\r\n        positions.setXYZ(0, pt0.x, pt0.y, pt0.z);\r\n        positions.setXYZ(1, pt1.x, pt1.y, pt1.z);\r\n        positions.needsUpdate = true;\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n    }\r\n\r\n    static DrawWireSphere(center: Vec3, radius: number, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true) {\r\n        const obj = Internal.getSphere(radius, duration, true);\r\n        setWorldPositionXYZ(obj, center.x, center.y, center.z);\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n    }\r\n\r\n    static DrawSphere(center: Vec3, radius: number, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true) {\r\n        const obj = Internal.getSphere(radius, duration, false);\r\n        setWorldPositionXYZ(obj, center.x, center.y, center.z);\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n    }\r\n\r\n    static DrawBox(center: Vec3, size: Vec3, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true) {\r\n        const obj = Internal.getBox(duration);\r\n        obj.position.set(center.x, center.y, center.z);\r\n        obj.scale.set(size.x, size.y, size.z);\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n        obj.material[\"wireframe\"] = true;\r\n    }\r\n\r\n    static DrawBox3(box:Box3, color: ColorRepresentation = defaultColor, duration: number = 0, depthTest: boolean = true) {\r\n        const obj = Internal.getBox(duration);\r\n        obj.position.copy(box.getCenter(_tmp));\r\n        obj.scale.copy(box.getSize(_tmp));\r\n        obj.material[\"color\"].set(color);\r\n        obj.material[\"depthTest\"] = depthTest;\r\n        obj.material[\"wireframe\"] = true;\r\n    }\r\n}\r\n\r\nconst box: BoxGeometry = new BoxGeometry(1, 1, 1);\r\nexport function CreateWireCube(col: THREE.ColorRepresentation | null = null): THREE.LineSegments {\r\n    const color = new Color(col ?? 0xdddddd);\r\n    // const material = new THREE.MeshBasicMaterial();\r\n    // material.color = new THREE.Color(col ?? 0xdddddd);\r\n    // material.wireframe = true;\r\n    // const box = new THREE.Mesh(box, material);\r\n    // box.name = \"BOX_GIZMO\";\r\n    const edges = new EdgesGeometry(box);\r\n    const line = new LineSegments(edges, new LineBasicMaterial({ color: color }));\r\n    return line;\r\n}\r\n\r\n\r\n\r\nconst $cacheSymbol = Symbol(\"GizmoCache\");\r\nclass Internal {\r\n    // private static createdLines: number = 0;\r\n\r\n    static getBox(duration: number): Mesh {\r\n        let box = this.boxesCache.pop();\r\n        if (!box) {\r\n            const geo: BoxGeometry = new BoxGeometry(1, 1, 1);\r\n            box = new Mesh(geo);\r\n        }\r\n        this.registerTimedObject(Context.Current, box, duration, this.boxesCache);\r\n        return box;\r\n    }\r\n\r\n    static getLine(duration: number): Line {\r\n        let line = this.linesCache.pop();\r\n        if (!line) {\r\n            line = new Line();\r\n            let positions = line.geometry.getAttribute(\"position\");\r\n            if (!positions) {\r\n                positions = new BufferAttribute(new Float32Array(2 * 3), 3);\r\n                line.geometry.setAttribute(\"position\", positions);\r\n            }\r\n        }\r\n        this.registerTimedObject(Context.Current, line, duration, this.linesCache);\r\n        return line;\r\n    }\r\n\r\n    static getSphere(radius: number, duration: number, wireframe: boolean): Mesh {\r\n\r\n        let sphere = this.spheresCache.pop();\r\n        if (!sphere) {\r\n            sphere = new Mesh(new SphereGeometry(.5, 8, 8));\r\n        }\r\n        sphere.scale.set(radius, radius, radius);\r\n        sphere.material[\"wireframe\"] = wireframe;\r\n        this.registerTimedObject(Context.Current, sphere, duration, this.spheresCache);\r\n        return sphere;\r\n    }\r\n\r\n    private static linesCache: Array<Line> = [];\r\n    private static spheresCache: Mesh[] = [];\r\n    private static boxesCache: Mesh[] = [];\r\n\r\n    private static registerTimedObject(context: Context, object: Object3D, duration: number, cache: Array<Object3D>) {\r\n        if (!this.contextPostRenderCallbacks.get(context)) {\r\n            const cb = () => { this.onPostRender(context, this.timedObjectsBuffer, this.timesBuffer) };\r\n            this.contextPostRenderCallbacks.set(context, cb);\r\n            context.post_render_callbacks.push(cb);\r\n        }\r\n        object[$cacheSymbol] = cache;\r\n        this.timedObjectsBuffer.push(object);\r\n        this.timesBuffer.push(Context.Current.time.time + duration);\r\n        context.scene.add(object);\r\n    }\r\n\r\n\r\n    private static timedObjectsBuffer = new Array<Object3D>();\r\n    private static timesBuffer = new Array<number>();\r\n    private static contextPostRenderCallbacks = new Map<Context, () => void>();\r\n\r\n    private static onPostRender(ctx: Context, objects: Array<Object3D>, times: Array<number>) {\r\n        const time = ctx.time.time;\r\n        for (let i = 0; i < objects.length; i++) {\r\n            if (time > times[i]) {\r\n                const obj = objects[i];\r\n                const cache = obj[$cacheSymbol];\r\n                cache.push(obj as Line);\r\n                ctx.scene.remove(obj);\r\n                objects.splice(i, 1);\r\n                times.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n}", "\r\nimport { Clock } from 'three'\r\n\r\nexport class Time {\r\n\r\n    deltaTime = 0;\r\n    time = 0;\r\n\r\n    /** same as frameCount */\r\n    frame = 0;\r\n\r\n    get realtimeSinceStartup(): number {\r\n        return this.clock.elapsedTime;\r\n    }\r\n\r\n    get frameCount() { return this.frame; }\r\n    get smoothedFps() { return this._smoothedFps; }\r\n\r\n\r\n    private clock = new Clock();\r\n\r\n    private _smoothedFps: number = 0;\r\n    private _fpsSamples: number[] = [];\r\n    private _fpsSampleIndex: number = 0;\r\n\r\n    update() {\r\n        this.deltaTime = this.clock.getDelta();\r\n        // clamp delta time because if tab is not active clock.getDelta can get pretty big\r\n        this.deltaTime = Math.min(.1, this.deltaTime);\r\n        if(this.deltaTime <= 0) this.deltaTime = 0.000000000001;\r\n        this.frame += 1;\r\n        this.time += this.deltaTime;\r\n\r\n        if (this._fpsSamples.length < 30) this._fpsSamples.push(this.deltaTime);\r\n        else this._fpsSamples[(this._fpsSampleIndex++) % 30] = this.deltaTime;\r\n        let sum = 0;\r\n        for (let i = 0; i < this._fpsSamples.length; i++)\r\n            sum += this._fpsSamples[i];\r\n        this._smoothedFps = 1/(sum / this._fpsSamples.length);\r\n    }\r\n}", "// import geckos, { ClientChannel, Data } from '@geckos.io/client';\r\n\r\n// const serverUrl = 'wss://tiny-server-1-r26roub2hq-ew.a.run.app/';\r\nlet serverUrl = 'wss://needle-tiny-starter.glitch.me/socket';\r\n\r\nimport { Websocket, WebsocketBuilder } from 'websocket-ts';\r\n// import { Networking } from '../engine-components/Networking';\r\nimport { Context } from './engine_setup';\r\nimport * as utils from \"./engine_utils\";\r\nimport * as flatbuffers from 'flatbuffers';\r\nimport * as schemes from \"../engine-schemes/schemes\";\r\nimport { PeerNetworking } from './engine_networking_peer';\r\nimport { IModel, INetworkConnection, SendQueue } from './engine_networking_types';\r\nimport { isHostedOnGlitch } from './engine_networking_utils';\r\n\r\nexport const debugNet = utils.getParam(\"debugnet\") ? true : false;\r\nexport const debugOwner = debugNet || utils.getParam(\"debugowner\") ? true : false;\r\n\r\nexport interface INetworkingWebsocketUrlProvider {\r\n    getWebsocketUrl(): string | null;\r\n}\r\n\r\nexport declare interface IConnectionData {\r\n    id: string;\r\n}\r\n\r\ndeclare type WebsocketMessage = {\r\n    key: string,\r\n    data: IModel | IConnectionData | undefined;\r\n    room: string | undefined;\r\n}\r\n\r\nexport enum ConnectionEvents {\r\n    ConnectionInfo = \"connection-start-info\"\r\n}\r\n\r\nexport enum RoomEvents {\r\n    Join = \"join-room\",\r\n    Leave = \"leave-room\",\r\n    JoinedRoom = \"joined-room\",\r\n    LeftRoom = \"left-room\",\r\n    UserJoinedRoom = \"user-joined-room\",\r\n    UserLeftRoom = \"user-left-room\",\r\n}\r\n\r\nexport class JoinedRoomResponse {\r\n    room!: string; // room name\r\n    viewId!: string;\r\n    allowEditing!: boolean;\r\n    inRoom!: string[]; // connection ids\r\n}\r\n\r\nexport class LeftRoomResponse {\r\n    room!: string; // room name\r\n}\r\n\r\nexport class UserJoinedOrLeftRoomModel {\r\n    userId!: string;\r\n}\r\n\r\nexport enum OwnershipEvent {\r\n    RequestHasOwner = 'request-has-owner',\r\n    ResponseHasOwner = \"response-has-owner\",\r\n    RequestIsOwner = 'request-is-owner',\r\n    ResponseIsOwner = \"response-is-owner\",\r\n    RequestOwnership = \"request-ownership\",\r\n    GainedOwnership = 'gained-ownership',\r\n    RemoveOwnership = \"remove-ownership\",\r\n    LostOwnership = 'lost-ownership',\r\n    GainedOwnershipBroadcast = 'gained-ownership-broadcast',\r\n    LostOwnershipBroadcast = 'lost-ownership-broadcast',\r\n}\r\n\r\ndeclare type GainedOwnershipBroadcastResponse = {\r\n    guid: string;\r\n    owner: string;\r\n}\r\ndeclare type LostOwnershipBroadcastResponse = {\r\n    guid: string;\r\n    owner: string;\r\n}\r\n\r\ndeclare type OwnershipResponse = {\r\n    guid: string;\r\n    value: boolean;\r\n}\r\n\r\nexport class OwnershipModel {\r\n\r\n    public guid: string;\r\n    private connection: NetworkConnection;\r\n\r\n    public get hasOwnership(): boolean {\r\n        return this._hasOwnership;\r\n    }\r\n\r\n    // TODO: server should just send id to everyone\r\n\r\n    // if anyone has ownership\r\n    public get isOwned(): boolean | undefined {\r\n        return this._isOwned;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.connection.isConnected;\r\n    }\r\n\r\n    private _hasOwnership: boolean = false;\r\n    private _isOwned: boolean | undefined = undefined;\r\n    private _gainSubscription: Function;\r\n    private _lostSubscription: Function;\r\n    private _hasOwnerResponse: Function;\r\n\r\n    constructor(connection: NetworkConnection, guid: string) {\r\n        this.connection = connection;\r\n        this.guid = guid;\r\n        this._gainSubscription = this.onGainedOwnership.bind(this);\r\n        this._lostSubscription = this.onLostOwnership.bind(this);\r\n        connection.beginListen(OwnershipEvent.LostOwnership, this._lostSubscription);\r\n        connection.beginListen(OwnershipEvent.GainedOwnershipBroadcast, this._gainSubscription);\r\n\r\n        this._hasOwnerResponse = this.onHasOwnerResponse.bind(this);\r\n        connection.beginListen(OwnershipEvent.ResponseHasOwner, this._hasOwnerResponse);\r\n    }\r\n\r\n    private _isWaitingForOwnershipResponseCallback: Function | null = null;\r\n\r\n    public updateIsOwned() {\r\n        this.connection.send(OwnershipEvent.RequestHasOwner, { guid: this.guid });\r\n    }\r\n\r\n    private onHasOwnerResponse(res: OwnershipResponse) {\r\n        if (res.guid === this.guid) {\r\n            this._isOwned = res.value;\r\n        }\r\n    }\r\n\r\n    public requestOwnershipIfNotOwned(): OwnershipModel {\r\n        if (this._isWaitingForOwnershipResponseCallback !== null) return this;\r\n        this._isWaitingForOwnershipResponseCallback = this.waitForHasOwnershipRequestResponse.bind(this);\r\n        this.connection.beginListen(OwnershipEvent.ResponseHasOwner, this._isWaitingForOwnershipResponseCallback);\r\n        this.connection.send(OwnershipEvent.RequestHasOwner, { guid: this.guid });\r\n        return this;\r\n    }\r\n\r\n    private waitForHasOwnershipRequestResponse(res: OwnershipResponse) {\r\n        // console.log(res);\r\n        if (res.guid === this.guid) {\r\n            if (this._isWaitingForOwnershipResponseCallback) {\r\n                this.connection.stopListening(OwnershipEvent.ResponseHasOwner, this._isWaitingForOwnershipResponseCallback);\r\n                this._isWaitingForOwnershipResponseCallback = null;\r\n            }\r\n            this._isOwned = res.value;\r\n            if (!res.value) {\r\n                if (debugOwner)\r\n                    console.log(\"request ownership\", this.guid)\r\n                this.requestOwnership();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public requestOwnershipAsync(): Promise<OwnershipModel> {\r\n        return new Promise((resolve, reject) => {\r\n            this.requestOwnership();\r\n            let updates = 0;\r\n            const waitForOwnership = () => {\r\n                if (updates++ > 10) return reject(\"Timeout\");\r\n                setTimeout(() => {\r\n                    if (this.hasOwnership) resolve(this);\r\n                    else waitForOwnership();\r\n                }, 100);\r\n            };\r\n            waitForOwnership();\r\n        });\r\n    }\r\n\r\n    public requestOwnership(): OwnershipModel {\r\n        if (debugOwner) console.log(\"Request ownership\", this.guid);\r\n        this.connection.send(OwnershipEvent.RequestOwnership, { guid: this.guid });\r\n        return this;\r\n    }\r\n\r\n    public freeOwnership(): OwnershipModel {\r\n        // TODO: abort \"requestOwnershipIfNotOwned\"\r\n        this.connection.send(OwnershipEvent.RemoveOwnership, { guid: this.guid });\r\n        if (this._isWaitingForOwnershipResponseCallback) {\r\n            this.connection.stopListening(OwnershipEvent.ResponseHasOwner, this._isWaitingForOwnershipResponseCallback);\r\n            this._isWaitingForOwnershipResponseCallback = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public destroy() {\r\n        this.connection.stopListening(OwnershipEvent.GainedOwnership, this._gainSubscription);\r\n        this.connection.stopListening(OwnershipEvent.LostOwnership, this._lostSubscription);\r\n        this.connection.stopListening(OwnershipEvent.ResponseHasOwner, this._hasOwnerResponse);\r\n        if (this._isWaitingForOwnershipResponseCallback) {\r\n            this.connection.stopListening(OwnershipEvent.ResponseHasOwner, this._isWaitingForOwnershipResponseCallback);\r\n            this._isWaitingForOwnershipResponseCallback = null;\r\n        }\r\n    }\r\n\r\n    private onGainedOwnership(res: GainedOwnershipBroadcastResponse) {\r\n        if (res.guid === this.guid) {\r\n            this._isOwned = true;\r\n            // console.log(res.owner, connection.connectionId)\r\n            if (this.connection.connectionId === res.owner) {\r\n                if (debugOwner)\r\n                    console.log(\"GAINED OWNERSHIP\", this.guid)\r\n                this._hasOwnership = true;\r\n            }\r\n            else this._hasOwnership = false;\r\n        }\r\n    }\r\n    private onLostOwnership(guid: string) {\r\n        if (guid === this.guid) {\r\n            if (debugOwner)\r\n                console.log(\"LOST OWNERSHIP\", this.guid)\r\n            this._hasOwnership = false;\r\n            this._isOwned = false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport declare type BinaryCallback = {\r\n    (data: any | flatbuffers.ByteBuffer): void;\r\n}\r\n\r\nexport class NetworkConnection implements INetworkConnection {\r\n\r\n    private context: Context;\r\n    private _peer: PeerNetworking | null = null;\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public get peer(): PeerNetworking {\r\n        if (!this._peer) {\r\n            this._peer = new PeerNetworking();\r\n        }\r\n        return this._peer;\r\n    }\r\n\r\n    public tryGetState(guid: string): IModel | null {\r\n        if (guid === \"invalid\") return null;\r\n        return this._state[guid];\r\n    }\r\n\r\n    public get connectionId(): string | null {\r\n        return this._connectionId;\r\n    }\r\n\r\n    public get isDebugEnabled(): boolean {\r\n        return debugNet;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.connected;\r\n    }\r\n\r\n    public get currentRoomName(): string | null { return this._currentRoomName; }\r\n    public get allowEditing(): boolean { return this._currentRoomAllowEditing; }\r\n    // use this to join a room in view mode (see SyncedRoom)\r\n    public get currentRoomViewId(): string | null { return this._currentRoomViewId; }\r\n\r\n    public get isInRoom(): boolean {\r\n        return this._isInRoom;\r\n    }\r\n\r\n    public get currentLatency(): number {\r\n        return this._currentDelay;\r\n    }\r\n\r\n    public userIsInRoom(id: string): boolean {\r\n        return this._currentInRoom.indexOf(id) !== -1;\r\n    }\r\n\r\n    private _usersInRoomCopy = [];\r\n    public usersInRoom(target: string[] | null = null): string[] {\r\n        if (!target) target = this._usersInRoomCopy;\r\n        target.length = 0;\r\n        for (const user of this._currentInRoom)\r\n            target.push(user);\r\n        return target;\r\n    }\r\n\r\n    public joinRoom(room: string, viewOnly: boolean = false) {\r\n        this.connect();\r\n\r\n        if (debugNet)\r\n            console.log(\"join: \" + room);\r\n        this.send(RoomEvents.Join, { room: room, viewOnly: viewOnly }, SendQueue.OnConnection);\r\n    }\r\n\r\n    public leaveRoom(room: string | null = null) {\r\n        if (!room) room = this.currentRoomName;\r\n        if (!room) {\r\n            console.error(\"Can not leave unknown room\");\r\n            return;\r\n        }\r\n        this.send(RoomEvents.Leave, { room: room });\r\n    }\r\n\r\n    public send(key: string | OwnershipEvent, data: IModel | object | boolean | null | string | number = null, queue: SendQueue = SendQueue.Queued) {\r\n\r\n        if (data === null) data = {};\r\n\r\n        if (queue === SendQueue.Queued) {\r\n            this._defaultMessagesBuffer.push({ key: key, value: data });\r\n            return;\r\n        }\r\n\r\n        // if (!this.connected) return;\r\n        // if (this.channelId)\r\n        //     data[\"__id\"] = this.channelId;\r\n        // else if (this.connectionId)\r\n        //     data[\"__id\"] = this.connectionId;\r\n        // this.sendGeckosIo(key, data);\r\n        return this.sendWithWebsocket(key, data, queue);\r\n    }\r\n\r\n    public sendDeleteRemoteState(guid: string) {\r\n        this.send(\"delete-state\", { guid: guid, dontSave: true });\r\n        delete this._state[guid];\r\n    }\r\n\r\n    public sendDeleteRemoteStateAll(){\r\n        this.send(\"delete-all-state\");\r\n        this._state = {};\r\n    }\r\n\r\n    public sendBinary(bin: Uint8Array) {\r\n        if (debugNet) console.log(\"<< bin\", bin.length);\r\n        this._ws?.send(bin);\r\n    }\r\n\r\n    private _defaultMessagesBuffer: Array<{ key: string, value: any }> = [];\r\n    private _defaultMessagesBufferArray: Array<{ key: string, data: any }> = [];\r\n    public sendBufferedMessagesNow() {\r\n        if (!this._ws) return;\r\n        this._defaultMessagesBufferArray.length = 0;\r\n        const count = Object.keys(this._defaultMessagesBuffer).length;\r\n        for (const key in this._defaultMessagesBuffer) {\r\n            const data = this._defaultMessagesBuffer[key];\r\n            // if there is only one message to be sent we dont need to send an array\r\n            if (count <= 1) {\r\n                this.sendWithWebsocket(data.key, data.value, SendQueue.Immediate);\r\n                break;\r\n            }\r\n            const msg = this.toMessage(data.key, data.value);\r\n            this._defaultMessagesBufferArray.push(msg);\r\n        }\r\n        this._defaultMessagesBuffer.length = 0;\r\n        if (this._defaultMessagesBufferArray.length > 0 && debugNet)\r\n            console.log(\"SEND BUFFERED\", this._defaultMessagesBufferArray.length);\r\n        if (this._defaultMessagesBufferArray.length <= 0) return;\r\n        const message = JSON.stringify(this._defaultMessagesBufferArray);\r\n        this._ws?.send(message);\r\n    }\r\n\r\n    public beginListen(key: string | OwnershipEvent, callback: Function): Function {\r\n        if (!this._listeners[key])\r\n            this._listeners[key] = [];\r\n        this._listeners[key].push(callback);\r\n        return callback;\r\n    }\r\n\r\n    public stopListening(key: string | OwnershipEvent, callback: Function | null) {\r\n        if (!callback) return;\r\n        if (!this._listeners[key]) return;\r\n        const index = this._listeners[key].indexOf(callback);\r\n        if (index >= 0) {\r\n            this._listeners[key].splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public beginListenBinrary(identifier: string, callback: BinaryCallback): BinaryCallback {\r\n        if (!this._listenersBinary[identifier])\r\n            this._listenersBinary[identifier] = [];\r\n        this._listenersBinary[identifier].push(callback);\r\n        return callback;\r\n    }\r\n\r\n    public stopListenBinary(identifier: string, callback: any) {\r\n        if (!this._listenersBinary[identifier]) return;\r\n        const index = this._listenersBinary[identifier].indexOf(callback);\r\n        if (index >= 0) {\r\n            this._listenersBinary[identifier].splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private netWebSocketUrlProvider?: INetworkingWebsocketUrlProvider;\r\n\r\n    public registerProvider(prov: INetworkingWebsocketUrlProvider) {\r\n        this.netWebSocketUrlProvider = prov;\r\n    }\r\n\r\n    public connect() {\r\n        if (this.connected) return;\r\n        if (debugNet)\r\n            console.log(\"connecting\");\r\n        // this.channel = geckos({ port: 9208, url: 'http://127.0.0.1' });\r\n        // this.channel.onConnect(this.onConnectGeckosIo.bind(this));\r\n        // const networking = GameObject.findObjectOfType(Networking, this.context, false);\r\n        const overrideUrl = this.netWebSocketUrlProvider?.getWebsocketUrl();\r\n        if (overrideUrl) {\r\n            serverUrl = overrideUrl;\r\n        }\r\n        else if(isHostedOnGlitch()) {\r\n            serverUrl = \"wss://\" + window.location.host + \"/socket\";\r\n        }\r\n        this.connectWebsocket();\r\n    };\r\n\r\n    private _listeners: { [key: string]: Function[] } = {};\r\n    private _listenersBinary: { [key: string]: BinaryCallback[] } = {};\r\n    private connected: boolean = false;\r\n    private channelId: string | undefined;\r\n    private _connectionId: string | null = null;\r\n\r\n    // Websocket ------------------------------------------------------------\r\n    private _isConnectingToWebsocket: boolean = false;\r\n    private _ws: Websocket | undefined;\r\n    private _waitingForSocket: { [key: string]: Array<Function> } = {};\r\n    private _isInRoom: boolean = false;\r\n    private _currentRoomName: string | null = null;\r\n    private _currentRoomViewId: string | null = null;\r\n    private _currentRoomAllowEditing: boolean = true;\r\n    private _currentInRoom: string[] = [];\r\n    private _state: { [key: string]: any } = {};\r\n    private _currentDelay: number = -1;\r\n\r\n    private connectWebsocket() {\r\n        if (this._isConnectingToWebsocket) return;\r\n        this._isConnectingToWebsocket = true;\r\n        console.log(\"Connecting to \" + serverUrl)\r\n        const ws = new WebsocketBuilder(serverUrl)\r\n            .onOpen(() => {\r\n                this._ws = ws;\r\n                this._isConnectingToWebsocket = false;\r\n                this.connected = true;\r\n                console.log(\"Connected to websocket\");\r\n                this.onSendQueued(SendQueue.OnConnection);\r\n            })\r\n            .onClose((_evt) => {\r\n                this.connected = false;\r\n                this._isInRoom = false;\r\n            })\r\n            .onError((i, ev) => { console.error(i, ev) })\r\n            .onMessage(this.onMessage.bind(this))\r\n            .onRetry(() => { console.log(\"websocket connection retry\") })\r\n            .build();\r\n    }\r\n\r\n    private onMessage(_, ev) {\r\n        const msg = ev.data;\r\n        try {\r\n            if (typeof msg !== \"string\") {\r\n                if (msg.size) {\r\n                    // is binary blob\r\n                    this.handleIncomingBinaryMessage(msg);\r\n                }\r\n                return;\r\n            }\r\n            const message: WebsocketMessage | Array<WebsocketMessage> = JSON.parse(msg);\r\n            if (Array.isArray(message)) {\r\n                // console.log(\"Receive package of \" + message.length + \" messages\")\r\n                for (const msg of message) {\r\n                    this.handleIncomingStringMessage(msg);\r\n                }\r\n            }\r\n            else this.handleIncomingStringMessage(message);\r\n            return;\r\n        }\r\n        catch {\r\n            if (debugNet && msg === \"pong\") console.log(\"<<\", msg);\r\n        }\r\n    }\r\n\r\n    private async handleIncomingBinaryMessage(blob: Blob) {\r\n        const buf = await blob.arrayBuffer();\r\n        var data = new Uint8Array(buf);\r\n        const bb = new flatbuffers.ByteBuffer(data);\r\n        const id = bb.getBufferIdentifier();\r\n        const callbacks = this._listenersBinary[id];\r\n        // use registered cast methods to get the correct type from the flatbuffer\r\n        const obj = schemes.tryCast(bb);\r\n        const guid = schemes.tryGetGuid(obj);\r\n        if (guid && typeof guid === \"string\") {\r\n            this._state[guid] = obj;\r\n        }\r\n        if (!callbacks) return;\r\n        const res = obj ?? bb; // fallback to bytebuffer if no cast method is registered\r\n        // call all listeners subscribed to these events\r\n        for (const cb of callbacks) {\r\n            cb(res);\r\n        }\r\n    }\r\n\r\n    private handleIncomingStringMessage(message: WebsocketMessage) {\r\n\r\n        if (debugNet) console.log(\"<<\", message.key ?? message);\r\n        if (message.key) {\r\n            switch (message.key) {\r\n                case ConnectionEvents.ConnectionInfo:\r\n                    if (message.data) {\r\n                        const connection = message.data as IConnectionData;\r\n                        if (connection) {\r\n                            console.assert(connection.id !== undefined && connection.id !== null && connection.id.length > 0,\r\n                                \"server did not send connection id\", connection.id);\r\n                            // if (debugNet) \r\n                            console.log(\"Your id is: \" + connection.id, this.context.alias ?? \"\");\r\n                            this._connectionId = connection.id;\r\n                        }\r\n                    }\r\n                    else console.warn(\"Expected connection id in \" + message.key);\r\n                    break;\r\n                case RoomEvents.JoinedRoom:\r\n                    if (debugNet)\r\n                        console.log(message);\r\n                    if (message) {\r\n                        this._isInRoom = true;\r\n                        const model = message as unknown as JoinedRoomResponse;\r\n                        this._currentRoomName = model.room;\r\n                        this._currentRoomViewId = model.viewId;\r\n                        this._currentRoomAllowEditing = model.allowEditing ?? true;\r\n                        console.log(\"Room view id\", this._currentRoomViewId);\r\n                        this._currentInRoom.length = 0;\r\n                        this._currentInRoom.push(...model.inRoom);\r\n                        if (debugNet)\r\n                            console.log(\"joined room with\", this._currentInRoom, this.context.alias ?? \"\");\r\n                    }\r\n\r\n                    this.onSendQueued(SendQueue.OnRoomJoin);\r\n                    break;\r\n\r\n                case RoomEvents.LeftRoom:\r\n                    const model = message as unknown as LeftRoomResponse;\r\n                    if (model.room === this.currentRoomName) {\r\n                        this._isInRoom = false;\r\n                        this._currentRoomName = null;\r\n                        this._currentInRoom.length = 0;\r\n                    }\r\n                    break;\r\n                case RoomEvents.UserJoinedRoom:\r\n                    if (message.data) {\r\n                        const model = message.data as unknown as UserJoinedOrLeftRoomModel;\r\n                        this._currentInRoom.push(model.userId);\r\n                        if (debugNet)\r\n                            console.log(model.userId + \" joined\", \"now in room:\", this._currentInRoom);\r\n                    }\r\n                    break;\r\n                case RoomEvents.UserLeftRoom:\r\n                    if (message.data) {\r\n                        const model = message.data as unknown as UserJoinedOrLeftRoomModel;\r\n                        const index = this._currentInRoom.indexOf(model.userId);\r\n                        if (index >= 0) {\r\n                            console.log(model.userId + \" left\", this.context.alias ?? \"\");\r\n                            this._currentInRoom.splice(index, 1);\r\n                        }\r\n                        if (model.userId === this.connectionId) {\r\n                            // you left the room\r\n                            console.log(\"you left the room\");\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"all-room-state-deleted\":\r\n                    if(debugNet) console.log(\"RECEIVED all-room-state-deleted\");\r\n                    this._state = {};\r\n                    break;\r\n\r\n                case \"ping\":\r\n                case \"pong\":\r\n                    const time = (message as any).data?.time;\r\n                    if (time) {\r\n                        this._currentDelay = this.context.time.time - time;\r\n                    }\r\n                    if (debugNet)\r\n                        console.log(\"Current latency: \" + this._currentDelay.toFixed(1) + \" sec\", \"Clients in room: \" + this._currentInRoom?.length);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const listeners = this._listeners[message.key];\r\n        if (listeners) {\r\n            for (const listener of listeners) {\r\n                listener(message.data);\r\n            }\r\n        }\r\n\r\n        const model = message.data as IModel;\r\n        if (model) {\r\n            this._state[model.guid] = model;\r\n        }\r\n    }\r\n\r\n    private toMessage(key: string, data: any) {\r\n        return {\r\n            key: key,\r\n            data: data\r\n        };\r\n    }\r\n\r\n    private sendWithWebsocket(key: string, data: IModel | object | boolean | string | number, queue: SendQueue = SendQueue.OnRoomJoin) {\r\n        // console.log(key);\r\n        if (!this._ws) {\r\n            const arr = this._waitingForSocket[queue] || [];\r\n            arr.push(() => this.sendWithWebsocket(key, data, queue));\r\n            this._waitingForSocket[queue] = arr;\r\n            // console.log(this._bufferedMessages)\r\n            return;\r\n        }\r\n        const str = JSON.stringify(this.toMessage(key, data));\r\n        if (debugNet) console.log(\">>\", key);\r\n        this._ws.send(str);\r\n    }\r\n\r\n    private onSendQueued(queue: SendQueue) {\r\n        const queued = this._waitingForSocket[queue];\r\n        // console.log(\"send\", queue, queued);\r\n        if (queued) {\r\n            for (const callback of queued) {\r\n                callback();\r\n            }\r\n            queued.length = 0;\r\n        }\r\n    }\r\n\r\n\r\n    // GECKOS IO ------------------------------------------------------------\r\n\r\n    // private channel!: ClientChannel;\r\n\r\n    // private sendGeckosIo(key: string, data: MessageData) {\r\n    //     this.channel.emit(key, data);\r\n    // }\r\n\r\n    // private onConnectGeckosIo(err) {\r\n    //     if (err) {\r\n    //         console.error(err);\r\n    //         return;\r\n    //     }\r\n    //     const self = this;\r\n    //     const { id: _channelId, maxMessageSize } = this.channel;\r\n    //     this.channelId = _channelId;\r\n    //     this.connected = true;\r\n    //     console.log(\"Connected to\", this.channelId);\r\n\r\n    //     this.channel.onDisconnect(() => {\r\n    //         console.log(\"Disconnected from\", this.channelId);\r\n    //         this.connected = false;\r\n    //         this.connect();\r\n    //     })\r\n\r\n    //     this.channel.emit('chat message', \"Hello everyone, I'm \" + this.channel.id + \" from three\");\r\n\r\n    //     this.channel.on('chat message', function (data) {\r\n    //         console.log(data);\r\n    //         // channel.emit('chat message', \"three received \" + data);\r\n    //     })\r\n\r\n    //     this.channel.on('transform update', function (data) {\r\n    //         console.log(data);\r\n    //         for (let i = 0; i < self._listeners['transform update'].length; i++) {\r\n    //             self._listeners['transform update'][i](data);\r\n    //         }\r\n    //         // channel.emit('chat message', \"three received \" + data);\r\n    //     });\r\n    // }\r\n\r\n}", "export const int32 = new Int32Array(2);\r\nexport const float32 = new Float32Array(int32.buffer);\r\nexport const float64 = new Float64Array(int32.buffer);\r\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n", "export function createLong(low, high) {\r\n    return Long.create(low, high);\r\n}\r\nexport class Long {\r\n    constructor(low, high) {\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n    }\r\n    static create(low, high) {\r\n        // Special-case zero to avoid GC overhead for default values\r\n        return low == 0 && high == 0 ? Long.ZERO : new Long(low, high);\r\n    }\r\n    toFloat64() {\r\n        return (this.low >>> 0) + this.high * 0x100000000;\r\n    }\r\n    equals(other) {\r\n        return this.low == other.low && this.high == other.high;\r\n    }\r\n}\r\nLong.ZERO = new Long(0, 0);\r\n", "export var Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n", "import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils\";\r\nimport { Encoding } from \"./encoding\";\r\nexport class ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return new Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n    readUint64(offset) {\r\n        return new Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n    readFloat32(offset) {\r\n        int32[0] = this.readInt32(offset);\r\n        return float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, value.low);\r\n        this.writeInt32(offset + 4, value.high);\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n    writeFloat32(offset, value) {\r\n        float32[0] = value;\r\n        this.writeInt32(offset, int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        float64[0] = value;\r\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n            FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += SIZEOF_INT;\r\n        if (opt_encoding === Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n", "import { ByteBuffer } from \"./byte-buffer\";\r\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nexport class Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || !value.equals(defaultValue)) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, SIZEOF_INT +\r\n                FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n", "\r\nimport * as flatbuffers from \"flatbuffers\"\r\nimport { Transform } from \"./transform\";\r\nimport { SyncedTransformModel } from \"./synced-transform-model\";\r\n\r\n// registry\r\nconst binaryIdentifierCasts : {[key:string] : (bin:flatbuffers.ByteBuffer) => object} = {};\r\n\r\nexport function registerType(identifier:string, cast: (bin:flatbuffers.ByteBuffer) => object) {\r\n    binaryIdentifierCasts[identifier] = cast;\r\n}\r\n\r\n// called by networking on receiving a new binary blob\r\n// it's just a little helper method so listeners dont have to cast to types every time\r\nexport function tryCast(bin : flatbuffers.ByteBuffer) : object {\r\n\r\n    const id = bin.getBufferIdentifier();\r\n    const cast = binaryIdentifierCasts[id];\r\n    const mod = cast(bin);\r\n    return mod;\r\n}\r\n\r\n\r\nexport function tryGetGuid(obj:any) : string | undefined | null{\r\n    if(typeof obj[\"guid\"] === \"function\"){\r\n        return obj.guid();\r\n    }\r\n    return null;\r\n}", "import Peer, { DataConnection } from \"peerjs\";\r\n\r\nenum MessageType {\r\n    ConnectionList = \"connection-list\"\r\n}\r\n\r\ndeclare class InternalPeerMessages {\r\n    type: MessageType\r\n}\r\n\r\nexport class PeerNetworking {\r\n    get isHost(): boolean {\r\n        return this._host !== undefined;\r\n    }\r\n\r\n    private _host?: PeerHost;\r\n\r\n    private _client!: Peer;\r\n    private _clientData?: DataConnection;\r\n\r\n    constructor() {\r\n        this.onEnable();\r\n    }\r\n\r\n    onEnable() {\r\n        const hostId = \"HOST-5980e65c-8438-453e-8b35-f13c736dcd81\";\r\n        this.trySetupHost(hostId);\r\n    }\r\n\r\n    private trySetupHost(id: string) {\r\n        let host = new Peer(id);\r\n        host.on(\"error\", err => {\r\n            console.error(err);\r\n            this._host = undefined;\r\n            this.trySetupClient(id);\r\n        });\r\n        host.on(\"open\", _id => {\r\n            this._host = new PeerHost(host);\r\n        });\r\n    }\r\n\r\n    private trySetupClient(hostId: string) {\r\n\r\n        this._client = new Peer();\r\n        this._client.on(\"error\", err => {\r\n            console.error(\"Client error\", err);\r\n        });\r\n        this._client.on(\"open\", id => {\r\n            console.log(\"client connected\", id);\r\n            this._clientData = this._client.connect(hostId, { metadata: { id: id } });\r\n            this._clientData.on(\"open\", () => {\r\n                console.log(\"Connected to host\");\r\n            })\r\n            this._clientData.on(\"data\", data => {\r\n                console.log(\"<<\", data);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nabstract class AbstractPeerHandler {\r\n    protected _peer: Peer;\r\n\r\n    constructor(peer: Peer) {\r\n        this._peer = peer;\r\n    }\r\n\r\n    abstract get isHost(): boolean;\r\n    protected abstract onConnection(con: DataConnection);\r\n}\r\n\r\n//@ts-ignore\r\nclass PeerClient extends AbstractPeerHandler {\r\n    get isHost() { return false; }\r\n\r\n    protected onConnection(_con: DataConnection) {\r\n    }\r\n}\r\n\r\nclass PeerHost extends AbstractPeerHandler {\r\n\r\n    get isHost() { return true; }\r\n\r\n    private _connections: DataConnection[] = [];\r\n\r\n    constructor(peer: Peer) {\r\n        super(peer);\r\n        console.log(\"I AM THE HOST\");\r\n        this._peer?.on(\"connection\", this.onConnection.bind(this));\r\n        this._peer.on(\"close\", () => {\r\n            this.broadcast(\"BYE\");\r\n        });\r\n        setInterval(()=>{\r\n            this.broadcast(\"HELLO\");\r\n        }, 2000);\r\n    }\r\n\r\n    protected onConnection(con: DataConnection) {\r\n        console.log(\"host connection\", con);\r\n        con.on(\"open\", () => {\r\n            this._connections.push(con);\r\n            this.broadcastConnection(con);\r\n        });\r\n    }\r\n\r\n    private broadcastConnection(_con: DataConnection) {\r\n        const connectionIds: string[] = this._connections.map(c => c.metadata?.id).filter(id => id !== undefined);\r\n        this.broadcast({ \"type\": MessageType.ConnectionList, \"connections\": connectionIds });\r\n    }\r\n\r\n    private broadcast(msg: any) {\r\n        if (msg === undefined || msg === null) return;\r\n        console.log(\">>\", msg);\r\n        for (const cur in this._peer.connections) {\r\n            const curCon = this._peer.connections[cur];\r\n            if (!curCon) continue;\r\n            if (Array.isArray(curCon)) {\r\n                for (const entry of curCon) {\r\n                    if (!entry) continue;\r\n                    entry.send(msg);\r\n                }\r\n            }\r\n            else {\r\n                console.warn(curCon);\r\n            }\r\n        }\r\n    }\r\n}", "import { Context } from \"../engine/engine_setup\";\r\n// import { loadSync, parseSync } from \"../engine/engine_scenetools\";\r\nimport * as THREE from \"three\";\r\nimport * as web from \"../engine/engine_web_api\";\r\nimport { NetworkConnection } from \"../engine/engine_networking\";\r\nimport { generateSeed, InstantiateIdProvider } from \"../engine/engine_networking_instantiate\";\r\nimport * as def from \"./engine_networking_files_default_components\"\r\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\nimport { getLoader } from \"../engine/engine_gltf\";\r\nimport { IModel } from \"./engine_networking_types\";\r\nimport { IGameObject } from \"./engine_types\";\r\nimport { findByGuid } from \"./engine_gameobject\";\r\n\r\nexport enum File_Event {\r\n    File_Spawned = \"file-spawned\",\r\n}\r\n\r\nexport class FileSpawnModel implements IModel {\r\n    guid: string;\r\n    file_name: string;\r\n    file_hash: string;\r\n    file_size: number;\r\n    position: THREE.Vector3 | null;\r\n    seed: number;\r\n    sender: string;\r\n    serverUrl: string;\r\n    parentGuid?: string;\r\n\r\n    boundsSize?: THREE.Vector3;\r\n\r\n    constructor(connectionId: string, seed: number, guid: string, name: string, hash: string, size: number, position: THREE.Vector3 | null, serverUrl: string) {\r\n        this.seed = seed;\r\n        this.guid = guid;\r\n        this.file_name = name;\r\n        this.file_hash = hash;\r\n        this.file_size = size;\r\n        this.position = position;\r\n        this.sender = connectionId;\r\n        this.serverUrl = serverUrl;\r\n    }\r\n}\r\n\r\n\r\nexport async function addFile(file: File, context: Context, backendUrl?: string): Promise<GLTF | null> {\r\n\r\n    const name = file.name;\r\n    if (name.endsWith(\".gltf\") || name.endsWith(\".glb\")) {\r\n        return new Promise((resolve, _reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file);\r\n            reader.onloadend = async (_ev: ProgressEvent<FileReader>) => {\r\n                const content = reader.result as string;\r\n                // first load it locally\r\n                const seed = generateSeed();\r\n                const prov = new InstantiateIdProvider(seed);\r\n                const gltf: GLTF = await getLoader().loadSync(context, content, prov, true) as GLTF;\r\n                if (gltf && gltf.scene) {\r\n                    const obj = gltf.scene as unknown as IGameObject;\r\n                    // if we dont have a guid yet (because components guids are actually created in a callback a bit later)\r\n                    // we just use the same seed and generate a guid for the root only\r\n                    // this should be the exact same guid the instantiate call will produce\r\n                    if (!obj.guid) {\r\n                        const prov = new InstantiateIdProvider(seed);\r\n                        obj.guid = prov.generateUUID();\r\n                    }\r\n                    if (backendUrl)\r\n                        handleUpload(context.connection, file, seed, obj, backendUrl);\r\n                    def.onDynamicObjectAdded(obj, prov, gltf);\r\n                    resolve(gltf);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    else {\r\n        console.warn(\"Unsupported file type: \" + name);\r\n        console.log(file);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport async function addFileFromUrl(url: URL, context: Context): Promise<GLTF | null> {\r\n\r\n    return new Promise(async (resolve, _reject) => {\r\n        const seed = generateSeed();\r\n        const prov = new InstantiateIdProvider(seed);\r\n        const gltf: GLTF = await getLoader().loadSync(context, url.toString(), prov, true) as GLTF;\r\n        if (gltf && gltf.scene) {\r\n            const obj = gltf.scene as unknown as IGameObject;\r\n            // handleUpload(context.connection, file, seed, obj); // TODO needs to upload the URL only and store that\r\n            def.onDynamicObjectAdded(obj, prov, gltf);\r\n            resolve(gltf);\r\n        }\r\n        else {\r\n            console.warn(\"Unsupported file type: \" + url.toString());\r\n        }\r\n    });\r\n}\r\n\r\nexport function beginListenFileSpawn(context: Context) {\r\n    context.connection.beginListen(File_Event.File_Spawned, async (evt: FileSpawnModel) => {\r\n        if (evt.sender !== context.connection.connectionId) {\r\n            console.log(\"received file event\", evt);\r\n            addPreview(evt, context);\r\n            let bin: ArrayBuffer | null = null;\r\n            try {\r\n                bin = await web.download_file(evt.file_name, evt.file_hash, evt.file_size, evt.serverUrl);\r\n            }\r\n            finally {\r\n                removePreview(evt, context);\r\n            }\r\n            if (bin) {\r\n                const prov = new InstantiateIdProvider(evt.seed);\r\n                const gltf = await getLoader().parseSync(context, bin, null!, prov);\r\n                if (gltf && gltf.scene) {\r\n                    const obj = gltf.scene;\r\n                    def.onDynamicObjectAdded(obj, prov, gltf);\r\n                    // if we process new scripts immediately references that rely on guids are not properly resolved\r\n                    // for example duplicatable \"object\" reference will not be found anymore because guid has changed\r\n                    // processNewScripts(context);\r\n\r\n                    // add object to proper parent\r\n                    if (evt.parentGuid) {\r\n                        const parent = findByGuid(evt.parentGuid, context.scene) as THREE.Object3D;\r\n                        if (\"add\" in parent) parent.add(obj);\r\n                    }\r\n                    if (!obj.parent)\r\n                        context.scene.add(obj);\r\n\r\n                    if (evt.position !== null) {\r\n                        obj.position.copy(evt.position);\r\n                    }\r\n                }\r\n            }\r\n            else console.error(\"download didnt return file\");\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nasync function handleUpload(connection: NetworkConnection, file: File, seed: number, obj: IGameObject, backendUrl: string) {\r\n    if (!connection.connectionId) {\r\n        console.error(\"Can not upload file - no connection id\");\r\n        return;\r\n    }\r\n    if (!obj.guid) {\r\n        console.error(\"Can not upload file - no guid\", obj, obj.guid);\r\n        return;\r\n    }\r\n    // then try uploading it\r\n    const upload_result = await web.upload_file(file, backendUrl);\r\n    if (!upload_result) {\r\n        return;\r\n    }\r\n    if (!upload_result.filename) {\r\n        console.error(\"Can not send upload event - no filename\", file.name);\r\n        return;\r\n    }\r\n    if (!upload_result.hash) {\r\n        console.error(\"Can not send upload event - no hash\", file.name);\r\n        return;\r\n    }\r\n    const model = new FileSpawnModel(connection.connectionId, seed,\r\n        obj.guid, upload_result.filename,\r\n        upload_result.hash,\r\n        file.size,\r\n        obj.position,\r\n        upload_result.url ?? backendUrl,\r\n    );\r\n    if (obj.parent)\r\n        model.parentGuid = obj.parent[\"guid\"];\r\n    connection.send(File_Event.File_Spawned, model);\r\n}\r\n\r\n\r\nconst previews: { [key: string]: THREE.Object3D } = {};\r\n\r\nfunction addPreview(evt: FileSpawnModel, context: Context) {\r\n    const sphere = new THREE.BoxGeometry();\r\n    const object = new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: 0x00ff00 }));\r\n    const box = new THREE.BoxHelper(object, 0x555555);\r\n    previews[evt.guid] = box;\r\n    context.scene.add(box);\r\n    if (evt.parentGuid) {\r\n        const parent = findByGuid(evt.parentGuid, context.scene) as THREE.Object3D;\r\n        if (parent)\r\n            parent.add(box);\r\n    }\r\n    if (evt.position)\r\n        box.position.copy(evt.position);\r\n}\r\n\r\nfunction removePreview(evt: FileSpawnModel, _context: Context) {\r\n    const guid = evt.guid;\r\n    const existing = previews[guid];\r\n    if (existing) {\r\n        delete previews[guid];\r\n        existing.removeFromParent();\r\n    }\r\n}", "// workaround for this is not a function when deployed\r\n// see https://github.com/pvorb/node-md5/issues/52\r\nimport md5 from \"md5\";\r\n\r\n// const backend_url = null;// \"https://needle-storage-castle-demo.glitch.me\";\r\n\r\nexport class Upload_Result {\r\n    success: boolean;\r\n    filename: string | null;\r\n    hash: string | null;\r\n    size: number | null;\r\n    url?: string | null;\r\n\r\n    constructor(success: boolean, filename: string | null, hash: string | null, size: number | null) {\r\n        this.success = success;\r\n        this.filename = filename;\r\n        this.hash = hash;\r\n        this.size = size;\r\n    }\r\n}\r\n\r\nexport async function upload_file(file: File, url: string): Promise<Upload_Result | null> {\r\n    const buffer = await file.arrayBuffer();\r\n    const hashString = hash(buffer);\r\n    const ext = file.name.split('.').pop();\r\n    const filename = hashString + \".\" + ext;\r\n    const alias = file.name.split('.').shift();\r\n    console.assert(alias !== undefined);\r\n    const body = { alias: alias, filename: filename };\r\n    const exists = await fetch(url + '/exists', { method: \"POST\", body: JSON.stringify(body) });\r\n    const answer: { success: boolean, exists: boolean } = await exists.json();\r\n    if (!answer.success) {\r\n        console.warn(\"exists check did fail\");\r\n    }\r\n    if (answer.exists) {\r\n        console.log(\"file already exists\", hashString);\r\n        return new Upload_Result(true, filename, hashString, file.size);\r\n    }\r\n\r\n    console.log(\"begin uploading file\", alias, file.size);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const headers: Record<string, string> = {};\r\n    headers[\"filesize\"] = file.size as unknown as string;\r\n    if (alias)\r\n        headers[\"alias\"] = alias;\r\n    const upload_res_raw = await fetch(url + '/upload/file', { method: \"POST\", body: formData, headers: headers });\r\n    const upload_res: { success: boolean, id: string, hash_sum: string, message?: string } = await upload_res_raw.json();\r\n    if (upload_res?.success === false) {\r\n        if (upload_res.message !== undefined) {\r\n            console.error(\"Upload failed:\", upload_res.message);\r\n        }\r\n        else {\r\n            console.error(\"Upload failed\");\r\n        }\r\n        return null;\r\n    }\r\n    console.assert(upload_res.hash_sum === hashString, \"hash sum did not match\", \"received:\", upload_res.hash_sum, \"expected:\", hashString);\r\n    if (upload_res.success) console.log(\"successfully uploaded\", hashString, upload_res.id);\r\n    const res = new Upload_Result(upload_res.success, filename, hashString, file.size);\r\n    res.url = url;\r\n    return res;\r\n}\r\n\r\nexport function hash(buffer: ArrayBuffer): string {\r\n    return md5(new Uint8Array(buffer))\r\n};\r\n\r\nexport async function download_file(filename: string, expectedHash: string, expectedSize: number, serverUrl: string, skipChecks: boolean = false): Promise<ArrayBuffer | null> {\r\n    try {\r\n        const download_res = await fetch(serverUrl + '/download/file', { method: \"POST\", body: filename });\r\n        if (download_res.status !== 200) {\r\n            // const res = await download_res.json();\r\n            console.error(\"download failed\", download_res);\r\n            return null;\r\n        }\r\n        const bin = await download_res.blob();\r\n        const buffer = await bin.arrayBuffer();\r\n        if (!skipChecks)\r\n            console.assert(bin.size === expectedSize, \"size mismatch\", \"expected:\", expectedSize, \"got:\", bin.size);\r\n        const result_hash = hash(buffer);\r\n        if (!skipChecks)\r\n            console.assert(result_hash === expectedHash, \"hash mismatch, downloaded file is invalid\");\r\n        return bin.arrayBuffer();\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function download(url: string, progressCallback: (prog: ProgressEvent) => void) : Promise<Uint8Array | null> {\r\n    const response = await fetch(url);\r\n\r\n    const reader = response.body?.getReader();\r\n    const contentLength = response.headers.get('Content-Length');\r\n    const total = contentLength ? parseInt(contentLength) : 0;\r\n\r\n    if (!reader) return null;\r\n\r\n    let received: number = 0;\r\n    let chunks: Uint8Array[] = [];\r\n    while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (value) {\r\n            chunks.push(value);\r\n            received += value.length;\r\n            progressCallback.call(null, new ProgressEvent('progress', { loaded: received, total: total }));\r\n        }\r\n\r\n        if (done) {\r\n            break;\r\n        }\r\n    }\r\n    const final = new Uint8Array(received);\r\n    let position = 0;\r\n    for (let chunk of chunks) {\r\n        final.set(chunk, position);\r\n        position += chunk.length;\r\n    }\r\n    return final;\r\n}", "// import { SyncedTransform } from \"../engine-components/SyncedTransform\";\r\n// import { DragControls } from \"../engine-components/DragControls\"\r\n// import { ObjectRaycaster } from \"../engine-components/ui/Raycaster\";\r\nimport { UIDProvider } from \"./engine_types\";\r\nimport { GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n// import { Animation } from \"../engine-components/Animation\";\r\n\r\n\r\nexport function onDynamicObjectAdded(_obj: THREE.Object3D, _idProv: UIDProvider, _gltf?: GLTF) {\r\n\r\n    console.warn(\"Adding components on object has been temporarily disabled\");\r\n    \r\n    // // this ensures we have a drag component\r\n    // let drag = getComponentInChildren(obj as GameObject, DragControls);\r\n    // if (!drag) {\r\n    //     drag = GameObject.addNewComponent(obj as GameObject, DragControls, false);\r\n    //     drag.guid = idProv.generateUUID();\r\n    // }\r\n\r\n    // // if a drag component is found we add a syncedTransform if none exists\r\n    // if (drag && !GameObject.getComponent(drag.gameObject, SyncedTransform)) {\r\n    //     const st = GameObject.addNewComponent(drag.gameObject, SyncedTransform, false);\r\n    //     st.guid = idProv.generateUUID();\r\n    //     // st.autoOwnership = true;\r\n\r\n    //     //drag.transformGroup = true;\r\n    //     //drag.targets = [obj];\r\n    // }\r\n\r\n    // // if a drag component is found we add a syncedTransform if none exists\r\n    // if (drag && !GameObject.getComponentInParent(drag.gameObject, ObjectRaycaster)) {\r\n    //     const st = GameObject.addNewComponent(drag.gameObject, ObjectRaycaster, false);\r\n    //     st.guid = idProv.generateUUID();\r\n    // }\r\n\r\n    // if (gltf) {\r\n    //     if (gltf.animations?.length > 0) {\r\n    //         const firstAnimation = gltf.animations[0];\r\n    //         const anim = GameObject.addNewComponent(obj, Animation, false);\r\n    //         anim.animations = [firstAnimation];\r\n    //     }\r\n    // }\r\n\r\n    // let didDisablFrustumCulling = false;\r\n    // obj.traverse(o => {\r\n    //     if (!o) return;\r\n\r\n    //     if (o[\"isSkinnedMesh\"] === true) {\r\n    //         if (!didDisablFrustumCulling) console.log(\"Disabling frustum culling for skinned meshes\", gltf);\r\n    //         didDisablFrustumCulling = true;\r\n    //         o.frustumCulled = false;\r\n    //     }\r\n\r\n    // });\r\n}", "import { Constructor, ConstructorConcrete, SourceIdentifier, UIDProvider } from \"./engine_types\";\r\nimport { Context } from \"./engine_setup\";\r\nimport { NEEDLE_components } from \"./extensions/NEEDLE_components\";\r\nimport { SerializationContext } from \"./engine_serialization_core\";\r\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\n\r\n\r\nexport interface INeedleGltfLoader {\r\n    createBuiltinComponents(context: Context, gltfId: SourceIdentifier, gltf, seed: number | null | UIDProvider, extension?: NEEDLE_components): Promise<void>\r\n    writeBuiltinComponentData(comp: object, context: SerializationContext);\r\n    parseSync(context: Context, data, path: string, seed: number | UIDProvider | null): Promise<GLTF | undefined>;\r\n    loadSync(context: Context, url: string, seed: number | UIDProvider | null, _allowAddingAnimator: boolean, prog?: (ProgressEvent) => void): Promise<GLTF | undefined>\r\n}\r\n\r\nlet gltfLoader: INeedleGltfLoader;\r\nlet gltfLoaderType: ConstructorConcrete<INeedleGltfLoader> | null = null;\r\n\r\nexport function getLoader(): INeedleGltfLoader {\r\n    return gltfLoader;\r\n}\r\n\r\nexport function registerLoader<T extends INeedleGltfLoader>(loader: ConstructorConcrete<T>) {\r\n    if (gltfLoaderType !== loader) {\r\n        gltfLoaderType = loader;\r\n        gltfLoader = new loader();\r\n    }\r\n}", "import * as THREE from 'three';\r\nimport { Scene } from 'three';\r\n// import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\nimport * as utils from \"./engine_utils\";\r\n\r\nconst debug = utils.getParam(\"debugassets\");\r\n\r\nclass TextureInfo {\r\n    name!: string;\r\n    sampler!: number;\r\n    source!: number;\r\n    extras: { guid: string } | undefined;\r\n}\r\n\r\nclass ImageInfo {\r\n    bufferView!: number;\r\n    mimeType: string | undefined;\r\n    extras: { guid: string } | undefined;\r\n}\r\n\r\nclass GltfJson {\r\n    textures!: TextureInfo[];\r\n    bufferViews!: Array<{ buffer: number, byteOffset: number, byteLength: number }>;\r\n}\r\n\r\ndeclare class GltfParser {\r\n    cache: any;\r\n    json: GltfJson;\r\n    associations: Map<any, any>;\r\n    textureLoader: THREE.TextureLoader;\r\n    loadTexture: Function;\r\n}\r\n\r\ndeclare class Gltf {\r\n    parser: GltfParser;\r\n    scene: Scene;\r\n}\r\n\r\n/** @deprecated */\r\nexport class AssetDatabase {\r\n\r\n    constructor() {\r\n        window.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\r\n            if (event.defaultPrevented) return;\r\n            const pathArray = event?.reason?.path;\r\n            if (pathArray) {\r\n                const source = pathArray[0];\r\n                if (source && source.tagName === \"IMG\") {\r\n                    console.warn(\"Could not load image:\\n\" + source.src);\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private texturesLoader: THREE.TextureLoader = new THREE.TextureLoader();\r\n    private textures: { [key: string]: THREE.Texture | PromiseLike<THREE.Texture> } = {};\r\n    private texturesLoading: { [key: string]: THREE.Texture | PromiseLike<THREE.Texture> } = {};\r\n\r\n    /** @deprecated */\r\n    public async loadTexture(url: string): Promise<THREE.Texture | null> {\r\n        if (this.textures[url]) {\r\n            return this.textures[url];\r\n        }\r\n        if (this.texturesLoading[url]) {\r\n            return await this.texturesLoading[url];\r\n        }\r\n        const loading = this.texturesLoader.loadAsync(url);\r\n        this.texturesLoading[url] = loading;\r\n        const res = await loading;\r\n        delete this.texturesLoading[url];\r\n        this.textures[url] = res;\r\n        return res;\r\n    }\r\n\r\n    /** @deprecated */\r\n    public getTexture(guid: string): THREE.Texture | null {\r\n        return this._textures.get(guid) || null;\r\n    }\r\n\r\n    /** @deprecated */\r\n    public findTexture(name: string): THREE.Texture | null {\r\n        for (const texture of this._textures.values()) {\r\n            if (texture.name === name) {\r\n                return texture;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /** @deprecated */\r\n    public findMesh(name: string): THREE.Mesh | null {\r\n        for (const mesh of this._meshes.values()) {\r\n            if (mesh.name === name)\r\n                return mesh;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /** @deprecated */\r\n    public findMaterial(name:string) : THREE.Material | null {\r\n        for (const material of this._materials.values()) {\r\n            if (material.name === name)\r\n                return material;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /** @deprecated */\r\n    public async registerGltf(_gltf: Gltf) {\r\n        // if (debug)\r\n        //     console.log(\"register gltf\", gltf.scene.name, gltf);\r\n        // const parser = gltf.parser;\r\n        // const json = parser.json;\r\n        // const textures = json.textures;\r\n        // const associations = parser.associations;\r\n        // const alreadyLoaded = new Set<string>();\r\n        // associations.forEach((value, key) => {\r\n        //     // when minified instanceOf doesnt work but the texture type is 1009\r\n        //     if (key instanceof THREE.Texture || key.type === 1009) {\r\n        //         const index = value.textures;\r\n        //         const textureInfo = textures[index];\r\n        //         // TODO: a lot of information is gone when compressing with ktx2\r\n        //         // this.registerTexture(parser, index, textureInfo, key, alreadyLoaded);\r\n        //     }\r\n        //     else if (key instanceof THREE.Mesh || key.type == \"Mesh\") {\r\n        //         this.registerAsset(key);\r\n\r\n        //         // saving materials,\r\n        //         // FIXME: this is unlike the other things by name here as a hack for forma, it should probably saved by name and by guid just like anything else here\r\n        //         if(key.material){\r\n        //             this._materials.set(key.material.name, key.material);\r\n        //         }\r\n        //     }\r\n        // });\r\n\r\n        // // for (const ti in textures) {\r\n        // //     const textureInfo = textures[ti];\r\n        // //     await this.registerTexture(parser, ti, textureInfo, null, alreadyLoaded);\r\n        // // }\r\n\r\n        // if (debug)\r\n        //     console.log(this);\r\n    }\r\n\r\n    /** @deprecated */\r\n    public registerAsset(_asset: any) {\r\n        // if (debug) console.log(\"register asset\", asset);\r\n        // console.assert(asset, \"Asset is null or undefined\");\r\n        // const guid: string = asset.userData?.guid;\r\n        // if (guid === null || guid === undefined || guid.length === 0) {\r\n        //     // asset has no guid, this can happen e.g. when using multi material meshes\r\n        //     // should we ask the parent for the guid if it's a group? \r\n        //     // we need a more stable way to preserve ids anyways\r\n        //     return;\r\n        // }\r\n        // if (asset instanceof THREE.Texture || asset.type === 1009) {\r\n        //     if (this._textures.has(guid) && this._textures.get(guid) !== asset) {\r\n        //         if (debug)\r\n        //             console.warn(\"found duplicate texture \" + guid, asset);\r\n        //         return;\r\n        //     }\r\n        //     if (debug)\r\n        //         console.log(\"register texture\", guid, asset);\r\n        //     // should we check if an asset has been registered already? \r\n        //     // should not matter as long as we only export guid from unity?\r\n        //     this._textures.set(guid, asset);\r\n        // }\r\n        // else if (asset instanceof THREE.Mesh || asset.type == \"Mesh\") {\r\n        //     this._meshes.set(guid, asset);\r\n        // }\r\n    }\r\n\r\n\r\n    private _materials: Map<string, THREE.Material> = new Map<string, THREE.Material>();\r\n    private _meshes: Map<string, THREE.Mesh> = new Map();\r\n    // private async registerMesh(parser: GltfParser, mesh : THREE.Mesh){        \r\n    //     const guid = mesh?.userData?.guid;\r\n    // }\r\n\r\n\r\n    private _textures: Map<string, THREE.Texture> = new Map();\r\n\r\n    // private async registerTexture(parser: GltfParser, index: number | string, textureInfo: TextureInfo, texture: THREE.Texture | null, alreadyLoaded: Set<string>) {\r\n\r\n    //     // const guid = textureInfo?.extras?.guid || texture?.userData?.guid;\r\n    //     // if (!guid) {\r\n    //     //     if (debug) console.warn(\"missing guid\", texture, textureInfo)\r\n    //     //     return;\r\n    //     // }\r\n    //     // console.assert(guid !== null && guid !== undefined && guid.length > 0, \"Texture has no guid in userData\", texture);\r\n    //     // if (guid) {\r\n    //     //     if (alreadyLoaded.has(guid)) {\r\n    //     //         // console.warn(\"texture already loaded\", textureInfo.name, guid);\r\n    //     //         return;\r\n    //     //     }\r\n    //     //     alreadyLoaded.add(guid);\r\n    //     // }\r\n\r\n    //     // if (!texture) {\r\n    //     //     texture = await parser.loadTexture(index);\r\n    //     //     if (!texture) {\r\n    //     //         if (debug)\r\n    //     //             console.warn(\"failed to load texture\", guid);\r\n    //     //         return;\r\n    //     //     }\r\n    //     // }\r\n\r\n    //     // if (textureInfo.extras) {\r\n    //     //     texture.userData = { ...texture.userData, ...textureInfo.extras };\r\n    //     // }\r\n    //     // this.registerAsset(texture);\r\n    // }\r\n\r\n}", "import { Vector4, EquirectangularReflectionMapping, sRGBEncoding, WebGLCubeRenderTarget, Texture, LightProbe, Color } from \"three\";\r\nimport { LightProbeGenerator } from \"three/examples/jsm/lights/LightProbeGenerator.js\"\r\nimport { Context } from \"./engine_setup\";\r\nimport { SceneLightSettings } from \"./extensions/NEEDLE_lighting_settings\";\r\nimport { createFlatTexture, createTrilightTexture } from \"./engine_shaders\";\r\nimport { getParam } from \"./engine_utils\";\r\nimport { SourceIdentifier } from \"./engine_types\";\r\n\r\nconst debug = getParam(\"debugenvlight\");\r\n\r\n\r\nexport declare type SphericalHarmonicsData = {\r\n    array: number[],\r\n    texture: THREE.WebGLCubeRenderTarget | THREE.Texture,\r\n    lightProbe?: LightProbe\r\n}\r\n\r\nexport enum AmbientMode {\r\n    Skybox = 0,\r\n    Trilight = 1,\r\n    Flat = 3,\r\n    Custom = 4,\r\n}\r\n\r\nexport enum DefaultReflectionMode {\r\n    Skybox = 0,\r\n    Custom = 1,\r\n}\r\n\r\nexport class RendererData {\r\n\r\n    private context: Context;\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n        this.context.pre_update_callbacks.push(this.preUpdate.bind(this))\r\n    }\r\n\r\n    private sceneLightSettings?: SceneLightSettings;\r\n\r\n    private preUpdate() {\r\n        const time = this.context.time;\r\n        this._timevec4.x = time.time;\r\n        this._timevec4.y = Math.sin(time.time);\r\n        this._timevec4.z = Math.cos(time.time);\r\n        this._timevec4.w = time.deltaTime;\r\n    }\r\n\r\n    private _timevec4: Vector4 = new Vector4();\r\n    get timeVec4(): Vector4 {\r\n        return this._timevec4;\r\n    }\r\n\r\n    get environmentIntensity(): number {\r\n        if (!this.sceneLightSettings) return 1;\r\n        return this.sceneLightSettings.ambientIntensity;// * Math.PI * .5;\r\n    }\r\n\r\n    registerSceneLightSettings(sceneLightSettings: SceneLightSettings) {\r\n        this.sceneLightSettings = sceneLightSettings;\r\n    }\r\n\r\n    registerReflection(sourceId: SourceIdentifier, reflectionTexture: Texture) {\r\n        const h = new LightData(this.context, reflectionTexture, 1);\r\n        this._lighting[sourceId] = h;\r\n    }\r\n\r\n    getReflection(sourceId: SourceIdentifier): LightData | null | undefined {\r\n        return this._lighting[sourceId];\r\n    }\r\n\r\n    enableReflection(sourceId: SourceIdentifier) {\r\n        if (debug) {\r\n            console.log(this.sceneLightSettings ? AmbientMode[this.sceneLightSettings.ambientMode] : \"Unknown ambient mode\");\r\n        }\r\n\r\n        switch (this.sceneLightSettings?.ambientMode) {\r\n            case AmbientMode.Skybox:\r\n            case AmbientMode.Custom:\r\n                // only set environment reflection when ambient mode is skybox or custom\r\n                const existing = this.getReflection(sourceId);\r\n                if (existing && existing.Source) {\r\n                    const scene = this.context.scene;\r\n                    const tex = existing.Source;\r\n                    tex.encoding = sRGBEncoding;\r\n                    tex.mapping = EquirectangularReflectionMapping;\r\n                    scene.environment = tex;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.sceneLightSettings?.environmentReflectionSource === DefaultReflectionMode.Custom) {\r\n            switch (this.sceneLightSettings?.ambientMode) {\r\n                case AmbientMode.Trilight:\r\n                    if (this.sceneLightSettings.ambientTrilight) {\r\n                        const colors = this.sceneLightSettings.ambientTrilight;\r\n                        const tex = createTrilightTexture(colors[0], colors[1], colors[2], 64, 64);\r\n                        tex.encoding = sRGBEncoding;\r\n                        tex.mapping = EquirectangularReflectionMapping;\r\n                        this.context.scene.environment = tex;\r\n                    }\r\n                    else console.error(\"Missing ambient trilight\", this.sceneLightSettings.sourceId);\r\n                    return;\r\n                case AmbientMode.Flat:\r\n                    if (this.sceneLightSettings.ambientLight) {\r\n                        const tex = createFlatTexture(this.sceneLightSettings.ambientLight, 64);\r\n                        tex.encoding = sRGBEncoding;\r\n                        tex.mapping = EquirectangularReflectionMapping;\r\n                        this.context.scene.environment = tex;\r\n                    }\r\n                    else console.error(\"Missing ambientlight\", this.sceneLightSettings.sourceId);\r\n                    return;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n\r\n    disableReflection() {\r\n        const scene = this.context.scene;\r\n        scene.environment = null;\r\n    }\r\n\r\n    async getSceneLightingData(sourceId: SourceIdentifier): Promise<SphericalHarmonicsData> {\r\n        if (debug)\r\n            console.log(\"GET SCENE LIGHT DATA\");\r\n\r\n        // const existing = this.getReflection(sourceId);\r\n        // const sh = existing?.getSphericalHarmonicsArray(this.sceneLightSettings?.ambientIntensity ?? 1);\r\n        // if (sh) {\r\n        //     console.log(\"HAS EXISTING\", sh, existing);\r\n        //     return sh;\r\n        // }\r\n\r\n        // fallback\r\n        if (this._waitPromise) return this._waitPromise;\r\n        this._waitPromise = new Promise((res, _rej) => {\r\n            let interval = setInterval(async () => {\r\n                const ex = this.getReflection(sourceId);\r\n                if (ex) {\r\n                    clearInterval(interval);\r\n                    res(ex.getSphericalHarmonicsArray(this.sceneLightSettings?.ambientIntensity ?? 1)!);\r\n                }\r\n            }, 10);\r\n        });\r\n        return this._waitPromise;\r\n    }\r\n\r\n    private _waitPromise?: Promise<SphericalHarmonicsData>;\r\n    private _lighting: { [sourceId: SourceIdentifier]: LightData } = {};\r\n\r\n}\r\n\r\nexport class LightData {\r\n\r\n    get Source(): Texture { return this._source; }\r\n    get Array(): number[] | undefined { return this._sphericalHarmonicsArray; }\r\n\r\n    private _context: Context;\r\n    private _source: THREE.Texture;\r\n    private _sphericalHarmonics: THREE.SphericalHarmonics3 | null = null;\r\n    private _sphericalHarmonicsArray?: number[];\r\n    private _ambientScale: number = 1;\r\n    private _lightProbe?: LightProbe;\r\n\r\n    constructor(context: Context, tex: THREE.Texture, ambientScale: number = 1) {\r\n        this._context = context;\r\n        this._source = tex;\r\n        this._ambientScale = ambientScale;\r\n        tex.mapping = EquirectangularReflectionMapping;\r\n        tex.encoding = sRGBEncoding;\r\n    }\r\n\r\n    getSphericalHarmonicsArray(intensityFactor: number = 1): SphericalHarmonicsData | null {\r\n        if (this._sphericalHarmonicsArray?.length && this._source) {\r\n            return { array: this._sphericalHarmonicsArray, texture: this._source, lightProbe: this._lightProbe };\r\n        }\r\n\r\n        try {\r\n            const reflection = this._source;\r\n            let rt: THREE.WebGLCubeRenderTarget | null = null;\r\n            if (reflection) {\r\n                if (debug) console.log(\"GENERATING LIGHT PROBE\", reflection);\r\n                const size = Math.min(reflection.image.width, 512);\r\n                const target = new WebGLCubeRenderTarget(size);\r\n                rt = target.fromEquirectangularTexture(this._context.renderer, reflection);\r\n                this._source = rt.texture;\r\n            }\r\n\r\n            this._sphericalHarmonicsArray = [];\r\n            if (rt) {\r\n                const sampledProbe = LightProbeGenerator.fromCubeRenderTarget(this._context.renderer, rt);\r\n                this._lightProbe = sampledProbe;\r\n                const lightFactor = (this._ambientScale * (intensityFactor * intensityFactor * Math.PI * .5)) - 1;\r\n                // console.log(intensityFactor, lightFactor);\r\n                this._sphericalHarmonics = sampledProbe.sh;\r\n                this._sphericalHarmonicsArray = this._sphericalHarmonics.toArray();\r\n                const factor = ((intensityFactor) / (Math.PI * .5));\r\n                for (let i = 0; i < this._sphericalHarmonicsArray.length; i++) {\r\n                    this._sphericalHarmonicsArray[i] *= factor;\r\n                }\r\n                sampledProbe.sh.scale(lightFactor);\r\n                if (this._source)\r\n                    return { array: this._sphericalHarmonicsArray, texture: this._source, lightProbe: sampledProbe };\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n        return null;\r\n    }\r\n}", "import * as THREE from \"three\";\r\n\r\nexport const loader = new THREE.FileLoader();\r\n\r\nexport async function loadFileAsync(url) {\r\n  return new Promise((resolve, reject) => {\r\n    loader.load(url, resolve, undefined, reject);\r\n  });\r\n}", "\r\nimport * as loader from \"./engine_fileloader\"\r\nimport * as SHADERDATA from \"./shaders/shaderData\"\r\nimport { Vector4, FileLoader, DataTexture, RGBAFormat, Color, TextureDataType } from \"three\";\r\nimport { RGBAColor } from \"../engine-components/js-extensions/RGBAColor\";\r\nimport { Mathf } from \"./engine_math\";\r\n\r\n\r\nconst white = new Uint8Array(4);\r\nwhite[0] = 255; white[1] = 255; white[2] = 255; white[3] = 255;\r\nexport const whiteDefaultTexture = new DataTexture(white, 1, 1, RGBAFormat);\r\n\r\nexport function createFlatTexture(col: RGBAColor | Color, size: number = 1) {\r\n    const hasAlpha = \"alpha\" in col;\r\n    const length = size * size;\r\n    const data = new Uint8Array(4 * length);\r\n    const r = Math.floor(col.r * 255);\r\n    const g = Math.floor(col.g * 255);\r\n    const b = Math.floor(col.b * 255);\r\n    for (let i = 0; i < length; i++) {\r\n        const k = i * 4;\r\n        data[k + 0] = r;\r\n        data[k + 1] = g;\r\n        data[k + 2] = b;\r\n        if (hasAlpha) data[k + 3] = Math.floor(col.alpha * 255);\r\n        else data[k + 3] = 255;\r\n    }\r\n    const tex = new DataTexture(data, size, size);\r\n    tex.needsUpdate = true;\r\n    return tex;\r\n}\r\n\r\nexport function createTrilightTexture<T extends Color>(col0: T, col1: T, col2: T, width: number = 1, height: number = 3) {\r\n    const hasAlpha = false;// \"alpha\" in col0;\r\n    const channels = 4;\r\n    const length = width * height;\r\n    const colors = [col0, col1, col2];\r\n    const colorCount = colors.length;\r\n    const data = new Uint8Array(channels * colorCount * length);\r\n    const col = new Color();\r\n    for (let y = 0; y < height; y++) {\r\n        const colorIndex = Math.floor(y / height * colorCount);\r\n        const nextIndex = Mathf.clamp(colorIndex + 1, 0, colorCount - 1);\r\n        const col0 = colors[colorIndex];\r\n        const col1 = colors[nextIndex];\r\n        const t = (y / height * colorCount) % 1;\r\n        col.lerpColors(col0, col1, t);\r\n        const r = Math.floor(col.r * 255);\r\n        const g = Math.floor(col.g * 255);\r\n        const b = Math.floor(col.b * 255);\r\n        for (let x = 0; x < width; x++) {\r\n            const k = (y * width + x) * channels;\r\n            data[k + 0] = r;\r\n            data[k + 1] = g;\r\n            data[k + 2] = b;\r\n            data[k + 3] = 255;\r\n        }\r\n    }\r\n    const tex = new DataTexture(data, width, height);\r\n    tex.needsUpdate = true;\r\n    return tex;\r\n}\r\n\r\nexport enum Stage {\r\n    Vertex,\r\n    Fragment,\r\n}\r\n\r\nexport class UnityShaderStage {\r\n    stage: Stage;\r\n    code: string;\r\n    constructor(stage: Stage, code: string) {\r\n        this.stage = stage;\r\n        this.code = code;\r\n    }\r\n}\r\n\r\n\r\nclass ShaderLib {\r\n    loaded: Map<string, UnityShaderStage> = new Map<string, UnityShaderStage>();\r\n\r\n    public async loadShader(url: string): Promise<SHADERDATA.ShaderData> {\r\n        // TODO: cache this\r\n        const text = await loader.loadFileAsync(url);\r\n        const shader: SHADERDATA.ShaderData = JSON.parse(text);\r\n        return shader;\r\n    }\r\n\r\n    public async load(stage: Stage, url: string): Promise<UnityShaderStage> {\r\n\r\n        if (this.loaded.has(url)) {\r\n            return new Promise<UnityShaderStage>((res, rej) => {\r\n                const obj = this.loaded.get(url);\r\n                if (obj)\r\n                    res(obj);\r\n                else rej(\"Shader not found\");\r\n            });\r\n        }\r\n\r\n        const text = await loader.loadFileAsync(url);\r\n        const entry = new UnityShaderStage(stage, text);\r\n        this.loaded.set(url, entry);\r\n        return entry;\r\n    }\r\n}\r\n\r\nexport const lib = new ShaderLib();\r\n\r\n\r\nexport function ToUnityMatrixArray(mat: THREE.Matrix4, buffer?: Array<THREE.Vector4>): Array<THREE.Vector4> {\r\n    const arr = mat.elements;\r\n    if (!buffer)\r\n        buffer = [];\r\n    buffer.length = 0;\r\n    for (let i = 0; i < 16; i += 4) {\r\n        const col1 = arr[i];\r\n        const col2 = arr[i + 1];\r\n        const col3 = arr[i + 2];\r\n        const col4 = arr[i + 3];\r\n        const el = new Vector4(col1, col2, col3, col4);\r\n        buffer.push(el);\r\n    }\r\n    return buffer;\r\n}\r\n\r\nconst noAmbientLight: Array<number> = [];\r\nconst copyBuffer: Array<number> = [];\r\nexport function SetUnitySphericalHarmonics(obj: object, array?: number[]) {\r\n\r\n    if (noAmbientLight.length === 0) {\r\n        for (let i = 0; i < 27; i++) noAmbientLight.push(0);\r\n    }\r\n    if (!array) array = noAmbientLight;\r\n    // array = noAmbientLight;\r\n    for (let i = 0; i < 27; i++)\r\n        copyBuffer[i] = array[i];//Math.sqrt(Math.pow(Math.PI,2)*6);//1 / Math.PI;\r\n    array = copyBuffer;\r\n    // 18 is too bright with probe.sh.coefficients[6] = new THREE.Vector3(1,0,0);\r\n    // 24 is too bright with probe.sh.coefficients[8] = new THREE.Vector3(1,0,0);\r\n    obj[\"unity_SHAr\"] = { value: new Vector4(array[9], array[3], array[6], array[0]) };\r\n    obj[\"unity_SHBr\"] = { value: new Vector4(array[12], array[15], array[18], array[21]) };\r\n    obj[\"unity_SHAg\"] = { value: new Vector4(array[10], array[4], array[7], array[1]) };\r\n    obj[\"unity_SHBg\"] = { value: new Vector4(array[13], array[16], array[19], array[22]) };\r\n    obj[\"unity_SHAb\"] = { value: new Vector4(array[11], array[5], array[8], array[2]) };\r\n    obj[\"unity_SHBb\"] = { value: new Vector4(array[14], array[17], array[20], array[23]) };\r\n    obj[\"unity_SHC\"] = { value: new Vector4(array[24], array[25], array[26], 1) };\r\n}\r\n\r\nexport class ShaderBundle {\r\n    readonly vertexShader: string;\r\n    readonly fragmentShader: string;\r\n    readonly technique: SHADERDATA.Technique;\r\n\r\n    constructor(vertexShader: string, fragmentShader: string, technique: SHADERDATA.Technique) {\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShader = fragmentShader;\r\n        this.technique = technique;\r\n    }\r\n}\r\n\r\nexport async function FindShaderTechniques(shaderData: SHADERDATA.ShaderData, id: number): Promise<ShaderBundle | null> {\r\n    // console.log(shaderData);\r\n    if (!shaderData) {\r\n        console.error(\"Can not find technique: no shader data\");\r\n        return null;\r\n    }\r\n    const program = shaderData.programs[id];\r\n    const vertId = program.vertexShader;\r\n    const fragId = program.fragmentShader;\r\n    if (vertId !== undefined && fragId !== undefined) {\r\n        const vertShader = shaderData.shaders[vertId];\r\n        const fragShader = shaderData.shaders[fragId];\r\n        // fragShader.uri = \"./assets/frag.glsl\";\r\n        // vertShader.uri = \"./assets/vert.glsl\";\r\n        if (vertShader.uri && fragShader.uri || vertShader.code && fragShader.code) {\r\n            // decode uri\r\n            // TODO: save inflight promises and use those \r\n            if (!vertShader.code && vertShader.uri) await loadShaderCode(vertShader);\r\n            if (!fragShader.code && fragShader.uri) await loadShaderCode(fragShader);\r\n            if (!vertShader.code || !fragShader.code) return null;\r\n            // patchVertexShaderCode(vertShader);\r\n            // patchFragmentShaderCode(fragShader);\r\n\r\n            // console.log(id, vertShader.name, fragShader.name, shaderData);\r\n            const technique = shaderData.techniques[id];\r\n            return new ShaderBundle(vertShader.code, fragShader.code, technique);\r\n        }\r\n    }\r\n    console.error(\"Shader technique not found\", id);\r\n    return null;\r\n}\r\n\r\nasync function loadShaderCode(shader: SHADERDATA.Shader) {\r\n    const uri = shader.uri;\r\n    if (!uri) return;\r\n    if (uri.endsWith(\".glsl\")) {\r\n        // console.log(uri);\r\n        const loader = new FileLoader();\r\n        const code = await loader.loadAsync(uri);\r\n        shader.code = code.toString();\r\n        // console.log(\"FILE\", code);\r\n    }\r\n    else {\r\n        shader.code = b64DecodeUnicode(shader.uri);\r\n        // console.log(\"DECODED\", shader.code);\r\n    }\r\n}\r\n\r\n/*\r\nfunction patchFragmentShaderCode(shader: SHADERDATA.Shader) {\r\n    // reroute texture fetch to our custom one\r\n    shader.code = shader.code!.replaceAll(\"texture(\", \"_texture(\");\r\n    // flip UV.y coordinate on texture fetch\r\n    shader.code = shader.code.replace(\"void main()\\r\\n{\", `\r\nvec4 _texture(sampler2D a, vec2 b, float c) { \r\n    b.y = 1. - b.y;\r\n    return texture(a,b,c); \r\n}\r\nvec4 _texture(sampler2D a, vec2 b) { \r\n    b.y = 1. - b.y;\r\n    return texture(a,b); \r\n}\r\nvoid main()\r\n{`);\r\n}\r\n\r\nfunction patchVertexShaderCode(shader: SHADERDATA.Shader) {\r\n    // flip UV.y coordinate that goes into the shader\r\n    shader.code = shader.code!.replace(\" = uv;\", ` = vec4(uv.x, 1. - uv.y, uv.z, uv.w);`);\r\n    // flip pos.x coordinate for Object Space (coordinate system X is flipped)\r\n    // TODO not sure if xlat0 is always object space... most likely not\r\n    shader.code = shader.code!.replace(\"= u_xlat0.xyz;\", ` = vec3(-u_xlat0.x, u_xlat0.y, u_xlat0.z);`);\r\n    // shader.code = shader.code!.replace(\"* u_xlat1.xyz;\", ` * vec3(-u_xlat1.x, u_xlat1.y, u_xlat1.z);`);\r\n    // potentially useful for later\r\n    // shader.code = shader.code!.replace(\"return;\", `return;`);\r\n}\r\n*/\r\n\r\nfunction b64DecodeUnicode(str) {\r\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\r\n    }).join(''))\r\n}", "import { getParam, getPath } from \"../engine/engine_utils\";\r\n// import { loadSync, parseSync } from \"./engine_scenetools\";\r\nimport { SerializationContext, TypeSerializer } from \"./engine_serialization_core\";\r\nimport { Context } from \"./engine_setup\";\r\nimport { Group, Object3D, Scene } from \"three\";\r\nimport { processNewScripts } from \"./engine_mainloop_utils\";\r\nimport { InstantiateEvent, registerPrefabProvider, syncInstantiate } from \"./engine_networking_instantiate\";\r\nimport { download, hash } from \"./engine_web_api\";\r\nimport { getLoader } from \"./engine_gltf\";\r\nimport { SourceIdentifier } from \"./engine_types\";\r\nimport { destroy, instantiate, InstantiateOptions } from \"./engine_gameobject\";\r\nimport { IGameObject } from \"./engine_types\";\r\n\r\nconst debug = getParam(\"debugaddressables\");\r\n\r\nexport class Addressables {\r\n\r\n    private _context: Context;\r\n\r\n    constructor(context: Context) {\r\n        this._context = context;\r\n        this._context.pre_update_callbacks.push(this.preUpdate.bind(this));\r\n    }\r\n\r\n    private preUpdate() {\r\n\r\n    }\r\n\r\n    private _assetReferences: { [key: string]: AssetReference } = {};\r\n\r\n    findAssetReference(uri: string): AssetReference | null {\r\n        return this._assetReferences[uri] || null;\r\n    }\r\n\r\n    registerAssetReference(ref: AssetReference): AssetReference {\r\n        if (!ref.uri) return ref;\r\n        if (!this._assetReferences[ref.uri]) {\r\n            this._assetReferences[ref.uri] = ref;\r\n        }\r\n        else {\r\n\r\n            console.warn(\"Asset reference already registered\", ref);\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n\r\nexport type ProgressCallback = (asset: AssetReference, prog: ProgressEvent) => void;\r\n\r\nexport class AssetReference {\r\n\r\n    static getOrCreate(sourceId: SourceIdentifier, uri: string, context: Context): AssetReference {\r\n        const fullPath = getPath(sourceId, uri);\r\n        if (debug) console.log(\"GetOrCreate Addressable from\", sourceId, uri, \"FinalPath=\", fullPath);\r\n        const addressables = context.addressables;\r\n        const existing = addressables.findAssetReference(fullPath);\r\n        if (existing) return existing;\r\n        const ref = new AssetReference(fullPath, context.hash);\r\n        addressables.registerAssetReference(ref);\r\n        return ref;\r\n    }\r\n\r\n    private static currentlyInstantiating: string[] = [];\r\n\r\n    get asset(): any {\r\n        return this._glbRoot ?? this._asset;\r\n    }\r\n\r\n    protected set asset(val: any) {\r\n        this._asset = val;\r\n    }\r\n\r\n    private _loading?: PromiseLike<any>;\r\n\r\n    get uri(): string {\r\n        return this._uri;\r\n    }\r\n\r\n    get rawAsset(): any { return this._asset; }\r\n\r\n    private _asset: any;\r\n    private _glbRoot?: Object3D | null;\r\n    private _uri: string;\r\n    private _progressListeners: ProgressCallback[] = [];\r\n\r\n    private _hash?: string;\r\n    private _hashedUri: string;\r\n\r\n    private _isLoadingRawBinary: boolean = false;\r\n    private _rawBinary?: ArrayBuffer | null;\r\n\r\n    constructor(uri: string, hash?: string) {\r\n        this._uri = uri;\r\n        this._hash = hash;\r\n        if (uri.includes(\"?v=\"))\r\n            this._hashedUri = uri;\r\n        else\r\n            this._hashedUri = hash ? uri + \"?v=\" + hash : uri;\r\n\r\n        registerPrefabProvider(this._uri, this.onResolvePrefab.bind(this));\r\n    }\r\n\r\n    private async onResolvePrefab(uri: string): Promise<IGameObject | null> {\r\n        if (uri === this.uri) {\r\n            if (this.mustLoad) await this.loadAssetAsync();\r\n            if (this.asset) {\r\n                return this.asset;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private get mustLoad() {\r\n        return !this.asset || this.asset.__destroyed === true;\r\n    }\r\n\r\n    isLoaded() { return this._rawBinary || this.asset !== undefined }\r\n\r\n    unload() {\r\n        if (this.asset) {\r\n            if (debug) console.log(\"Unload\", this.asset);\r\n            // TODO: we need a way to remove objects from the context (including components) without actually \"destroying\" them\r\n            if (this.asset.scene)\r\n                destroy(this.asset.scene);\r\n            else destroy(this.asset);\r\n        }\r\n        this.asset = null;\r\n    }\r\n\r\n    async preload(): Promise<ArrayBuffer | null> {\r\n        if (!this.mustLoad) return null;\r\n        if (this._isLoadingRawBinary) return null;\r\n        if (this._rawBinary !== undefined) return this._rawBinary;\r\n        this._isLoadingRawBinary = true;\r\n        if (debug) console.log(\"Preload\", this._hashedUri);\r\n        const res = await download(this._hashedUri, p => {\r\n            this.raiseProgressEvent(p);\r\n        });\r\n        this._rawBinary = res?.buffer ?? null;\r\n        this._isLoadingRawBinary = false;\r\n        return this._rawBinary;\r\n    }\r\n\r\n    async loadAssetAsync(prog?: ProgressCallback | null) {\r\n        if (!this.mustLoad) return;\r\n        if (prog)\r\n            this._progressListeners.push(prog);\r\n        if (this._loading !== undefined) {\r\n            // console.warn(\"Wait for other loading thiny\");\r\n            return this._loading;\r\n        }\r\n        const context = Context.Current;\r\n        // TODO: technically we shouldnt call awake only when the object is added to a scene\r\n        // addressables now allow loading things without adding them to a scene immediately\r\n        // we should \"address\" (LUL) this\r\n        // console.log(\"START LOADING\");\r\n        if (this._rawBinary) {\r\n            this._loading = getLoader().parseSync(context, this._rawBinary, this.uri, null);\r\n            this.raiseProgressEvent(new ProgressEvent(\"progress\", { loaded: this._rawBinary.byteLength, total: this._rawBinary.byteLength }));\r\n        }\r\n        else {\r\n            if (debug) console.log(\"Load async\", this.uri);\r\n            this._loading = getLoader().loadSync(context, this._hashedUri, null, true, prog => {\r\n                this.raiseProgressEvent(prog);\r\n            });\r\n        }\r\n        const res = await this._loading;\r\n        // clear all progress listeners after download has finished\r\n        this._progressListeners.length = 0;\r\n        this._glbRoot = this.tryGetActualGameObjectRoot(res);\r\n        this._loading = undefined;\r\n        if (res) {\r\n            // we need to handle the pre_setup callsbacks before instantiating\r\n            // because that is where deserialization happens\r\n            processNewScripts(context);\r\n\r\n            if (res.scene !== undefined) {\r\n                this.asset = res;\r\n            }\r\n            return this.asset;\r\n        }\r\n    }\r\n\r\n    async instantiate(parent?: THREE.Object3D | InstantiateOptions) {\r\n        return this.onInstantiate(parent, false);\r\n    }\r\n\r\n    async instantiateSynced(parent?: THREE.Object3D | InstantiateOptions, saveOnServer: boolean = true) {\r\n        return this.onInstantiate(parent, true, saveOnServer);\r\n    }\r\n\r\n    beginListenDownload(evt: ProgressCallback) {\r\n        if (this._progressListeners.indexOf(evt) < 0)\r\n            this._progressListeners.push(evt);\r\n    }\r\n\r\n    endListenDownload(evt: ProgressCallback) {\r\n        const index = this._progressListeners.indexOf(evt);\r\n        if (index >= 0) {\r\n            this._progressListeners.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private raiseProgressEvent(prog: ProgressEvent) {\r\n        for (const list of this._progressListeners) {\r\n            list(this, prog);\r\n        }\r\n    }\r\n\r\n    private async onInstantiate(parent?: THREE.Object3D | InstantiateOptions, networked: boolean = false, saveOnServer?: boolean) {\r\n        const context = Context.Current;\r\n        if (!parent) parent = context.scene;\r\n        if (this.mustLoad) {\r\n            await this.loadAssetAsync();\r\n        }\r\n        if (debug)\r\n            console.log(\"Instantiate\", this.uri, \"parent:\", parent);\r\n\r\n        if (this.asset) {\r\n            if (debug) console.log(\"Add to scene\", this.asset);\r\n\r\n            let options = parent instanceof InstantiateOptions ? parent : null;\r\n            if (!options) {\r\n                options = new InstantiateOptions();\r\n            }\r\n\r\n            if (typeof parent === \"object\") {\r\n                if (parent instanceof Object3D) {\r\n                    options.parent = parent;\r\n                }\r\n                else {\r\n                    Object.assign(options, parent);\r\n                }\r\n            }\r\n\r\n            if (AssetReference.currentlyInstantiating.indexOf(this.uri) >= 0) {\r\n                console.error(\"Recursive instantiation of\", this.uri);\r\n                return null;\r\n            }\r\n            try {\r\n                AssetReference.currentlyInstantiating.push(this.uri);\r\n                if (networked) {\r\n                    options.context = context;\r\n                    const prefab = this.asset;\r\n                    prefab.guid = this.uri;\r\n                    const instance = syncInstantiate(prefab, options, undefined, saveOnServer);\r\n                    if (instance) {\r\n                        return instance;\r\n                    }\r\n                }\r\n                else {\r\n                    const instance = instantiate(this.asset, options);\r\n                    if (instance) {\r\n                        return instance;\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                context.post_render_callbacks.push(() => AssetReference.currentlyInstantiating.pop());\r\n            }\r\n\r\n        }\r\n        else if (debug) console.warn(\"Failed to load asset\", this.uri);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * try to ignore the intermediate created object\r\n     * because it causes trouble if we instantiate an assetreference per player\r\n     * and call destroy on the player marker root\r\n     * @returns the scene root object if the asset was a glb/gltf\r\n     */\r\n    private tryGetActualGameObjectRoot(asset: any): THREE.Object3D | null {\r\n        if (asset && asset.scene) {\r\n            // some exporters produce additional root objects\r\n            const scene = asset.scene as Group;\r\n            if (scene.isGroup && scene.children.length === 1 && scene.children[0].name + \"glb\" === scene.name) {\r\n                const root = scene.children[0];\r\n                return root;\r\n            }\r\n            // ok the scene is the scene, just use that then\r\n            else\r\n                return scene;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass AddressableSerializer extends TypeSerializer {\r\n\r\n    constructor() {\r\n        super([AssetReference]);\r\n    }\r\n\r\n    onSerialize(data: any, _context: SerializationContext) {\r\n        if (data && data.uri !== undefined && typeof data.uri === \"string\") {\r\n            return data.uri;\r\n        }\r\n    }\r\n\r\n    onDeserialize(data: any, context: SerializationContext) {\r\n        if (typeof data === \"string\") {\r\n            if (!context.context) {\r\n                console.error(\"Missing context\");\r\n                return null;\r\n            }\r\n            if (!context.gltfId) {\r\n                console.error(\"Missing spurce id\");\r\n                return null;\r\n            }\r\n            const ref = AssetReference.getOrCreate(context.gltfId, data, context.context);\r\n            return ref;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\nnew AddressableSerializer();", "import { Context } from \"./engine_setup\";\r\n\r\nexport enum ApplicationEvents {\r\n    Visible = \"application-visible\",\r\n    Hidden = \"application-hidden\",\r\n}\r\n\r\nexport class Application extends EventTarget {\r\n\r\n    private context : Context;\r\n\r\n    public get hasFocus() : boolean {\r\n        return document.hasFocus();\r\n    }\r\n\r\n    public get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    private _isVisible: boolean = true;\r\n\r\n    constructor(context : Context) {\r\n        super();\r\n        this.context = context;\r\n        // console.log(\"APP\");\r\n        window.addEventListener(\"visibilitychange\", this.onVisiblityChanged.bind(this), false);\r\n    }\r\n\r\n    private onVisiblityChanged(evt) {\r\n        // console.log(evt.target.visibilityState)\r\n        switch (evt.target.visibilityState) {\r\n            case \"hidden\":\r\n                this._isVisible = false;\r\n                this.dispatchEvent(new Event(ApplicationEvents.Hidden));\r\n                break;\r\n            case \"visible\":\r\n                this._isVisible = true;\r\n                this.dispatchEvent(new Event(ApplicationEvents.Visible));\r\n                break;\r\n        }\r\n    }\r\n}\r\n", "import { ILightDataRegistry } from \"../engine_lightdata\";\r\nimport { FloatType, HalfFloatType, sRGBEncoding, Texture } from \"three\";\r\nimport { GLTF, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { SourceIdentifier } from \"../engine_types\";\r\nimport { resolveReferences } from \"./extension_utils\";\r\nimport { getParam } from \"../engine_utils\";\r\n\r\n// the lightmap extension is aimed to also export export skyboxes and custom reflection maps\r\n// should we rename it?\r\n// should we split it into multiple extensions?\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_lightmaps\";\r\nconst debug = getParam(\"debuglightmapsextension\");\r\n\r\nexport enum LightmapType {\r\n    Lightmap = 0,\r\n    Skybox = 1,\r\n    Reflection = 2,\r\n}\r\n\r\ndeclare type LightmapExtension = {\r\n    textures: Array<LightmapInfo>;\r\n}\r\n\r\ndeclare type LightmapInfo = {\r\n    type: LightmapType,\r\n    pointer?: string,\r\n    index?: number;\r\n}\r\n\r\nexport class NEEDLE_lightmaps implements GLTFLoaderPlugin {\r\n\r\n    get name(): string {\r\n        return EXTENSION_NAME;\r\n    }\r\n\r\n    private parser: GLTFParser;\r\n    private registry: ILightDataRegistry;\r\n    private source: SourceIdentifier;\r\n\r\n    constructor(parser: GLTFParser, reg: ILightDataRegistry, source: SourceIdentifier) {\r\n        this.parser = parser;\r\n        this.registry = reg;\r\n        this.source = source;\r\n    }\r\n\r\n    afterRoot(_result: GLTF): Promise<void> | null {\r\n\r\n        const extensions = this.parser.json.extensions;\r\n        if (extensions) {\r\n            const ext: LightmapExtension = extensions[EXTENSION_NAME];\r\n            if (ext) {\r\n                const arr = ext.textures;\r\n                if (!arr?.length) {\r\n                    return null;\r\n                }\r\n                if (debug)\r\n                    console.log(ext);\r\n\r\n                return new Promise(async (res, _rej) => {\r\n                    const dependencies: Array<Promise<any>> = [];\r\n                    for (const entry of arr) {\r\n                        if (entry.pointer) {\r\n                            const res = resolveReferences(this.parser, entry.pointer).then(res => {\r\n                                const tex: Texture = res as unknown as Texture;\r\n                                if (tex?.isTexture) {\r\n                                    if (!this.registry)\r\n                                        console.log(LightmapType[entry.type], entry.pointer, tex);\r\n                                    else {\r\n                                        // TODO this is most likely wrong for floating point textures\r\n                                        if (entry.type !== LightmapType.Lightmap)\r\n                                            tex.encoding = sRGBEncoding;\r\n\r\n                                        // not sure why, but seems EXR-loaded float textures need to be flipped\r\n                                        if (entry.type === LightmapType.Skybox) {\r\n                                            if (tex.type == FloatType || tex.type == HalfFloatType)\r\n                                                tex.flipY = true;\r\n                                        }\r\n\r\n                                        this.registry.registerTexture(this.source, entry.type, tex, entry.index);\r\n                                    }\r\n                                }\r\n                            });\r\n                            dependencies.push(res);\r\n                        }\r\n                    }\r\n                    await Promise.all(dependencies);\r\n                    res();\r\n                });\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}", "import { LightmapType } from \"./extensions/NEEDLE_lightmaps\";\r\nimport { Texture } from \"three\";\r\nimport { Context } from \"./engine_setup\";\r\nimport * as THREE from \"three\";\r\nimport { getParam } from \"./engine_utils\";\r\nimport { SourceIdentifier } from \"./engine_types\";\r\n\r\nconst debugLightmap = getParam(\"debuglightmaps\") ? true : false;\r\n\r\nexport interface ILightDataRegistry {\r\n    registerTexture(sourceId: SourceIdentifier, type: LightmapType, texture: Texture, index?: number);\r\n    tryGet(sourceId: SourceIdentifier | undefined, type: LightmapType, index: number): Texture | null;\r\n    tryGetLightmap(sourceId: SourceIdentifier | null | undefined, index: number): Texture | null;\r\n    tryGetSkybox(sourceId?: SourceIdentifier | null): Texture | null;\r\n    tryGetReflection(sourceId?: SourceIdentifier | null): Texture | null;\r\n}\r\n\r\n// how do we know which lightmap should be used for which object\r\n// e.g. if we load in 3 gltf objects and all bring their own lightmaps\r\n// we need a good way for e.g. Renderer components to safely get THEIR lightmap \r\n\r\n// similarly how do we deal with a gltf bringing its own skybox\r\n// e.g. it contains a camera and a skybox - the camera should be able to access this skybox if necessary\r\n// and reflection data should be accessible as well\r\n\r\nexport class LightDataRegistry implements ILightDataRegistry {\r\n\r\n    private _context: Context;\r\n    private _lightmaps: Map<SourceIdentifier, Map<LightmapType, Texture[]>> = new Map();\r\n\r\n    constructor(context: Context) {\r\n        this._context = context;\r\n    }\r\n\r\n    registerTexture(sourceId: SourceIdentifier, type: LightmapType, tex: Texture, index: number) {\r\n        if (debugLightmap) console.log(\"Registering lightmap\", sourceId, LightmapType[type], tex);\r\n        if (!this._lightmaps.has(sourceId))\r\n            this._lightmaps.set(sourceId, new Map());\r\n        const map = this._lightmaps.get(sourceId);\r\n        const arr = map?.get(type) ?? [];\r\n        if (arr.length < index) arr.length = index + 1;\r\n        arr[index] = tex;\r\n        map?.set(type, arr);\r\n    }\r\n\r\n    tryGetLightmap(sourceId: SourceIdentifier | null | undefined, index: number = 0): Texture | null {\r\n        return this.tryGet(sourceId, LightmapType.Lightmap, index);\r\n    }\r\n\r\n    tryGetSkybox(sourceId?: SourceIdentifier | null): Texture | null {\r\n        return this.tryGet(sourceId, LightmapType.Skybox, 0);\r\n    }\r\n\r\n    tryGetReflection(sourceId?: SourceIdentifier | null): Texture | null {\r\n        return this.tryGet(sourceId, LightmapType.Reflection, 0);\r\n    }\r\n\r\n    tryGet(sourceId: SourceIdentifier | undefined | null, type: LightmapType, index: number): Texture | null {\r\n        if (!sourceId) {\r\n            if (debugLightmap) console.warn(\"Missing source id\");\r\n            return null;\r\n        }\r\n        const arr = this._lightmaps.get(sourceId)?.get(type) ?? null;\r\n        if (!arr?.length || arr.length <= index) return null;\r\n        return arr[index];\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// all the chunks we can patch\r\n// console.log(THREE.ShaderChunk);\r\n// Unity: ambientOrLightmapUV.xy = v.uv1.xy * unity_LightmapST.xy + unity_LightmapST.zw; ambientOrLightmapUV.zw = 0;\r\nTHREE.ShaderChunk.lights_fragment_maps = THREE.ShaderChunk.lights_fragment_maps.replace(\"vec4 lightMapTexel = texture2D( lightMap, vUv2 );\", `\r\n\r\n    vec2 lUv = vUv2.xy * lightmapScaleOffset.xy + vec2(lightmapScaleOffset.z, (1. - (lightmapScaleOffset.y + lightmapScaleOffset.w)));\r\n    vec4 lightMapTexel = texture2D( lightMap, lUv);\r\n    // The range of RGBM lightmaps goes from 0 to 34.49 (5^2.2) in linear space, and from 0 to 5 in gamma space.\r\n    lightMapTexel.rgb *= lightMapTexel.a * 8.; // no idea where that \"8\" comes from... heuristically derived\r\n    lightMapTexel.a = 1.;\r\n    lightMapTexel = conv_sRGBToLinear(lightMapTexel);\r\n    `);\r\n\r\nTHREE.ShaderChunk.lightmap_pars_fragment = `\r\n    #ifdef USE_LIGHTMAP\r\n        uniform sampler2D lightMap;\r\n        uniform float lightMapIntensity;\r\n        uniform vec4 lightmapScaleOffset;\r\n        \r\n        // took from threejs 05fc79cd52b79e8c3e8dec1e7dca72c5c39983a4\r\n        vec4 conv_sRGBToLinear( in vec4 value ) {\r\n            return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\r\n        }\r\n    #endif\r\n    `;\r\n\r\n// When objects use Lightmaps in Unity, they already have IBL applied on the Lightmap,\r\n// so they shouldn't receive light probe lighting.\r\n// TODO: this gets difficult if there are additional real-time lightprobes added; we would need to exclude\r\n// exactly those that were active when lighting was baked... that's complicated!\r\nTHREE.ShaderChunk.lights_fragment_begin = THREE.ShaderChunk.lights_fragment_begin.replace(\r\n    \"irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\", `\r\n#if defined(USE_LIGHTMAP)\r\nirradiance += 0.;\r\n#else\r\nirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\r\n#endif`);\r\n\r\nTHREE.UniformsLib.lightmap[\"lightmapScaleOffset\"] = { value: new THREE.Vector4(1, 1, 0, 0) };", "import { getParam } from \"./engine_utils\";\r\nimport { Object3D } from \"three\";\r\nimport { Context } from \"./engine_setup\";\r\n\r\nconst debug = getParam(\"debugplayerview\");\r\n\r\nexport enum ViewDevice {\r\n    Browser = \"browser\",\r\n    Headset = \"headset\",\r\n    Handheld = \"handheld\",\r\n}\r\n\r\nexport class PlayerView {\r\n    readonly userId: string;\r\n    readonly context: Context;\r\n\r\n    viewDevice: ViewDevice = ViewDevice.Browser;\r\n\r\n    get currentObject(): Object3D | undefined | null {\r\n        return this._object;\r\n    }\r\n    set currentObject(obj: Object3D | undefined | null) {\r\n        this._object = obj;\r\n    }\r\n\r\n    get isConnected(): boolean {\r\n        return this.context.connection.userIsInRoom(this.userId);\r\n    }\r\n\r\n    removed: boolean = false;\r\n\r\n    private _object: undefined | Object3D | null;\r\n\r\n    constructor(userId: string, context: Context) {\r\n        this.userId = userId;\r\n        this.context = context;\r\n    }\r\n}\r\n\r\nexport class PlayerViewManager {\r\n\r\n    private readonly context: Context;\r\n    private readonly playerViews = new Map<string, PlayerView>();\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    setPlayerView(id: string, obj: Object3D | undefined | null, device: ViewDevice) {\r\n        let view = this.playerViews.get(id);\r\n        if (!view) {\r\n            view = new PlayerView(id, this.context);\r\n            this.playerViews.set(id, view);\r\n        }\r\n        view.viewDevice = device;\r\n        view.currentObject = obj;\r\n        view.removed = false;\r\n    }\r\n\r\n    getPlayerView(id: string | null | undefined): PlayerView | undefined {\r\n        if (!id) return undefined;\r\n        if (!this.context.connection.userIsInRoom(id)) {\r\n            this.playerViews.delete(id);\r\n            return undefined;\r\n        }\r\n        const view = this.playerViews.get(id);\r\n        return view;\r\n    }\r\n\r\n    removePlayerView(id: string, device: ViewDevice) {\r\n        const view = this.playerViews.get(id);\r\n        if (view?.viewDevice === device) {\r\n            if (debug)\r\n                console.log(\"REMOVE\", id);\r\n            view.removed = true;\r\n            this.playerViews.delete(id);\r\n        }\r\n    }\r\n\r\n}", "import { Context } from \"./engine_setup\";\r\nimport { isMozillaXR } from \"./engine_utils\";\r\n\r\nexport const arContainerClassName = \"ar\";\r\nexport const quitARClassName = \"quit-ar\";\r\n\r\n// https://developers.google.com/web/fundamentals/web-components/customelements\r\nexport class AROverlayHandler {\r\n\r\n    get ARContainer(): HTMLElement | null { return this.arContainer; }\r\n\r\n    constructor() {\r\n        this.closeARCallback = this.onRequestedEndAR.bind(this);\r\n    }\r\n\r\n    private arContainer: HTMLElement | null = null;\r\n    closeARCallback: any;\r\n    currentSession: XRSession | null = null;\r\n    registeredCloseEventElements: Element[] = [];\r\n\r\n    private _createdAROnlyElements: Array<any> = [];\r\n    private _reparentedObjects: Array<{ el: Element, previousParent: HTMLElement | null }> = [];\r\n\r\n    requestEndAR() {\r\n        this.onRequestedEndAR();\r\n    }\r\n\r\n    onBegin(context: Context, overlayContainer: HTMLElement, session: XRSession) {\r\n        this.currentSession = session;\r\n        this.arContainer = overlayContainer;\r\n\r\n        const arElements = context.domElement.querySelectorAll(`.${arContainerClassName}`);\r\n        arElements.forEach(el => {\r\n            if (!el) return;\r\n            if (el === this.arContainer) return;\r\n            this._reparentedObjects.push({ el: el, previousParent: el.parentElement });\r\n            this.arContainer?.appendChild(el);\r\n        });\r\n\r\n        const quit_Elements = overlayContainer.getElementsByClassName(quitARClassName);\r\n        if (!quit_Elements || quit_Elements.length <= 0) {\r\n            console.warn(`Missing quit AR elements, creating fallback X button. Use class name '${quitARClassName}' to override.`);\r\n            this.createFallbackCloseARButton(this.arContainer);\r\n        }\r\n        else {\r\n            for (let i = 0; i < quit_Elements.length; i++) {\r\n                const el = quit_Elements[i];\r\n                if (!el) continue;\r\n                el.addEventListener(\"click\", this.closeARCallback);\r\n                this.registeredCloseEventElements.push(el);\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnd(_context: Context) {\r\n        // if (this.arContainer)\r\n        // this.arContainer.classList.remove(\"ar-session-active\");\r\n        for (const created of this._createdAROnlyElements) {\r\n            if (created.remove) {\r\n                created.remove();\r\n            }\r\n        }\r\n\r\n        for (const prev of this._reparentedObjects) {\r\n            const el = prev.el as HTMLElement;\r\n            prev.previousParent?.appendChild(el);\r\n        }\r\n        this._reparentedObjects.length = 0;\r\n\r\n        // mozilla XR exit AR fixes\r\n        if (isMozillaXR()) {\r\n            // without the timeout we get errors in mozillas code and can not enter XR again\r\n            // not sure why we have to wait\r\n            setTimeout(() => {\r\n                // Canvas is not in DOM anymore after AR using Mozilla XR\r\n                const canvas = _context.renderer.domElement;\r\n                if (canvas) {\r\n                    _context.domElement.insertBefore(canvas, _context.domElement.firstChild);\r\n                }\r\n\r\n                // Fix visibility\r\n                const elements = document.querySelectorAll(\"*\");\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    const child = elements[i] as any;\r\n                    if (child && child._displayChanged !== undefined && child._displayWas !== undefined) {\r\n                        child.style.display = child._displayWas;\r\n                    }\r\n                }\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    findOrCreateARContainer(element: HTMLElement): HTMLElement {\r\n        // search in the needle-engine element\r\n        if (element.classList.contains(arContainerClassName)) {\r\n            return element;\r\n        }\r\n        if (element.children) {\r\n            for (let i = 0; i < element.children.length; i++) {\r\n                const ch = element.children[i] as HTMLElement;\r\n                if (!ch || !ch.classList) continue;\r\n                if (ch.classList.contains(arContainerClassName)) {\r\n                    return ch;\r\n                }\r\n            }\r\n        }\r\n\r\n        // search in document as well; \"ar\" element could live outside needle-engine element\r\n        const arElements = document.getElementsByClassName(arContainerClassName);\r\n        if (arElements && arElements.length > 0)\r\n            return arElements[0] as HTMLElement;\r\n\r\n        console.log(\"No overlay container found in document - generating new ony\");\r\n        const el = document.createElement(\"div\");\r\n        el.classList.add(arContainerClassName);\r\n        el.style.position = \"absolute\";\r\n        el.style.width = \"100%\";\r\n        el.style.height = \"100%\";\r\n        el.style.display = \"flex\";\r\n        el.style.visibility = \"visible\";\r\n        return element.appendChild(el);\r\n    }\r\n\r\n    private onRequestedEndAR() {\r\n        if (!this.currentSession) return;\r\n        this.currentSession.end();\r\n        this.currentSession = null;\r\n\r\n        for (const el of this.registeredCloseEventElements) {\r\n            el.removeEventListener(\"click\", this.closeARCallback);\r\n        }\r\n        this.registeredCloseEventElements.length = 0;\r\n    }\r\n\r\n    private createFallbackCloseARButton(element: HTMLElement) {\r\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n        svg.setAttribute('width', \"38px\");\r\n        svg.setAttribute('height', \"38px\");\r\n        svg.style.position = 'absolute';\r\n        svg.style.right = '20px';\r\n        svg.style.top = '40px';\r\n        svg.style.zIndex = '9999';\r\n        svg.style.pointerEvents = 'auto';\r\n        svg.addEventListener('click', this.closeARCallback);\r\n        element.appendChild(svg);\r\n        this._createdAROnlyElements.push(svg);\r\n\r\n        var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\r\n        path.setAttribute('stroke', '#ddd');\r\n        path.setAttribute('stroke-width', \"3px\");\r\n        svg.appendChild(path);\r\n        this._createdAROnlyElements.push(path);\r\n    }\r\n\r\n}\r\n", "import { getParam } from \"../engine_utils\";\r\nimport { isLocalNetwork } from \"../engine_networking_utils\";\r\nimport { Context } from \"../engine_setup\";\r\nimport { arContainerClassName } from \"../engine_element_overlay\";\r\n\r\nconst debug = getParam(\"debugdebug\");\r\nconst hide = getParam(\"noerrors\");\r\n\r\nconst errorContainer: Map<HTMLElement, HTMLElement> = new Map();\r\nconst locationRegex = new RegExp(\"    at .+\\/(.+?\\.ts)\", \"g\");\r\n\r\nexport enum LogType {\r\n    Log,\r\n    Warn,\r\n    Error\r\n}\r\n\r\nexport function getErrorCount() {\r\n    return errorCount;\r\n}\r\n\r\nexport function makeErrorsVisibleForDevelopment() {\r\n    if (hide) return;\r\n    const isLocal = isLocalNetwork();\r\n    if (isLocal) {\r\n        if (debug)\r\n            console.log(window.location.hostname);\r\n        const error = console.error;\r\n        console.error = (...args: any[]) => {\r\n            error.apply(console, args);\r\n            addLog(LogType.Error, args, null, null);\r\n            onReceivedError();\r\n        };\r\n        window.addEventListener(\"error\", (event) => {\r\n            if (!event) return;\r\n            addLog(LogType.Error, event.error, event.filename, event.lineno);\r\n            onReceivedError();\r\n        }, true);\r\n        window.addEventListener(\"unhandledrejection\", (event) => {\r\n            if (!event) return;\r\n            addLog(LogType.Error, event.reason.message, event.reason.stack);\r\n            onReceivedError();\r\n        });\r\n    }\r\n}\r\n\r\nlet errorCount = 0;\r\n\r\nfunction onReceivedError(){\r\n    errorCount += 1;\r\n}\r\n\r\nexport function addLog(type: LogType, message: string | any[], _file?: string | null, _line?: number | null) {\r\n    if(hide) return;\r\n    const context = Context.Current;\r\n    const domElement = context?.domElement ?? document.querySelector(\"needle-engine\");\r\n    if (!domElement) return;\r\n    if (Array.isArray(message)) {\r\n        let newMessage = \"\";\r\n        for(let i = 0; i < message.length; i++) {\r\n            if(typeof message[i] === \"object\") continue;\r\n            if(i > 0) newMessage += \" \";\r\n            newMessage += message[i];\r\n        }\r\n        message = newMessage;\r\n    }\r\n    showMessage(type, domElement, message);\r\n}\r\n\r\n// function getLocation(err: Error): string {\r\n//     const location = err.stack;\r\n//     console.log(location);\r\n//     if (location) {\r\n//         locationRegex.exec(location);\r\n//         const match = locationRegex.exec(location);\r\n//         return match ? match[1] : \"\";\r\n//     }\r\n//     return \"\";\r\n// }\r\n\r\nconst currentMessages = new Set<string>();\r\n\r\nfunction showMessage(type: LogType, element: HTMLElement, msg: string) {\r\n    const container = getLogsContainer(element);\r\n    if (container.childElementCount >= 20) {\r\n        return;\r\n    }\r\n    if (currentMessages.has(msg)) return;\r\n    currentMessages.add(msg);\r\n    const msgcontainer = getMessageContainer(type, msg);\r\n    container.prepend(msgcontainer);\r\n\r\n    setTimeout(() => {\r\n        currentMessages.delete(msg);\r\n        returnMessageContainer(msgcontainer);\r\n    }, 10000);\r\n}\r\n\r\n\r\nconst logsContainerStyles = `\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n\r\n\r\ndiv {\r\n    font-family: 'Roboto', sans-serif;\r\n    font-weight: 400;\r\n}\r\n\r\nstrong {\r\n    font-weight: 700;\r\n}\r\n\r\na {\r\n    color: white;\r\n    text-decoration: none;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n}\r\n\r\na:hover {\r\n    text-decoration: none;\r\n    border: none;\r\n}\r\n\r\n.log strong {\r\n    color: rgba(200,200,200,.9);\r\n}\r\n\r\n.warn strong {\r\n    color: rgba(255,255,230, 1);\r\n}\r\n\r\n.error strong {\r\n    color: rgba(255,100,120, 1);\r\n}\r\n\r\n`;\r\n\r\nfunction getLogsContainer(domElement: HTMLElement): HTMLElement {\r\n    if (errorContainer.has(domElement)) {\r\n        return errorContainer.get(domElement)!;\r\n    } else {\r\n        const container = document.createElement(\"div\");\r\n        container.classList.add(arContainerClassName);\r\n        container.classList.add(\"desktop\");\r\n        container.classList.add(\"debug-container\");\r\n        container.style.position = \"absolute\";\r\n        container.style.top = \"0\";\r\n        container.style.right = \"5px\";\r\n        container.style.paddingTop = \"0px\";\r\n        container.style.maxWidth = \"70%\";\r\n        container.style.maxHeight = \"calc(100% - 5px)\";\r\n        container.style.zIndex = \"1000\";\r\n        // container.style.pointerEvents = \"none\";\r\n        container.style.pointerEvents = \"scroll\";\r\n        // container.style[\"-webkit-overflow-scrolling\"] = \"touch\";\r\n        container.style.display = \"flex\";\r\n        container.style.alignItems = \"end\";\r\n        container.style.flexDirection = \"column\";\r\n        container.style.color = \"white\";\r\n        container.style.overflow = \"auto\";\r\n        // container.style.border = \"1px solid red\";\r\n        domElement.appendChild(container);\r\n        errorContainer.set(domElement, container);\r\n\r\n        const style = document.createElement(\"style\");\r\n        style.innerHTML = logsContainerStyles;\r\n        container.appendChild(style);\r\n        return container;\r\n    }\r\n}\r\n\r\n\r\nconst typeSymbol = Symbol(\"logtype\");\r\nconst containerCache = new Map<LogType, HTMLElement[]>();\r\n\r\nfunction returnMessageContainer(container: HTMLElement) {\r\n    container.remove();\r\n    const type = container[typeSymbol];\r\n    const containers = containerCache.get(type) ?? [];\r\n    containers.push(container);\r\n    containerCache.set(type, containers);\r\n}\r\n\r\nfunction getMessageContainer(type: LogType, msg: string): HTMLElement {\r\n    if (containerCache.has(type)) {\r\n        const containers = containerCache.get(type)!;\r\n        if (containers.length > 0) {\r\n            return containers.pop()!;\r\n        }\r\n    }\r\n    const element = document.createElement(\"div\");\r\n    element.style.marginRight = \"5px\";\r\n    element.style.padding = \".5em\";\r\n    element.style.backgroundColor = \"rgba(0,0,0,.9)\";\r\n    element.style.marginTop = \"5px\";\r\n    element.style.marginBottom = \"3px\";\r\n    element.style.borderRadius = \"8px\";\r\n    element.style.pointerEvents = \"all\";\r\n    element.style.userSelect = \"text\";\r\n    element.style.maxWidth = \"250px\";\r\n    element.style.whiteSpace = \"pre-wrap\";\r\n    element.style[\"backdrop-filter\"] = \"blur(10px)\";\r\n    element.style.backgroundColor = \"rgba(20,20,20,.8)\";\r\n    element.style.boxShadow = \"inset 0 0 80px rgba(0,0,0,.2), 0 0 5px rgba(0,0,0,.2)\";\r\n    element.style.border = \"1px solid rgba(160,160,160,.2)\";\r\n    element[typeSymbol] = type;\r\n    switch (type) {\r\n        case LogType.Log:\r\n            element.classList.add(\"log\");\r\n            element.style.color = \"rgba(200,200,200,.7)\";\r\n            element.style.backgroundColor = \"rgba(40,40,40,.7)\";\r\n            // element.style.backgroundColor = \"rgba(200,200,200,.5)\";\r\n            break;\r\n        case LogType.Warn:\r\n            element.classList.add(\"warn\");\r\n            element.style.color = \"rgb(255, 255, 150)\";\r\n            element.style.backgroundColor = \"rgba(50,50,20,.8)\";\r\n            // element.style.backgroundColor = \"rgba(245,245,50,.5)\";\r\n            break;\r\n        case LogType.Error:\r\n            element.classList.add(\"error\");\r\n            element.style.color = \"rgb(255, 50, 50\";\r\n            element.style.backgroundColor = \"rgba(50,20,20,.8)\";\r\n            // element.style.backgroundColor = \"rgba(255,50,50,.5)\";\r\n            break;\r\n    }\r\n    element.title = \"Open the browser console (F12) for more information\";\r\n\r\n    // msg = msg.replace(/[\\n\\r]/g, \"<br/>\");\r\n    // console.log(msg);\r\n    element.innerHTML = msg;\r\n\r\n    return element;\r\n}", "import * as THREE from \"three\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport * as threeutils from \"../engine/engine_three_utils\";\r\nimport { activeInHierarchyFieldName } from \"../engine/engine_constants\";\r\nimport { Context, FrameEvent } from \"../engine/engine_setup\";\r\nimport * as main from \"../engine/engine_mainloop_utils\";\r\nimport { Object3D } from \"three\";\r\nimport { syncDestroy, syncInstantiate } from \"../engine/engine_networking_instantiate\";\r\nimport { ConstructorConcrete, SourceIdentifier, IComponent, IGameObject, Constructor, GuidsMap, UIDProvider, Collision, ICollider } from \"../engine/engine_types\";\r\nimport { addNewComponent, destroyComponentInstance, findObjectOfType, findObjectsOfType, getComponent, getComponentInChildren, getComponentInParent, getComponents, getComponentsInChildren, getComponentsInParent, getOrAddComponent, moveComponentInstance, removeComponent } from \"../engine/engine_components\";\r\nimport { findByGuid, destroy, InstantiateOptions, instantiate, HideFlags, foreachComponent, markAsInstancedRendered, isActiveInHierarchy, isActiveSelf, isUsingInstancing, setActive } from \"../engine/engine_gameobject\";\r\n\r\n\r\n// export interface ISerializationCallbackReceiver {\r\n//     onBeforeSerialize?(): object | void;\r\n//     onAfterSerialize?();\r\n//     onBeforeDeserialize?(data?: any);\r\n//     onAfterDeserialize?();\r\n//     onDeserialize?(key: string, value: any): any | void;\r\n// }\r\n\r\nabstract class GameObject extends THREE.Object3D implements THREE.Object3D, IGameObject {\r\n\r\n    guid: string | undefined;\r\n\r\n    public static setActive(go: THREE.Object3D, active: boolean, processStart: boolean = true, setVisible: boolean = true) {\r\n        if (!go) return;\r\n        setActive(go, active, setVisible);\r\n        main.updateIsActive(go);\r\n        if (active && processStart)\r\n            main.processStart(Context.Current, go);\r\n    }\r\n\r\n    public static isActiveSelf(go: THREE.Object3D): boolean {\r\n        return isActiveSelf(go);\r\n    }\r\n\r\n    public static isActiveInHierarchy(go: THREE.Object3D): boolean {\r\n        return isActiveInHierarchy(go);\r\n    }\r\n\r\n    public static markAsInstancedRendered(go: THREE.Object3D, instanced: boolean) {\r\n        markAsInstancedRendered(go, instanced);\r\n    }\r\n\r\n    public static isUsingInstancing(instance: THREE.Object3D): boolean { return isUsingInstancing(instance); }\r\n\r\n    public static foreachComponent(instance: THREE.Object3D, cb: (comp: Component) => any, recursive: boolean = true): any {\r\n        return foreachComponent(instance, cb as (comp: IComponent) => any, recursive);\r\n    }\r\n\r\n    public static instantiateSynced(instance: GameObject | Object3D | null, opts: InstantiateOptions): GameObject | null {\r\n        if (!instance) return null;\r\n        return syncInstantiate(instance as any, opts) as GameObject | null;\r\n    }\r\n\r\n    public static instantiate(instance: GameObject | Object3D | null, opts: InstantiateOptions | null = null): GameObject | null {\r\n        return instantiate(instance, opts) as GameObject | null;\r\n    }\r\n\r\n    public static destroySynced(instance: THREE.Object3D | Component, context?: Context, recursive: boolean = true) {\r\n        if (!instance) return;\r\n        const go = instance as GameObject;\r\n        context = context ?? Context.Current;\r\n        syncDestroy(go as any, context.connection, recursive);\r\n    }\r\n\r\n    public static destroy(instance: THREE.Object3D | Component, recursive: boolean = true, isRoot: boolean = true) {\r\n        return destroy(instance, recursive, isRoot);\r\n    }\r\n\r\n    /**\r\n     * Add an object to parent and also ensure all components are being registered\r\n     */\r\n    public static add(instance: THREE.Object3D | null | undefined, parent: THREE.Object3D, context?: Context) {\r\n        if (!instance || !parent) return;\r\n        if (instance === parent) {\r\n            console.warn(\"Can not add object to self\", instance);\r\n            return;\r\n        }\r\n        if (!context) {\r\n            context = Context.Current;\r\n        }\r\n        parent.add(instance);\r\n        setActive(instance, true);\r\n        main.updateIsActive(instance);\r\n        if (context) {\r\n            GameObject.foreachComponent(instance, (comp: Component) => {\r\n                main.addScriptToArrays(comp, context!);\r\n                if(comp.__internalDidAwakeAndStart) return;\r\n                if (context!.new_script_start.includes(comp) === false) {\r\n                    context!.new_script_start.push(comp as Behaviour);\r\n                }\r\n            }, true);\r\n        }\r\n        else {\r\n            console.warn(\"Missing context\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the object from its parent and deactivates all of its components\r\n     */\r\n    public static remove(instance: THREE.Object3D | null | undefined) {\r\n        if (!instance) return;\r\n        instance.parent?.remove(instance);\r\n        setActive(instance, false);\r\n        main.updateIsActive(instance);\r\n        GameObject.foreachComponent(instance, (comp) => {\r\n            main.processRemoveFromScene(comp);\r\n        }, true);\r\n    }\r\n\r\n    public static invokeOnChildren(go: THREE.Object3D | null | undefined, functionName: string, ...args: any) {\r\n        this.invoke(go, functionName, true, args);\r\n    }\r\n\r\n    public static invoke(go: THREE.Object3D | null | undefined, functionName: string, children: boolean = false, ...args: any) {\r\n        if (!go) return;\r\n\r\n        // console.log(go);\r\n        this.foreachComponent(go, c => {\r\n            const fn = c[functionName];\r\n            if (fn && typeof fn === \"function\") {\r\n                const bound = fn.bind(c);\r\n                // console.log(c, bound)\r\n                bound(...args)\r\n            }\r\n        }, children);\r\n    }\r\n\r\n    public static addNewComponent<T>(go: GameObject | THREE.Object3D, type: ConstructorConcrete<T>, callAwake: boolean = true): T {\r\n        const instance = new type();\r\n        //@ts-ignore\r\n        addNewComponent(go, instance, callAwake);\r\n        return instance\r\n    }\r\n\r\n    public static addComponent(go: GameObject, instance: Component): void {\r\n        if (instance.gameObject == null) {\r\n            throw new Error(\"Did you mean to create a new component? Use addNewComponent\");\r\n        }\r\n        moveComponentInstance(go, instance as any);\r\n    }\r\n\r\n    public static removeComponent(instance: Component): Component {\r\n        removeComponent(instance.gameObject, instance as any);\r\n        return instance;\r\n    }\r\n\r\n    public static getOrAddComponent<T>(go: GameObject | THREE.Object3D, typeName: ConstructorConcrete<T>): T {\r\n        return getOrAddComponent<any>(go, typeName);\r\n    }\r\n\r\n    public static getComponent<T>(go: GameObject | THREE.Object3D | null, typeName: Constructor<T> | null): T | null {\r\n        if (go === null) return null;\r\n        // if names are minified we could also use the type store and work with strings everywhere\r\n        // not ideal, but I dont know a good/sane way to do this otherwise\r\n        // const res = TypeStore.get(typeName);\r\n        // if(res) typeName = res;\r\n        return getComponent(go, typeName as any);\r\n    }\r\n\r\n    public static getComponents<T>(go: GameObject | THREE.Object3D | null, typeName: Constructor<T>, arr: T[] | null = null): T[] {\r\n        if (go === null) return arr ?? [];\r\n        return getComponents(go, typeName, arr);\r\n    }\r\n\r\n    public static findByGuid(guid: string, hierarchy: THREE.Object3D): GameObject | Component | null | undefined {\r\n        const res = findByGuid(guid, hierarchy);\r\n        return res as GameObject | Component | null | undefined;\r\n    }\r\n\r\n    public static findObjectOfType<T>(typeName: Constructor<T>, context?: Context | THREE.Object3D, includeInactive: boolean = true): T | null {\r\n        return findObjectOfType(typeName, context ?? Context.Current, includeInactive);\r\n    }\r\n\r\n    public static findObjectsOfType<T>(typeName: Constructor<T>, context?: Context | THREE.Object3D): Array<T> {\r\n        const arr = [];\r\n        findObjectsOfType(typeName, arr, context);\r\n        return arr;\r\n    }\r\n\r\n    public static getComponentInChildren<T>(go: GameObject | THREE.Object3D, typeName: Constructor<T>): T | null {\r\n        return getComponentInChildren(go, typeName);\r\n    }\r\n\r\n    public static getComponentsInChildren<T>(go: GameObject | THREE.Object3D, typeName: Constructor<T>, arr: T[] | null = null): Array<T> {\r\n        return getComponentsInChildren<T>(go, typeName, arr ?? undefined) as T[]\r\n    }\r\n\r\n    public static getComponentInParent<T>(go: GameObject | THREE.Object3D, typeName: Constructor<T>): T | null {\r\n        return getComponentInParent(go, typeName);\r\n    }\r\n\r\n    public static getComponentsInParent<T>(go: GameObject | THREE.Object3D, typeName: Constructor<T>, arr: Array<T> | null = null): Array<T> {\r\n        return getComponentsInParent(go, typeName, arr);\r\n    }\r\n\r\n    public static getAllComponents(go: GameObject | THREE.Object3D): Behaviour[] {\r\n        const componentsList = go.userData?.components;\r\n        const newList = [...componentsList];\r\n        return newList;\r\n    }\r\n\r\n    public static *iterateComponents(go: GameObject | THREE.Object3D) {\r\n        const list = go?.userData?.components;\r\n        if (list && Array.isArray(list)) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                yield list[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    // these are implemented via threejs object extensions\r\n    abstract activeSelf: boolean;\r\n    abstract addNewComponent<T>(type: Constructor<T>): T | null;\r\n    abstract removeComponent(comp: Component): Component;\r\n    abstract getOrAddComponent<T>(typeName: Constructor<T> | null): T;\r\n    abstract getComponent<T>(type: Constructor<T>): T | null;\r\n    abstract getComponents<T>(type: Constructor<T>, arr?: T[]): Array<T>;\r\n    abstract getComponentInChildren<T>(type: Constructor<T>): T | null;\r\n    abstract getComponentsInChildren<T>(type: Constructor<T>, arr?: T[]): Array<T>;\r\n    abstract getComponentInParent<T>(type: Constructor<T>): T | null;\r\n    abstract getComponentsInParent<T>(type: Constructor<T>, arr?: T[]): Array<T>;\r\n}\r\n\r\n\r\n\r\nclass Component implements IComponent, EventTarget {\r\n\r\n    get isComponent(): boolean { return true; }\r\n\r\n    private __context: Context | undefined;\r\n    get context(): Context {\r\n        return this.__context ?? Context.Current;\r\n    }\r\n    set context(context: Context) {\r\n        this.__context = context;\r\n    }\r\n    get scene(): THREE.Scene { return this.context.scene; }\r\n\r\n    get layer(): number {\r\n        return this.gameObject?.userData?.layer;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.gameObject?.userData.name;\r\n    }\r\n    private __name?: string;\r\n    set name(str: string) {\r\n        if (this.gameObject) {\r\n            if (!this.gameObject.userData) this.gameObject.userData = {}\r\n            this.gameObject.userData.name = str;\r\n            this.__name = str;\r\n        }\r\n        else {\r\n            this.__name = str;\r\n        }\r\n    }\r\n    get tag(): string {\r\n        return this.gameObject?.userData.tag;\r\n    }\r\n    set tag(str: string) {\r\n        if (this.gameObject)\r\n            this.gameObject.userData.tag = str;\r\n    }\r\n    get static() {\r\n        return this.gameObject?.userData.static;\r\n    }\r\n    get hideFlags(): HideFlags {\r\n        return this.gameObject?.userData.hideFlags;\r\n    }\r\n\r\n\r\n    get activeAndEnabled(): boolean {\r\n        if (this.destroyed) return false;\r\n        if (this.__isEnabled === false) return false;\r\n        if (!this.__isActiveInHierarchy) return false;\r\n        // let go = this.gameObject;\r\n        // do {\r\n        //     // console.log(go.name, go.visible)\r\n        //     if (!go.visible) return false;\r\n        //     go = go.parent as GameObject;\r\n        // }\r\n        // while (go);\r\n        return true;\r\n    }\r\n\r\n    private get __isActive(): boolean {\r\n        return this.gameObject.visible;\r\n    }\r\n    private get __isActiveInHierarchy(): boolean {\r\n        if (!this.gameObject) return false;\r\n        const res = this.gameObject[activeInHierarchyFieldName];\r\n        if (res === undefined) return true;\r\n        return res;\r\n    }\r\n\r\n    private set __isActiveInHierarchy(val: boolean) {\r\n        if (!this.gameObject) return;\r\n        this.gameObject[activeInHierarchyFieldName] = val;\r\n    }\r\n\r\n    gameObject!: GameObject;\r\n    guid: string = \"invalid\";\r\n    sourceId?: SourceIdentifier;\r\n    // transform: THREE.Object3D = nullObject;\r\n\r\n    /** called on a component with a map of old to new guids (e.g. when instantiate generated new guids and e.g. timeline track bindings needs to remape them) */\r\n    resolveGuids?(guidsMap: GuidsMap): void;\r\n\r\n    /** called once when the component becomes active for the first time */\r\n    awake() { }\r\n    /** called every time when the component gets enabled (this is invoked after awake and before start) */\r\n    onEnable() { }\r\n    onDisable() { }\r\n    onDestroy() {\r\n        this.__destroyed = true;\r\n    }\r\n    /** called when you decorate fields with the @validate() decorator\r\n     * @param field the name of the field that was changed\r\n     */\r\n    onValidate?(prop?: string): void;\r\n    start?(): void;\r\n    earlyUpdate?(): void;\r\n    update?(): void;\r\n    lateUpdate?(): void;\r\n    onBeforeRender?(frame: XRFrame | null): void;\r\n    onAfterRender?(): void;\r\n\r\n    onCollisionEnter?(col: Collision);\r\n    onCollisionExit?(col: Collision);\r\n    onCollisionStay?(col: Collision);\r\n    \r\n    onTriggerEnter?(col: ICollider);\r\n    onTriggerStay?(col: ICollider);\r\n    onTriggerExit?(col: ICollider);\r\n\r\n    startCoroutine(routine: Generator, evt: FrameEvent = FrameEvent.Update): Generator {\r\n        return this.context.registerCoroutineUpdate(this, routine, evt);\r\n    }\r\n\r\n    stopCoroutine(routine: Generator, evt: FrameEvent = FrameEvent.Update): void {\r\n        this.context.unregisterCoroutineUpdate(routine, evt);\r\n    }\r\n\r\n    public get destroyed(): boolean {\r\n        return this.__destroyed;\r\n    }\r\n\r\n    public destroy() {\r\n        if (this.__destroyed) return;\r\n        this.__internalDestroy();\r\n    }\r\n\r\n    \r\n    \r\n    /** @internal */\r\n    protected __didAwake: boolean = false;\r\n    \r\n    /** @internal */\r\n    private __didStart: boolean = false;\r\n    \r\n    /** @internal */\r\n    protected __didEnable: boolean = false;\r\n    \r\n    /** @internal */\r\n    protected __isEnabled: boolean | undefined = undefined;\r\n    \r\n    /** @internal */\r\n    private __destroyed: boolean = false;\r\n    \r\n    /** @internal */\r\n    get __internalDidAwakeAndStart() { return this.__didAwake && this.__didStart; }\r\n\r\n    \r\n    /** @internal */\r\n    constructor() {\r\n        // super();\r\n        this.__internalNewInstanceCreated();\r\n    }\r\n\r\n    \r\n    /** @internal */\r\n    __internalNewInstanceCreated() {\r\n        this.__didAwake = false;\r\n        this.__didStart = false;\r\n        this.__didEnable = false;\r\n        this.__isEnabled = undefined;\r\n        this.__destroyed = false;\r\n        // this.__internalResetsCachedPhysicsData();\r\n    }\r\n\r\n    \r\n    /** @internal */\r\n    __internalAwake() {\r\n        if (this.__didAwake) return;\r\n        // console.log(\"__internalAwake\");\r\n        this.__didAwake = true;\r\n        // this.gameObject.test();\r\n\r\n        this.awake();\r\n    }\r\n\r\n    \r\n    /** @internal */\r\n    __internalStart() {\r\n        if (this.__didStart) return;\r\n        this.__didStart = true;\r\n        if (this.start) this.start();\r\n    }\r\n\r\n    \r\n    /** @internal */\r\n    __internalEnable(): boolean {\r\n        if (this.__didEnable) return false;\r\n        // console.trace(\"INTERNAL ENABLE\");\r\n        this.__didEnable = true;\r\n        this.onEnable();\r\n        // if we do this after processing the callback\r\n        this.__isEnabled = true;\r\n        return true;\r\n    }\r\n\r\n    /** @internal */\r\n    __internalDisable() {\r\n        if (!this.__didEnable) return;\r\n        this.__didEnable = false;\r\n        // this._collisionExitRoutine = undefined;\r\n        this.onDisable();\r\n        // this._collisions?.clear();\r\n        // if we do this after processing the callback\r\n        this.__isEnabled = false;\r\n    }\r\n\r\n    /** @internal */\r\n    __internalDestroy() {\r\n        if (this.__destroyed) return;\r\n        this.__destroyed = true;\r\n        this.destroy?.call(this);\r\n        // console.log(\"destroy\", this);\r\n        destroyComponentInstance(this as any);\r\n    }\r\n\r\n    // isActiveAndEnabled: boolean = false;\r\n\r\n    get enabled(): boolean {\r\n        return this.__isEnabled ?? true; // if it has no enabled field it is always enabled\r\n    }\r\n    set enabled(val: boolean) {\r\n        // when called from animationclip we receive numbers\r\n        // due to interpolation they can be anything between 0 and 1\r\n        if (typeof val === \"number\") {\r\n            if (val >= 0.5) val = true;\r\n            else val = false;\r\n        }\r\n\r\n        // need to check here because codegen is calling this before everything is setup\r\n        if (!this.__didAwake) {\r\n            this.__isEnabled = val;\r\n            return;\r\n        }\r\n        if (val) {\r\n            this.__internalEnable();\r\n        } else {\r\n            this.__internalDisable();\r\n        }\r\n    }\r\n\r\n    // TODO move this to threeutils\r\n    // we need a copy for modifying the values to local space\r\n    private static _worldPositionBuffer: THREE.Vector3 = new THREE.Vector3();\r\n    private static _worldQuaternionBuffer: THREE.Quaternion = new THREE.Quaternion();\r\n    private static _worldEulerBuffer: THREE.Euler = new THREE.Euler();\r\n\r\n    private _worldPosition: THREE.Vector3 | undefined = undefined;\r\n    private _worldQuaternion: THREE.Quaternion | undefined = undefined;\r\n    private static _tempQuaternionBuffer2: THREE.Quaternion = new THREE.Quaternion();\r\n    private _worldEuler: THREE.Euler | undefined = undefined;\r\n    private _worldRotation: THREE.Vector3 | undefined = undefined;\r\n\r\n    get worldPosition(): THREE.Vector3 {\r\n        if (!this._worldPosition) this._worldPosition = new THREE.Vector3();\r\n        threeutils.getWorldPosition(this.gameObject, this._worldPosition);\r\n        // this.gameObject.getWorldPosition(this._worldPosition);\r\n        return this._worldPosition;\r\n    }\r\n\r\n    set worldPosition(val: THREE.Vector3) {\r\n        threeutils.setWorldPosition(this.gameObject, val);\r\n    }\r\n\r\n    setWorldPosition(x: number, y: number, z: number) {\r\n        Component._worldPositionBuffer.set(x, y, z);\r\n        this.worldPosition = Component._worldPositionBuffer;\r\n    }\r\n\r\n\r\n    get worldQuaternion(): THREE.Quaternion {\r\n        if (!this._worldQuaternion) this._worldQuaternion = new THREE.Quaternion();\r\n        return threeutils.getWorldQuaternion(this.gameObject, this._worldQuaternion);\r\n    }\r\n    set worldQuaternion(val: THREE.Quaternion) {\r\n        threeutils.setWorldQuaternion(this.gameObject, val);\r\n    }\r\n    setWorldQuaternion(x: number, y: number, z: number, w: number) {\r\n        Component._worldQuaternionBuffer.set(x, y, z, w);\r\n        this.worldQuaternion = Component._worldQuaternionBuffer;\r\n    }\r\n\r\n\r\n    // world euler (in radians)\r\n    get worldEuler(): THREE.Euler {\r\n        if (!this._worldEuler) this._worldEuler = new THREE.Euler();\r\n        this._worldEuler.setFromQuaternion(this.worldQuaternion);\r\n        return this._worldEuler;\r\n    }\r\n\r\n    // world euler (in radians)\r\n    set worldEuler(val: THREE.Euler) {\r\n        if (!this._worldQuaternion) this._worldQuaternion = new THREE.Quaternion();\r\n        this._worldQuaternion?.setFromEuler(val);\r\n        this.worldQuaternion = this._worldQuaternion;\r\n    }\r\n\r\n    // returns rotation in degrees\r\n    get worldRotation(): THREE.Vector3 {\r\n        const rot = this.worldEuler;\r\n        if (!this._worldRotation) this._worldRotation = new THREE.Vector3();\r\n        const wr = this._worldRotation;\r\n        wr.set(rot.x, rot.y, rot.z);\r\n        wr.x = Mathf.toDegrees(wr.x);\r\n        wr.y = Mathf.toDegrees(wr.y);\r\n        wr.z = Mathf.toDegrees(wr.z);\r\n        return wr;\r\n    }\r\n\r\n    set worldRotation(val: THREE.Vector3) {\r\n        this.setWorldRotation(val.x, val.y, val.z, true);\r\n    }\r\n\r\n    setWorldRotation(x: number, y: number, z: number, degrees: boolean = true) {\r\n        if (degrees) {\r\n            x = Mathf.toRadians(x);\r\n            y = Mathf.toRadians(y);\r\n            z = Mathf.toRadians(z);\r\n        }\r\n        Component._worldEulerBuffer.set(x, y, z);\r\n        Component._worldQuaternionBuffer.setFromEuler(Component._worldEulerBuffer);\r\n        this.worldQuaternion = Component._worldQuaternionBuffer;\r\n    }\r\n\r\n    private static _forward: THREE.Vector3 = new THREE.Vector3();\r\n    public get forward(): THREE.Vector3 {\r\n        return Component._forward.set(0, 0, -1).applyQuaternion(this.worldQuaternion);\r\n    }\r\n\r\n\r\n\r\n    // EventTarget implementation:\r\n\r\n    private _eventListeners = new Map<string, EventListener[]>();\r\n\r\n    addEventListener(type: string, listener: EventListener) {\r\n        this._eventListeners[type] = this._eventListeners[type] || [];\r\n        this._eventListeners[type].push(listener);\r\n    }\r\n\r\n    removeEventListener(type: string, listener: EventListener) {\r\n        if (!this._eventListeners[type]) return;\r\n        const index = this._eventListeners[type].indexOf(listener);\r\n        if (index >= 0) this._eventListeners[type].splice(index, 1);\r\n    }\r\n\r\n    dispatchEvent(evt: Event): boolean {\r\n\r\n        if (!this._eventListeners[evt.type]) return false;\r\n        const listeners = this._eventListeners[evt.type];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            listeners[i](evt);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass Behaviour extends Component {\r\n}\r\n\r\nexport { Behaviour, Component, GameObject };", "import { $isAssigningProperties } from \"./engine_serialization_core\";\r\nimport { LogType, showBalloonMessage } from \"./debug/debug\";\r\nimport { Constructor, IComponent } from \"./engine_types\";\r\n\r\n\r\ndeclare type setter = (v: any) => void;\r\ndeclare type getter = () => any;\r\n\r\n/** create accessor callbacks for a field */\r\nexport const validate = function (set?: setter, get?: getter) {\r\n    // \"descriptor : undefined\" prevents @validate() to be added to property getters or setters\r\n    return function (target: IComponent | any, propertyKey: string, descriptor?: undefined) {\r\n        createPropertyWrapper(target, propertyKey, descriptor, set, get);\r\n    }\r\n}\r\n\r\n\r\nfunction createPropertyWrapper(target: IComponent | any, propertyKey: string, descriptor?: PropertyDescriptor,\r\n    set?: setter,\r\n    get?: getter) {\r\n\r\n    if (!get && !set && !target.onValidate) return;\r\n\r\n    // this is not undefined when its a property getter or setter already and not just a field\r\n    // we currently only support validation of fields\r\n    if (descriptor !== undefined) {\r\n        console.error(\"Invalid usage of validate decorator. Only fields can be validated.\", target, propertyKey, descriptor);\r\n        showBalloonMessage(\"Invalid usage of validate decorator. Only fields can be validated. Property: \" + propertyKey, LogType.Error);\r\n        return;\r\n    }\r\n\r\n    if (target.__internalAwake) {\r\n        // this is the hidden key we save the original property to\r\n        const $prop = Symbol(propertyKey);\r\n        // save the original awake method\r\n        // we need to delay decoration until the object has been created\r\n        const awake = target.__internalAwake;\r\n        target.__internalAwake = function () {\r\n\r\n            // only build wrapper once per type\r\n            if (this[$prop] === undefined) {\r\n\r\n                // make sure the field is initialized in a hidden property\r\n                this[$prop] = this[propertyKey];\r\n\r\n                Object.defineProperty(this, propertyKey, {\r\n                    set: function (v) {\r\n                        if (this[$isAssigningProperties] === true) {\r\n                            this[$prop] = v;\r\n                        }\r\n                        else {\r\n                            set?.call(this, v);\r\n                            const oldValue = this[$prop];\r\n                            this[$prop] = v;\r\n                            this.onValidate?.call(this, propertyKey, oldValue);\r\n                        }\r\n                    },\r\n                    get: function () {\r\n                        get?.call(this);\r\n                        return this[$prop];\r\n                    },\r\n                });\r\n            }\r\n\r\n            // call the original awake method\r\n            awake.call(this);\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** experimental attribute - use to hook into another type's methods and run before the other methods run (similar to Harmony prefixes).\r\n * Return false to prevent the original method from running.\r\n */\r\nexport const prefix = function <T>(type: Constructor<T>) {\r\n    return function (target: IComponent | any, propertyKey: string, _PropertyDescriptor: PropertyDescriptor) {\r\n\r\n        const targetType = type.prototype;\r\n        const originalProp = Object.getOwnPropertyDescriptor(targetType, propertyKey);\r\n        if (!originalProp?.value) {\r\n            console.warn(\"Can not apply prefix: type does not have method named\", propertyKey, type);\r\n            return;\r\n        }\r\n        const originalValue = originalProp.value;\r\n        const prefix = target[propertyKey];\r\n        Object.defineProperty(targetType, propertyKey, {\r\n            value: function(...args){\r\n                const res = prefix?.call(this, ...args);\r\n                if(res === false) return;\r\n                return originalValue.call(this, ...args);\r\n            },\r\n        });\r\n    }\r\n}\r\n", "import { showBalloonWarning } from \"./api\";\r\nimport { Mathf } from \"./engine_math\";\r\nimport { LoadingProgressArgs } from \"./engine_setup\";\r\nimport { getParam } from \"./engine_utils\";\r\n\r\nconst debug = getParam(\"debugloadingbar\");\r\n\r\nexport class LoadingElementOptions {\r\n    className?: string;\r\n    additionalClasses?: string[];\r\n}\r\n\r\nexport interface ILoadingViewHandler {\r\n    onLoadingBegin(message?: string);\r\n    onLoadingUpdate(progress: LoadingProgressArgs, message?: string);\r\n    onLoadingFinished(message?: string);\r\n}\r\n\r\nlet currentFileProgress = 0;\r\nlet currentFileName: string;\r\nexport function calculateProgress01(progress: LoadingProgressArgs) {\r\n    if (debug) console.log(progress.progress.loaded.toFixed(0) + \"/\" + progress.progress.total.toFixed(0), progress);\r\n\r\n    const count = progress.count;\r\n    const total: number | undefined = progress.progress.total;\r\n    // if the progress event total amount is unknown / not reported\r\n    // we slowly move the progress bar forward\r\n    if (total === 0 || total === undefined) {\r\n        // reset the temp progress when the file has changed\r\n        if (currentFileName !== progress.name)\r\n            currentFileProgress = 0;\r\n        currentFileName = progress.name;\r\n        // slowly move the progress bar forward\r\n        currentFileProgress += (1 - currentFileProgress) * .001;\r\n        if (debug) showBalloonWarning(\"Loading \" + progress.name + \" did not report total size\");\r\n    }\r\n    else {\r\n        currentFileProgress = progress.progress.loaded / total;\r\n    }\r\n    const prog = progress.index / count + currentFileProgress / count;\r\n    return Mathf.clamp01(prog);\r\n}\r\n\r\nexport class EngineLoadingView implements ILoadingViewHandler {\r\n\r\n    // the raw progress\r\n    loadingProgress: number = 0;\r\n\r\n    private container: HTMLElement;\r\n    private _progress: number = 0;\r\n    private _allowCustomLoadingElement: boolean = false;\r\n    private _loadingElement?: HTMLElement;\r\n    private _loadingTextContainer: HTMLElement | null = null;\r\n    private _loadingBar: HTMLElement | null = null;\r\n    private _messageContainer: HTMLElement | null = null;\r\n    private _loadingElementOptions?: LoadingElementOptions;\r\n\r\n    constructor(container: HTMLElement, opts?: LoadingElementOptions) {\r\n        this.container = container;\r\n        this._loadingElementOptions = opts;\r\n    }\r\n\r\n    onLoadingBegin(message?: string) {\r\n        if (!this._loadingElement) {\r\n            for (let i = 0; i < this.container.children.length; i++) {\r\n                const el = this.container.children[i] as HTMLElement;\r\n                if (el.classList.contains(\"loading\")) {\r\n                    if (!this._allowCustomLoadingElement) {\r\n                        console.warn(\"Custom loading container is not allowed\")\r\n                        this.container.removeChild(el);\r\n                        continue;\r\n                    }\r\n                    this._loadingElement = this.createLoadingElement(el);\r\n                    return;\r\n                }\r\n            }\r\n            this._loadingElement = this.createLoadingElement();\r\n        }\r\n        this._progress = 0;\r\n        this.loadingProgress = 0;\r\n        this._loadingElement.style.display = \"flex\";\r\n        this.container.appendChild(this._loadingElement);\r\n        this.smoothProgressLoop();\r\n        this.setMessage(message ?? \"\");\r\n    }\r\n\r\n    onLoadingUpdate(progress: LoadingProgressArgs | ProgressEvent | number, message?: string) {\r\n        // if the element has no parent we want to add it\r\n        if (!this._loadingElement?.parentElement) {\r\n            this.onLoadingBegin(message);\r\n        }\r\n        // console.log(callback.name, callback.progress.loaded / callback.progress.total, callback.index + \"/\" + callback.count);\r\n        let total01 = 0;\r\n        if (typeof progress === \"number\") {\r\n            total01 = progress;\r\n        }\r\n        else {\r\n            if (\"index\" in progress)\r\n                total01 = calculateProgress01(progress);\r\n            if (!message && \"name\" in progress)\r\n                this.setMessage(progress.name);\r\n        }\r\n        this.loadingProgress = total01;\r\n        if (message) this.setMessage(message);\r\n        this.updateDisplay();\r\n    }\r\n\r\n    onLoadingFinished(message?: string) {\r\n        this.loadingProgress = 1;\r\n        this.setMessage(message ?? \"\");\r\n    }\r\n\r\n    setMessage(message: string) {\r\n        if (this._messageContainer) {\r\n            this._messageContainer.innerText = message;\r\n        }\r\n    }\r\n\r\n    private _progressLoop: any;\r\n    private smoothProgressLoop() {\r\n        if (this._progressLoop) return;\r\n        let dt = 1 / 12;\r\n        const max = 1 - .05;\r\n        this._progressLoop = setInterval(() => {\r\n            if (this.loadingProgress >= 1 && this._progress >= max) {\r\n                if (this._loadingElement) {\r\n                    this._loadingElement.style.display = \"none\";\r\n                    this._loadingElement.remove();\r\n                }\r\n                clearInterval(this._progressLoop);\r\n                this._progressLoop = null;\r\n                return;\r\n            }\r\n            this._progress = Mathf.lerp(this._progress, this.loadingProgress, dt * this.loadingProgress);\r\n            this.updateDisplay();\r\n        }, dt);\r\n    }\r\n\r\n    private updateDisplay() {\r\n        const t = this._progress;\r\n        const percent = (t * 100).toFixed(0) + \"%\";\r\n        if (this._loadingBar) {\r\n            this._loadingBar.style.width = t * 100 + \"%\";\r\n        }\r\n\r\n        if (this._loadingTextContainer)\r\n            this._loadingTextContainer.textContent = percent;\r\n    }\r\n\r\n    private createLoadingElement(existing?: HTMLElement): HTMLElement {\r\n        this._loadingElement = existing || document.createElement(\"div\");\r\n        if (!existing) {\r\n            this._loadingElement.style.position = \"fixed\";\r\n            this._loadingElement.style.width = \"100%\";\r\n            this._loadingElement.style.height = \"100%\";\r\n            this._loadingElement.style.left = \"0\";\r\n            this._loadingElement.style.top = \"0\";\r\n            this._loadingElement.style.backgroundColor = \"#000000\";\r\n            this._loadingElement.style.display = \"flex\";\r\n            this._loadingElement.style.alignItems = \"center\";\r\n            this._loadingElement.style.justifyContent = \"center\";\r\n            this._loadingElement.style.zIndex = \"1000\";\r\n            this._loadingElement.style.flexDirection = \"column\";\r\n            this._loadingElement.style.pointerEvents = \"none\";\r\n            this._loadingElement.style.color = \"white\";\r\n        }\r\n\r\n        const className = this._loadingElementOptions?.className ?? \"loading\";\r\n        this._loadingElement.classList.add(className);\r\n        if (this._loadingElementOptions?.additionalClasses) {\r\n            for (const c of this._loadingElementOptions.additionalClasses) {\r\n                this._loadingElement.classList.add(c);\r\n            }\r\n        }\r\n\r\n\r\n        const loadingBarContainer = document.createElement(\"div\");\r\n        const maxWidth = 30;\r\n        loadingBarContainer.style.display = \"flex\";\r\n        loadingBarContainer.style.width = maxWidth + \"%\";\r\n        loadingBarContainer.style.height = \"2px\";\r\n        loadingBarContainer.style.background = \"rgba(255,255,255,.1)\"\r\n        this._loadingElement.appendChild(loadingBarContainer);\r\n\r\n        this._loadingBar = document.createElement(\"div\");\r\n        loadingBarContainer.appendChild(this._loadingBar);\r\n        const getGradientPos = function (t: number): string {\r\n            return Mathf.lerp(maxWidth * .5, 100 - maxWidth * .5, t) + \"%\";\r\n        }\r\n        this._loadingBar.style.background =\r\n            `linear-gradient(90deg, #02022B ${getGradientPos(0)}, #0BA398 ${getGradientPos(.4)}, #99CC33 ${getGradientPos(.5)}, #D7DB0A ${getGradientPos(1)})`;\r\n        this._loadingBar.style.backgroundAttachment = \"fixed\";\r\n        this._loadingBar.style.width = \"0%\";\r\n        this._loadingBar.style.height = \"100%\";\r\n\r\n        this._loadingTextContainer = document.createElement(\"div\");\r\n        this._loadingTextContainer.style.display = \"flex\";\r\n        this._loadingTextContainer.style.justifyContent = \"center\";\r\n        this._loadingTextContainer.style.marginTop = \".9em\";\r\n        this._loadingElement.appendChild(this._loadingTextContainer);\r\n\r\n        const messageContainer = document.createElement(\"div\");\r\n        this._messageContainer = messageContainer;\r\n        messageContainer.style.display = \"flex\";\r\n        messageContainer.style.fontSize = \".8em\";\r\n        messageContainer.style.paddingTop = \".5em\";\r\n        messageContainer.style.color = \"rgba(255,255,255,.5)\";\r\n        // messageContainer.style.border = \"1px solid rgba(255,255,255,.1)\";\r\n        messageContainer.style.justifyContent = \"center\";\r\n        this._loadingElement.appendChild(messageContainer);\r\n\r\n        return this._loadingElement;\r\n    }\r\n}", "\r\nimport { Context } from \"./engine_setup\"\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\r\nimport { getParam } from \"./engine_utils\";\r\n\r\nconst debug = getParam(\"debugdecoders\");\r\n\r\nlet dracoLoader: DRACOLoader;\r\nlet ktx2Loader: KTX2Loader;\r\n\r\nexport function setDracoDecoderPath(path: string | undefined) {\r\n    if (path !== undefined && typeof path === \"string\") {\r\n        if (!dracoLoader)\r\n            dracoLoader = new DRACOLoader();\r\n        if (debug) console.log(\"Setting draco decoder path to\", path);\r\n        dracoLoader.setDecoderPath(path);\r\n    }\r\n}\r\n\r\nexport function setDracoDecoderType(type: string | undefined) {\r\n    if (type !== undefined && typeof type === \"string\") {\r\n        if (!dracoLoader)\r\n            dracoLoader = new DRACOLoader();\r\n        if (debug) console.log(\"Setting draco decoder type to\", type);\r\n        dracoLoader.setDecoderConfig({ type: type });\r\n    }\r\n}\r\n\r\nexport function setKtx2TranscoderPath(path: string) {\r\n    if (path !== undefined && typeof path === \"string\") {\r\n        if (!ktx2Loader)\r\n            ktx2Loader = new KTX2Loader();\r\n        if (debug) console.log(\"Setting ktx2 transcoder path to\", path);\r\n        ktx2Loader.setTranscoderPath(path);\r\n    }\r\n}\r\n\r\nexport function addDracoAndKTX2Loaders(loader: GLTFLoader, context: Context) {\r\n    if (!dracoLoader) {\r\n        dracoLoader = new DRACOLoader();\r\n        dracoLoader.setDecoderPath('./include/draco/');\r\n        dracoLoader.setDecoderConfig({ type: 'js' });\r\n        if(debug) console.log(\"Setting draco decoder path to\", './include/draco/');\r\n    }\r\n    if (!ktx2Loader) {\r\n        ktx2Loader = new KTX2Loader();\r\n        ktx2Loader.setTranscoderPath('./include/ktx2/');\r\n        if(debug) console.log(\"Setting ktx2 transcoder path to\", './include/ktx2/');\r\n        if (context.renderer)\r\n            ktx2Loader.detectSupport(context.renderer);\r\n    }\r\n\r\n    loader.setDRACOLoader(dracoLoader);\r\n    loader.setKTX2Loader(ktx2Loader);\r\n}\r\n", "import { Animator } from \"../../engine-components/Animator\";\r\nimport { AnimationAction, AnimationClip, MathUtils, Object3D } from \"three\"\r\nimport { Context } from \"../engine_setup\";\r\nimport { InstantiateIdProvider } from \"../../engine/engine_networking_instantiate\";\r\n\r\n\r\nexport declare type AnimatorControllerModel = {\r\n    name: string,\r\n    guid: string,\r\n    parameters: Parameter[],\r\n    layers: Layer[],\r\n}\r\n\r\nexport declare type Parameter = {\r\n    name: string;\r\n    /** the animator string to hash result, test against this if a number is used to get a param value */\r\n    hash: number;\r\n    type: AnimatorControllerParameterType;\r\n    value: number | boolean | string;\r\n}\r\n\r\nexport declare type Layer = {\r\n    name: string,\r\n    stateMachine: StateMachine\r\n}\r\n\r\nexport declare type StateMachine = {\r\n    defaultState: number;\r\n    states: State[],\r\n}\r\n\r\nexport declare type State = {\r\n    name: string,\r\n    hash: number;\r\n    motion: Motion,\r\n    transitions: Transition[],\r\n    behaviours: StateMachineBehaviourModel[],\r\n}\r\n\r\nexport declare type StateMachineBehaviourModel = {\r\n    typeName: string;\r\n    properties: object;\r\n    instance?: StateMachineBehaviour;\r\n}\r\n\r\nexport abstract class StateMachineBehaviour {\r\n    _context?: Context;\r\n    get context(): Context { return this._context ?? Context.Current; }\r\n    get isStateMachineBehaviour() { return true; }\r\n    onStateEnter?(animator: Animator, _animatorStateInfo: AnimatorStateInfo, layerIndex: number);\r\n    onStateUpdate?(animator: Animator, animatorStateInfo: AnimatorStateInfo, _layerIndex: number);\r\n    onStateExit?(animator: Animator, animatorStateInfo: AnimatorStateInfo, layerIndex: number);\r\n}\r\n\r\nexport class AnimatorStateInfo {\r\n\r\n    private _name: string;\r\n    get name(): string { return this._name; }\r\n\r\n    private _nameHash: number;\r\n    get nameHash(): number { return this._nameHash; }\r\n\r\n    private _normalizedTime: number;\r\n    get normalizedTime(): number { return this._normalizedTime; }\r\n\r\n    private _length: number;\r\n    get length() {\r\n        return this._length;\r\n    }\r\n\r\n    private _speed: number;\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    constructor(state: State, normalizedTime: number, length: number, speed: number) {\r\n        this._name = state.name;\r\n        this._nameHash = state.hash;\r\n        this._normalizedTime = normalizedTime;\r\n        this._length = length;\r\n        this._speed = speed;\r\n    }\r\n}\r\n\r\nexport declare type Motion = {\r\n    name: string,\r\n    isLooping: boolean,\r\n    guid: string,\r\n    /** clip index in gltf animations array */\r\n    index: number,\r\n    /** the resolved clip */\r\n    clip?: AnimationClip,\r\n    /** the clip mapping -> which object has which animationclip */\r\n    clips?: ClipMapping[];\r\n    action?: AnimationAction,\r\n    /** used when a transition points to the same state we need another action to blend */\r\n    action_loopback?: AnimationAction,\r\n}\r\n\r\nexport function createMotion(name: string, id?: InstantiateIdProvider): Motion {\r\n    return {\r\n        name: \"\",\r\n        isLooping: false,\r\n        guid: id?.generateUUID() ?? MathUtils.generateUUID(),\r\n        index: -1,\r\n        clip: new AnimationClip(name, 1, []),\r\n    }\r\n}\r\n\r\nexport declare type ClipMapping = {\r\n    /** the object this clip is for */\r\n    node: Object3D;\r\n    /** the animationclip we resolve from a json ptr */\r\n    clip: AnimationClip;\r\n}\r\n\r\nexport declare type Transition = {\r\n    isExit: boolean;\r\n    exitTime: number,\r\n    hasFixedDuration: boolean,\r\n    offset: number,\r\n    duration: number,\r\n    hasExitTime: number,\r\n    destinationState: number | State,\r\n    conditions: Condition[],\r\n    // isAny?: boolean\r\n}\r\n\r\nexport declare type Condition = {\r\n    parameter: string,\r\n    mode: AnimatorConditionMode,\r\n    threshold: number,\r\n}\r\n\r\n\r\n/// <summary>\r\n///   <para>The mode of the condition.</para>\r\n/// </summary>\r\nexport enum AnimatorConditionMode {\r\n    /// <summary>\r\n    ///   <para>The condition is true when the parameter value is true.</para>\r\n    /// </summary>\r\n    If = 1,\r\n    /// <summary>\r\n    ///   <para>The condition is true when the parameter value is false.</para>\r\n    /// </summary>\r\n    IfNot = 2,\r\n    /// <summary>\r\n    ///   <para>The condition is true when parameter value is greater than the threshold.</para>\r\n    /// </summary>\r\n    Greater = 3,\r\n    /// <summary>\r\n    ///   <para>The condition is true when the parameter value is less than the threshold.</para>\r\n    /// </summary>\r\n    Less = 4,\r\n    /// <summary>\r\n    ///   <para>The condition is true when parameter value is equal to the threshold.</para>\r\n    /// </summary>\r\n    Equals = 6,\r\n    /// <summary>\r\n    ///   <para>The condition is true when the parameter value is not equal to the threshold.</para>\r\n    /// </summary>\r\n    NotEqual = 7,\r\n}\r\n\r\n/// <summary>\r\n///   <para>The type of the parameter.</para>\r\n/// </summary>\r\nexport enum AnimatorControllerParameterType {\r\n    /// <summary>\r\n    ///   <para>Float type parameter.</para>\r\n    /// </summary>\r\n    Float = 1,\r\n    /// <summary>\r\n    ///   <para>Int type parameter.</para>\r\n    /// </summary>\r\n    Int = 3,\r\n    /// <summary>\r\n    ///   <para>Boolean type parameter.</para>\r\n    /// </summary>\r\n    Bool = 4,\r\n    /// <summary>\r\n    ///   <para>Trigger type parameter.</para>\r\n    /// </summary>\r\n    Trigger = 9,\r\n}", "import { Animator } from \"./Animator\";\r\nimport { AnimatorConditionMode, AnimatorControllerModel, AnimatorControllerParameterType, AnimatorStateInfo, Condition, createMotion, State, StateMachineBehaviour } from \"../engine/extensions/NEEDLE_animator_controller_model\";\r\nimport { AnimationAction, AnimationClip, AnimationMixer, AxesHelper, Euler, KeyframeTrack, LoopOnce, LoopRepeat, Matrix4, Object3D, Quaternion, Vector3 } from \"three\";\r\nimport { deepClone, getParam } from \"../engine/engine_utils\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport * as THREE from \"three\";\r\nimport { TypeStore } from \"../engine/engine_typestore\";\r\nimport { assign } from \"../engine/engine_serialization_core\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { isAnimationAction } from \"../engine/engine_three_utils\";\r\n\r\nconst debug = getParam(\"debuganimatorcontroller\");\r\nconst debugRootMotion = getParam(\"debugrootmotion\");\r\n\r\nexport class AnimatorController {\r\n\r\n    Play(name: string | number, layerIndex: number = -1, normalizedTime: number = Number.NEGATIVE_INFINITY, durationInSec: number = 0) {\r\n        if (layerIndex < 0) layerIndex = 0;\r\n        else if (layerIndex >= this.model.layers.length) {\r\n            console.warn(\"invalid layer\");\r\n            return;\r\n        }\r\n        const layer = this.model.layers[layerIndex];\r\n        const sm = layer.stateMachine;\r\n        for (const state of sm.states) {\r\n            if (state.name === name || state.hash === name) {\r\n                if (debug)\r\n                    console.log(\"transition to \", state);\r\n                this.transitionTo(state, durationInSec, normalizedTime);\r\n                return;\r\n            }\r\n        }\r\n        console.warn(\"Could not find \" + name + \" to play\");\r\n    }\r\n\r\n    Reset() {\r\n        this.setStartTransition();\r\n    }\r\n\r\n    SetBool(name: string | number, value: boolean) {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.filter(p => p[key] === name).forEach(p => p.value = value);\r\n    }\r\n\r\n    GetBool(name: string | number): boolean {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.find(p => p[key] === name)?.value as boolean ?? false;\r\n    }\r\n\r\n    SetFloat(name: string | number, val: number) {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.filter(p => p[key] === name).forEach(p => p.value = val);\r\n    }\r\n\r\n    GetFloat(name: string | number): number {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.find(p => p[key] === name)?.value as number ?? 0;\r\n    }\r\n\r\n    SetInteger(name: string | number, val: number) {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.filter(p => p[key] === name).forEach(p => p.value = val);\r\n    }\r\n\r\n    GetInteger(name: string | number): number {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.find(p => p[key] === name)?.value as number ?? 0;\r\n    }\r\n\r\n    SetTrigger(name: string | number) {\r\n        if (debug)\r\n            console.log(\"SET TRIGGER\", name);\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.filter(p => p[key] === name).forEach(p => p.value = true);\r\n    }\r\n\r\n    ResetTrigger(name: string | number) {\r\n        const key = typeof name === \"string\" ? \"name\" : \"hash\";\r\n        return this.model?.parameters.filter(p => p[key] === name).forEach(p => p.value = false);\r\n    }\r\n\r\n    IsInTransition(): boolean {\r\n        return this._activeStates.length > 1;\r\n    }\r\n\r\n    SetSpeed(speed: number) {\r\n        this._speed = speed;\r\n    }\r\n\r\n    FindState(name: string | undefined | null): State | null {\r\n        if (!name) return null;\r\n        for (const layer of this.model.layers) {\r\n            for (const state of layer.stateMachine.states) {\r\n                if (state.name === name) return state;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    normalizedStartOffset: number = 0;\r\n\r\n    private _speed: number = 1;\r\n\r\n    animator?: Animator;\r\n    model: AnimatorControllerModel;\r\n    get context(): Context | undefined | null { return this.animator?.context; }\r\n\r\n\r\n    // applyRootMotion(obj: THREE.Object3D) {\r\n    //     // this.internalApplyRootMotion(obj);\r\n    // }\r\n\r\n    bind(animator: Animator) {\r\n        this.animator = animator;\r\n        this._mixer = new AnimationMixer(this.animator.gameObject);\r\n        this.createActions(this.animator);\r\n    }\r\n\r\n    clone() {\r\n        // clone runtime controller but dont clone clip or action\r\n        const clonedModel = deepClone(this.model, (_owner, _key, _value) => {\r\n            if (_value === null || _value === undefined) return true;\r\n            // dont clone three Objects\r\n            if (_value.type === \"Object3D\" || _value.isObject3D === true) return false;\r\n            // dont clone AnimationAction\r\n            if (isAnimationAction(_value)) { //.constructor.name === \"AnimationAction\") {\r\n                // console.log(_value);\r\n                return false;\r\n            }\r\n            // dont clone AnimationClip\r\n            if (_value[\"tracks\"] !== undefined) return false;\r\n            return true;\r\n        }) as AnimatorControllerModel;\r\n        console.assert(clonedModel !== this.model);\r\n        const controller = new AnimatorController(clonedModel);\r\n        return controller;\r\n    }\r\n\r\n    update() {\r\n        if (!this.animator) return;\r\n        this.evaluateTransitions();\r\n        this.updateActiveStates();\r\n        const dt = this.animator.context.time.deltaTime;\r\n        if (this.animator.applyRootMotion) {\r\n            this.rootMotionHandler?.onBeforeUpdate();\r\n        }\r\n        this._mixer.update(dt);\r\n        if (this.animator.applyRootMotion) {\r\n            this.rootMotionHandler?.onAfterUpdate();\r\n        }\r\n    }\r\n\r\n\r\n    private _mixer!: THREE.AnimationMixer;\r\n    private _activeState?: State;\r\n\r\n    constructor(model: AnimatorControllerModel) {\r\n        this.model = model;\r\n        if (debug) console.log(this);\r\n    }\r\n\r\n    private _activeStates: State[] = [];\r\n\r\n    private updateActiveStates() {\r\n        for (let i = 0; i < this._activeStates.length; i++) {\r\n            const state = this._activeStates[i];\r\n            const motion = state.motion;\r\n            if (!motion.action) {\r\n                this._activeStates.splice(i, 1);\r\n                i--;\r\n            }\r\n            else {\r\n                const action = motion.action;\r\n                // console.log(action.getClip().name, action.getEffectiveWeight(), action.isScheduled());\r\n                if ((action.getEffectiveWeight() <= 0 && !action.isRunning())) {\r\n                    if (debug)\r\n                        console.debug(\"REMOVE\", state.name, action.getEffectiveWeight(), action.isRunning(), action.isScheduled())\r\n                    this._activeStates.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setStartTransition() {\r\n        for (const layer of this.model.layers) {\r\n            const sm = layer.stateMachine;\r\n            if (sm.defaultState === undefined) {\r\n                if (debug)\r\n                    console.warn(\"AnimatorController default state is undefined, will assign state 0 as default\", layer);\r\n                sm.defaultState = 0;\r\n            }\r\n            const start = sm.states[sm.defaultState];\r\n            this.transitionTo(start, 0, this.normalizedStartOffset);\r\n        }\r\n    }\r\n\r\n    private evaluateTransitions() {\r\n\r\n        const currentLayer = 0;\r\n\r\n        let didEnterStateThisFrame = false;\r\n        if (!this._activeState) {\r\n            this.setStartTransition();\r\n            if (!this._activeState) return;\r\n            didEnterStateThisFrame = true;\r\n        }\r\n\r\n        const state = this._activeState;\r\n        const action = state.motion.action;\r\n        let index = 0;\r\n        for (const transition of state.transitions) {\r\n            ++index;\r\n            // transition without exit time and without condition that transition to itself are ignored\r\n            if (!transition.hasExitTime && transition.conditions.length <= 0) {\r\n                // if (this._activeState && this.getState(transition.destinationState, currentLayer)?.hash === this._activeState.hash)\r\n                continue;\r\n            }\r\n\r\n            let allConditionsAreMet = true;\r\n            for (const cond of transition.conditions) {\r\n                if (!this.evaluateCondition(cond)) {\r\n                    allConditionsAreMet = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (!allConditionsAreMet) continue;\r\n\r\n            if (debug && allConditionsAreMet) {\r\n                // console.log(\"All conditions are met\", transition);\r\n            }\r\n\r\n            // disable triggers\r\n            for (const cond of transition.conditions) {\r\n                const param = this.model.parameters.find(p => p.name === cond.parameter);\r\n                if (param?.type === AnimatorControllerParameterType.Trigger) {\r\n                    param.value = false;\r\n                }\r\n            }\r\n\r\n            if (action) {\r\n                const dur = state.motion.clip!.duration;\r\n                const normalizedTime = dur <= 0 ? 1 : action.time / dur;\r\n                const makeTransition = transition.hasExitTime ? normalizedTime >= transition.exitTime : true;\r\n                // console.log(state.name, makeTransition, transition.hasExitTime, normalizedTime, transition.exitTime)\r\n                if (makeTransition) {\r\n                    // if (transition.hasExitTime && transition.exitTime >= .9999) \r\n                    action.clampWhenFinished = true;\r\n                    // else action.clampWhenFinished = false;\r\n                    if (debug) {\r\n                        console.log(\"transition to \" + transition.destinationState, transition, normalizedTime, transition.exitTime, transition.hasExitTime);\r\n                        // console.log(action.time, transition.exitTime);\r\n                    }\r\n                    this.transitionTo(transition.destinationState as State, transition.duration, transition.offset);\r\n                    // use the first transition that matches all conditions and make the transition as soon as in range\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                this.transitionTo(transition.destinationState as State, transition.duration, transition.offset);\r\n                return;\r\n            }\r\n            // if none of the transitions can be made continue searching for another transition meeting the conditions\r\n        }\r\n\r\n        let didTriggerLooping = false;\r\n        if (state.motion.isLooping && action) {\r\n            // we dont use the three loop state here because it prevents the transition check above\r\n            // it is easier if we re-trigger loop here. \r\n            // We also can easily add the cycle offset settings from unity later\r\n            if (action.time >= action.getClip().duration) {\r\n                didTriggerLooping = true;\r\n                action.reset();\r\n                action.time = 0;\r\n                action.play();\r\n            }\r\n        }\r\n\r\n        // call update state behaviours:\r\n        if (!didTriggerLooping && state && !didEnterStateThisFrame && action && this.animator) {\r\n            if (state.behaviours) {\r\n                const duration = action?.getClip().duration;\r\n                const normalizedTime = action.time / duration;\r\n                const info = new AnimatorStateInfo(this._activeState, normalizedTime, duration, this._speed)\r\n                for (const beh of state.behaviours) {\r\n                    if (beh.instance) {\r\n                        beh.instance.onStateUpdate?.call(beh.instance, this.animator, info, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private getState(state: State | number, layerIndex: number): State | null {\r\n        if (typeof state === \"number\") {\r\n            if (state == -1) {\r\n                state = this.model.layers[layerIndex].stateMachine.defaultState; // exit state -> entry state\r\n                if (state === undefined) {\r\n                    if (debug)\r\n                        console.warn(\"AnimatorController default state is undefined: \", this.model, \"Layer: \" + layerIndex);\r\n                    state = 0;\r\n                }\r\n            }\r\n            state = this.model.layers[layerIndex].stateMachine.states[state];\r\n        }\r\n        return state;\r\n    }\r\n\r\n    private transitionTo(state: State | number, durationInSec: number, offsetNormalized: number) {\r\n\r\n        if (!this.animator) return;\r\n\r\n        const layerIndex = 0;\r\n\r\n        state = this.getState(state, layerIndex) as State;\r\n\r\n        if (!state?.motion || !state.motion.clip) {\r\n            // if(debug) console.warn(\"State has no clip or motion\", state);\r\n            return;\r\n        }\r\n\r\n        const isSelf = this._activeState === state;\r\n        if (isSelf) {\r\n            const motion = state.motion;\r\n            if (!motion.action_loopback && motion.clip) {\r\n                this._mixer.uncacheAction(motion.clip, this.animator.gameObject);\r\n                motion.action_loopback = this.createAction(motion.clip);\r\n            }\r\n        }\r\n\r\n        // call exit state behaviours\r\n        if (this._activeState?.behaviours && this._activeState.motion.action) {\r\n            const duration = this._activeState?.motion.clip!.duration;\r\n            const normalizedTime = this._activeState.motion.action.time / duration;\r\n            const info = new AnimatorStateInfo(this._activeState, normalizedTime, duration, this._speed);\r\n            for (const beh of this._activeState.behaviours) {\r\n                beh.instance?.onStateExit?.call(beh.instance, this.animator, info, layerIndex);\r\n            }\r\n        }\r\n\r\n        const prevAction = this._activeState?.motion.action;\r\n        if (prevAction) {\r\n            prevAction!.fadeOut(durationInSec);\r\n        }\r\n        if (isSelf) {\r\n            state.motion.action = state.motion.action_loopback;\r\n            state.motion.action_loopback = prevAction;\r\n        }\r\n        const prev = this._activeState;\r\n        this._activeState = state;\r\n\r\n        const action = state.motion?.action;\r\n        if (action) {\r\n\r\n            offsetNormalized = Math.max(0, Math.min(1, offsetNormalized));\r\n            if (action.isRunning())\r\n                action.stop();\r\n            action.reset();\r\n            action.timeScale = this._speed;\r\n            action.enabled = true;\r\n            const duration = state.motion.clip!.duration;\r\n            action.time = offsetNormalized * duration;\r\n            action.clampWhenFinished = true;\r\n            action.setLoop(LoopOnce, 0);\r\n            if (durationInSec > 0)\r\n                action.fadeIn(durationInSec);\r\n            else action.setEffectiveWeight(1);\r\n            action.play();\r\n\r\n\r\n            if (this.rootMotionHandler) {\r\n                this.rootMotionHandler.onStart(action);\r\n            }\r\n\r\n            if (!this._activeStates.includes(state))\r\n                this._activeStates.push(state);\r\n\r\n            // call enter state behaviours\r\n            if (this._activeState.behaviours) {\r\n                const info = new AnimatorStateInfo(state, offsetNormalized, duration, this._speed);\r\n                for (const beh of this._activeState.behaviours) {\r\n                    beh.instance?.onStateEnter?.call(beh.instance, this.animator, info, layerIndex);\r\n                }\r\n            }\r\n        }\r\n        else console.warn(\"No action\", state.motion, this);\r\n\r\n        if (debug)\r\n            console.log(\"TRANSITION FROM \" + prev?.name + \" TO \" + state.name, durationInSec, prevAction, action, action?.getEffectiveTimeScale(), action?.getEffectiveWeight(), action?.isRunning(), action?.isScheduled(), action?.paused);\r\n    }\r\n\r\n    private createAction(clip: AnimationClip) {\r\n\r\n        // uncache clip causes issues when multiple states use the same clip\r\n        // this._mixer.uncacheClip(clip);\r\n        // instead only uncache the action when one already exists to make sure\r\n        // we get unique actions per state\r\n        const existing = this._mixer.existingAction(clip);\r\n        if (existing) this._mixer.uncacheAction(clip, this.animator?.gameObject);\r\n\r\n        if (this.animator?.applyRootMotion) {\r\n            if (!this.rootMotionHandler) {\r\n                this.rootMotionHandler = new RootMotionHandler(this);\r\n            }\r\n            // TODO: find root bone properly\r\n            const root = this.animator.gameObject;\r\n            return this.rootMotionHandler.createClip(this._mixer, root, clip);\r\n        }\r\n        else {\r\n            const action = this._mixer.clipAction(clip);\r\n            return action;\r\n        }\r\n    }\r\n\r\n    private evaluateCondition(cond: Condition): boolean {\r\n        const param = this.model.parameters.find(p => p.name === cond.parameter);\r\n        if (!param) return false;\r\n        // console.log(param.name, param.value);\r\n        switch (cond.mode) {\r\n            case AnimatorConditionMode.If:\r\n                return param.value === true;\r\n            case AnimatorConditionMode.IfNot:\r\n                return param.value === false;\r\n            case AnimatorConditionMode.Greater:\r\n                return param.value > cond.threshold;\r\n            case AnimatorConditionMode.Less:\r\n                return param.value < cond.threshold;\r\n            case AnimatorConditionMode.Equals:\r\n                return param.value === cond.threshold;\r\n            case AnimatorConditionMode.NotEqual:\r\n                return param.value !== cond.threshold;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private createActions(_animator: Animator) {\r\n        for (const layer of this.model.layers) {\r\n            const sm = layer.stateMachine;\r\n            for (let index = 0; index < sm.states.length; index++) {\r\n                const state = sm.states[index];\r\n\r\n                // ensure we have a transitions array\r\n                if (!state.transitions) {\r\n                    state.transitions = [];\r\n                }\r\n                for(const t of state.transitions) {\r\n                    // can happen if conditions are empty in blender - the exporter seems to skip empty arrays\r\n                    if(!t.conditions) t.conditions = [];\r\n                }\r\n\r\n                // ensure we have a motion even if none was exported\r\n                if (!state.motion) {\r\n                    state.motion = createMotion(state.name);\r\n                    // console.warn(\"Missing motion\", \"AnimatorController: \" + this.model.name, state);\r\n                    // sm.states.splice(index, 1);\r\n                    // index -= 1;\r\n                    // continue;\r\n                }\r\n                // the clips array contains which animator has which animationclip\r\n                if (this.animator && state.motion.clips) {\r\n                    // TODO: we have to compare by name because on instantiate we clone objects but not the node object\r\n                    const mapping = state.motion.clips?.find(e => e.node.name === this.animator?.gameObject?.name);\r\n                    // console.log(state.name, mapping?.clip);\r\n                    state.motion.clip = mapping?.clip;\r\n                }\r\n\r\n                // ensure we have a clip to blend to\r\n                if (!state.motion.clip) {\r\n                    const clip = new AnimationClip(undefined, undefined, []);\r\n                    state.motion.clip = clip;\r\n                }\r\n\r\n                if (state.motion?.clip) {\r\n                    const clip = state.motion.clip;\r\n                    const action = this.createAction(clip);\r\n                    state.motion.action = action;\r\n                }\r\n\r\n                // create state machine behaviours\r\n                if (state.behaviours && Array.isArray(state.behaviours)) {\r\n                    for (const behaviour of state.behaviours) {\r\n                        if (!behaviour?.typeName) continue;\r\n                        const type = TypeStore.get(behaviour.typeName);\r\n                        const instance: StateMachineBehaviour = new type() as StateMachineBehaviour;\r\n                        if (instance.isStateMachineBehaviour) {\r\n                            instance._context = this.context ?? undefined;\r\n                            assign(instance, behaviour.properties);\r\n                            behaviour.instance = instance;\r\n                        }\r\n                        if (debug) console.log(\"Created animator controller behaviour\", state.name, behaviour.typeName, behaviour.properties, instance);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    *enumerateActions() {\r\n\r\n        for (const layer of this.model.layers) {\r\n            const sm = layer.stateMachine;\r\n            for (let index = 0; index < sm.states.length; index++) {\r\n                const state = sm.states[index];\r\n                if (state?.motion) {\r\n                    if (state.motion.action)\r\n                        yield state.motion.action;\r\n                    if (state.motion.action_loopback)\r\n                        yield state.motion.action_loopback;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // https://docs.unity3d.com/Manual/RootMotion.html\r\n    private rootMotionHandler?: RootMotionHandler;\r\n\r\n\r\n    // private findRootBone(obj: THREE.Object3D): THREE.Object3D | null {\r\n    //     if (this.animationRoot) return this.animationRoot;\r\n    //     if (obj.type === \"Bone\") {\r\n    //         this.animationRoot = obj as THREE.Bone;\r\n    //         return this.animationRoot;\r\n    //     }\r\n    //     if (obj.children) {\r\n    //         for (const ch of obj.children) {\r\n    //             const res = this.findRootBone(ch);\r\n    //             if (res) return res;\r\n    //         }\r\n    //     }\r\n    //     return null;\r\n    // }\r\n}\r\n\r\nclass TrackEvaluationWrapper {\r\n\r\n    track?: KeyframeTrack;\r\n    createdInterpolant?: any;\r\n    originalEvaluate?: Function;\r\n    private customEvaluate?: (time: number) => any;\r\n\r\n    constructor(track: KeyframeTrack, evaluate: (time: number, value: any) => any) {\r\n        this.track = track;\r\n        const t = track as any;\r\n        const createOriginalInterpolator = t.createInterpolant.bind(track);\r\n        t.createInterpolant = () => {\r\n            t.createInterpolant = createOriginalInterpolator;\r\n            this.createdInterpolant = createOriginalInterpolator();\r\n            this.originalEvaluate = this.createdInterpolant.evaluate.bind(this.createdInterpolant);\r\n            this.customEvaluate = time => {\r\n                if (!this.originalEvaluate) return;\r\n                const res = this.originalEvaluate(time);\r\n                return evaluate(time, res);\r\n            };\r\n            this.createdInterpolant.evaluate = this.customEvaluate;\r\n            return this.createdInterpolant;\r\n        }\r\n    };\r\n\r\n    evaluate(time) {\r\n        if (this.customEvaluate) {\r\n            this.customEvaluate(time);\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        if (this.createdInterpolant && this.originalEvaluate) {\r\n            this.createdInterpolant.evaluate = this.originalEvaluate;\r\n        }\r\n        this.track = undefined;\r\n        this.createdInterpolant = null;\r\n        this.originalEvaluate = undefined;\r\n        this.customEvaluate = undefined;\r\n    }\r\n}\r\n\r\nclass RootMotionAction {\r\n\r\n    private static lastObjPosition: { [key: string]: THREE.Vector3 } = {};\r\n    static lastObjRotation: { [key: string]: THREE.Quaternion } = {};\r\n\r\n    // we remove the first keyframe rotation from the space rotation when updating\r\n    private static firstKeyframeRotation: { [key: string]: THREE.Quaternion } = {};\r\n    // this is used to rotate the space on clip end / start (so the transform direction is correct)\r\n    private static spaceRotation: { [key: string]: THREE.Quaternion } = {};\r\n    private static effectiveSpaceRotation: { [key: string]: THREE.Quaternion } = {};\r\n\r\n    private static clipOffsetRotation: { [key: string]: THREE.Quaternion } = {};\r\n\r\n\r\n    set action(val: AnimationAction) {\r\n        this._action = val;\r\n    }\r\n    get action() {\r\n        return this._action;\r\n    }\r\n\r\n    private _action!: AnimationAction;\r\n\r\n    private root: Object3D;\r\n    private clip: AnimationClip;\r\n    private positionWrapper: TrackEvaluationWrapper | null = null;\r\n    private rotationWrapper: TrackEvaluationWrapper | null = null;\r\n    private context: Context;\r\n\r\n    positionChange: Vector3 = new Vector3();\r\n    rotationChange: Quaternion = new Quaternion();\r\n\r\n    constructor(context: Context, root: THREE.Object3D, clip: AnimationClip, positionTrack: KeyframeTrack | null, rotationTrack: KeyframeTrack | null) {\r\n        // console.log(this, positionTrack, rotationTrack);\r\n        this.context = context;\r\n        this.root = root;\r\n        this.clip = clip;\r\n\r\n        if (!RootMotionAction.firstKeyframeRotation[clip.uuid])\r\n            RootMotionAction.firstKeyframeRotation[clip.uuid] = new THREE.Quaternion();\r\n        if (rotationTrack) {\r\n            const values = rotationTrack.values;\r\n            RootMotionAction.firstKeyframeRotation[clip.uuid]\r\n                .set(values[0], values[1], values[2], values[3])\r\n        }\r\n\r\n        if (!RootMotionAction.spaceRotation[clip.uuid])\r\n            RootMotionAction.spaceRotation[clip.uuid] = new Quaternion();\r\n\r\n        if (!RootMotionAction.effectiveSpaceRotation[clip.uuid])\r\n            RootMotionAction.effectiveSpaceRotation[clip.uuid] = new Quaternion();\r\n\r\n        RootMotionAction.clipOffsetRotation[clip.uuid] = new Quaternion();\r\n        if (rotationTrack) {\r\n            RootMotionAction.clipOffsetRotation[clip.uuid]\r\n                .set(rotationTrack.values[0], rotationTrack.values[1], rotationTrack.values[2], rotationTrack.values[3])\r\n                .invert();\r\n        }\r\n\r\n        this.handlePosition(clip, positionTrack);\r\n        this.handleRotation(clip, rotationTrack);\r\n    }\r\n\r\n    onStart(action: AnimationAction) {\r\n        if (action.getClip() !== this.clip) return;\r\n\r\n        const lastRotation = RootMotionAction.lastObjRotation[this.root.uuid];\r\n        // const firstKeyframe = RootMotionAction.firstKeyframeRotation[this.clip.uuid];\r\n        // lastRotation.invert().premultiply(firstKeyframe).invert();\r\n        RootMotionAction.spaceRotation[this.clip.uuid].copy(lastRotation);\r\n\r\n        // if (debugRootMotion) \r\n        {\r\n            const euler = new THREE.Euler().setFromQuaternion(lastRotation);\r\n            console.log(\"START\", this.clip.name, Mathf.toDegrees(euler.y));\r\n        }\r\n    }\r\n\r\n    private getClipRotationOffset() {\r\n        return RootMotionAction.clipOffsetRotation[this.clip.uuid];\r\n    }\r\n\r\n    private handlePosition(_clip: AnimationClip, track: KeyframeTrack | null) {\r\n        if (track) {\r\n            const root = this.root;\r\n            if (debugRootMotion)\r\n                root.add(new AxesHelper());\r\n            if (!RootMotionAction.lastObjPosition[root.uuid]) RootMotionAction.lastObjPosition[root.uuid] = new Vector3();\r\n            const valuesDiff = new Vector3();\r\n            const valuesPrev = new Vector3();\r\n            let prevTime: number = 0;\r\n            // const rotation = new Quaternion();\r\n            this.positionWrapper = new TrackEvaluationWrapper(track, (time, value: Float64Array) => {\r\n\r\n                const weight = this.action.getEffectiveWeight();\r\n\r\n                // root.position.copy(RootMotionAction.lastObjPosition[root.uuid]);\r\n\r\n                // reset for testing\r\n                if (debugRootMotion) {\r\n                    if (root.position.length() > 8)\r\n                        root.position.set(0, root.position.y, 0);\r\n                }\r\n\r\n\r\n                if (time > prevTime) {\r\n                    valuesDiff.set(value[0], value[1], value[2]);\r\n                    valuesDiff.sub(valuesPrev);\r\n                    valuesDiff.multiplyScalar(weight);\r\n                    valuesDiff.applyQuaternion(this.getClipRotationOffset());\r\n\r\n                    const id = this.clip.uuid;\r\n                    // RootMotionAction.effectiveSpaceRotation[id].slerp(RootMotionAction.spaceRotation[id], weight);\r\n                    valuesDiff.applyQuaternion(RootMotionAction.spaceRotation[id]);\r\n                    this.positionChange.copy(valuesDiff);\r\n                    // root.position.add(valuesDiff);\r\n                }\r\n                // RootMotionAction.lastObjPosition[root.uuid].copy(root.position);\r\n                valuesPrev.fromArray(value);\r\n                prevTime = time;\r\n                value[0] = 0;\r\n                value[1] = 0;\r\n                value[2] = 0;\r\n                return value;\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    private static identityQuaternion = new Quaternion();\r\n\r\n    private handleRotation(clip: AnimationClip, track: KeyframeTrack | null) {\r\n        if (track) {\r\n            if (debugRootMotion) {\r\n                const arr = track.values;\r\n                const firstKeyframe = new Euler().setFromQuaternion(new Quaternion(arr[0], arr[1], arr[2], arr[3]));\r\n                console.log(clip.name, track.name, \"FIRST ROTATION IN TRACK\", Mathf.toDegrees(firstKeyframe.y));\r\n                const i = track.values.length - 4;\r\n                const lastKeyframe = new Quaternion().set(arr[i], arr[i + 1], arr[i + 2], arr[i + 3]);\r\n                const euler = new Euler().setFromQuaternion(lastKeyframe);\r\n                console.log(clip.name, track.name, \"LAST ROTATION IN TRACK\", Mathf.toDegrees(euler.y));\r\n            }\r\n\r\n\r\n            const root = this.root;\r\n            if (!RootMotionAction.lastObjRotation[root.uuid]) RootMotionAction.lastObjRotation[root.uuid] = new Quaternion();\r\n            // const temp = new Quaternion();\r\n            let prevTime: number = 0;\r\n            const valuesPrev = new Quaternion();\r\n            const valuesDiff = new Quaternion();\r\n            // const summedRot = new Quaternion();\r\n            this.rotationWrapper = new TrackEvaluationWrapper(track, (time, value: Float64Array) => {\r\n                // root.quaternion.copy(RootMotionAction.lastObjRotation[root.uuid]);\r\n                if (time > prevTime) {\r\n                    valuesDiff.set(value[0], value[1], value[2], value[3]);\r\n                    valuesPrev.invert();\r\n                    valuesDiff.multiply(valuesPrev);\r\n                    // if(weight < .99) valuesDiff.slerp(RootMotionAction.identityQuaternion, 1 - weight);\r\n                    this.rotationChange.copy(valuesDiff);\r\n                    // root.quaternion.multiply(valuesDiff);\r\n                }\r\n                // else\r\n                //     root.quaternion.multiply(this.getClipRotationOffset());\r\n\r\n                // RootMotionAction.lastObjRotation[root.uuid].copy(root.quaternion);\r\n                valuesPrev.fromArray(value);\r\n                prevTime = time;\r\n                value[0] = 0;\r\n                value[1] = 0;\r\n                value[2] = 0;\r\n                value[3] = 1;\r\n                return value;\r\n            });\r\n        }\r\n    }\r\n\r\n    // private lastPos: Vector3 = new Vector3();\r\n\r\n    onBeforeUpdate() {\r\n        this.positionChange.set(0, 0, 0);\r\n        this.rotationChange.set(0, 0, 0, 1);\r\n    }\r\n\r\n    onAfterUpdate() {\r\n        const weight = this.action.getEffectiveWeight();\r\n        this.positionChange.multiplyScalar(weight);\r\n        this.rotationChange.slerp(RootMotionAction.identityQuaternion, 1 - weight);\r\n        // const root = this.root;\r\n        // RootMotionAction.lastObjRotation[root.uuid].slerp(root.quaternion, weight);\r\n        // if (weight > .5) {\r\n        // }\r\n        // this.obj.position.copy(this.lastPos).add(this.positionDiff);\r\n    }\r\n}\r\n\r\nclass RootMotionHandler {\r\n\r\n    private controller: AnimatorController;\r\n    private handler: RootMotionAction[] = [];\r\n    private root!: THREE.Object3D;\r\n\r\n    constructor(controller: AnimatorController) {\r\n        this.controller = controller;\r\n    }\r\n\r\n    createClip(mixer: AnimationMixer, root: THREE.Object3D, clip: AnimationClip): AnimationAction {\r\n        this.root = root;\r\n        let rootName = \"\";\r\n        if (root && \"name\" in root) {\r\n            rootName = root.name;\r\n        }\r\n        const positionTrack = this.findRootTrack(clip, \".position\");\r\n        const rotationTrack = this.findRootTrack(clip, \".quaternion\");\r\n        const handler = new RootMotionAction(this.controller.context!, root, clip, positionTrack, rotationTrack);\r\n        this.handler.push(handler);\r\n\r\n        // it is important we do this after the handler is created\r\n        // otherwise we can not hook into threejs interpolators\r\n        const action = mixer.clipAction(clip);\r\n        handler.action = action;\r\n        return action;\r\n    }\r\n\r\n    onStart(action: AnimationAction) {\r\n        for (const handler of this.handler) {\r\n            handler.onStart(action);\r\n        }\r\n    }\r\n\r\n    onBeforeUpdate() {\r\n        for (const hand of this.handler)\r\n            hand.onBeforeUpdate();\r\n    }\r\n\r\n    private summedPosition: Vector3 = new Vector3();\r\n    private summedRotation: Quaternion = new Quaternion();\r\n\r\n    onAfterUpdate() {\r\n        this.summedPosition.set(0, 0, 0);\r\n        this.summedRotation.set(0, 0, 0, 1);\r\n        for (const entry of this.handler) {\r\n            entry.onAfterUpdate();\r\n            this.summedPosition.add(entry.positionChange);\r\n            this.summedRotation.multiply(entry.rotationChange);\r\n        }\r\n        this.root.position.add(this.summedPosition);\r\n        this.root.quaternion.multiply(this.summedRotation);\r\n        RootMotionAction.lastObjRotation[this.root.uuid].copy(this.root.quaternion);\r\n    }\r\n\r\n    private findRootTrack(clip: AnimationClip, name: string) {\r\n        const tracks = clip.tracks;\r\n        for (const track of tracks) {\r\n            if (track.name.endsWith(name)) {\r\n                // if (track.name.includes(\"Hips\"))\r\n                //     return track;\r\n                return track;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}", "import { Constructor } from \"./engine_types\";\r\n\r\nexport declare type TypeResolver<T> = (data) => Constructor<T> | null;\r\n\r\n/** Please use \"@serializable\" - this version has a typo and will be removed in future versions */\r\nexport const serializeable = function <T>(type?: Constructor<T> | null | Array<Constructor<any> | TypeResolver<T>> | TypeResolver<T>) {\r\n    return serializable(type)\r\n}\r\n\r\nexport const serializable = function <T>(type?: Constructor<T> | null | Array<Constructor<any> | TypeResolver<T>> | TypeResolver<T>) {\r\n    if (type === undefined) type = null;\r\n    // for primitive types the serialization handles it without the constructor and just assigns the value\r\n    // if the user still passes in a primitive type constructor we can just throw it away :)\r\n    if (!Array.isArray(type)) {\r\n        type = setNullForPrimitiveTypes(type);\r\n    }\r\n    else {\r\n        for (let i = 0; i < type.length; i++) {\r\n            const entry = type[i];\r\n            type[i] = setNullForPrimitiveTypes(entry);\r\n        }\r\n    }\r\n\r\n    return function (_target: any, _propertyKey: string) {\r\n        // this is important so objects with inheritance dont override their serialized type \r\n        // info if e.g. multiple classes inheriting from the same type implement a member with the same name\r\n        // and both use @serializable() with different types \r\n        if (!Object.getOwnPropertyDescriptor(_target, '$serializedTypes'))\r\n            _target[\"$serializedTypes\"] = {};\r\n        const types = _target[\"$serializedTypes\"] = _target[\"$serializedTypes\"] || {}\r\n        types[_propertyKey] = type;\r\n    }\r\n}\r\n\r\nfunction setNullForPrimitiveTypes(type) {\r\n    switch (type?.prototype?.constructor?.name) {\r\n        case \"Number\":\r\n        case \"String\":\r\n        case \"Boolean\":\r\n            return null;\r\n    }\r\n    return type;\r\n}\r\n\r\n\r\nexport const ALL_PROPERTIES_MARKER = \"__NEEDLE__ALL_PROPERTIES\";\r\n\r\n\r\n/** @deprecated current not used */\r\nexport function allProperties(constructor: Function) {\r\n    constructor[ALL_PROPERTIES_MARKER] = true;\r\n}\r\n\r\n\r\nexport const STRICT_MARKER = \"__NEEDLE__STRICT\";\r\n\r\n/** @deprecated  current not used */\r\nexport function strict(constructor: Function) {\r\n    constructor[STRICT_MARKER] = true;\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as THREE from 'three'\r\nimport { LoopOnce, AnimationActionLoopStyles, AnimationAction } from \"three\";\r\nimport { getParam, deepClone } from \"../engine/engine_utils\";\r\nimport { AnimatorControllerModel } from \"../engine/extensions/NEEDLE_animator_controller_model\";\r\nimport { AnimatorController } from \"./AnimatorController\";\r\nimport {  serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\n\r\nconst debug = getParam(\"debuganimator\");\r\n\r\n\r\nexport declare class MixerEvent {\r\n    type: string;\r\n    action: THREE.AnimationAction;\r\n    loopDelta: number;\r\n    target: THREE.AnimationMixer;\r\n}\r\n\r\nexport declare class PlayOptions {\r\n    loop?: boolean | AnimationActionLoopStyles;\r\n    clampWhenFinished?: boolean;\r\n}\r\n\r\nexport class Animator extends Behaviour {\r\n\r\n    @serializable()\r\n    applyRootMotion: boolean = false;\r\n    @serializable()\r\n    hasRootMotion: boolean = false;\r\n    @serializable()\r\n    keepAnimatorControllerStateOnDisable: boolean = false;\r\n\r\n    // set from needle animator extension\r\n    @serializable()\r\n    set runtimeAnimatorController(val: AnimatorControllerModel | AnimatorController | undefined | null) {\r\n        if (this._animatorController && this._animatorController.model === val) {\r\n            return;\r\n        }\r\n        if (val) {\r\n            if (!(val instanceof AnimatorController)) {\r\n                if(debug) console.log(\"Assign animator controller\", val, this);\r\n                this._animatorController = new AnimatorController(val);\r\n            }\r\n            else this._animatorController = val;\r\n        }\r\n        else this._animatorController = null;\r\n    }\r\n    get runtimeAnimatorController(): AnimatorController | undefined | null {\r\n        return this._animatorController;\r\n    }\r\n\r\n    Play(name: string | number, layer: number = -1, normalizedTime: number = Number.NEGATIVE_INFINITY, transitionDurationInSec:number = 0) {\r\n        this.runtimeAnimatorController?.Play(name, layer, normalizedTime, transitionDurationInSec);\r\n    }\r\n\r\n    Reset() {\r\n        this._animatorController?.Reset();\r\n    }\r\n\r\n    SetBool(name: string | number, value: boolean) {\r\n        this.runtimeAnimatorController?.SetBool(name, value);\r\n    }\r\n\r\n    GetBool(name: string | number): boolean {\r\n        return this.runtimeAnimatorController?.GetBool(name) ?? false;\r\n    }\r\n\r\n    SetFloat(name: string | number, val: number) {\r\n        this.runtimeAnimatorController?.SetFloat(name, val);\r\n    }\r\n\r\n    GetFloat(name: string | number): number {\r\n        return this.runtimeAnimatorController?.GetFloat(name) ?? -1;\r\n    }\r\n\r\n    SetInteger(name: string | number, val: number) {\r\n        this.runtimeAnimatorController?.SetInteger(name, val);\r\n    }\r\n\r\n    GetInteger(name: string | number): number {\r\n        return this.runtimeAnimatorController?.GetInteger(name) ?? -1;\r\n    }\r\n\r\n    SetTrigger(name: string | number) {\r\n        this.runtimeAnimatorController?.SetTrigger(name);\r\n    }\r\n\r\n    ResetTrigger(name: string | number) {\r\n        this.runtimeAnimatorController?.ResetTrigger(name);\r\n    }\r\n\r\n    IsInTransition(): boolean {\r\n        return this.runtimeAnimatorController?.IsInTransition() ?? false;\r\n    }\r\n\r\n\r\n    SetSpeed(speed: number) {\r\n        if (speed === this.speed) return;\r\n        this.speed = speed;\r\n        this._animatorController?.SetSpeed(speed);\r\n    }\r\n\r\n    set minMaxSpeed(minMax: { x: number, y: number }) {\r\n        this.speed = Mathf.lerp(minMax.x, minMax.y, Math.random());\r\n    }\r\n\r\n    set minMaxOffsetNormalized(minMax: { x: number, y: number }) {\r\n        this.normalizedStartOffset = Mathf.lerp(minMax.x, minMax.y, Math.random());\r\n        if (this.runtimeAnimatorController) this.runtimeAnimatorController.normalizedStartOffset = this.normalizedStartOffset;\r\n    }\r\n\r\n    // set speed(val: number) {\r\n    //     // console.trace(val);\r\n    //     this.SetSpeed(val)\r\n    // }\r\n\r\n    private speed: number = 1;\r\n    private normalizedStartOffset: number = 0;\r\n    private _animatorController?: AnimatorController | null = null;\r\n\r\n    awake() {\r\n        if (debug)\r\n            console.log(\"ANIMATOR\", this.name, this);\r\n        if (!this.gameObject) return;\r\n        if (this.runtimeAnimatorController) {\r\n            const clone = this.runtimeAnimatorController.clone();\r\n            console.assert(this.runtimeAnimatorController !== clone);\r\n            this.runtimeAnimatorController = clone;\r\n            console.assert(this.runtimeAnimatorController === clone);\r\n            this.runtimeAnimatorController.bind(this);\r\n            this.runtimeAnimatorController.SetSpeed(this.speed);\r\n            this.runtimeAnimatorController.normalizedStartOffset = this.normalizedStartOffset;\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        if (!this.keepAnimatorControllerStateOnDisable)\r\n            this._animatorController?.Reset();\r\n    }\r\n\r\n    onBeforeRender() {\r\n        if (this._animatorController) {\r\n            this._animatorController.update();\r\n        }\r\n\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as THREE from 'three'\r\nimport { AnimationAction, AnimationClip, Vector2 } from \"three\";\r\nimport { MixerEvent } from \"./Animator\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { Vec2 } from \"../engine/engine_types\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debuganimation\");\r\n\r\nexport declare class PlayOptions {\r\n    fadeDuration?: number;\r\n    loop?: boolean;\r\n    exclusive?: boolean;\r\n    startTime?: number;\r\n    endTime?: number;\r\n    clampWhenFinished?: boolean;\r\n    minMaxSpeed?: Vec2;\r\n    minMaxOffsetNormalized?: Vec2;\r\n}\r\n\r\nexport class Animation extends Behaviour {\r\n\r\n    @serializable()\r\n    playAutomatically: boolean = true;\r\n    @serializable()\r\n    randomStartTime: boolean = true;\r\n\r\n    minMaxSpeed?: Vec2;\r\n    minMaxOffsetNormalized?: Vec2;\r\n\r\n    @serializable()\r\n    loop: boolean = true;\r\n\r\n    @serializable()\r\n    clampWhenFinished: boolean = false;\r\n\r\n    private _tempAnimationClipBeforeGameObjectExisted: AnimationClip | null = null;\r\n    get clip(): AnimationClip | null {\r\n        return this.animations?.length ? this.animations[0] : null;\r\n    }\r\n    set clip(val: AnimationClip | null) {\r\n        if (!this.__didAwake) {\r\n            if (debug) console.log(\"Assign clip during serialization\", val);\r\n            this._tempAnimationClipBeforeGameObjectExisted = val;\r\n            return;\r\n        }\r\n        if (!val) return;\r\n        if (debug) console.log(\"Assign clip\", val, Boolean(this.gameObject));\r\n        if (!this.gameObject.animations) this.gameObject.animations = [];\r\n        if (this.animations.includes(val)) return;\r\n        if (this.animations.length > 0) {\r\n            this.animations.splice(0, 0, val);\r\n        }\r\n        else\r\n            this.animations.push(val);\r\n    }\r\n\r\n    @serializable(AnimationClip)\r\n    set clips(animations: AnimationClip[]) {\r\n        this.animations = animations;\r\n    }\r\n\r\n    set animations(animations: THREE.AnimationClip[]) {\r\n        if (debug) console.log(\"assign animations\", animations);\r\n        this.gameObject.animations = animations;\r\n    }\r\n\r\n    get animations(): AnimationClip[] {\r\n        return this.gameObject.animations;\r\n    }\r\n    /**\r\n     * @deprecated Currently unsupported\r\n     */\r\n    get currentAction(): THREE.AnimationAction | null {\r\n        return this._currentActions[0];\r\n    }\r\n\r\n    /**\r\n     * @deprecated Currently unsupported\r\n     */\r\n    get currentActions(): THREE.AnimationAction[] {\r\n        return this._currentActions;\r\n    }\r\n\r\n    private mixer: THREE.AnimationMixer | undefined = undefined;\r\n    get actions(): Array<THREE.AnimationAction> {\r\n        return this._actions;\r\n    }\r\n    set actions(val: Array<THREE.AnimationAction>) {\r\n        this._actions = val;\r\n    }\r\n    private _actions: Array<THREE.AnimationAction> = [];\r\n\r\n    // private _currentAction: THREE.AnimationAction | null = null;\r\n\r\n    private _currentActions: THREE.AnimationAction[] = [];\r\n    private _handles: AnimationHandle[] = [];\r\n\r\n    awake() {\r\n        if (debug) console.log(this);\r\n        if (this._tempAnimationClipBeforeGameObjectExisted) {\r\n            this.clip = this._tempAnimationClipBeforeGameObjectExisted;\r\n            this._tempAnimationClipBeforeGameObjectExisted = null;\r\n        }\r\n        // console.log(...this.animations.map(m => m.name))\r\n        if (this.playAutomatically)\r\n            this.init();\r\n    }\r\n\r\n    onEnable(): void {\r\n        if (this.playAutomatically && this.animations?.length > 0 && this.currentActions.length <= 0) {\r\n            const index = Math.floor(Math.random() * this.actions.length);\r\n            this.play(index);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this.randomStartTime && this.currentAction)\r\n            this.currentAction.time = Math.random() * this.currentAction.getClip().duration;\r\n    }\r\n\r\n    update() {\r\n        if (!this.mixer) return;\r\n        this.mixer.update(this.context.time.deltaTime);\r\n        for (const handle of this._handles) {\r\n            handle._update();\r\n        }\r\n        if (this._handles?.length > 0)\r\n            InstancingUtil.markDirty(this.gameObject);\r\n    }\r\n\r\n    getAction(name: string): THREE.AnimationAction | undefined | null {\r\n        return this.actions?.find(a => a.getClip().name === name);\r\n    }\r\n\r\n    get isPlaying() {\r\n        for (let i = 0; i < this._currentActions.length; i++) {\r\n            if (this._currentActions[i].isRunning())\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    play(clipOrNumber: AnimationClip | number | string | undefined, options?: PlayOptions): Promise<AnimationAction> | void {\r\n        this.init();\r\n        if (!this.mixer) return;\r\n        if (clipOrNumber === undefined) clipOrNumber = 0;\r\n        let clip: AnimationClip | undefined = clipOrNumber as AnimationClip;\r\n        if (typeof clipOrNumber === 'number') {\r\n            if (clipOrNumber >= this.animations.length) return;\r\n            clip = this.animations[clipOrNumber];\r\n        }\r\n        else if (typeof clipOrNumber === \"string\") {\r\n            clip = this.animations.find(a => a.name === clipOrNumber);\r\n        }\r\n        if (!clip) {\r\n            console.error(\"Could not find clip\", clipOrNumber)\r\n            return;\r\n        }\r\n        if (!options) options = {};\r\n        if (!options.minMaxOffsetNormalized) options.minMaxOffsetNormalized = this.minMaxOffsetNormalized;\r\n        if (!options.minMaxSpeed) options.minMaxSpeed = this.minMaxSpeed;\r\n        if (!options.loop) options.loop = this.loop;\r\n        if (!options.clampWhenFinished) options.clampWhenFinished = this.clampWhenFinished;\r\n        for (const act of this.actions) {\r\n            if (act.getClip() === clip) {\r\n                return this.internalOnPlay(act, options);\r\n            }\r\n        }\r\n        const act = this.mixer.clipAction(clip);\r\n        this.actions.push(act);\r\n        return this.internalOnPlay(act, options);\r\n    }\r\n\r\n    internalOnPlay(action: AnimationAction, options?: PlayOptions): Promise<AnimationAction> {\r\n        var prev = this.currentAction;\r\n        if (prev === action && prev.isRunning() && prev.time < prev.getClip().duration) {\r\n            const handle = this.tryFindHandle(action);\r\n            if (handle) return handle.getPromise();\r\n        }\r\n        const stopOther = options?.exclusive ?? true;\r\n        if (options?.fadeDuration) {\r\n            if (stopOther)\r\n                prev?.fadeOut(options.fadeDuration);\r\n            action.fadeIn(options.fadeDuration);\r\n        }\r\n        else {\r\n            if (stopOther)\r\n                prev?.stop();\r\n        }\r\n        action.reset();\r\n        action.enabled = true;\r\n        action.time = 0;\r\n        action.timeScale = 1;\r\n        const clip = action.getClip();\r\n        if (options?.minMaxOffsetNormalized) action.time = Mathf.lerp(options.minMaxOffsetNormalized.x, options.minMaxOffsetNormalized.y, Math.random()) * clip.duration;\r\n        if (options?.minMaxSpeed) action.timeScale = Mathf.lerp(options.minMaxSpeed.x, options.minMaxSpeed.y, Math.random());\r\n        if (options?.clampWhenFinished) action.clampWhenFinished = true;\r\n        if (options?.startTime !== undefined) action.time = options.startTime;\r\n\r\n        if (options?.loop !== undefined)\r\n            action.loop = options.loop ? THREE.LoopRepeat : THREE.LoopOnce;\r\n        else action.loop = THREE.LoopOnce;\r\n        action.play();\r\n        // console.log(\"PLAY\", action.getClip().name, action)\r\n\r\n        const handle = new AnimationHandle(action, this.mixer!, options, _ => {\r\n            this._handles.splice(this._handles.indexOf(handle), 1);\r\n            // console.log(this._handles);\r\n        });\r\n        this._handles.push(handle);\r\n        return handle.getPromise();\r\n    }\r\n\r\n    private tryFindHandle(action: AnimationAction): AnimationHandle | undefined {\r\n        for (const handle of this._handles) {\r\n            if (handle.action === action)\r\n                return handle;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n\r\n    private _didInit = false;\r\n    init() {\r\n        if (this._didInit) return;\r\n        this._didInit = true;\r\n        if (!this.gameObject) return;\r\n        this.actions = [];\r\n        this.mixer = new THREE.AnimationMixer(this.gameObject);\r\n    }\r\n}\r\n\r\n\r\nclass AnimationHandle {\r\n    mixer: THREE.AnimationMixer;\r\n    action: THREE.AnimationAction;\r\n    promise: Promise<AnimationAction> | null = null;\r\n    resolve: Function | null = null;\r\n    reject: Function | null = null;\r\n\r\n    private _options?: PlayOptions | undefined;\r\n    private _resolveCallback: Function | null = null;\r\n    private _rejectCallback: Function | null = null;\r\n    private _loopCallback?: any;\r\n    private _finishedCallback?: any;\r\n    private _resolvedOrRejectedCallback?: (AnimationHandle) => void;\r\n\r\n    constructor(action: THREE.AnimationAction, mixer: THREE.AnimationMixer, opts?: PlayOptions, cb?: (handle: AnimationHandle) => void) {\r\n        this.action = action;\r\n        this.mixer = mixer;\r\n        this._resolvedOrRejectedCallback = cb;\r\n        this._options = opts;\r\n    }\r\n\r\n    getPromise(): Promise<AnimationAction> {\r\n        if (this.promise) return this.promise;\r\n\r\n        this.promise = new Promise((res, rej) => {\r\n            this._resolveCallback = res;\r\n            this._rejectCallback = rej;\r\n            this.resolve = this.onResolve.bind(this);\r\n            this.reject = this.onReject.bind(this);\r\n        });\r\n\r\n        this._loopCallback = this.onLoop.bind(this);\r\n        this._finishedCallback = this.onFinished.bind(this);\r\n        this.mixer.addEventListener('loop', this._loopCallback);\r\n        this.mixer.addEventListener('finished', this._finishedCallback);\r\n\r\n        return this.promise;\r\n    }\r\n\r\n    _update() {\r\n\r\n        if (!this._options) return;\r\n        if (this._options.endTime !== undefined && this.action.time > this._options.endTime) {\r\n            if (this._options.loop === true) {\r\n                this.action.time = this._options.startTime ?? 0;\r\n            }\r\n            else {\r\n                // this.action.stop();\r\n                this.action.time = this._options.endTime;\r\n                this.action.timeScale = 0;\r\n                // if (!this._options.clampWhenFinished)\r\n                //     this.action.stop();\r\n                this.onResolve();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onResolve() {\r\n        this.dispose();\r\n        this._resolvedOrRejectedCallback?.call(this, this);\r\n        this._resolveCallback?.call(this, this.action);\r\n    }\r\n\r\n    private onReject(reason: any) {\r\n        this.dispose();\r\n        this._resolvedOrRejectedCallback?.call(this, this);\r\n        this._rejectCallback?.call(this, reason);\r\n    }\r\n\r\n    private onLoop(_evt: MixerEvent) {\r\n        // console.log(\"LOOP\");\r\n    }\r\n\r\n    private onFinished(evt: MixerEvent) {\r\n        if (evt.action === this.action) {\r\n            // console.log(\"FINISHED\", evt, this.action);\r\n            this.onResolve();\r\n        }\r\n    }\r\n\r\n    private dispose() {\r\n        if (this._loopCallback)\r\n            this.mixer.removeEventListener('loop', this._loopCallback);\r\n        if (this._finishedCallback)\r\n            this.mixer.removeEventListener('finished', this._finishedCallback);\r\n        this._loopCallback = undefined;\r\n        this._finishedCallback = undefined;\r\n    }\r\n}", "import { Context } from \"./engine_setup\"\r\nimport { Animator } from '../engine-components/Animator';\r\nimport { Animation } from '../engine-components/Animation';\r\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\n// import * as object from \"./engine_gltf_builtin_components\";\r\nimport * as loaders from \"./engine_loaders\"\r\nimport * as utils from \"./engine_utils\";\r\nimport { registerComponentExtension, registerExtensions } from \"./extensions/extensions\";\r\nimport { getLoader, INeedleGltfLoader, registerLoader } from \"./engine_gltf\";\r\nimport { SourceIdentifier, UIDProvider } from \"./engine_types\";\r\nimport { createBuiltinComponents, writeBuiltinComponentData } from \"./engine_gltf_builtin_components\";\r\nimport { SerializationContext } from \"./engine_serialization_core\";\r\nimport { NEEDLE_components } from \"./extensions/NEEDLE_components\";\r\nimport { addNewComponent, getComponentInChildren } from \"./engine_components\";\r\n\r\n\r\nexport class NeedleGltfLoader implements INeedleGltfLoader {\r\n    createBuiltinComponents(context: Context, gltfId: string, gltf: any, seed: number | UIDProvider | null, extension?: NEEDLE_components | undefined) {\r\n        return createBuiltinComponents(context, gltfId, gltf, seed, extension);\r\n    }\r\n\r\n    writeBuiltinComponentData(comp: any, context: SerializationContext) {\r\n        return writeBuiltinComponentData(comp, context);\r\n    }\r\n\r\n    parseSync(context: Context, data, path: string, seed: number | UIDProvider | null): Promise<GLTF | undefined> {\r\n        return parseSync(context, data, path, seed);\r\n    }\r\n    loadSync(context: Context, url: string, seed: number | UIDProvider | null, _allowAddingAnimator: boolean, prog?: ((ProgressEvent: any) => void) | undefined): Promise<GLTF | undefined> {\r\n        return loadSync(context, url, seed, _allowAddingAnimator, prog);\r\n    }\r\n}\r\n\r\nregisterLoader(NeedleGltfLoader);\r\n\r\n\r\nconst printGltf = utils.getParam(\"printGltf\");\r\n\r\n// const loader = new GLTFLoader();\r\n// registerExtensions(loader);\r\n\r\nexport enum GltfLoadEventType {\r\n    BeforeLoad = 0,\r\n    AfterLoaded = 1,\r\n    FinishedSetup = 10,\r\n}\r\n\r\nexport class GltfLoadEvent {\r\n    context: Context\r\n    loader: GLTFLoader;\r\n    path: string;\r\n    gltf?: GLTF;\r\n\r\n    constructor(context: Context, path: string, loader: GLTFLoader, gltf?: GLTF) {\r\n        this.context = context;\r\n        this.path = path;\r\n        this.loader = loader;\r\n        this.gltf = gltf;\r\n    }\r\n}\r\n\r\nexport type GltfLoadEventCallback = (event: GltfLoadEvent) => void;\r\n\r\nconst eventListeners: { [key: string]: GltfLoadEventCallback[] } = {};\r\n\r\nexport function addGltfLoadEventListener(type: GltfLoadEventType, listener: GltfLoadEventCallback) {\r\n    eventListeners[type] = eventListeners[type] || [];\r\n    eventListeners[type].push(listener);\r\n}\r\nexport function removeGltfLoadEventListener(type: GltfLoadEventType, listener: GltfLoadEventCallback) {\r\n    if (eventListeners[type]) {\r\n        const index = eventListeners[type].indexOf(listener);\r\n        if (index >= 0) {\r\n            eventListeners[type].splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction invokeEvents(type: GltfLoadEventType, event: GltfLoadEvent) {\r\n    if (eventListeners[type]) {\r\n        for (const listener of eventListeners[type]) {\r\n            listener(event);\r\n        }\r\n    }\r\n}\r\n\r\nasync function handleLoadedGltf(context: Context, gltfId: string, gltf, seed: number | null | UIDProvider, componentsExtension) {\r\n    if (printGltf)\r\n        console.log(gltf);\r\n    await context.assets.registerGltf(gltf);\r\n    await getLoader().createBuiltinComponents(context, gltfId, gltf, seed, componentsExtension);\r\n\r\n    // load and assign animation\r\n    // we still need this for Animation component\r\n    // findAnimationsLate(context, gltf, context.new_scripts_pre_setup_callbacks, false);\r\n}\r\n\r\nexport function parseSync(context: Context, data, path: string, seed: number | UIDProvider | null): Promise<GLTF | undefined> {\r\n    if (typeof path !== \"string\") {\r\n        console.warn(\"Parse gltf binary without path, this might lead to errors in resolving extensions. Please provide the source path of the gltf/glb file\", path, typeof path);\r\n    }\r\n    const loader = new GLTFLoader();\r\n    const sourceId: SourceIdentifier = path;\r\n    registerExtensions(loader, context, sourceId);\r\n    const componentsExtension = registerComponentExtension(loader);\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            loaders.addDracoAndKTX2Loaders(loader, context);\r\n            invokeEvents(GltfLoadEventType.BeforeLoad, new GltfLoadEvent(context, path, loader));\r\n            loader.parse(data, path, async data => {\r\n                invokeEvents(GltfLoadEventType.AfterLoaded, new GltfLoadEvent(context, path, loader, data));\r\n                await handleLoadedGltf(context, path, data, seed, componentsExtension);\r\n                invokeEvents(GltfLoadEventType.FinishedSetup, new GltfLoadEvent(context, path, loader, data));\r\n                resolve(data);\r\n\r\n            }, err => {\r\n                console.error(\"failed loading \" + path, err);\r\n                resolve(undefined);\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            reject(err);\r\n        }\r\n    });\r\n}\r\n\r\nexport function loadSync(context: Context, url: string, seed: number | UIDProvider | null, _allowAddingAnimator: boolean = false, prog?: (ProgressEvent) => void): Promise<GLTF | undefined> {\r\n    // better to create new loaders every time\r\n    // (maybe we can cache them...)\r\n    // but due to the async nature and potentially triggering multiple loads at the same time\r\n    // we need to make sure the extensions dont override each other\r\n    // creating new loaders should not be expensive as well\r\n    const loader = new GLTFLoader();\r\n    const sourceId: SourceIdentifier = url;\r\n    registerExtensions(loader, context, sourceId);\r\n    const componentsExtension = registerComponentExtension(loader);\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            loaders.addDracoAndKTX2Loaders(loader, context);\r\n            invokeEvents(GltfLoadEventType.BeforeLoad, new GltfLoadEvent(context, url, loader));\r\n            loader.load(url, async data => {\r\n                invokeEvents(GltfLoadEventType.AfterLoaded, new GltfLoadEvent(context, url, loader, data));\r\n                await handleLoadedGltf(context, url, data, seed, componentsExtension);\r\n                invokeEvents(GltfLoadEventType.FinishedSetup, new GltfLoadEvent(context, url, loader, data));\r\n                resolve(data);\r\n\r\n            }, evt => {\r\n                prog?.call(loader, evt);\r\n            }, err => {\r\n                console.error(\"failed loading \" + url, err);\r\n                resolve(undefined);\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            reject(err);\r\n        }\r\n    });\r\n}\r\n\r\nexport function findAnimationsLate(_context: Context, gltf, callbackarray, allowAddingAnimator: boolean = false) {\r\n    if (gltf && gltf.animations && gltf.animations.length > 0) {\r\n        callbackarray.push(() => {\r\n            // console.trace(\"callback\", gltf);\r\n            findAnimations(gltf, allowAddingAnimator);\r\n        });\r\n    }\r\n}\r\n\r\nexport function findAnimations(gltf: GLTF, allowAddingAnimator: boolean = false) {\r\n    // console.log(gltf);\r\n    if (!gltf || !gltf.animations || !gltf.scene) return;\r\n\r\n    if (!allowAddingAnimator) {\r\n        // we only need to search if any animation component is in the scene\r\n        // otherwise if we dont add anything there is no reason to search and log anything\r\n        if (!getComponentInChildren(gltf.scene, Animation)) return;\r\n    }\r\n\r\n    for (let i = 0; i < gltf.animations.length; i++) {\r\n        const animation = gltf.animations[i];\r\n        if (!animation.tracks || animation.tracks.length <= 0) continue;\r\n        for (const t in animation.tracks) {\r\n            const track = animation.tracks[t];\r\n            const objectName = track[\"__objectName\"] ?? track.name.substring(0, track.name.indexOf(\".\"));\r\n            const obj = gltf.scene.getObjectByName(objectName);\r\n            if (!obj) {\r\n                // console.warn(\"could not find \" + objectName, animation, gltf.scene);\r\n                continue;\r\n            }\r\n            let animationComponent = findAnimationGameObjectInParent(obj);\r\n            if (!animationComponent) {\r\n                if (allowAddingAnimator)\r\n                    animationComponent = addNewComponent(gltf.scene, new Animation());\r\n                else {\r\n                    console.warn(\"Failed finding animator for\", track.name, objectName);\r\n                    continue;\r\n                }\r\n            }\r\n            const animations = animationComponent.animations = animationComponent.animations || [];\r\n            animation[\"name_animator\"] = animationComponent.name;\r\n            // console.log(objectName, obj, animator.name, animations.length);\r\n            if (animations.indexOf(animation) < 0) {\r\n                animations.push(animation);\r\n            }\r\n        }\r\n    }\r\n    function findAnimationGameObjectInParent(obj) {\r\n        if (!obj) return;\r\n        const components = obj.userData?.components;\r\n        if (components && components.length > 0) {\r\n            for (let i = 0; i < components.length; i++) {\r\n                const component = components[i];\r\n                // console.log(component);\r\n                if (component instanceof Animator || component instanceof Animation) {\r\n                    return obj;;\r\n                }\r\n            }\r\n        }\r\n        return findAnimationGameObjectInParent(obj.parent);\r\n    }\r\n}\r\n\r\n\r\n// TODO: save references in guid map\r\n// const guidMap = {};\r\n\r\n\r\nexport function tryFindObjectByName(name, obj, recursive = true) {\r\n    if (obj.userData && obj.userData.name === name) return obj;\r\n    if (obj.children && obj.children.length > 0) {\r\n        for (let i = 0; i < obj.children.length; i++) {\r\n            const child = obj.children[i];\r\n            const found = tryFindObjectByName(name, child, recursive);\r\n            if (found) return found;\r\n        }\r\n    }\r\n}\r\n\r\n// obj can be a three.object or a gltf root\r\nexport function tryFindObject(globalObjectIdentifier, obj, recursive = true) {\r\n    return utils.tryFindObject(globalObjectIdentifier, obj, recursive);\r\n}\r\n\r\n\r\nexport function tryFindScript(globalObjectIdentifier, list = null) {\r\n    const arr = list ?? Context.Current.scripts;\r\n    for (const i in arr) {\r\n        const script = arr[i];\r\n        if (script && script.guid === globalObjectIdentifier)\r\n            return script;\r\n    }\r\n    return null;\r\n}\r\n", "import { GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\nimport { FindShaderTechniques, whiteDefaultTexture, ToUnityMatrixArray, SetUnitySphericalHarmonics } from '../engine_shaders';\r\nimport { IUniform, RawShaderMaterial, Vector4 } from 'three';\r\nimport { Context } from '../engine_setup';\r\nimport { getParam } from \"../engine_utils\";\r\nimport * as SHADERDATA from \"../shaders/shaderData\"\r\nimport { SourceIdentifier } from \"../engine_types\";\r\nimport { ILight } from \"../engine_types\";\r\nimport { getWorldPosition } from \"../engine_three_utils\";\r\n\r\nconst debug = getParam(\"debugshaders\");\r\n\r\nexport const NEEDLE_TECHNIQUES_WEBGL_NAME = \"NEEDLE_techniques_webgl\";\r\n\r\n//@ts-ignore\r\nenum UniformType {\r\n    INT = 5124,\r\n    FLOAT = 5126,\r\n    FLOAT_VEC2 = 35664,\r\n    FLOAT_VEC3 = 35665,\r\n    FLOAT_VEC4 = 35666,\r\n    INT_VEC2 = 35667,\r\n    INT_VEC3 = 35668,\r\n    INT_VEC4 = 35669,\r\n    BOOL = 35670, // exported as int\r\n    BOOL_VEC2 = 35671,\r\n    BOOL_VEC3 = 35672,\r\n    BOOL_VEC4 = 35673,\r\n    FLOAT_MAT2 = 35674, // exported as vec2[2]\r\n    FLOAT_MAT3 = 35675, // exported as vec3[3]\r\n    FLOAT_MAT4 = 35676, // exported as vec4[4]\r\n    SAMPLER_2D = 35678,\r\n    SAMPLER_3D = 35680, // added, not in the proposed extension\r\n    SAMPLER_CUBE = 35681, // added, not in the proposed extension\r\n    UNKNOWN = 0,\r\n}\r\n\r\nclass ObjectRendererData {\r\n    objectToWorldMatrix: THREE.Matrix4 = new THREE.Matrix4();\r\n    worldToObjectMatrix: THREE.Matrix4 = new THREE.Matrix4();\r\n\r\n    objectToWorld: Array<Vector4> = new Array<Vector4>();\r\n    worldToObject: Array<Vector4> = new Array<Vector4>();\r\n\r\n    updateFrom(obj: THREE.Object3D) {\r\n        this.objectToWorldMatrix.copy(obj.matrixWorld);\r\n        ToUnityMatrixArray(this.objectToWorldMatrix, this.objectToWorld);\r\n\r\n        this.worldToObjectMatrix.copy(obj.matrixWorld).invert();\r\n        ToUnityMatrixArray(this.worldToObjectMatrix, this.worldToObject);\r\n    }\r\n}\r\n\r\nenum CullMode {\r\n    Off = 0,\r\n    Front = 1,\r\n    Back = 2,\r\n}\r\nenum ZTestMode {\r\n    Never = 1,\r\n    Less = 2,\r\n    Equal = 3,\r\n    LEqual = 4,\r\n    Greater = 5,\r\n    NotEqual = 6,\r\n    GEqual = 7,\r\n    Always = 8,\r\n}\r\n\r\nexport class CustomShader extends RawShaderMaterial {\r\n\r\n    private identifier: SourceIdentifier;\r\n    private onBeforeRenderSceneCallback = this.onBeforeRenderScene.bind(this);\r\n\r\n    clone() {\r\n        const clone = super.clone();\r\n        createUniformProperties(clone);\r\n        return clone;\r\n    }\r\n\r\n    constructor(identifier: SourceIdentifier, ...args) {\r\n        super(...args);\r\n\r\n        this.identifier = identifier;\r\n\r\n        // this[\"normalMap\"] = true;\r\n        // this.needsUpdate = true;\r\n        if (debug)\r\n            console.log(this);\r\n\r\n        this.type = \"NEEDLE_CUSTOM_SHADER\";\r\n        if (!this.uniforms[this._objToWorldName])\r\n            this.uniforms[this._objToWorldName] = { value: [] };\r\n        if (!this.uniforms[this._worldToObjectName])\r\n            this.uniforms[this._worldToObjectName] = { value: [] };\r\n        if (!this.uniforms[this._viewProjectionName])\r\n            this.uniforms[this._viewProjectionName] = { value: [] };\r\n\r\n        if (this.uniforms[this._sphericalHarmonicsName]) {\r\n            this.waitForLighting();\r\n        }\r\n\r\n        if (this.depthTextureUniform || this.opaqueTextureUniform) {\r\n            Context.Current.pre_render_callbacks.push(this.onBeforeRenderSceneCallback);\r\n        }\r\n    }\r\n\r\n    dispose(): void {\r\n        super.dispose();\r\n        const index = Context.Current.pre_render_callbacks.indexOf(this.onBeforeRenderSceneCallback);\r\n        if (index >= 0)\r\n            Context.Current.pre_render_callbacks.splice(index, 1);\r\n    }\r\n\r\n    async waitForLighting() {\r\n        const context: Context = Context.Current;\r\n        if (!context) {\r\n            console.error(\"Missing context\");\r\n            return;\r\n        }\r\n        const data = await context.rendererData.getSceneLightingData(this.identifier);\r\n        if (!data || !data.array) {\r\n            console.warn(\"Missing lighting data for custom shader, getSceneLightingData did not return anything\");\r\n            return;\r\n        }\r\n        if (debug)\r\n            console.log(data);\r\n        const array = data.array;\r\n        const envTexture = data.texture;\r\n        // console.log(envTexture);\r\n        this.uniforms[\"unity_SpecCube0\"] = { value: envTexture };\r\n        SetUnitySphericalHarmonics(this.uniforms, array);\r\n        const hdr = Math.sqrt(Math.PI * .5);\r\n        this.uniforms[\"unity_SpecCube0_HDR\"] = { value: new THREE.Vector4(hdr, hdr, hdr, hdr) };\r\n        // this.needsUpdate = true;\r\n        // this.uniformsNeedUpdate = true;\r\n        if (debug) console.log(\"Set environment lighting\", this.uniforms);\r\n    }\r\n\r\n    private _sphericalHarmonicsName = \"unity_SpecCube0\";\r\n\r\n    private _objToWorldName = \"hlslcc_mtx4x4unity_ObjectToWorld\";\r\n    private _worldToObjectName = \"hlslcc_mtx4x4unity_WorldToObject\";\r\n\r\n    private static viewProjection: THREE.Matrix4 = new THREE.Matrix4();\r\n    private static _viewProjectionValues: Array<Vector4> = [];\r\n    private _viewProjectionName = \"hlslcc_mtx4x4unity_MatrixVP\";\r\n\r\n    private static viewMatrix: THREE.Matrix4 = new THREE.Matrix4();\r\n    private static _viewMatrixValues: Array<Vector4> = [];\r\n    private _viewMatrixName = \"hlslcc_mtx4x4unity_MatrixV\";\r\n\r\n    private static _worldSpaceCameraPosName = \"_WorldSpaceCameraPos\";\r\n    private static _worldSpaceCameraPos: THREE.Vector3 = new THREE.Vector3();\r\n\r\n    private static _mainLightColor: THREE.Vector4 = new THREE.Vector4();\r\n    private static _mainLightPosition: THREE.Vector3 = new THREE.Vector3();\r\n    private static _lightData: THREE.Vector4 = new THREE.Vector4();\r\n\r\n    private _rendererData = new ObjectRendererData();\r\n\r\n    private get depthTextureUniform(): IUniform<any> | undefined {\r\n        if (!this.uniforms) return undefined;\r\n        return this.uniforms[\"_CameraDepthTexture\"];\r\n    }\r\n    private get opaqueTextureUniform(): IUniform<any> | undefined {\r\n        if (!this.uniforms) return undefined;\r\n        return this.uniforms[\"_CameraOpaqueTexture\"];\r\n    }\r\n\r\n    private onBeforeRenderScene() {\r\n        if (this.opaqueTextureUniform) {\r\n            Context.Current.setRequireColor(true);\r\n        }\r\n        if (this.depthTextureUniform) {\r\n            Context.Current.setRequireDepth(true);\r\n        }\r\n    }\r\n\r\n    onBeforeRender(_renderer, _scene, camera, _geometry, obj, _group) {\r\n        if (!_geometry.attributes[\"tangent\"])\r\n            _geometry.computeTangents();\r\n        this.onUpdateUniforms(camera, obj);\r\n    }\r\n\r\n    onUpdateUniforms(camera?: THREE.Camera, obj?: any) {\r\n\r\n        const context = Context.Current;\r\n\r\n        // TODO cache by camera\r\n        // if (context.time.frame != this._lastFrame)\r\n        {\r\n            if (camera) {\r\n                if (CustomShader.viewProjection && this.uniforms[this._viewProjectionName]) {\r\n                    CustomShader.viewProjection.copy(camera.projectionMatrix).multiply(camera.matrixWorldInverse);\r\n                    ToUnityMatrixArray(CustomShader.viewProjection, CustomShader._viewProjectionValues)\r\n                }\r\n\r\n                if (CustomShader.viewMatrix && this.uniforms[this._viewMatrixName]) {\r\n                    CustomShader.viewMatrix.copy(camera.matrixWorldInverse);\r\n                    ToUnityMatrixArray(CustomShader.viewMatrix, CustomShader._viewMatrixValues)\r\n                }\r\n\r\n                if (this.uniforms[CustomShader._worldSpaceCameraPosName]) {\r\n                    CustomShader._worldSpaceCameraPos.setFromMatrixPosition(camera.matrixWorld);\r\n                }\r\n            }\r\n        }\r\n\r\n        // this._lastFrame = context.time.frame;\r\n\r\n        if (this.uniforms[\"_TimeParameters\"]) {\r\n            this.uniforms[\"_TimeParameters\"].value = context.rendererData.timeVec4;\r\n        }\r\n        else if (this.uniforms[\"_Time\"]) {\r\n            this.uniforms[\"_Time\"].value = context.rendererData.timeVec4;\r\n        }\r\n\r\n        const mainLight: ILight | null = context.mainLight;\r\n        if (mainLight) {\r\n\r\n            const lp = getWorldPosition(mainLight.gameObject, CustomShader._mainLightPosition);\r\n            this.uniforms[\"_MainLightPosition\"] = { value: lp.normalize() };\r\n\r\n            CustomShader._mainLightColor.set(mainLight.color.r, mainLight.color.g, mainLight.color.b, 0);\r\n            this.uniforms[\"_MainLightColor\"] = { value: CustomShader._mainLightColor };\r\n\r\n            const intensity = mainLight.intensity;// * (Math.PI * .5);\r\n            CustomShader._lightData.z = intensity;\r\n            this.uniforms[\"unity_LightData\"] = { value: CustomShader._lightData };\r\n        }\r\n\r\n        if (camera) {\r\n            if (CustomShader.viewProjection && this.uniforms[this._viewProjectionName]) {\r\n                this.uniforms[this._viewProjectionName].value = CustomShader._viewProjectionValues;\r\n            }\r\n\r\n            if (CustomShader.viewMatrix && this.uniforms[this._viewMatrixName]) {\r\n                this.uniforms[this._viewMatrixName].value = CustomShader._viewMatrixValues;\r\n            }\r\n\r\n            if (this.uniforms[CustomShader._worldSpaceCameraPosName]) {\r\n                this.uniforms[CustomShader._worldSpaceCameraPosName] = { value: CustomShader._worldSpaceCameraPos };\r\n            }\r\n\r\n            if (context.mainCameraComponent) {\r\n                if (this.uniforms[\"_ProjectionParams\"]) {\r\n                    const params = this.uniforms[\"_ProjectionParams\"].value;\r\n                    params.x = 1;\r\n                    params.y = context.mainCameraComponent.nearClipPlane;\r\n                    params.z = context.mainCameraComponent.farClipPlane;\r\n                    params.w = 1 / params.z;\r\n                    this.uniforms[\"_ProjectionParams\"].value = params\r\n                }\r\n                if (this.uniforms[\"_ZBufferParams\"]) {\r\n                    const params = this.uniforms[\"_ZBufferParams\"].value;\r\n                    const cam = context.mainCameraComponent;\r\n                    params.x = 1 - cam.farClipPlane / cam.nearClipPlane;\r\n                    params.y = cam.farClipPlane / cam.nearClipPlane;\r\n                    params.z = params.x / cam.farClipPlane;\r\n                    params.w = params.y / cam.farClipPlane;\r\n                    this.uniforms[\"_ZBufferParams\"].value = params;\r\n                }\r\n                if (this.uniforms[\"_ScreenParams\"]) {\r\n                    const params = this.uniforms[\"_ScreenParams\"].value;\r\n                    params.x = context.domWidth;\r\n                    params.y = context.domHeight;\r\n                    params.z = 1.0 + 1.0 / params.x;\r\n                    params.w = 1.0 + 1.0 / params.y;\r\n                    this.uniforms[\"_ScreenParams\"].value = params;\r\n                }\r\n            }\r\n        }\r\n\r\n        const depthTexture = this.depthTextureUniform;\r\n        if (depthTexture) {\r\n            depthTexture.value = context.depthTexture;\r\n        }\r\n\r\n        const colorTexture = this.opaqueTextureUniform;\r\n        if (colorTexture) {\r\n            colorTexture.value = context.opaqueColorTexture;\r\n        }\r\n\r\n        if (obj) {\r\n            const objData = this._rendererData;\r\n            objData.updateFrom(obj);\r\n            this.uniforms[this._worldToObjectName].value = objData.worldToObject;\r\n            this.uniforms[this._objToWorldName].value = objData.objectToWorld;\r\n        }\r\n\r\n        this.uniformsNeedUpdate = true;\r\n    }\r\n}\r\n\r\n\r\nexport class NEEDLE_techniques_webgl implements GLTFLoaderPlugin {\r\n\r\n    get name(): string {\r\n        return NEEDLE_TECHNIQUES_WEBGL_NAME;\r\n    }\r\n\r\n    private parser: GLTFParser;\r\n    private identifier: SourceIdentifier;\r\n\r\n    constructor(loader: GLTFParser, identifier: SourceIdentifier) {\r\n        this.parser = loader;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    loadMaterial(index: number): Promise<THREE.Material> | null {\r\n\r\n        const mat = this.parser.json.materials[index];\r\n        if (!mat) {\r\n            if (debug) console.log(index, this.parser.json.materials);\r\n            return null;\r\n        }\r\n        if (!mat.extensions || !mat.extensions[NEEDLE_TECHNIQUES_WEBGL_NAME]) {\r\n            if (debug) console.log(\"material \" + index + \" does not use NEEDLE_techniques_webgl\");\r\n            return null;\r\n        }\r\n        const techniqueIndex = mat.extensions[NEEDLE_TECHNIQUES_WEBGL_NAME].technique;\r\n        if (techniqueIndex < 0) return null;\r\n        const shaders: SHADERDATA.ShaderData = this.parser.json.extensions[NEEDLE_TECHNIQUES_WEBGL_NAME];\r\n        if (!shaders) return null;\r\n        if (debug) console.log(shaders);\r\n        const technique: SHADERDATA.Technique = shaders.techniques[techniqueIndex];\r\n        if (!technique) return null;\r\n\r\n        return new Promise<THREE.Material>(async (resolve, reject) => {\r\n            const bundle = await FindShaderTechniques(shaders, technique.program!);\r\n            const frag = bundle?.fragmentShader;\r\n            const vert = bundle?.vertexShader;\r\n            // console.log(techniqueIndex, shaders.techniques);\r\n            if (!frag || !vert) return reject();\r\n\r\n            if (debug)\r\n                console.log(\"loadMaterial\", mat, bundle);\r\n\r\n            const uniforms: {} = {};\r\n            const techniqueUniforms = technique.uniforms;\r\n\r\n            if (vert.includes(\"_Time\"))\r\n                uniforms[\"_Time\"] = { value: new THREE.Vector4(0, 0, 0, 0) };\r\n\r\n            for (const u in techniqueUniforms) {\r\n                const uniformName = u;\r\n                // const uniformValues = techniqueUniforms[u];\r\n                // const typeName = UniformType[uniformValues.type];\r\n                switch (uniformName) {\r\n                    case \"_TimeParameters\":\r\n                        const timeUniform = new THREE.Vector4();\r\n                        uniforms[uniformName] = { value: timeUniform };\r\n                        break;\r\n\r\n                    case \"hlslcc_mtx4x4unity_MatrixV\":\r\n                    case \"hlslcc_mtx4x4unity_MatrixVP\":\r\n                        uniforms[uniformName] = { value: [] };\r\n                        break;\r\n\r\n                    case \"_MainLightPosition\":\r\n                    case \"_MainLightColor\":\r\n                    case \"_WorldSpaceCameraPos\":\r\n                        uniforms[uniformName] = { value: [0, 0, 0, 1] };\r\n                        break;\r\n\r\n                    case \"unity_OrthoParams\":\r\n                        break;\r\n\r\n                    case \"unity_SpecCube0\":\r\n                        uniforms[uniformName] = { value: null };\r\n                        break;\r\n                    default:\r\n\r\n                    case \"_ScreenParams\":\r\n                    case \"_ZBufferParams\":\r\n                    case \"_ProjectionParams\":\r\n                        uniforms[uniformName] = { value: [0, 0, 0, 0] };\r\n                        break;\r\n\r\n\r\n                    case \"_CameraOpaqueTexture\":\r\n                    case \"_CameraDepthTexture\":\r\n                        uniforms[uniformName] = { value: null };\r\n                        break;\r\n\r\n                        // switch (uniformValues.type) {\r\n                        //     case UniformType.INT:\r\n                        //         break;\r\n                        //     case UniformType.FLOAT:\r\n                        //         break;\r\n                        //     case UniformType.FLOAT_VEC3:\r\n                        //         console.log(\"VEC\", uniformName);\r\n                        //         break;\r\n                        //     case UniformType.FLOAT_VEC4:\r\n                        //         console.log(\"VEC\", uniformName);\r\n                        //         break;\r\n                        //     case UniformType.SAMPLER_CUBE:\r\n                        //         console.log(\"cube\", uniformName);\r\n                        //         break;\r\n                        //     default:\r\n                        //         console.log(typeName);\r\n                        //         break;\r\n                        // }\r\n\r\n                        break;\r\n                }\r\n            }\r\n\r\n            let isTransparent = false;\r\n            if (mat.extensions && mat.extensions[NEEDLE_TECHNIQUES_WEBGL_NAME]) {\r\n                const materialExtension = mat.extensions[NEEDLE_TECHNIQUES_WEBGL_NAME];\r\n                if (materialExtension.technique === techniqueIndex) {\r\n                    if (debug) console.log(mat.name, \"Material Properties\", materialExtension);\r\n                    for (const key in materialExtension.values) {\r\n                        const val = materialExtension.values[key];\r\n                        if (typeof val === \"string\") {\r\n                            if (val.startsWith(\"/textures/\")) {\r\n                                const indexString = val.substring(\"/textures/\".length);\r\n                                const texIndex = Number.parseInt(indexString);\r\n                                if (texIndex >= 0) {\r\n                                    const tex = await this.parser.getDependency(\"texture\", texIndex);\r\n                                    if (tex) {\r\n                                        tex.encoding = THREE.LinearEncoding;\r\n                                        tex.needsUpdate = true;\r\n                                    }\r\n                                    uniforms[key] = { value: tex };\r\n                                    continue;\r\n                                }\r\n                            }\r\n                            switch (key) {\r\n                                case \"alphaMode\":\r\n                                    if (val === \"BLEND\") isTransparent = true;\r\n                                    continue;\r\n                            }\r\n                        }\r\n                        if (Array.isArray(val) && val.length === 4) {\r\n                            uniforms[key] = { value: new THREE.Vector4(val[0], val[1], val[2], val[3]) };\r\n                            continue;\r\n                        }\r\n                        uniforms[key] = { value: val };\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            const material = new CustomShader(this.identifier,\r\n                {\r\n                    name: mat.name ?? \"\",\r\n                    uniforms: uniforms,\r\n                    vertexShader: vert,\r\n                    fragmentShader: frag,\r\n                    lights: false,\r\n                    // defines: {\r\n                    //     \"USE_SHADOWMAP\" : true\r\n                    // },\r\n                });\r\n\r\n            const culling = uniforms[\"_Cull\"]?.value;\r\n            switch (culling) {\r\n                case CullMode.Off:\r\n                    material.side = THREE.DoubleSide;\r\n                    break;\r\n                case CullMode.Front:\r\n                    material.side = THREE.BackSide;\r\n                    break;\r\n                case CullMode.Back:\r\n                    material.side = THREE.FrontSide;\r\n                    break;\r\n                default:\r\n                    material.side = THREE.FrontSide;\r\n                    break;\r\n            }\r\n\r\n            const zTest = uniforms[\"_ZTest\"]?.value as ZTestMode;\r\n            switch (zTest) {\r\n                case ZTestMode.Equal:\r\n                    material.depthTest = true;\r\n                    material.depthFunc = THREE.EqualDepth;\r\n                    break;\r\n                case ZTestMode.NotEqual:\r\n                    material.depthTest = true;\r\n                    material.depthFunc = THREE.NotEqualDepth;\r\n                    break;\r\n                case ZTestMode.Less:\r\n                    material.depthTest = true;\r\n                    material.depthFunc = THREE.LessDepth;\r\n                    break;\r\n                case ZTestMode.LEqual:\r\n                    material.depthTest = true;\r\n                    material.depthFunc = THREE.LessEqualDepth;\r\n                    break;\r\n                case ZTestMode.Greater:\r\n                    material.depthTest = true;\r\n                    material.depthFunc = THREE.GreaterDepth;\r\n                    break;\r\n                case ZTestMode.GEqual:\r\n                    material.depthTest = true;\r\n                    material.depthFunc = THREE.GreaterEqualDepth;\r\n                    break;\r\n                case ZTestMode.Always:\r\n                    material.depthTest = false;\r\n                    material.depthFunc = THREE.AlwaysDepth;\r\n                    break;\r\n            }\r\n\r\n            material.transparent = isTransparent;\r\n            if (isTransparent)\r\n                material.depthWrite = false;\r\n\r\n            // set spherical harmonics once\r\n            SetUnitySphericalHarmonics(uniforms);\r\n            // update once to test if everything is assigned\r\n            material.onUpdateUniforms();\r\n\r\n            for (const u in techniqueUniforms) {\r\n                const uniformName = u;\r\n                const type: SHADERDATA.UniformType = techniqueUniforms[u].type;\r\n                if (uniforms[uniformName]?.value === undefined) {\r\n                    switch (type) {\r\n                        case SHADERDATA.UniformType.SAMPLER_2D:\r\n                            uniforms[uniformName] = { value: whiteDefaultTexture };\r\n                            console.warn(\"Missing/unassigned texture, fallback to white: \" + uniformName)\r\n                            break;\r\n                        default:\r\n\r\n                            console.warn(\"TODO: EXPECTED UNIFORM / fallback NOT SET: \" + uniformName, techniqueUniforms[u]);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (debug)\r\n                console.log(material.uuid, uniforms);\r\n\r\n            createUniformProperties(material);\r\n\r\n            resolve(material);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n// when animating custom material properties (uniforms) the path resolver tries to access them via material._MyProperty. \r\n// That doesnt exist by default for custom properties\r\n// We could re-write the path in the khr path resolver but that would require it to know beforehand\r\n// if the material uses as custom shader or not\r\n// this way all properties of custom shaders are also accessible via material._MyProperty\r\nfunction createUniformProperties(material: CustomShader) {\r\n    if (material.uniforms) {\r\n        for (const key in material.uniforms) {\r\n            if (!Object.getOwnPropertyDescriptor(material, key)) {\r\n                Object.defineProperty(material, key, {\r\n                    get: () => material.uniforms[key].value,\r\n                    set: (value) => {\r\n                        material.uniforms[key].value = value\r\n                        material.needsUpdate = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}", "import { GLTF, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { NodeToObjectMap, ObjectToNodeMap, SerializationContext } from \"../engine_serialization_core\";\r\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter.js';\r\nimport { debugExtension } from \"../engine_default_parameters\";\r\nimport { builtinComponentKeyName } from \"../engine_constants\";\r\nimport { resolveReferences } from \"./extension_utils\";\r\nimport { apply } from \"../../engine-components/js-extensions/Object3D\";\r\nimport { getLoader } from \"../engine_gltf\";\r\n\r\nexport const debug = debugExtension\r\nconst componentsArrayExportKey = \"$___Export_Components\";\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_components\";\r\n\r\nclass ExtensionData {\r\n    [builtinComponentKeyName]?: Array<object | null>\r\n}\r\n\r\nclass ExportData {\r\n    node: THREE.Object3D;\r\n    nodeIndex: number;\r\n    nodeDef: any;\r\n\r\n    constructor(node: THREE.Object3D, nodeIndex: number, nodeDef: any) {\r\n        this.node = node;\r\n        this.nodeIndex = nodeIndex;\r\n        this.nodeDef = nodeDef;\r\n    }\r\n}\r\n\r\nexport class NEEDLE_components implements GLTFLoaderPlugin {\r\n\r\n    get name(): string {\r\n        return EXTENSION_NAME;\r\n    }\r\n\r\n    // import\r\n    parser?: GLTFParser;\r\n    nodeToObjectMap: NodeToObjectMap = {};\r\n\r\n    // export\r\n    exportContext!: { [nodeIndex: number]: ExportData };\r\n    objectToNodeMap: ObjectToNodeMap = {};\r\n    context!: SerializationContext;\r\n    writer?: any;\r\n\r\n    registerExport(exp: GLTFExporter) {\r\n        //@ts-ignore\r\n        exp.register(writer => {\r\n            // we want to hook into BEFORE user data is written\r\n            // because we want to remove the components list (circular references)\r\n            // and replace them with the serialized data\r\n            // the write node callback is called after user data is serialized\r\n            // we could also traverse everything before export and remove components\r\n            // but doing it like that we avoid traversing multiple times\r\n            if(\"serializeUserData\" in writer){\r\n                //@ts-ignore\r\n                const originalFunction = writer.serializeUserData.bind(writer);\r\n                this.writer = writer;\r\n                //@ts-ignore\r\n                writer.serializeUserData = (o, def) => {\r\n                    try {\r\n                        this.serializeUserData(o, def);\r\n                        originalFunction(o, def);\r\n                    }\r\n                    finally {\r\n                        this.afterSerializeUserData(o, def);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n\r\n    beforeParse() {\r\n        this.exportContext = {};\r\n        this.objectToNodeMap = {};\r\n    }\r\n\r\n    // https://github.com/mrdoob/three.js/blob/efbfc67edc7f65cfcc61a389ffc5fd43ea702bc6/examples/jsm/exporters/GLTFExporter.js#L532\r\n    serializeUserData(node: THREE.Object3D, _nodeDef: any) {\r\n        const components = node.userData?.components;\r\n        if (!components || components.length <= 0) return;\r\n        // delete components before serializing user data to avoid circular references\r\n        delete node.userData.components;\r\n        node[componentsArrayExportKey] = components;\r\n    }\r\n\r\n    afterSerializeUserData(node: THREE.Object3D, _nodeDef) {\r\n        if (node.type === \"Scene\") {\r\n            if (debug)\r\n                console.log(\"DONE\", JSON.stringify(_nodeDef));\r\n        }\r\n        // reset userdata\r\n        if (node[componentsArrayExportKey] === undefined) return;\r\n        const components = node[componentsArrayExportKey];\r\n        delete node[componentsArrayExportKey];\r\n        if (components !== null) {\r\n            node.userData.components = components;\r\n        }\r\n\r\n        // console.log(_nodeDef, _nodeDef.mesh);\r\n    }\r\n\r\n    writeNode(node: THREE.Object3D, nodeDef) {\r\n        let nodeIndex = this.writer.json.nodes.length;\r\n        console.log(node.name, nodeIndex, node.uuid);\r\n        const context = new ExportData(node, nodeIndex, nodeDef);\r\n        this.exportContext[nodeIndex] = context;\r\n        this.objectToNodeMap[node.uuid] = nodeIndex;\r\n    };\r\n\r\n    afterParse(input) {\r\n        if (debug)\r\n            console.log(\"AFTER\", input);\r\n        for (const i in this.exportContext) {\r\n            const context = this.exportContext[i];\r\n            const node = context.node;\r\n            const nodeDef = context.nodeDef;\r\n            const nodeIndex = context.nodeIndex;\r\n\r\n            const components = node.userData?.components;\r\n            if (!components || components.length <= 0) continue;\r\n            // create data container\r\n            const data: ExtensionData = new ExtensionData();\r\n            nodeDef.extensions = nodeDef.extensions || {};\r\n            nodeDef.extensions[this.name] = data;\r\n            this.context.object = node;\r\n            this.context.nodeId = nodeIndex;\r\n            this.context.objectToNode = this.objectToNodeMap;\r\n\r\n            const serializedComponentData: Array<object | null> = [];\r\n            for (const comp of components) {\r\n                this.context.target = comp;\r\n                const res = getLoader().writeBuiltinComponentData(comp, this.context);\r\n                if (res !== null) {\r\n                    serializedComponentData.push(res);\r\n                    // (comp as unknown as ISerializationCallbackReceiver)?.onAfterSerialize?.call(comp);\r\n                }\r\n            }\r\n            if (serializedComponentData.length > 0) {\r\n                data[builtinComponentKeyName] = serializedComponentData;\r\n                if (debug)\r\n                    console.log(\"DID WRITE\", node, \"nodeIndex\", nodeIndex, serializedComponentData);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // -------------------------------------\r\n    // LOADING \r\n    // called by GLTFLoader\r\n    beforeRoot() {\r\n        if (debug)\r\n            console.log(\"BEGIN LOAD\");\r\n        this.nodeToObjectMap = {};\r\n        return null;\r\n    }\r\n\r\n    // called by GLTFLoader\r\n    async afterRoot(result: GLTF): Promise<void> {\r\n        const parser = result.parser;\r\n        const ext = parser?.extensions;\r\n        if (!ext) return;\r\n        const hasExtension = ext[this.name];\r\n        if (debug)\r\n            console.log(\"After root\", result, this.parser, ext);\r\n\r\n        const loadComponents: Array<Promise<void>> = [];\r\n        if (hasExtension === true) {\r\n            const nodes = parser.json.nodes;\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                const obj = await parser.getDependency('node', i);\r\n                this.nodeToObjectMap[i] = obj;\r\n            }\r\n\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                const node = nodes[i];\r\n                const index = i;// node.mesh;\r\n                const ext = node.extensions;\r\n                if (!ext) continue;\r\n                const data = ext[this.name];\r\n                if (!data) continue;\r\n                if (debug)\r\n                    console.log(\"NODE\", node);\r\n                const obj = this.nodeToObjectMap[index];\r\n                if (!obj) {\r\n                    console.error(\"Could not find object for node index: \" + index, node, parser);\r\n                    continue;\r\n                }\r\n\r\n                apply(obj);\r\n\r\n                loadComponents.push(this.createComponents(obj, data));\r\n            }\r\n        }\r\n        await Promise.all(loadComponents);\r\n    }\r\n\r\n    private async createComponents(obj: THREE.Object3D, data: ExtensionData) {\r\n        if (!data) return;\r\n        const componentData = data[builtinComponentKeyName];\r\n        if (componentData) {\r\n            const tasks = new Array<Promise<any>>();\r\n            if (debug)\r\n                console.log(obj.name, componentData);\r\n            for (const i in componentData) {\r\n                const serializedData = componentData[i];\r\n                if (debug)\r\n                    console.log(\"Serialized data\", JSON.parse(JSON.stringify(serializedData)));\r\n\r\n                if (serializedData && this.parser) {\r\n                    tasks.push(resolveReferences(this.parser, serializedData));\r\n                }\r\n\r\n                obj.userData = obj.userData || {};\r\n                obj.userData[builtinComponentKeyName] = obj.userData[builtinComponentKeyName] || [];\r\n                obj.userData[builtinComponentKeyName].push(serializedData);\r\n            }\r\n            await Promise.all(tasks);\r\n        }\r\n    }\r\n\r\n    // parse function https://github.com/mrdoob/three.js/blob/efbfc67edc7f65cfcc61a389ffc5fd43ea702bc6/examples/jsm/loaders/GLTFLoader.js#L2290\r\n\r\n\r\n    // createNodeAttachment(nodeIndex: number): null {\r\n    //     // if(!this.parser){\r\n    //     //     console.error(\"Parser not set, call registerLoad with on this\");\r\n    //     //     return null;\r\n    //     // }\r\n    //     // const node = this.parser.json.nodes[nodeIndex];\r\n    //     // const extenstions = node.extensions;\r\n    //     // const data = extenstions && extenstions[this.name];\r\n    //     // if (!data) return null;\r\n    //     // const components = data[builtinComponentKeyName];\r\n    //     // if (!components) return null;\r\n    //     // console.log(components);\r\n    //     return null;\r\n    // }\r\n}", "import { getParam } from \"../engine_utils\";\r\nimport { EXRLoader } from \"three/examples/jsm/loaders/EXRLoader\";\r\nimport { Texture } from \"three\";\r\nimport { GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\n\r\nconst debug = getParam(\"debugexr\");\r\n\r\nexport class EXT_texture_exr implements GLTFLoaderPlugin {\r\n\r\n\tprivate parser: GLTFParser;\r\n\tprivate name: string;\r\n\r\n\tconstructor(parser: GLTFParser) {\r\n\r\n\t\tthis.parser = parser;\r\n\t\tthis.name = \"EXT_texture_exr\";\r\n\t\tif (debug) console.log(parser);\r\n\r\n\t}\r\n\r\n\tloadTexture(textureIndex): Promise<Texture> | null {\r\n\r\n\t\tconst name = this.name;\r\n\t\tconst parser = this.parser;\r\n\t\tconst json = parser.json;\r\n\r\n\t\tconst textureDef = json.textures[textureIndex];\r\n\r\n\t\tif (debug) console.log(\"EXT_texture_exr.loadTexture\", textureIndex, textureDef);\r\n\r\n\t\tif (!textureDef.extensions || !textureDef.extensions[name]) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst extension = textureDef.extensions[name];\r\n\r\n\t\t// TODO should the loader be cached here?\r\n\t\tconst loader = new EXRLoader(parser.options.manager);\r\n\r\n\t\tif (debug) console.log(\"EXT_texture_exr.loadTexture\", extension, loader);\r\n\r\n\t\tconst promise = parser.loadTextureImage(textureIndex, extension.source, loader) as Promise<Texture>;\r\n\t\treturn promise;\r\n\t}\r\n}\r\nwindow.addEventListener('unhandledrejection', (_event: PromiseRejectionEvent) => {\r\n});\r\n", "import { Object3D } from \"three\";\r\nimport { GLTF, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_gameobject_data\";\r\n\r\ndeclare type GameObjectData = {\r\n    layers: number,\r\n    visible: boolean,\r\n    tag: string,\r\n    hideFlags: number,\r\n    static: boolean,\r\n    activeSelf: boolean,\r\n    guid: string\r\n}\r\n\r\nexport class NEEDLE_gameobject_data implements GLTFLoaderPlugin {\r\n\r\n    get name(): string {\r\n        return EXTENSION_NAME;\r\n    }\r\n\r\n    private parser: GLTFParser;\r\n\r\n    constructor(parser: GLTFParser) {\r\n        this.parser = parser;\r\n    }\r\n\r\n    // private _lastIndex: number = -1;\r\n    // createNodeAttachment(index): null {\r\n    //     if (index === this._lastIndex) return null;\r\n    //     this._lastIndex = index;\r\n    //     const node = this.parser.json.nodes[index];\r\n    //     if (node && node.extensions) {\r\n    //         const ext = node.extensions[EXTENSION_NAME];\r\n    //         if (ext)\r\n    //             this.findAndApplyExtensionData(index, ext);\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    // private lastIndex: number = -1;\r\n    afterRoot(_result: GLTF): Promise<void> | null {\r\n        // console.log(\"AFTER ROOT\", _result);\r\n        const promises: Promise<void>[] = [];\r\n        for (let index = 0; index < this.parser.json.nodes.length; index++) {\r\n            const node = this.parser.json.nodes[index];\r\n            if (node && node.extensions) {\r\n                const ext = node.extensions[EXTENSION_NAME];\r\n                if (ext)\r\n                {\r\n                    const p = this.findAndApplyExtensionData(index, ext);\r\n                    promises.push(p);\r\n                }\r\n            }\r\n        }\r\n        return Promise.all(promises).then(() => { });\r\n    }\r\n\r\n    private async findAndApplyExtensionData(nodeId: number, ext: GameObjectData) {\r\n        const obj = await this.parser.getDependency(\"node\", nodeId);\r\n        if (obj) {\r\n            this.applyExtensionData(obj, ext);\r\n        }\r\n    }\r\n\r\n\r\n    private applyExtensionData(node: Object3D, ext: GameObjectData) {\r\n        node.userData.layer = ext.layers;\r\n        node.layers.disableAll();\r\n        node.layers.set(ext.layers);\r\n        node.userData.tag = ext.tag;\r\n        node.userData.hideFlags = ext.hideFlags;\r\n        node.userData.static = ext.static;\r\n        node.visible = ext.activeSelf;\r\n        node[\"guid\"] = ext.guid;\r\n        // console.log(node.name, ext.activeSelf, node);\r\n    }\r\n}", "import { AmbientLight, Color, HemisphereLight } from \"three\";\r\nimport { GLTF, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { SourceIdentifier } from \"../engine_types\";\r\nimport { Behaviour, GameObject } from \"../../engine-components/Component\";\r\nimport { AmbientMode, DefaultReflectionMode } from \"../engine_rendererdata\";\r\nimport { LightmapType } from \"./NEEDLE_lightmaps\";\r\nimport { getParam } from \"../engine_utils\";\r\nimport { Context } from \"../engine_setup\";\r\nimport { LightProbe } from \"three\";\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_lighting_settings\";\r\nconst debug = getParam(\"debugenvlight\");\r\n\r\nexport type LightingSettings = {\r\n    ambientMode: AmbientMode;\r\n    ambientIntensity: number,\r\n    ambientLight: number[],\r\n    ambientTrilight: Array<number[]>,\r\n    environmentReflectionSource: DefaultReflectionMode;\r\n}\r\n\r\nexport class NEEDLE_lighting_settings implements GLTFLoaderPlugin {\r\n\r\n    get name(): string {\r\n        return EXTENSION_NAME;\r\n    }\r\n\r\n    private parser: GLTFParser;\r\n    private sourceId: SourceIdentifier;\r\n    private context: Context;\r\n\r\n    constructor(parser: GLTFParser, sourceId: SourceIdentifier, context: Context) {\r\n        this.parser = parser;\r\n        this.sourceId = sourceId;\r\n        this.context = context;\r\n    }\r\n\r\n    afterRoot(_result: GLTF): Promise<void> | null {\r\n\r\n        const extensions = this.parser.json.extensions;\r\n        if (extensions) {\r\n            const ext: LightingSettings = extensions[EXTENSION_NAME];\r\n            if (ext) {\r\n                if (debug)\r\n                    console.log(ext);\r\n                // add a component to the root of the scene\r\n                const settings = GameObject.addNewComponent(_result.scene, SceneLightSettings, false);\r\n                settings.sourceId = this.sourceId;\r\n                settings.ambientIntensity = ext.ambientIntensity;\r\n                settings.ambientLight = new Color().fromArray(ext.ambientLight);\r\n                if (Array.isArray(ext.ambientTrilight))\r\n                    settings.ambientTrilight = ext.ambientTrilight.map(c => new Color().fromArray(c));\r\n                settings.ambientMode = ext.ambientMode;\r\n                settings.environmentReflectionSource = ext.environmentReflectionSource;\r\n                if (this.context) this.context.rendererData.registerSceneLightSettings(settings);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n// exists once per gltf scene root (if it contains reflection)\r\n// when enabled it does currently automatically set the reflection\r\n// this might not be desireable\r\nexport class SceneLightSettings extends Behaviour {\r\n\r\n    ambientMode: AmbientMode = AmbientMode.Skybox;\r\n    ambientLight?: Color;\r\n    ambientTrilight?: Color[];\r\n    ambientIntensity: number = 1;\r\n    environmentReflectionSource: DefaultReflectionMode = DefaultReflectionMode.Skybox;\r\n\r\n    private _hasReflection: boolean = false;\r\n    private _ambientLightObj?: AmbientLight;\r\n    // used when skybox is used to support ambient intensity for \"non custom shaders\"\r\n    private _lightProbeObj?: LightProbe;\r\n\r\n    awake() {\r\n        if (this.sourceId) {\r\n            const type = this.environmentReflectionSource === DefaultReflectionMode.Skybox ? LightmapType.Skybox : LightmapType.Reflection;\r\n            const tex = this.context.lightmaps.tryGet(this.sourceId, type, 0);\r\n            this._hasReflection = tex !== null && tex !== undefined;\r\n            if (tex)\r\n                this.context.rendererData.registerReflection(this.sourceId, tex);\r\n        }\r\n\r\n        if (debug) {\r\n            window.addEventListener(\"keydown\", evt => {\r\n                switch (evt.key) {\r\n                    case \"l\":\r\n                        this.enabled = !this.enabled;\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        const isActive = this.context.mainCameraComponent?.sourceId === this.sourceId;\r\n        if (debug)\r\n            console.log(\"Enable scene lighting\", this.sourceId, isActive, this, this.context.mainCameraComponent?.sourceId);\r\n        if (!isActive) {\r\n            if(debug) console.warn(\"This is no active?!\", this.context.mainCameraComponent?.sourceId)\r\n            // this.enabled = false;\r\n            // return;\r\n        }\r\n        if (this.ambientMode == AmbientMode.Flat) {\r\n            if (this.ambientLight && !this._ambientLightObj) {\r\n                this._ambientLightObj = new AmbientLight(this.ambientLight, Math.PI * this.ambientIntensity);\r\n            }\r\n            if (this._ambientLightObj) {\r\n                this.gameObject.add(this._ambientLightObj)\r\n            }\r\n            if (this._lightProbeObj) this._lightProbeObj.removeFromParent();\r\n        }\r\n        else if (this.ambientMode === AmbientMode.Trilight) {\r\n            if (this.ambientTrilight) {\r\n                const ground = this.ambientTrilight[0];\r\n                const sky = this.ambientTrilight[this.ambientTrilight.length - 1];\r\n                const hemisphere = new HemisphereLight(sky, ground, this.ambientIntensity);\r\n                this.gameObject.add(hemisphere)\r\n            }\r\n        }\r\n        else {\r\n            if (this._ambientLightObj)\r\n                this._ambientLightObj.removeFromParent();\r\n\r\n            // create light probe object\r\n            if (!this._lightProbeObj) {\r\n                if (this.sourceId) {\r\n                    this.context.rendererData.getSceneLightingData(this.sourceId).then(data => {\r\n                        if (debug)\r\n                            console.log(data);\r\n                        if (!data) return;\r\n                        this._lightProbeObj = data.lightProbe;\r\n                        if (this.enabled && !this.destroyed && this._lightProbeObj) {\r\n                            this.scene.add(this._lightProbeObj);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (this.enabled && this.destroyed && this._lightProbeObj) {\r\n                    this.scene.add(this._lightProbeObj);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.sourceId)\r\n            this.context.rendererData.enableReflection(this.sourceId);\r\n\r\n    }\r\n\r\n    onDisable() {\r\n        if (debug)\r\n            console.log(\"disable\", this.sourceId, this);\r\n        if (this._lightProbeObj) this._lightProbeObj.removeFromParent();\r\n        if(this._ambientLightObj) this._ambientLightObj.removeFromParent();\r\n        if (this.sourceId)\r\n            this.context.rendererData.disableReflection();\r\n    }\r\n}", "\r\nimport { SourceIdentifier } from \"../engine_types\";\r\nimport { GLTF, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { IComponent as Component, IRenderer } from \"../engine_types\";\r\n\r\nimport {\r\n    // stencil funcs\r\n    NeverStencilFunc,\r\n    LessStencilFunc,\r\n    EqualStencilFunc,\r\n    LessEqualStencilFunc,\r\n    GreaterStencilFunc,\r\n    NotEqualStencilFunc,\r\n    GreaterEqualStencilFunc,\r\n    AlwaysStencilFunc,\r\n    // stencil ops\r\n    ZeroStencilOp,\r\n    KeepStencilOp,\r\n    ReplaceStencilOp,\r\n    IncrementStencilOp,\r\n    DecrementStencilOp,\r\n    IncrementWrapStencilOp,\r\n    DecrementWrapStencilOp,\r\n    InvertStencilOp,\r\n} from \"three\";\r\nimport { getParam } from \"../engine_utils\";\r\n\r\nconst debug = getParam(\"debugstencil\");\r\n\r\nfunction matchesLayer(stencilLayer: number, comp: Component): boolean {\r\n    return (stencilLayer & 1 << comp.layer) != 0;\r\n}\r\n\r\n\r\ndeclare type StencilSettingsModel = {\r\n    name: string;\r\n    event: number;\r\n    index: number;\r\n    queue: number;\r\n    layer: number;\r\n    value: number;\r\n    compareFunc: number;\r\n    passOp: number;\r\n    failOp: number;\r\n    zFailOp: number;\r\n}\r\n\r\nexport class NEEDLE_render_objects implements GLTFLoaderPlugin {\r\n\r\n    private static stencils: { [key: string]: StencilSettingsModel[] } = {};\r\n\r\n    static applyStencil(obj?: IRenderer | null) {\r\n        if (!obj) return;\r\n        const source = obj.sourceId;\r\n        if (debug)\r\n            console.log(source, NEEDLE_render_objects.stencils);\r\n        if (!source) return;\r\n        const settings = NEEDLE_render_objects.stencils[source];\r\n        if (!settings) return;\r\n        for (let i = settings.length - 1; i >= 0; i--) {\r\n            const stencil: StencilSettingsModel = settings[i];\r\n            if (matchesLayer(stencil.layer, obj)) {\r\n                if (debug)\r\n                    console.log(stencil);\r\n                const mat = obj.sharedMaterial?.clone();\r\n                if (mat) {\r\n                    obj.sharedMaterial = mat;\r\n                    // you can have 50 renderer features per event until this breaks\r\n                    obj.gameObject.renderOrder = stencil.event * 1000 + stencil.index * 50;\r\n\r\n                    mat.stencilWrite = true;\r\n                    mat.stencilWriteMask = 255;\r\n                    mat.stencilFuncMask = 255;\r\n                    mat.stencilRef = stencil.value;\r\n                    mat.stencilFunc = stencil.compareFunc;\r\n                    mat.stencilZPass = stencil.passOp;\r\n                    mat.stencilFail = stencil.failOp;\r\n                    mat.stencilZFail = stencil.zFailOp;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private parser: GLTFParser;\r\n    private source: SourceIdentifier;\r\n\r\n    constructor(parser: GLTFParser, source: SourceIdentifier) {\r\n        this.parser = parser;\r\n        this.source = source;\r\n    }\r\n\r\n    afterRoot(_result: GLTF): Promise<void> | null {\r\n\r\n        const extensions = this.parser.json.extensions;\r\n        if (extensions) {\r\n            const ext = extensions[EXTENSION_NAME];\r\n            if (ext) {\r\n                if (debug)\r\n                    console.log(ext);\r\n                const stencils = ext.stencil;\r\n                if (stencils && Array.isArray(stencils)) {\r\n                    for (const stencil of stencils) {\r\n                        const obj: StencilSettingsModel = { ...stencil };\r\n                        obj.compareFunc = ToThreeCompareFunction(obj.compareFunc);\r\n                        obj.passOp = ToThreeStencilOp(obj.passOp);\r\n                        obj.failOp = ToThreeStencilOp(obj.failOp);\r\n                        obj.zFailOp = ToThreeStencilOp(obj.zFailOp);\r\n\r\n                        if (!NEEDLE_render_objects.stencils[this.source])\r\n                            NEEDLE_render_objects.stencils[this.source] = [];\r\n                        NEEDLE_render_objects.stencils[this.source].push(obj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nenum StencilOp {\r\n    Keep = 0,\r\n    Zero = 1,\r\n    Replace = 2,\r\n    IncrementSaturate = 3,\r\n    DecrementSaturate = 4,\r\n    Invert = 5,\r\n    IncrementWrap = 6,\r\n    DecrementWrap = 7,\r\n}\r\n\r\nenum CompareFunction {\r\n    Disabled,\r\n    Never,\r\n    Less,\r\n    Equal,\r\n    LessEqual,\r\n    Greater,\r\n    NotEqual,\r\n    GreaterEqual,\r\n    Always,\r\n}\r\n\r\nfunction ToThreeStencilOp(op: StencilOp): number {\r\n    switch (op) {\r\n        case StencilOp.Keep:\r\n            return KeepStencilOp;\r\n        case StencilOp.Zero:\r\n            return ZeroStencilOp;\r\n        case StencilOp.Replace:\r\n            return ReplaceStencilOp;\r\n        case StencilOp.IncrementSaturate:\r\n            return IncrementStencilOp;\r\n        case StencilOp.DecrementSaturate:\r\n            return DecrementStencilOp;\r\n        case StencilOp.IncrementWrap:\r\n            return IncrementWrapStencilOp;\r\n        case StencilOp.DecrementWrap:\r\n            return DecrementWrapStencilOp;\r\n        case StencilOp.Invert:\r\n            return InvertStencilOp;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction ToThreeCompareFunction(func: CompareFunction): number {\r\n    switch (func) {\r\n        case CompareFunction.Never:\r\n            return NeverStencilFunc;\r\n        case CompareFunction.Less:\r\n            return LessStencilFunc;\r\n        case CompareFunction.Equal:\r\n            return EqualStencilFunc;\r\n        case CompareFunction.LessEqual:\r\n            return LessEqualStencilFunc;\r\n        case CompareFunction.Greater:\r\n            return GreaterStencilFunc;\r\n        case CompareFunction.NotEqual:\r\n            return NotEqualStencilFunc;\r\n        case CompareFunction.GreaterEqual:\r\n            return GreaterEqualStencilFunc;\r\n        case CompareFunction.Always:\r\n            return AlwaysStencilFunc;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_render_objects\";\r\n\r\n", "import { Material, Texture, TextureLoader } from \"three\";\r\nimport { GLTF, GLTFLoader, GLTFLoaderPlugin, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { SourceIdentifier } from \"../engine_types\";\r\nimport { Context } from \"../engine_setup\";\r\nimport { addDracoAndKTX2Loaders } from \"../engine_loaders\";\r\nimport { getParam, getPath } from \"../engine_utils\";\r\n\r\nexport const EXTENSION_NAME = \"NEEDLE_progressive\";\r\n\r\nconst debug = getParam(\"debugprogressive\");\r\n\r\ndeclare type ProgressiveTextureSchema = {\r\n    uri: string;\r\n    guid: string;\r\n}\r\n\r\nconst debug_toggle_maps: Map<Material, { [key: string]: { original: Texture, lod0: Texture } }> = new Map();\r\nlet show_lod0 = false;\r\nif (debug) {\r\n    window.addEventListener(\"keyup\", evt => {\r\n        if (evt.key === \"p\") {\r\n            debug_toggle_maps.forEach((map, material) => {\r\n                Object.entries(map).forEach(([key, value]) => {\r\n                    if (show_lod0) {\r\n                        material[key] = value.lod0;\r\n                    } else {\r\n                        material[key] = value.original;\r\n                    }\r\n                    material.needsUpdate = true;\r\n                });\r\n            });\r\n            show_lod0 = !show_lod0;\r\n        }\r\n    });\r\n}\r\n\r\nexport class NEEDLE_progressive implements GLTFLoaderPlugin {\r\n\r\n    static assignTextureLOD(context: Context, source: SourceIdentifier | undefined, material: Material, level: number = 0) {\r\n        if (!material) return;\r\n        for (let slot of Object.keys(material)) {\r\n            const val = material[slot];\r\n            if (val?.isTexture === true) {\r\n\r\n                if (debug) console.log(\"-----------\\n\", \"FIND\", material.name, slot, val?.name, val?.userData, val, material);\r\n\r\n                NEEDLE_progressive.getOrLoadTexture(context, source, material, slot, val, level).then(t => {\r\n                    if (t?.isTexture === true) {\r\n\r\n                        if (debug) console.log(\"Assign LOD\", material.name, slot, t.name, t[\"guid\"], material, \"Prev:\", val, \"Now:\", t, \"\\n--------------\");\r\n\r\n                        material[slot] = t;\r\n                        t.needsUpdate = true;\r\n                        material.needsUpdate = true;\r\n\r\n                        if (debug) {\r\n                            let debug_map = debug_toggle_maps.get(material);\r\n                            if (!debug_map) {\r\n                                debug_map = {};\r\n                                debug_toggle_maps.set(material, debug_map);\r\n                            }\r\n                            let entry = debug_map[slot];\r\n                            if (!entry) {\r\n                                entry = debug_map[slot] = { original: val, lod0: t };\r\n                            }\r\n                            entry.lod0 = t;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    get name(): string {\r\n        return EXTENSION_NAME;\r\n    }\r\n\r\n    private parser: GLTFParser;\r\n    private sourceId: SourceIdentifier;\r\n    private context: Context;\r\n\r\n    constructor(parser: GLTFParser, sourceId: SourceIdentifier, context: Context) {\r\n        this.parser = parser;\r\n        this.sourceId = sourceId;\r\n        this.context = context;\r\n    }\r\n\r\n    private _loading: number[] = [];\r\n\r\n    // beforeRoot(): null {\r\n    //     console.log(\"BEFORE ROOT\", this.parser);\r\n    //     return null;\r\n    // }\r\n\r\n    // loadTexture(index: number): Promise<Texture> | null {\r\n    //     console.log(index, this._loading);\r\n    //     if (this._loading.includes(index)) return null;\r\n    //     const textureInfo = this.parser.json.textures[index];\r\n    //     if (debug)\r\n    //         console.log(index, textureInfo);\r\n    //     return null;\r\n    // }\r\n\r\n    afterRoot(gltf: GLTF): null {\r\n        if (debug)\r\n            console.log(\"AFTER\", this.sourceId, gltf);\r\n        this.parser.json.textures?.forEach((textureInfo, index) => {\r\n            if (textureInfo?.extensions) {\r\n                const ext: ProgressiveTextureSchema = textureInfo?.extensions[EXTENSION_NAME];\r\n                if (ext) {\r\n                    const prom = this.parser.getDependency(\"texture\", index);\r\n                    this._loading.splice(this._loading.indexOf(index), 1);\r\n                    prom.then(t => {\r\n                        if (debug) console.log(\"register texture\", t.name, t.uuid, ext);\r\n                        t.userData.deferred = ext;\r\n                        NEEDLE_progressive.cache.set(t.uuid, ext);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    private static cache = new Map<string, ProgressiveTextureSchema>();\r\n    private static resolved: { [key: string]: Texture } = {};\r\n\r\n    private static async getOrLoadTexture(context: Context, source: SourceIdentifier | undefined, material: Material, slot: string, current: Texture, _level: number): Promise<Texture | null> {\r\n\r\n        const key = current.uuid;\r\n        const ext: ProgressiveTextureSchema | undefined = NEEDLE_progressive.cache.get(key);// || current.userData.deferred;\r\n        if (ext) {\r\n            if (debug)\r\n                console.log(key, ext.uri, ext.guid);\r\n            const uri = getPath(source, ext.uri);\r\n            if (uri.endsWith(\".glb\") || uri.endsWith(\".gltf\")) {\r\n                if (!ext.guid) {\r\n                    console.warn(\"missing pointer for glb/gltf texture\", ext);\r\n                    return null;\r\n                }\r\n                const resolveKey = uri + \"_\" + ext.guid;\r\n                if (this.resolved[resolveKey]) {\r\n                    if (debug) console.log(\"Texture has already been loaded: \" + resolveKey, material.name, slot, current.name);\r\n                    return this.resolved[resolveKey];\r\n                }\r\n\r\n                const loader = new GLTFLoader();\r\n                addDracoAndKTX2Loaders(loader, context);\r\n                if (debug) console.log(\"Load \" + uri, material.name, slot, ext.guid);\r\n                const gltf = await loader.loadAsync(uri);\r\n                const parser = gltf.parser;\r\n                if (debug) console.log(\"Loading finished \" + uri, material.name, slot, ext.guid);\r\n                let index = -1;\r\n                let found = false;\r\n                for (const tex of gltf.parser.json.textures) {\r\n                    index++;\r\n                    if (tex?.extensions) {\r\n                        const other: ProgressiveTextureSchema = tex?.extensions[EXTENSION_NAME];\r\n                        if (other?.guid) {\r\n                            if (other.guid === ext.guid) {\r\n                                found = true;\r\n                                break;\r\n                                // if (debug)\r\n                                //     console.log(material.name, slot, \"change \\\"\" + current.name + \"\\\" \u2192 \\\"\" + tex.name + \"\\\"\", uri, index, tex, material);\r\n                                // this.resolved[resolveKey] = tex as Texture;\r\n                                // return tex;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!found)\r\n                    return null;\r\n\r\n                // const index = Number.parseInt(ext.pointer.substring(\"textures/\".length));\r\n                const tex = await parser.getDependency(\"texture\", index);\r\n                tex.encoding = current.encoding;\r\n                if (tex) {\r\n                    tex.guid = ext.guid;\r\n                }\r\n                this.resolved[resolveKey] = tex as Texture;\r\n                if (debug)\r\n                    console.log(material.name, slot, \"change \\\"\" + current.name + \"\\\" \u2192 \\\"\" + tex.name + \"\\\"\", uri, index, tex, material, resolveKey);\r\n                return tex;\r\n            }\r\n            else {\r\n                if (debug) console.log(\"Load texture from uri: \" + uri);\r\n                const loader = new TextureLoader();\r\n                const loaded = await loader.loadAsync(uri);\r\n                if (loaded && debug) {\r\n                    console.log(ext, loaded);\r\n                }\r\n                else console.warn(\"failed loading\", uri);\r\n                return loaded;\r\n            }\r\n            // loader.then((h: Texture) => {\r\n            //     // console.log(t, h);\r\n            //     // t.image = h.image;\r\n            //     // // this.context.renderer.copyTextureToTexture(new Vector2(0, 0), h, t);\r\n            //     // // console.log(h);\r\n\r\n            //     // // t.source = h.source;\r\n            //     // // t.version++;\r\n            //     // t.width = h.width;\r\n            //     // t.height = h.height;\r\n            //     // t.needsUpdate = true;\r\n            // });\r\n        }\r\n        else {\r\n            if (debug)\r\n                console.warn(\"unknown uuid\", current.name, current.uuid, current);\r\n        }\r\n        return null;\r\n    }\r\n}", "import { NEEDLE_techniques_webgl } from \"./NEEDLE_techniques_webgl\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { NEEDLE_components } from \"./NEEDLE_components\";\r\nimport { EXT_texture_exr } from \"./EXT_texture_exr\";\r\nimport { NEEDLE_gameobject_data } from \"./NEEDLE_gameobject_data\";\r\n// import { NEEDLE_timeline } from \"./NEEDLE_timeline\";\r\n// import { NEEDLE_animator_controller } from \"./NEEDLE_animator_controller\";\r\nimport { NEEDLE_persistent_assets } from \"./NEEDLE_persistent_assets\";\r\n// import { KHR_animation_pointer } from \"./KHR_animation_pointer\";\r\nimport { NEEDLE_lightmaps } from \"../extensions/NEEDLE_lightmaps\";\r\nimport { SourceIdentifier } from \"../engine_types\";\r\nimport { Context } from \"../engine_setup\";\r\nimport { NEEDLE_lighting_settings } from \"./NEEDLE_lighting_settings\";\r\nimport { NEEDLE_render_objects } from \"./NEEDLE_render_objects\";\r\nimport { NEEDLE_progressive } from \"./NEEDLE_progressive\";\r\n\r\nexport function registerComponentExtension(loader: GLTFLoader): NEEDLE_components {\r\n    const ext = new NEEDLE_components();\r\n    loader.register(p => {\r\n        ext.parser = p;\r\n        return ext;\r\n    });\r\n    return ext;\r\n}\r\n\r\nclass PointerResolver {\r\n    resolvePath(path: string) {\r\n        if (path.includes('/extensions/builtin_components/'))\r\n            return path.replace('/extensions/builtin_components/', '/userData/components/');\r\n        if (path.includes('extensions/builtin_components/'))\r\n            return path.replace('extensions/builtin_components/', '/userData/components/');\r\n        return path;\r\n    }\r\n}\r\n\r\nexport function registerExtensions(loader: GLTFLoader, context: Context, sourceId: SourceIdentifier) {\r\n    loader.register(p => new NEEDLE_gameobject_data(p));\r\n    loader.register(p => new NEEDLE_persistent_assets(p));\r\n    loader.register(p => new NEEDLE_lightmaps(p, context.lightmaps, sourceId));\r\n    loader.register(p => new NEEDLE_lighting_settings(p, sourceId, context));\r\n    loader.register(p => new NEEDLE_techniques_webgl(p, sourceId));\r\n    loader.register(p => new NEEDLE_render_objects(p, sourceId));\r\n    loader.register(p => new NEEDLE_progressive(p, sourceId, context));\r\n    loader.register(p => new EXT_texture_exr(p));\r\n\r\n    const setPointerResolverFunction = loader[\"setAnimationPointerResolver\"];\r\n    if (typeof setPointerResolverFunction === \"function\")\r\n        setPointerResolverFunction.bind(loader)(new PointerResolver());\r\n\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as utils from \"./../engine/engine_three_utils\";\r\nimport { Vector3 } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\nexport class AlignmentConstraint extends Behaviour {\r\n\r\n    @serializable(GameObject)\r\n    private from: GameObject | undefined;\r\n    @serializable(GameObject)\r\n    private to: GameObject | undefined;\r\n\r\n    private width: number = 0;\r\n    private centered: boolean = true;\r\n    private _centerPos!: Vector3;\r\n\r\n    awake(): void {\r\n        this._centerPos = new Vector3();\r\n    }\r\n\r\n    update() {\r\n        if (!this.from || !this.to) return;\r\n        \r\n        const fromWorldPos = utils.getWorldPosition(this.from).clone();\r\n        const toWorldPos = utils.getWorldPosition(this.to).clone();\r\n        const dist = fromWorldPos.distanceTo(toWorldPos);\r\n        \r\n        this._centerPos.copy(fromWorldPos);\r\n        this._centerPos.add(toWorldPos);\r\n        this._centerPos.multiplyScalar(0.5);\r\n\r\n        utils.setWorldPosition(this.gameObject, this.centered ? this._centerPos : fromWorldPos);\r\n        this.gameObject.lookAt(utils.getWorldPosition(this.to).clone());\r\n        this.gameObject.scale.set(this.width, this.width, dist);\r\n    }\r\n}", "import { Mathf } from \"../engine/engine_math\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\nclass Keyframe {\r\n    @serializable()\r\n    time!: number;\r\n    @serializable()\r\n    value!: number;\r\n    @serializable()\r\n    inTangent!: number;\r\n    @serializable()\r\n    inWeight!: number;\r\n    @serializable()\r\n    outTangent!: number;\r\n    @serializable()\r\n    outWeight!: number;\r\n    @serializable()\r\n    weightedMode!: number;\r\n}\r\n\r\nexport class AnimationCurve {\r\n\r\n    @serializable(Keyframe)\r\n    keys!: Array<Keyframe>;\r\n\r\n    get duration(): number {\r\n        if (!this.keys || this.keys.length == 0) return 0;\r\n        return this.keys[this.keys.length - 1].time;\r\n    }\r\n\r\n    evaluate(time: number): number {\r\n        if (!this.keys || this.keys.length == 0) return 0;\r\n        // if the first keyframe time is already greater than the time we want to evaluate\r\n        // then we dont need to iterate\r\n        if (this.keys[0].time >= time) {\r\n            return this.keys[0].value;\r\n        }\r\n        for (let i = 0; i < this.keys.length; i++) {\r\n            const kf = this.keys[i];\r\n            if (kf.time <= time) {\r\n                const hasNextKeyframe = i+1 < this.keys.length;\r\n                if (hasNextKeyframe) {\r\n                    const nextKf = this.keys[i+1];\r\n                    // if the next\r\n                    if(nextKf.time < time) continue;\r\n                    const t = Mathf.remap(time, kf.time, nextKf.time, 0, 1);\r\n                    return Mathf.lerp(kf.value, nextKf.value, t);\r\n                }\r\n                else {\r\n                    return kf.value;\r\n                }\r\n            }\r\n        }\r\n        return this.keys[this.keys.length - 1].value;\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { AudioSource } from \"./AudioSource\";\r\nimport { Camera } from \"./Camera\";\r\n\r\n\r\nexport class AudioListener extends Behaviour {\r\n\r\n    get listener(): THREE.AudioListener {\r\n        if (this._listener == null)\r\n            this._listener = new THREE.AudioListener();\r\n        return this._listener;\r\n    }\r\n\r\n    private _listener: THREE.AudioListener | null = null;\r\n\r\n    awake() {\r\n        AudioSource.registerWaitForAllowAudio(() => {\r\n            const listener = this.listener;\r\n            if (listener == null) return;\r\n            // if the listener is already parented to some object d0nt change it\r\n            if (listener.parent) return;\r\n\r\n            const cam = GameObject.getComponentInParent(this.gameObject, Camera);\r\n            if (cam) {\r\n                cam.cam.add(listener);\r\n            }\r\n            else\r\n                this.gameObject.add(listener);\r\n        });\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { PositionalAudioHelper } from 'three/examples/jsm/helpers/PositionalAudioHelper.js';\r\nimport { AudioListener } from \"./AudioListener\";\r\nimport * as utils from \"../engine/engine_utils\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Application, ApplicationEvents } from \"../engine/engine_application\";\r\n\r\n\r\nconst debug = utils.getParam(\"debugaudio\");\r\n\r\nexport enum AudioRolloffMode {\r\n    /// <summary>\r\n    ///   <para>Use this mode when you want a real-world rolloff.</para>\r\n    /// </summary>\r\n    Logarithmic = 0,\r\n    /// <summary>\r\n    ///   <para>Use this mode when you want to lower the volume of your sound over the distance.</para>\r\n    /// </summary>\r\n    Linear = 1,\r\n    /// <summary>\r\n    ///   <para>Use this when you want to use a custom rolloff.</para>\r\n    /// </summary>\r\n    Custom = 2,\r\n}\r\n\r\n\r\nexport class AudioSource extends Behaviour {\r\n\r\n    private static _didCallBeginWaitForUserInteraction: boolean = false;\r\n    public static get userInteractionRegistered(): boolean {\r\n\r\n        if (!AudioSource._didCallBeginWaitForUserInteraction) {\r\n            AudioSource._didCallBeginWaitForUserInteraction = true;\r\n            AudioSource._beginWaitForUserInteraction();\r\n        }\r\n        return AudioSource._userInteractionRegistered;\r\n    }\r\n\r\n    private static callbacks: Function[] = [];\r\n    public static registerWaitForAllowAudio(cb: Function) {\r\n        if (cb !== null) {\r\n            if (this._userInteractionRegistered) {\r\n                cb();\r\n                return;\r\n            }\r\n            if (this.callbacks.indexOf(cb) === -1)\r\n                this.callbacks.push(cb);\r\n            if (!AudioSource._didCallBeginWaitForUserInteraction) {\r\n                AudioSource._didCallBeginWaitForUserInteraction = true;\r\n                AudioSource._beginWaitForUserInteraction();\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _userInteractionRegistered: boolean = false;\r\n    private static _beginWaitForUserInteraction(cb: Function | null = null) {\r\n        if (this._userInteractionRegistered) {\r\n            if (cb) cb();\r\n            return;\r\n        }\r\n        if (cb !== null)\r\n            this.registerWaitForAllowAudio(cb);\r\n        const callback = () => {\r\n            if (fn == undefined) return;\r\n            if (AudioSource._userInteractionRegistered) return;\r\n            AudioSource._userInteractionRegistered = true;\r\n            console.log(\"registered interaction, can play audio now\");\r\n            document.removeEventListener('pointerdown', fn);\r\n            document.removeEventListener('click', fn);\r\n            document.removeEventListener('dragstart', fn);\r\n            document.removeEventListener('touchstart', fn);\r\n            for (const cb of this.callbacks) {\r\n                cb();\r\n            }\r\n            this.callbacks.length = 0;\r\n        };\r\n        let fn = callback.bind(this);\r\n        document.addEventListener('pointerdown', fn);\r\n        document.addEventListener('click', fn);\r\n        document.addEventListener('dragstart', fn);\r\n        document.addEventListener('touchstart', fn);\r\n    }\r\n\r\n    @serializable()\r\n    clip: string = \"\";\r\n\r\n    @serializable()\r\n    playOnAwake: boolean = false;\r\n\r\n    @serializable()\r\n    get loop(): boolean {\r\n        if (this.sound) this._loop = this.sound.getLoop();\r\n        return this._loop;\r\n    }\r\n    set loop(val: boolean) {\r\n        this._loop = val;\r\n        if (this.sound) this.sound.setLoop(val);\r\n    }\r\n    @serializable()\r\n    get spatialBlend(): number {\r\n        return this._spatialBlend;\r\n    }\r\n    set spatialBlend(val: number) {\r\n        if (val === this._spatialBlend) return;\r\n        this._spatialBlend = val;\r\n        this._needUpdateSpatialDistanceSettings = true;\r\n    }\r\n    @serializable()\r\n    get minDistance(): number {\r\n        return this._minDistance;\r\n    }\r\n    set minDistance(val: number) {\r\n        if (this._minDistance === val) return;\r\n        this._minDistance = val;\r\n        this._needUpdateSpatialDistanceSettings = true;\r\n    }\r\n    @serializable()\r\n    get maxDistance(): number {\r\n        return this._maxDistance;\r\n    }\r\n    set maxDistance(val: number) {\r\n        if (this._maxDistance === val) return;\r\n        this._maxDistance = val;\r\n        this._needUpdateSpatialDistanceSettings = true;\r\n    }\r\n\r\n    private _spatialBlend: number = 0;\r\n    private _minDistance: number = 1;\r\n    private _maxDistance: number = 100;\r\n\r\n    @serializable()\r\n    get volume(): number { return this._volume; }\r\n    set volume(val: number) {\r\n        this._volume = val;\r\n        if (this.sound) {\r\n            if (debug) console.log(this.name, \"audio set volume\", val);\r\n            this.sound.setVolume(val);\r\n        }\r\n    }\r\n    private _volume: number = 1;\r\n\r\n    @serializable()\r\n    rollOffMode: AudioRolloffMode = 0;\r\n\r\n\r\n    private _loop: boolean = false;\r\n    private sound: THREE.PositionalAudio | null = null;\r\n    private helper: PositionalAudioHelper | null = null;\r\n    private wasPlaying = false;\r\n    private audioLoader: THREE.AudioLoader | null = null;\r\n    private shouldPlay: boolean = false;\r\n    // set this from audio context time, used to set clip offset when setting \"time\" property\r\n    // there is maybe a better way to set a audio clip current time?!\r\n    private _lastClipStartedLoading: string | null = null;\r\n\r\n    public get Sound(): THREE.PositionalAudio | null {\r\n        if (!this.sound && AudioSource._userInteractionRegistered) {\r\n            const listener = GameObject.getComponent(this.context.mainCamera, AudioListener) ?? GameObject.findObjectOfType(AudioListener, this.context);\r\n            if (listener?.listener) {\r\n                this.sound = new THREE.PositionalAudio(listener.listener);\r\n                this.gameObject.add(this.sound);\r\n            }\r\n        }\r\n        return this.sound;\r\n    }\r\n\r\n    public get ShouldPlay(): boolean { return this.shouldPlay; }\r\n\r\n    private _focusCallback?: any;\r\n\r\n    awake() {\r\n        this.audioLoader = new THREE.AudioLoader();\r\n        if (this.playOnAwake) this.shouldPlay = true;\r\n\r\n        window.addEventListener('visibilitychange', _evt => {\r\n            switch (document.visibilityState) {\r\n                case \"hidden\":\r\n                    this.wasPlaying = this.isPlaying;\r\n                    this.pause();\r\n                    break;\r\n                case \"visible\":\r\n                    if (this.wasPlaying) this.play();\r\n                    break;\r\n            }\r\n        });\r\n\r\n        this._focusCallback = () => {\r\n            if (this.enabled && this.playOnAwake && !this.isPlaying && AudioSource._userInteractionRegistered) {\r\n                this.play();\r\n            }\r\n        };\r\n\r\n        this.context.application.addEventListener(ApplicationEvents.Visible, this._focusCallback);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.context.application.removeEventListener(ApplicationEvents.Visible, this._focusCallback);\r\n    }\r\n\r\n\r\n    onEnable(): void {\r\n        if (!AudioSource._userInteractionRegistered) {\r\n            AudioSource._beginWaitForUserInteraction(() => {\r\n                if (this.enabled && !this.destroyed && this.shouldPlay)\r\n                    this.loadAndPlay(this.clip);\r\n            });\r\n        }\r\n        else if (this.playOnAwake && this.context.application.isVisible) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        this.stop();\r\n    }\r\n\r\n    private lerp = (x, y, a) => x * (1 - a) + y * a;\r\n\r\n    private onLoaded(buffer) {\r\n        if (debug) console.log(\"audio buffer loaded\");\r\n        AudioSource.registerWaitForAllowAudio(() => {\r\n            if (debug)\r\n                console.log(\"finished loading\", buffer);\r\n\r\n            const sound = this.Sound;\r\n            if (!sound) {\r\n                console.warn(\"Failed getting sound\", this.name);\r\n                return;\r\n            }\r\n            if (sound.isPlaying)\r\n                sound.stop();\r\n\r\n            sound.setBuffer(buffer);\r\n            sound.loop = this._loop;\r\n            sound.setVolume(this.volume);\r\n            sound.autoplay = this.shouldPlay;\r\n            // sound.setDistanceModel('linear');\r\n            // sound.setRolloffFactor(1);\r\n            this.applySpatialDistanceSettings();\r\n            // sound.setDirectionalCone(180, 360, 0.1);\r\n            if (sound.isPlaying)\r\n                sound.stop();\r\n\r\n            if (debug) console.log(this.name, this.shouldPlay, AudioSource.userInteractionRegistered, this);\r\n\r\n            if (this.shouldPlay && AudioSource._userInteractionRegistered)\r\n                this.play();\r\n        });\r\n    }\r\n\r\n    private applySpatialDistanceSettings() {\r\n        const sound = this.sound;\r\n        if (!sound) return;\r\n        this._needUpdateSpatialDistanceSettings = false;\r\n        const dist = this.lerp(10 * this._maxDistance / Math.max(0.0001, this.spatialBlend), this._minDistance, this.spatialBlend);\r\n        if (debug) console.log(this.name, this._minDistance, this._maxDistance, this.spatialBlend, \"Ref distance=\" + dist);\r\n        sound.setRefDistance(dist);\r\n        sound.setMaxDistance(Math.max(0.01, this._maxDistance));\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/PannerNode/distanceModel\r\n        switch (this.rollOffMode) {\r\n            case AudioRolloffMode.Logarithmic:\r\n                sound.setDistanceModel('exponential');\r\n                break;\r\n            case AudioRolloffMode.Linear:\r\n                sound.setDistanceModel('linear');\r\n                break;\r\n            case AudioRolloffMode.Custom:\r\n                break;\r\n        }\r\n\r\n        if (this.spatialBlend > 0) {\r\n            if (debug && !this.helper) {\r\n                this.helper = new PositionalAudioHelper(sound, sound.getRefDistance());\r\n                sound.add(this.helper);\r\n            }\r\n        }\r\n        else if (this.helper && this.helper.parent) {\r\n            this.helper.removeFromParent();\r\n        }\r\n    }\r\n\r\n    private loadAndPlay(clip?: string) {\r\n        if (clip)\r\n            this.clip = clip;\r\n        if (this.clip) {\r\n            if (debug)\r\n                console.log(this.clip);\r\n            if (this.clip.endsWith(\".mp3\") || this.clip.endsWith(\".wav\")) {\r\n                if (!this.audioLoader)\r\n                    this.audioLoader = new THREE.AudioLoader();\r\n                this.shouldPlay = true;\r\n                if (this._lastClipStartedLoading === this.clip) {\r\n                    if (debug) console.log(\"Is currently loading:\", this._lastClipStartedLoading, this)\r\n                    return;\r\n                }\r\n                this._lastClipStartedLoading = this.clip;\r\n                if (debug)\r\n                    console.log(\"load audio\", this.clip);\r\n                this.audioLoader.load(this.clip, this.onLoaded.bind(this), () => { }, console.error);\r\n            }\r\n        }\r\n    }\r\n\r\n    play(clip: string | undefined = undefined) {\r\n        if (!this.audioLoader || !this.sound || (clip && clip !== this.clip)) {\r\n            this.loadAndPlay(clip);\r\n            return;\r\n        }\r\n\r\n        this.shouldPlay = true;\r\n        this._hasEnded = false;\r\n        if (debug)\r\n            console.log(\"play\", this.sound?.getVolume(), this.sound);\r\n        if (this.sound && !this.sound.isPlaying) {\r\n            this.sound.play();\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (debug) console.log(\"Pause\", this);\r\n        this._hasEnded = true;\r\n        this.shouldPlay = false;\r\n        if (this.sound && this.sound.isPlaying && this.sound.source) {\r\n            this._lastContextTime = this.sound?.context.currentTime;\r\n            this.sound.pause();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (debug) console.log(\"Pause\", this);\r\n        this._hasEnded = true;\r\n        this.shouldPlay = false;\r\n        if (this.sound && this.sound.source) {\r\n            this._lastContextTime = this.sound?.context.currentTime;\r\n            if (debug)\r\n                console.log(this._lastContextTime)\r\n            this.sound.stop();\r\n        }\r\n    }\r\n\r\n    private _lastContextTime: number = 0;\r\n\r\n    get isPlaying(): boolean { return this.sound?.isPlaying ?? false; }\r\n    set isPlaying(_: boolean) { }\r\n\r\n    get time(): number { return this.sound?.source ? (this.sound.source?.context.currentTime - this._lastContextTime + this.sound.offset) : 0; }\r\n    set time(val: number) {\r\n        if (this.sound) {\r\n            if (val === this.sound.offset) return;\r\n            const wasPlaying = this.isPlaying;\r\n            this.stop();\r\n            this.sound.offset = val;\r\n            if (wasPlaying)\r\n                this.play();\r\n        }\r\n    }\r\n\r\n    private _hasEnded: boolean = true;\r\n    private _needUpdateSpatialDistanceSettings: boolean = false;\r\n\r\n    update() {\r\n        if (this.helper) {\r\n            if (this.isPlaying)\r\n                this.helper.update();\r\n            this.helper.visible = this.isPlaying;\r\n        }\r\n\r\n        if (this._needUpdateSpatialDistanceSettings) {\r\n            this.applySpatialDistanceSettings();\r\n        }\r\n\r\n        if (this.sound && !this.sound.isPlaying && this.shouldPlay && !this._hasEnded) {\r\n            this._hasEnded = true;\r\n            if (debug)\r\n                console.log(\"Audio clip ended\", this.clip);\r\n            this.sound.dispatchEvent({ type: 'ended', target: this });\r\n        }\r\n\r\n        // this.gameObject.position.x = Math.sin(time.time) * 2;\r\n        // this.gameObject.position.z = Math.cos(time.time * .5) * 2;\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\n// import { OrbitControls } from \"./OrbitControls\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { RGBAColor } from \"./js-extensions/RGBAColor\";\r\nimport { PerspectiveCamera, Ray } from \"three\";\r\nimport { XRSessionMode } from \"../engine/engine_setup\";\r\nimport { ICamera } from \"../engine/engine_types\"\r\nimport { showBalloonMessage } from \"../engine/debug/debug\";\r\nimport { getWorldPosition } from \"../engine/engine_three_utils\";\r\nimport { Gizmos } from \"../engine/engine_gizmos\";\r\n\r\nexport enum ClearFlags {\r\n    Skybox = 1,\r\n    SolidColor = 2,\r\n    Uninitialized = 4,\r\n}\r\n\r\nconst debug = getParam(\"debugcam\");\r\nconst debugscreenpointtoray = getParam(\"debugscreenpointtoray\");\r\n\r\nexport class Camera extends Behaviour implements ICamera {\r\n\r\n    get isCamera() {\r\n        return true;\r\n    }\r\n\r\n    get aspect(): number {\r\n        if (this._cam instanceof PerspectiveCamera) return this._cam.aspect;\r\n        return (this.context.domWidth / this.context.domHeight);\r\n    }\r\n\r\n    get fieldOfView(): number { return this._fov; }\r\n    @serializable()\r\n    set fieldOfView(val) {\r\n        const changed = this._fov != val;\r\n        this._fov = val;\r\n        if (changed && this._cam) {\r\n            if (this._cam instanceof THREE.PerspectiveCamera) {\r\n                this._cam.fov = this._fov;\r\n                this._cam.updateProjectionMatrix();\r\n            }\r\n        }\r\n    }\r\n\r\n    get nearClipPlane(): number { return this._nearClipPlane; }\r\n    @serializable()\r\n    set nearClipPlane(val) {\r\n        const changed = this._nearClipPlane != val;\r\n        this._nearClipPlane = val;\r\n        if (this._cam && changed) {\r\n            this._cam.near = val;\r\n            this._cam.updateProjectionMatrix();\r\n        }\r\n    }\r\n    private _nearClipPlane: number = 0.1;\r\n\r\n    get farClipPlane(): number { return this._farClipPlane; }\r\n    @serializable()\r\n    set farClipPlane(val) {\r\n        const changed = this._farClipPlane != val;\r\n        this._farClipPlane = val;\r\n        if (this._cam && changed) {\r\n            this._cam.far = val;\r\n            this._cam.updateProjectionMatrix();\r\n        }\r\n    }\r\n    private _farClipPlane: number = 1000;\r\n\r\n    @serializable()\r\n    public get clearFlags(): ClearFlags {\r\n        return this._clearFlags;\r\n    }\r\n    public set clearFlags(val: ClearFlags) {\r\n        if (val === this._clearFlags) return;\r\n        this._clearFlags = val;\r\n        this.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n    @serializable()\r\n    public orthographic: boolean = false;\r\n    @serializable()\r\n    public orthographicSize: number = 5;\r\n\r\n    @serializable()\r\n    public ARBackgroundAlpha: number = 0;\r\n\r\n    @serializable()\r\n    public set cullingMask(val: number) {\r\n        this._cullingMask = val;\r\n        if (this._cam) {\r\n            this._cam.layers.mask = val;\r\n        }\r\n    }\r\n    public get cullingMask(): number {\r\n        if (this._cam) return this._cam.layers.mask;\r\n        return this._cullingMask;\r\n    }\r\n    private _cullingMask: number = 0xffffffff;\r\n\r\n    @serializable()\r\n    public set backgroundBlurriness(val: number | undefined) {\r\n        if(val === this._backgroundBlurriness) return;\r\n        if (val === undefined)\r\n            this._backgroundBlurriness = undefined;\r\n        else\r\n            this._backgroundBlurriness = Math.min(Math.max(val, 0), 1);\r\n        this.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n    public get backgroundBlurriness() : number | undefined {\r\n        return this._backgroundBlurriness;\r\n    }\r\n    private _backgroundBlurriness?: number;\r\n\r\n    @serializable()\r\n    public set backgroundIntensity(val: number | undefined) {\r\n        if(val === this._backgroundIntensity) return;\r\n        if (val === undefined)\r\n            this._backgroundIntensity = undefined;\r\n        else\r\n            this._backgroundIntensity = Math.min(Math.max(val, 0), 10);\r\n        this.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n    public get backgroundIntensity() : number | undefined {\r\n        return this._backgroundIntensity;\r\n    }\r\n    private _backgroundIntensity?: number;\r\n\r\n    @serializable(RGBAColor)\r\n    public get backgroundColor(): RGBAColor | null {\r\n        return this._backgroundColor ?? null;\r\n    }\r\n    public set backgroundColor(val: RGBAColor | null) {\r\n        if (!val) return;\r\n        if (!this._backgroundColor) {\r\n            if (!val.clone) return;\r\n            this._backgroundColor = val.clone();\r\n        }\r\n        else this._backgroundColor.copy(val);\r\n        // set background color to solid if provided color doesnt have any alpha channel\r\n        if (val.alpha === undefined) this._backgroundColor.alpha = 1;\r\n        this.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n\r\n    private _backgroundColor?: RGBAColor;\r\n    private _fov: number = 60;\r\n    private _cam: THREE.PerspectiveCamera | THREE.OrthographicCamera | null = null;\r\n    private _clearFlags: ClearFlags = ClearFlags.SolidColor;\r\n    private _skybox?: CameraSkybox;\r\n\r\n\r\n    public get cam(): THREE.PerspectiveCamera | THREE.OrthographicCamera {\r\n        if (this.activeAndEnabled)\r\n            this.buildCamera();\r\n        return this._cam!;\r\n    }\r\n\r\n\r\n    private static _origin: THREE.Vector3 = new THREE.Vector3();\r\n    private static _direction: THREE.Vector3 = new THREE.Vector3();\r\n    public screenPointToRay(x: number, y: number, ray?: Ray): Ray {\r\n        let cam = this.cam;\r\n        const origin = Camera._origin;\r\n        origin.set(x, y, -1);\r\n        this.context.input.convertScreenspaceToRaycastSpace(origin);\r\n        if(debugscreenpointtoray) console.log(\"screenPointToRay\", x.toFixed(2), y.toFixed(2), \"now:\", origin.x.toFixed(2), origin.y.toFixed(2), \"isInXR:\" + this.context.isInXR);\r\n        origin.z = -1;\r\n        origin.unproject(cam);\r\n        const dir = Camera._direction.set(origin.x, origin.y, origin.z);\r\n        const camPosition = getWorldPosition(cam);\r\n        dir.sub(camPosition);\r\n        dir.normalize();\r\n        if (ray) {\r\n            ray.set(camPosition, dir);\r\n            return ray;\r\n        }\r\n        else {\r\n            return new Ray(camPosition.clone(), dir.clone());\r\n        }\r\n    }\r\n\r\n    awake() {\r\n        if (!this.sourceId) {\r\n            console.warn(\"Camera has no source - the camera should be exported inside a gltf\", this.name);\r\n        }\r\n\r\n        if(debugscreenpointtoray){\r\n            window.addEventListener(\"pointerdown\", evt => {\r\n                const px = evt.clientX;\r\n                const py = evt.clientY;\r\n                console.log(\"touch\", px.toFixed(2), py.toFixed(2))\r\n                const ray = this.screenPointToRay(px, py);\r\n                const randomHex = \"#\" + Math.floor(Math.random()*16777215).toString(16);\r\n                Gizmos.DrawRay(ray.origin, ray.direction, randomHex, 10);\r\n            });\r\n        }\r\n    }\r\n\r\n    onEnable(): void {\r\n        if (debug) console.log(this);\r\n        this.buildCamera();\r\n        if (this.tag == \"MainCamera\" || !this.context.mainCameraComponent) {\r\n            this.context.setCurrentCamera(this);\r\n        }\r\n        this.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n\r\n    onDisable() {\r\n        this.context.removeCamera(this);\r\n    }\r\n\r\n    buildCamera() {\r\n        if (this._cam) return;\r\n\r\n        const cameraAlreadyCreated = this.gameObject[\"isCamera\"];\r\n\r\n        // TODO: when exporting from blender we already have a camera in the children\r\n        let cam: THREE.PerspectiveCamera | THREE.OrthographicCamera | null = null;\r\n        if (cameraAlreadyCreated) {\r\n            cam = this.gameObject as any;\r\n            cam?.layers.enableAll();\r\n        }\r\n        else\r\n            cam = this.gameObject.children[0] as THREE.PerspectiveCamera | THREE.OrthographicCamera | null;\r\n        if (cam && cam.isCamera) {\r\n            if (cam.type === \"PerspectiveCamera\") {\r\n                cam.fov = this._fov;\r\n                cam.near = this._nearClipPlane;\r\n                cam.far = this._farClipPlane;\r\n                cam.updateProjectionMatrix();\r\n            }\r\n        }\r\n        else if (!this.orthographic) {\r\n            cam = new THREE.PerspectiveCamera(this.fieldOfView, window.innerWidth / window.innerHeight, this._nearClipPlane, this._farClipPlane);\r\n            cam.fov = this.fieldOfView;\r\n        }\r\n        else {\r\n            const factor = this.orthographicSize * 100;\r\n            cam = new THREE.OrthographicCamera(window.innerWidth / -factor, window.innerWidth / factor, window.innerHeight / factor, window.innerHeight / -factor, this._nearClipPlane, this._farClipPlane);\r\n        }\r\n        this._cam = cam;\r\n\r\n        this._cam.layers.mask = this._cullingMask;\r\n\r\n        if (this.tag == \"MainCamera\") {\r\n            this.context.setCurrentCamera(this);\r\n        }\r\n    }\r\n\r\n    applyClearFlagsIfIsActiveCamera() {\r\n        if (debug)\r\n            showBalloonMessage(\"apply Camera clear flags\");\r\n        if (this._cam && this.context.mainCameraComponent === this) {\r\n            switch (this._clearFlags) {\r\n                case ClearFlags.Skybox:\r\n                    if (this.environmentIsTransparent()) {\r\n                        if (!this.ARBackgroundAlpha || this.ARBackgroundAlpha < 0.001) {\r\n                            this.context.scene.background = null;\r\n                            this.context.renderer.setClearColor(0x000000, 0);\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.enableSkybox();\r\n\r\n                    if (this._backgroundBlurriness !== undefined)\r\n                        this.context.scene.backgroundBlurriness = this._backgroundBlurriness;\r\n                    if (this._backgroundIntensity !== undefined)\r\n                        //@ts-ignore\r\n                        this.context.scene.backgroundIntensity = this._backgroundIntensity;\r\n\r\n                    break;\r\n                case ClearFlags.SolidColor:\r\n                    if (this._backgroundColor) {\r\n                        let alpha = this._backgroundColor.alpha;\r\n                        // when in WebXR use ar background alpha override or set to 0\r\n                        if (this.environmentIsTransparent()) {\r\n                            alpha = this.ARBackgroundAlpha ?? 0;\r\n                        }\r\n                        this.context.scene.background = null;\r\n                        this.context.renderer.setClearColor(this._backgroundColor, alpha);\r\n                    }\r\n                    break;\r\n                case ClearFlags.Uninitialized:\r\n                    this.context.scene.background = null\r\n                    this.context.renderer.setClearColor(0x000000, 0);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private environmentIsTransparent(): boolean {\r\n        const session = this.context.renderer.xr?.getSession();\r\n        if (!session) return false;\r\n        const environmentBlendMode = session.environmentBlendMode;\r\n        if (debug)\r\n            showBalloonMessage(\"Environment blend mode: \" + environmentBlendMode + \" on \" + navigator.userAgent);\r\n        const transparent = environmentBlendMode === 'additive' || environmentBlendMode === 'alpha-blend';\r\n\r\n        if (this.context.xrSessionMode === XRSessionMode.ImmersiveAR) {\r\n            if (environmentBlendMode === \"opaque\") {\r\n                // workaround for Quest 2 returning opaque when it should be alpha-blend\r\n                // check user agent if this is the Quest browser and return true if so\r\n                if (navigator.userAgent?.includes(\"OculusBrowser\")) {\r\n                    return true;\r\n                }\r\n                // Mozilla WebXR Viewer\r\n                else if (navigator.userAgent?.includes(\"Mozilla\") && navigator.userAgent?.includes(\"Mobile WebXRViewer/v2\")) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return transparent;\r\n    }\r\n\r\n\r\n    private enableSkybox() {\r\n        if (!this._skybox)\r\n            this._skybox = new CameraSkybox(this);\r\n        this._skybox.enable();\r\n    }\r\n}\r\n\r\n\r\nclass CameraSkybox {\r\n\r\n    private _camera: Camera;\r\n    private _skybox?: THREE.Texture;\r\n\r\n    get context() { return this._camera?.context; }\r\n\r\n    constructor(camera: Camera) {\r\n        this._camera = camera;\r\n    }\r\n\r\n    enable() {\r\n        this._skybox = this.context.lightmaps.tryGetSkybox(this._camera.sourceId) as THREE.Texture;\r\n        if (!this._skybox) {\r\n            console.warn(\"Failed to load/find skybox texture\", this);\r\n        }\r\n        else if(this.context.scene.background !== this._skybox) {\r\n            if (debug)\r\n                console.log(\"Set skybox\", this._camera, this._skybox);\r\n            this._skybox.encoding = THREE.sRGBEncoding;\r\n            this._skybox.mapping = THREE.EquirectangularReflectionMapping;\r\n            this.context.scene.background = this._skybox;\r\n        }\r\n    }\r\n\r\n}", "import { Mathf } from \"../../engine/engine_math\";\r\nimport { Color } from \"three\";\r\n\r\nexport class RGBAColor extends Color {\r\n    alpha: number = 1;\r\n\r\n    get isRGBAColor() { return true; }\r\n\r\n    constructor(r: number, g: number, b: number, a: number) {\r\n        super(r, g, b);\r\n        this.alpha = a;\r\n    }\r\n\r\n    clone(): this {\r\n        const cloned = super.clone();\r\n        cloned.alpha = this.alpha;\r\n        return cloned;\r\n    }\r\n\r\n    copy(col : RGBAColor | Color){\r\n        super.copy(col);\r\n        if(\"alpha\" in col && typeof col.alpha === \"number\") {\r\n            this.alpha = col.alpha;\r\n        }\r\n        else if(typeof col[\"a\"] === \"number\") this.alpha = col[\"a\"];\r\n        return this;\r\n    }\r\n\r\n    lerp(color: Color, alpha: number): this {\r\n        const rgba = color as RGBAColor;\r\n        if(rgba.alpha) this.alpha = Mathf.lerp(this.alpha, rgba.alpha, alpha);\r\n        return super.lerp(color, alpha);\r\n    }\r\n\r\n    lerpColors(color1: Color, color2: Color, alpha: number): this {\r\n        const rgba1 = color1 as RGBAColor;\r\n        const rgba2 = color2 as RGBAColor;\r\n        if(rgba1.alpha && rgba2.alpha) this.alpha = Mathf.lerp(rgba1.alpha, rgba2.alpha, alpha);\r\n        return super.lerpColors(color1, color2, alpha);\r\n    }\r\n\r\n    multiply(color: Color): this {\r\n        const rgba = color as RGBAColor;\r\n        if(rgba.alpha) this.alpha = this.alpha * rgba.alpha;\r\n        return super.multiply(color);\r\n    }\r\n}", "import { GLTF, GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from \"three\";\r\nimport * as utils from \"../engine/engine_utils\"\r\n// import * as object from \"../engine/engine_gltf_builtin_components\";\r\nimport * as loaders from \"../engine/engine_loaders\"\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { GameObject } from \"./Component\";\r\nimport { download_file } from \"../engine/engine_web_api\";\r\nimport { getLoader } from \"../engine/engine_gltf\";\r\nimport { InstantiateOptions } from \"../engine/engine_gameobject\";\r\n\r\nconst debug = utils.getParam(\"debugavatar\");\r\n\r\nexport class AvatarModel {\r\n    root: THREE.Object3D;\r\n    head: THREE.Object3D;\r\n    leftHand: THREE.Object3D | null;\r\n    rigthHand: THREE.Object3D | null;\r\n\r\n\r\n    get isValid(): boolean {\r\n        return this.head !== null && this.head !== undefined;\r\n    }\r\n\r\n    constructor(root: THREE.Object3D, head: THREE.Object3D, leftHand: THREE.Object3D | null, rigthHand: THREE.Object3D | null) {\r\n        this.root = root;\r\n        this.head = head;\r\n        this.leftHand = leftHand;\r\n        this.rigthHand = rigthHand;\r\n        this.root?.traverse(h => h.layers.set(2));\r\n        // this.head?.traverse(h => h.layers.set(2));\r\n        // this.leftHand?.traverse(h => h.layers.set(2));\r\n        // this.rigthHand?.traverse(h => h.layers.set(2));\r\n    }\r\n}\r\n\r\nexport class AvatarLoader {\r\n\r\n    private readonly avatarRegistryUrl: string | null = null;\r\n    // private loader: GLTFLoader | null;\r\n    // private avatarModelCache: Map<string, AvatarModel | null> = new Map<string, AvatarModel | null>();\r\n\r\n    public async getOrCreateNewAvatarInstance(context: Context, avatarId: string | THREE.Object3D): Promise<AvatarModel | null> {\r\n\r\n        if (!avatarId) {\r\n            console.error(\"Can not create avatar: failed to provide id or root object\");\r\n            return null;\r\n        }\r\n\r\n        let root: THREE.Object3D | null = null;\r\n        if (typeof avatarId === \"string\") {\r\n            root = await this.loadAvatar(context, avatarId);\r\n            if (!root) {\r\n                const opts = new InstantiateOptions();\r\n                // opts.parent = context.scene.uuid;\r\n                root = GameObject.instantiate(utils.tryFindObject(avatarId, context.scene), opts);\r\n            }\r\n        }\r\n        else root = avatarId;\r\n\r\n        if (!root) {\r\n            return null;\r\n        }\r\n        const model = this.findAvatar(root);\r\n        // model.assignRandomColors();\r\n        // this.cacheModel(avatarId, model);\r\n\r\n        if (model.isValid) {\r\n            if (debug)\r\n                console.log(\"[Custom Avatar] valid config\", avatarId, debug ? model : \"\");\r\n            return model;\r\n        }\r\n        else {\r\n            console.warn(\"[Custom Avatar] config isn't valid\", avatarId, debug ? model : \"\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    private async loadAvatar(context: Context, avatarId: string): Promise<THREE.Object3D | null> {\r\n\r\n        console.assert(avatarId !== undefined && avatarId !== null && typeof avatarId === \"string\", \"Avatar id must not be null\");\r\n        if (avatarId.length <= 0) return null;\r\n        if (!avatarId) return null;\r\n\r\n        if (debug)\r\n            console.log(\"[Custom Avatar] \" + avatarId + \", loading...\");\r\n        // should probably be done by the server?!\r\n        if (!avatarId.endsWith(\".glb\"))\r\n            avatarId += \".glb\";\r\n\r\n\r\n        // for the demo we use the storage backend we uploaded the avatar to (by file drop)\r\n        if (this.avatarRegistryUrl === null) {\r\n            // try loading avatar from local file\r\n            const download_res = await fetch(\"./\" + avatarId);\r\n            let bin: ArrayBuffer | null = null;\r\n            if (download_res.ok) {\r\n                const blob = await download_res.blob();\r\n                if (blob) bin = await blob.arrayBuffer();\r\n            }\r\n            if (!bin) {\r\n                bin = await download_file(avatarId, avatarId, 0, \"no url here go away\", true);\r\n                if (!bin) return null;\r\n            }\r\n\r\n            const gltf = await getLoader().parseSync(context, bin, null!, 0);\r\n            return gltf?.scene ?? null;\r\n        }\r\n\r\n\r\n        // if (this.avatarModelCache.has(avatarId)) {\r\n        //     console.log(\"[Custom Avatar] \" + avatarId + \", found in cache\");\r\n        //     return new Promise((res, _) => {\r\n        //         var model = this.avatarModelCache.get(avatarId)?.createNewInstance();\r\n        //         res(model);\r\n        //     });\r\n        // }\r\n        // return null;\r\n\r\n        const loader = new GLTFLoader();\r\n        loaders.addDracoAndKTX2Loaders(loader, context);\r\n\r\n        // TODO: cache binary (fetch finary from model gallery and use binary method)\r\n        return new Promise((resolve, _reject) => {\r\n            const url = this.avatarRegistryUrl + \"/\" + avatarId;\r\n            loader.load(url,\r\n                async gltf => {\r\n                    await getLoader().createBuiltinComponents(context, url, gltf, null, undefined);\r\n                    resolve(gltf.scene);\r\n                },\r\n                progress => {\r\n                    if (debug)\r\n                        console.log(\"[Custom Avatar] \" + (progress.loaded / progress.total * 100) + '% loaded of ' + (progress.total / 1024) + \"kB\");\r\n                },\r\n                error => {\r\n                    console.error(\"[Custom Avatar] \" + \"Error when loading: \" + error);\r\n                    resolve(null);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private cacheModel(_id: string, _model: AvatarModel) {\r\n        // this.avatarModelCache.set(id, model);\r\n    }\r\n\r\n    // TODO this should be burned to the ground once \uD83E\uDD1E we have proper extras that define object relations.\r\n    private findAvatar(obj: THREE.Object3D): AvatarModel {\r\n\r\n        const root: THREE.Object3D = obj;\r\n        let searchIn = root;\r\n        // some GLTFs have a \"scene\" root it seems, others don't, we skip the root here if there's only one child\r\n        if (searchIn.children.length == 1)\r\n            searchIn = obj.children[0];\r\n        let head = this.findAvatarPart(searchIn, [\"head\"]);\r\n\r\n        const leftHand = this.findAvatarPart(searchIn, [\"left\", \"hand\"]);\r\n        const rightHand = this.findAvatarPart(searchIn, [\"right\", \"hand\"]);\r\n\r\n        if (!head) {\r\n            // very last fallback, entire root is used as head\r\n            head = root;\r\n\r\n            // normalize size, if the object isn't properly setup the scale might be totally off\r\n            const boundsSize = new THREE.Vector3();\r\n            new THREE.Box3().setFromObject(head).getSize(boundsSize);\r\n            const maxAxis = Math.max(boundsSize.x, boundsSize.y, boundsSize.z);\r\n            console.warn(\"[Custom Avatar] \" + \"Normalizing head scale, it's too big: \" + maxAxis + \" meters! Should be < 0.3m\");\r\n            if (maxAxis > 0.3) {\r\n                head.scale.multiplyScalar(1.0 / maxAxis * 0.3);\r\n            }\r\n        }\r\n\r\n        const model = new AvatarModel(root, head, leftHand, rightHand);\r\n        return model;\r\n    }\r\n\r\n\r\n    private findAvatarPart(obj: THREE.Object3D, searchString: string[]): THREE.Object3D | null {\r\n\r\n        const name = obj.name.toLowerCase();\r\n        let matchesAll = true;\r\n        for (const str of searchString) {\r\n            if (!matchesAll) break;\r\n            if (name.indexOf(str) === -1)\r\n                matchesAll = false;\r\n        }\r\n        if (matchesAll) return obj;\r\n\r\n        if (obj.children) {\r\n            for (const child of obj.children) {\r\n                const found = this.findAvatarPart(child, searchString);\r\n                if (found) return found;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private handleCustomAvatarErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as params from \"../engine/engine_default_parameters\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { AxesHelper as _AxesHelper } from \"three\";\r\n\r\nexport class AxesHelper extends Behaviour {\r\n    @serializable()\r\n    public length: number = 1;\r\n    @serializable()\r\n    public depthTest: boolean = true;\r\n    @serializable()\r\n    public isGizmo:boolean = true;\r\n\r\n    private _axes: THREE.AxesHelper | null = null;\r\n\r\n    onEnable(): void {\r\n        if (this.isGizmo && !params.showGizmos) return;\r\n        if (!this._axes)\r\n            this._axes = new _AxesHelper(this.length);\r\n        this.gameObject.add(this._axes);\r\n        const mat: any = this._axes.material;\r\n        if (mat) {\r\n            if (mat.depthTest !== undefined)\r\n                mat.depthTest = this.depthTest;\r\n        }\r\n    }\r\n\r\n    onDisable(): void {\r\n        if (!this._axes) return;\r\n        this.gameObject.remove(this._axes);\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as utils from \"./../engine/engine_three_utils\";\r\nimport * as THREE from \"three\"\r\n\r\nexport class BasicIKConstraint extends Behaviour {\r\n\r\n    private from!: GameObject;\r\n    private to!: GameObject;\r\n    private hint!: GameObject;\r\n    private desiredDistance: number = 1;\r\n\r\n    onEnable(): void {\r\n        // console.log(this);\r\n    }\r\n\r\n    update() {\r\n        if (!this.from || !this.to || !this.hint) return;\r\n\r\n        // console.log(this);\r\n\r\n        // find center\r\n        let toPos = utils.getWorldPosition(this.to).clone();\r\n        let fromPos = utils.getWorldPosition(this.from).clone();\r\n        let dist = toPos.distanceTo(fromPos);\r\n\r\n        let dir0 = toPos.clone();\r\n        dir0.sub(fromPos);\r\n        let center = fromPos.clone();\r\n        center.add(toPos);\r\n        center.multiplyScalar(0.5);\r\n        \r\n        // find direction we should offset in\r\n        let hintDir = utils.getWorldPosition(this.hint).clone();\r\n        hintDir.sub(center);\r\n        \r\n        let offsetDir = new THREE.Vector3();\r\n        offsetDir.crossVectors(hintDir, dir0);\r\n        offsetDir.crossVectors(dir0, offsetDir);\r\n        offsetDir.normalize();\r\n\r\n        let halfDist = dist * 0.5;\r\n        let stretchDistance = Math.max(this.desiredDistance, halfDist);\r\n        let offsetLength = Math.sqrt(stretchDistance * stretchDistance - halfDist * halfDist);\r\n        \r\n        let resultPos = offsetDir.clone();\r\n        resultPos.multiplyScalar(offsetLength);\r\n        resultPos.add(center);\r\n        utils.setWorldPosition(this.gameObject, resultPos);\r\n\r\n        let lookPos = center.clone();\r\n        lookPos.sub(offsetDir);\r\n        this.gameObject.lookAt(lookPos);\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { CreateWireCube, Gizmos } from \"../engine/engine_gizmos\";\r\nimport { getWorldPosition, getWorldScale } from \"../engine/engine_three_utils\";\r\n\r\nconst gizmos = getParam(\"gizmos\");\r\nconst debug = getParam(\"debugboxhelper\");\r\n\r\nexport class BoxHelperComponent extends Behaviour {\r\n\r\n    private box: THREE.Box3 | null = null;\r\n    private static testBox: THREE.Box3 = new THREE.Box3();\r\n    private _lastMatrixUpdateFrame: number = -1;\r\n    private static _position: THREE.Vector3 = new THREE.Vector3();\r\n    private static _size: THREE.Vector3 = new THREE.Vector3(.01, .01, .01);\r\n\r\n    public isInBox(obj: THREE.Object3D, scaleFactor?: number): boolean | undefined {\r\n        if (!obj) return undefined;\r\n\r\n        // if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\r\n        // if (!obj.geometry.boundingBox) return undefined;\r\n\r\n        if (!this.box) {\r\n            this.box = new THREE.Box3();\r\n        }\r\n\r\n\r\n        if (obj.type === \"Mesh\") {\r\n            BoxHelperComponent.testBox.setFromObject(obj);\r\n        }\r\n        else if (obj.type === \"Group\") {\r\n            BoxHelperComponent.testBox.makeEmpty();\r\n            if (obj.children.length > 0) {\r\n                for (let i = 0; i < obj.children.length; i++) {\r\n                    const ch = obj.children[i];\r\n                    if (ch.type === \"Mesh\") {\r\n                        BoxHelperComponent.testBox.expandByObject(obj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const wp = getWorldPosition(obj, BoxHelperComponent._position);\r\n            const size = getWorldScale(obj, BoxHelperComponent._size);\r\n            if (scaleFactor !== undefined) size.multiplyScalar(scaleFactor);\r\n            BoxHelperComponent.testBox.setFromCenterAndSize(wp, size);\r\n        }\r\n\r\n        this.updateBox();\r\n        const intersects = this.box?.intersectsBox(BoxHelperComponent.testBox);\r\n        if (intersects) {\r\n            if (debug)\r\n                Gizmos.DrawBox3(BoxHelperComponent.testBox, 0xff0000, 5);\r\n        }\r\n        return intersects;\r\n    }\r\n\r\n    public intersects(box: THREE.Box3): boolean {\r\n        if (!box) return false;\r\n        return this.updateBox(false).intersectsBox(box);\r\n    }\r\n\r\n    public updateBox(force: boolean = false): THREE.Box3 {\r\n        if (!this.box) {\r\n            this.box = new THREE.Box3();\r\n        }\r\n        if (force || this.context.time.frameCount != this._lastMatrixUpdateFrame) {\r\n            const firstUpdate = this._lastMatrixUpdateFrame < 0;\r\n            this._lastMatrixUpdateFrame = this.context.time.frameCount;\r\n            const updateParents: boolean = firstUpdate; // updating parents seems to cause falsely calculated positions sometimes?\r\n            const wp = getWorldPosition(this.gameObject, BoxHelperComponent._position, updateParents);\r\n            const size = getWorldScale(this.gameObject, BoxHelperComponent._size);\r\n            this.box.setFromCenterAndSize(wp, size);\r\n        }\r\n        return this.box;\r\n    }\r\n\r\n\r\n    private _helper: THREE.LineSegments | null = null;\r\n    private _color: THREE.Color | null = null;\r\n\r\n    awake(): void {\r\n        this._helper = null;\r\n        this._color = null;\r\n        this.box = null;\r\n    }\r\n\r\n    public showHelper(col: THREE.ColorRepresentation | null = null, force: boolean = false) {\r\n        if (!gizmos && !force) return;\r\n        if (this._helper) {\r\n            if (col)\r\n                this._color?.set(col);\r\n            this.gameObject.add(this._helper);\r\n            return;\r\n        }\r\n        this._helper = CreateWireCube(col);\r\n        this.gameObject.add(this._helper);\r\n    }\r\n\r\n}", "import { Quaternion, Ray, Vector3 } from \"three\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { serializable } from \"../engine/engine_serialization\";\r\nimport { Collision } from \"../engine/engine_types\";\r\nimport { CapsuleCollider } from \"./Collider\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { Rigidbody } from \"./RigidBody\";\r\nimport { Animator } from \"./Animator\"\r\nimport { RaycastOptions } from \"../engine/engine_physics\";\r\nimport { getWorldPosition } from \"../engine/engine_three_utils\";\r\n\r\nexport class CharacterController extends Behaviour {\r\n\r\n    @serializable(Vector3)\r\n    center: Vector3 = new Vector3(0, 0, 0);\r\n    @serializable()\r\n    radius: number = .5;\r\n    @serializable()\r\n    height: number = 2;\r\n\r\n    private _rigidbody: Rigidbody | null = null;\r\n    get rigidbody(): Rigidbody {\r\n        if (this._rigidbody) return this._rigidbody;\r\n        this._rigidbody = this.gameObject.getComponent(Rigidbody);\r\n        if (!this._rigidbody)\r\n            this._rigidbody = this.gameObject.addNewComponent(Rigidbody) as Rigidbody;\r\n        return this.rigidbody;\r\n    }\r\n\r\n    onEnable() {\r\n        let rb = this.rigidbody;\r\n        let collider = this.gameObject.getComponent(CapsuleCollider);\r\n        if (!collider)\r\n            collider = this.gameObject.addNewComponent(CapsuleCollider) as CapsuleCollider;\r\n        // rb.isKinematic = true;\r\n        collider.center.copy(this.center);\r\n        collider.radius = this.radius;\r\n        collider.height = this.height;\r\n        this.gameObject.rotation.x = 0;\r\n        this.gameObject.rotation.z = 0;\r\n        rb.lockRotationX = true;\r\n        rb.lockRotationY = true;\r\n        rb.lockRotationZ = true;\r\n\r\n        // TODO: this doesnt work yet\r\n        // setInterval(()=>{\r\n        //     this.rigidbody.isKinematic = !this.rigidbody.isKinematic;\r\n        //     console.log(this.rigidbody.isKinematic);\r\n        // }, 1000)\r\n    }\r\n\r\n    move(vec: Vector3) {\r\n        this.gameObject.position.add(vec);\r\n    }\r\n\r\n    private _activeGroundCollisions: Set<Collision> = new Set();\r\n\r\n    onCollisionEnter(col: Collision) {\r\n        for (const contact of col.contacts) {\r\n            // console.log(contact.normal);\r\n            if (contact.normal.y > .1) {\r\n                this._activeGroundCollisions.add(col);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onCollisionExit(col: Collision) {\r\n        this._activeGroundCollisions.delete(col);\r\n    }\r\n\r\n    get isGrounded(): boolean { return this._activeGroundCollisions.size > 0; }\r\n}\r\n\r\nexport class CharacterControllerInput extends Behaviour {\r\n\r\n    @serializable(CharacterController)\r\n    controller?: CharacterController;\r\n\r\n    @serializable()\r\n    movementSpeed: number = 2;\r\n\r\n    @serializable()\r\n    rotationSpeed: number = 2;\r\n\r\n    @serializable()\r\n    jumpForce: number = 1;\r\n\r\n    @serializable(Animator)\r\n    animator?: Animator;\r\n\r\n    lookForward: boolean = true;\r\n\r\n    private _currentSpeed: Vector3 = new Vector3(0, 0, 0);\r\n    private _currentAngularSpeed: Vector3 = new Vector3(0, 0, 0);\r\n\r\n    private _temp: Vector3 = new Vector3(0, 0, 0);\r\n    private _jumpCount: number = 0;\r\n    private _currentRotation!: Quaternion;\r\n\r\n    awake(){\r\n        this._currentRotation = new Quaternion();\r\n    }\r\n\r\n    update() {\r\n\r\n        if (this.controller?.isGrounded) {\r\n            this._jumpCount = 0;\r\n            this.animator?.SetBool(\"doubleJump\", false);\r\n        }\r\n\r\n        const forward = this.context.input.isKeyPressed(\"w\");\r\n        const backward = this.context.input.isKeyPressed(\"s\");\r\n        const rotateLeft = this.context.input.isKeyPressed(\"a\");\r\n        const rotateRight = this.context.input.isKeyPressed(\"d\");\r\n        const jump = this.context.input.isKeyDown(\" \");\r\n        // if (jumpDown) this._jumpDownTime = this.context.time.time;\r\n        // const jumpUp = this.context.input.isKeyUp(\" \");\r\n\r\n        const step = forward ? 1 : 0 + backward ? -1 : 0;\r\n        this._currentSpeed.z += step * this.movementSpeed * this.context.time.deltaTime;\r\n\r\n        // if (!this.controller || this.controller.isGrounded)\r\n        this.animator?.SetBool(\"running\", step != 0);\r\n        this.animator?.SetBool(\"jumping\", this.controller?.isGrounded === true && jump);\r\n\r\n        this._temp.copy(this._currentSpeed);\r\n        this._temp.applyQuaternion(this.gameObject.quaternion);\r\n        if (this.controller) this.controller.move(this._temp);\r\n        else this.gameObject.position.add(this._temp);\r\n\r\n        const rotation = rotateLeft ? 1 : 0 + rotateRight ? -1 : 0;\r\n        this._currentAngularSpeed.y += Mathf.toRadians(rotation * this.rotationSpeed) * this.context.time.deltaTime;\r\n        if (this.lookForward && Math.abs(this._currentAngularSpeed.y) < .01) {\r\n            const forwardVector = this.context.mainCameraComponent!.forward;\r\n            forwardVector.y = 0;\r\n            forwardVector.normalize();\r\n            this._currentRotation.setFromUnitVectors(new Vector3(0, 0, 1), forwardVector);\r\n            this.gameObject.quaternion.slerp(this._currentRotation, this.context.time.deltaTime * 10);\r\n        }\r\n        this.gameObject.rotateY(this._currentAngularSpeed.y);\r\n\r\n\r\n        this._currentSpeed.multiplyScalar(1 - this.context.time.deltaTime * 10);\r\n        this._currentAngularSpeed.y *= 1 - this.context.time.deltaTime * 10;\r\n\r\n        if (this.controller && jump && this.jumpForce > 0) {\r\n            let canJump = this.controller?.isGrounded;\r\n            if (!this.controller?.isGrounded && this._jumpCount === 1) {\r\n                canJump = true;\r\n                this.animator?.SetBool(\"doubleJump\", true);\r\n            }\r\n\r\n            if (canJump) {\r\n                this._jumpCount += 1;\r\n                // TODO: factor in mass\r\n                const rb = this.controller.rigidbody;\r\n                // const fullJumpHoldLength = .1;\r\n                const factor = this._jumpCount === 2 ? 2 : 1;// Mathf.clamp((this.context.time.time - this._jumpDownTime), 0, fullJumpHoldLength) / fullJumpHoldLength;\r\n                rb.applyImpulse(new Vector3(0, 1, 0).multiplyScalar(this.jumpForce * factor));\r\n            }\r\n        }\r\n\r\n        if (this.controller) {\r\n            // TODO: should probably raycast to the ground or check if we're still in the jump animation\r\n            const verticalSpeed = this.controller?.rigidbody.getVelocity().y;\r\n            if (verticalSpeed < -1) {\r\n                if (!this._raycastOptions.ray) this._raycastOptions.ray = new Ray();\r\n                this._raycastOptions.ray.origin.copy(getWorldPosition(this.gameObject));\r\n                this._raycastOptions.ray.direction.set(0, -1, 0);\r\n                const currentLayer = this.layer;\r\n                this.gameObject.layers.disableAll();\r\n                this.gameObject.layers.set(2);\r\n                const hits = this.context.physics.raycast(this._raycastOptions);\r\n                this.gameObject.layers.set(currentLayer);\r\n                if ((hits.length && hits[0].distance > 2 || verticalSpeed < -10)) {\r\n                    this.animator?.SetBool(\"falling\", true);\r\n                }\r\n            }\r\n            else this.animator?.SetBool(\"falling\", false);\r\n        }\r\n    }\r\n\r\n    private _raycastOptions = new RaycastOptions();\r\n}", "import * as THREE from \"three\";\r\nimport { RGBAColor } from \"../engine-components/js-extensions/RGBAColor\";\r\nimport { SerializationContext, TypeSerializer } from \"./engine_serialization_core\";\r\nimport { Behaviour, Component, GameObject } from \"../engine-components/Component\";\r\nimport { debugExtension } from \"./engine_default_parameters\";\r\nimport { CallInfo, EventList } from \"../engine-components/EventList\";\r\nimport { Color, Object3D, Texture, WebGLRenderTarget } from \"three\";\r\nimport { RenderTexture } from \"./engine_texture\";\r\n\r\n// export class SourcePath {\r\n//     src?:string\r\n// };\r\n\r\n// class SourcePathSerializer extends TypeSerializer{\r\n//     constructor(){\r\n//         super(SourcePath);\r\n//     }\r\n//     onDeserialize(data: any, _context: SerializationContext) {\r\n//         if(data.src && typeof data.src === \"string\"){\r\n//             return data.src;\r\n//         }\r\n//     }\r\n//     onSerialize(_data: any, _context: SerializationContext) {\r\n\r\n//     }\r\n// }\r\n// new SourcePathSerializer();\r\n\r\nclass ColorSerializer extends TypeSerializer {\r\n    constructor() {\r\n        super([Color, RGBAColor])\r\n    }\r\n    onDeserialize(data: any): THREE.Color | RGBAColor | void {\r\n        if (data === undefined || data === null) return;\r\n        if (data.a !== undefined) {\r\n            return new RGBAColor(data.r, data.g, data.b, data.a);\r\n        }\r\n        else if (data.alpha !== undefined) {\r\n            return new RGBAColor(data.r, data.g, data.b, data.alpha);\r\n        }\r\n        return new THREE.Color(data.r, data.g, data.b);\r\n    }\r\n    onSerialize(data: any): any | void {\r\n        if (data === undefined || data === null) return;\r\n        if (data.a !== undefined)\r\n            return { r: data.r, g: data.g, b: data.b, a: data.a }\r\n        else\r\n            return { r: data.r, g: data.g, b: data.b }\r\n    }\r\n}\r\nexport const colorSerializer = new ColorSerializer();\r\n\r\ndeclare type ObjectData = {\r\n    node?: number;\r\n    guid?: string;\r\n}\r\nclass ObjectSerializer extends TypeSerializer {\r\n    constructor() {\r\n        super(Object3D);\r\n    }\r\n\r\n    onSerialize(data: any, context: SerializationContext) {\r\n        if (context.objectToNode !== undefined && data.uuid) {\r\n            const node = context.objectToNode[data.uuid];\r\n            if (debugExtension)\r\n                console.log(node, data.name, data.uuid);\r\n            return { node: node }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    onDeserialize(data: ObjectData, context: SerializationContext) {\r\n        if (data) {\r\n            if (data.node !== undefined && context.nodeToObject) {\r\n                const res = context.nodeToObject[data.node];\r\n                if (debugExtension)\r\n                    console.log(\"Deserialized object reference?\", data, res, context?.nodeToObject);\r\n                if (!res) console.warn(\"Did not find node: \" + data.node, context.nodeToObject, context.object);\r\n                return res;\r\n            }\r\n            else if (data.guid) {\r\n                if (!context.context) {\r\n                    console.error(\"Missing context\");\r\n                    return undefined;\r\n                }\r\n                // it is possible that the object is not yet loaded \r\n                // e.g. if we have a scene with multiple gltf files and the first gltf references something in the second gltf\r\n                // we need a way to wait for all components to be created before we can resolve those references\r\n                // independent of order of loading\r\n                let res: GameObject | Behaviour | undefined | null = undefined;\r\n                // first try to search in the current gltf scene (if any)\r\n                let gltfScene = context.gltf?.scene;\r\n                if (gltfScene) {\r\n                    res = GameObject.findByGuid(data.guid, gltfScene);\r\n                }\r\n                // if not found, search in the whole scene\r\n                if (!res) {\r\n                    res = GameObject.findByGuid(data.guid, context.context.scene);\r\n                }\r\n                if (!res) {\r\n                    console.warn(\"Could not resolve object reference\", context.path, data, context.target, context.context.scene);\r\n                    data[\"could_not_resolve\"] = true;\r\n                }\r\n                else if (debugExtension)\r\n                    console.log(\"Deserialized object reference?\", data, res, context?.nodeToObject);\r\n                return res;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport const objectSerializer = new ObjectSerializer();\r\n\r\n\r\nclass ComponentSerializer extends TypeSerializer {\r\n    constructor() {\r\n        super([Component, Behaviour]);\r\n    }\r\n\r\n    onSerialize(data: any, _context: SerializationContext) {\r\n        if (data?.guid) {\r\n            return { guid: data.guid }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    onDeserialize(data: any, context: SerializationContext) {\r\n        if (data?.guid) {\r\n            // TODO: need to serialize some identifier for referenced components as well, maybe just guid?\r\n            // because here the components are created but dont have their former guid assigned\r\n            // and will later in the stack just get a newly generated guid\r\n            if (debugExtension)\r\n                console.log(data.guid, context.root, context.object, context.target);\r\n            // first search within the gltf (e.g. necessary when using AssetReference and loading a gltf without adding it to the scene)\r\n            // if we would search JUST the scene those references would NEVER be resolved\r\n            let res = this.findObjectForGuid(data.guid, context.root);\r\n            if (res) {\r\n                return res;\r\n            }\r\n            if (context.context) {\r\n                // if not found within the gltf use the provided context scene\r\n                // to find references outside\r\n                res = this.findObjectForGuid(data.guid, context.context?.scene);\r\n                if(res) return res;\r\n            }\r\n            console.warn(\"Could not resolve component reference\", context.path, data, context.target);\r\n            data[\"could_not_resolve\"] = true;\r\n            return undefined;\r\n        }\r\n        // if (data?.node !== undefined && context.nodeToObject) {\r\n        //     return context.nodeToObject[data.node];\r\n        // }\r\n        return undefined;\r\n    }\r\n\r\n    findObjectForGuid(guid: string, root: THREE.Object3D): any {\r\n        // recursively search root\r\n        // need to check the root object too\r\n        if (root[\"guid\"] === guid) return root;\r\n\r\n        const res = GameObject.foreachComponent(root, (c) => {\r\n            if (c.guid === guid) return c;\r\n            return undefined;\r\n        }, false);\r\n        if (res !== undefined)\r\n            return res;\r\n\r\n        // if not found, search in children\r\n        for (let i = 0; i < root.children.length; i++) {\r\n            const child = root.children[i];\r\n            const res = this.findObjectForGuid(guid, child);\r\n            if (res) return res;\r\n        }\r\n    }\r\n}\r\nexport const componentSerializer = new ComponentSerializer();\r\n\r\n\r\ndeclare class EventListData {\r\n    type: string;\r\n    calls: Array<EventListCall>;\r\n}\r\ndeclare type EventListCall = {\r\n    method: string,\r\n    target: string,\r\n    argument?: any,\r\n    enabled?: boolean,\r\n}\r\n\r\nclass EventListSerializer extends TypeSerializer {\r\n    constructor() {\r\n        super([EventList]);\r\n    }\r\n\r\n    onSerialize(_data: EventList, _context: SerializationContext): EventListData | undefined {\r\n        console.log(\"TODO: SERIALIZE EVENT\");\r\n        return undefined;\r\n    }\r\n\r\n    onDeserialize(data: EventListData, context: SerializationContext): EventList | undefined | null {\r\n        // TODO: check that we dont accidentally deserialize methods to EventList objects. This is here to make is easy for react-three-fiber to just add props as { () => { } } \r\n        if (typeof data === \"function\") {\r\n            const evtList = new EventList([new CallInfo(data, true)]);\r\n            return evtList;\r\n        }\r\n        else if (data && data.type === \"EventList\") {\r\n            if (debugExtension)\r\n                console.log(\"DESERIALIZE EVENT\", data);\r\n            const fns = new Array<CallInfo>();\r\n            if (data.calls && Array.isArray(data.calls)) {\r\n                for (const call of data.calls) {\r\n                    if (debugExtension)\r\n                        console.log(call);\r\n                    let target = componentSerializer.findObjectForGuid(call.target, context.root);\r\n                    // if the object is not found in the current glb try find it in the whole scene\r\n                    if (!target && context.context?.scene) {\r\n                        target = componentSerializer.findObjectForGuid(call.target, context.context?.scene);\r\n                    }\r\n                    const hasMethod = call.method?.length > 0;\r\n                    if (target && hasMethod) {\r\n                        const printWarningMethodNotFound = () => console.warn(`Could not find method ${call.method} on object ${target.name}`, target, typeof target[call.method]);\r\n                        if (typeof target[call.method] !== \"function\") {\r\n                            let foundMethod = false;\r\n                            // test if the target method is actually a property setter\r\n                            // in which case we want to remove the leading set prefix and see if the method or property exists\r\n                            if (call.method.startsWith(\"set_\") && call.method.length > 4) {\r\n                                call.method = call.method.substring(4);\r\n                                if (target[call.method] !== undefined) foundMethod = true;\r\n                            }\r\n                            if (!foundMethod)\r\n                                printWarningMethodNotFound();\r\n                        }\r\n                    }\r\n                    let fn: CallInfo | undefined;\r\n                    let args = call.argument;\r\n                    if (call.argument !== undefined) {\r\n                        if (typeof args === \"object\") {\r\n                            args = objectSerializer.onDeserialize(call.argument, context);\r\n                            if (!args) args = componentSerializer.onDeserialize(call.argument, context);\r\n                        }\r\n                        fn = new CallInfo(hasMethod ? (...args) => invokeFunction(...args) : undefined, call.enabled);\r\n                    }\r\n                    else\r\n                        fn = new CallInfo(hasMethod ? (...args) => invokeFunction(...args) : undefined, call.enabled);\r\n\r\n\r\n                    // TODO: move this into the event list directly \r\n                    // this scope should not stay in the serializer.\r\n                    // the event list should be able to modify the args that were set in unity if necessary\r\n                    // and pass them on to the component\r\n                    const invokeFunction = (...forwardedArgs) => {\r\n                        const method = target[call.method];\r\n\r\n                        if (typeof method === \"function\") {\r\n                            if (args !== undefined)\r\n                                method?.call(target, args);\r\n                            else // support invoking EventList with any number of arguments (if none were declared in unity)\r\n                                method?.call(target, ...forwardedArgs);\r\n                        }\r\n                        else // the target \"method\" can be a property too\r\n                        {\r\n                            target[call.method] = args;\r\n                        }\r\n                    };\r\n\r\n                    if (!fn.method)\r\n                        fn[\"__debuginfo\"] = context.object?.name;\r\n                    if (!target || !fn.method) {\r\n                        const debugInfo = context.object ? \"Current object: \" + context.object.name + \", \" + context.object[\"guid\"] : null;\r\n                        if (!target)\r\n                            console.warn(\"EventList is missing target - will be ignored\", call.target, debugInfo, data);\r\n                        else console.warn(\"EventList method not found: \\\"\" + call.method + \"\\\" on\", target);\r\n                    }\r\n                    else\r\n                        fns.push(fn);\r\n                }\r\n            }\r\n            const evt: EventList = new EventList(fns);\r\n            if (debugExtension)\r\n                console.log(evt);\r\n\r\n            const eventListOwner = context.target;\r\n            if (eventListOwner !== undefined && context.path !== undefined) {\r\n                evt.setEventTarget(context.path, eventListOwner);\r\n            }\r\n\r\n            return evt;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport const eventListSerializer = new EventListSerializer();\r\n\r\n\r\n\r\nexport class RenderTextureSerializer extends TypeSerializer {\r\n    constructor() {\r\n        super([RenderTexture, WebGLRenderTarget]);\r\n    }\r\n\r\n    onSerialize(_data: any, _context: SerializationContext) {\r\n    }\r\n\r\n    onDeserialize(data: any, context: SerializationContext) {\r\n        if(data instanceof Texture && context.type === RenderTexture){\r\n            const tex = data as Texture;\r\n            const rt = new RenderTexture(tex.image.width, tex.image.height);\r\n            rt.texture = tex;\r\n            return rt;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nnew RenderTextureSerializer();", "\r\nexport class CallInfo {\r\n    method?: Function;\r\n    enabled: boolean;\r\n\r\n    constructor(method?: Function, enabled?: boolean) {\r\n        this.method = method;\r\n        this.enabled = enabled !== undefined ? enabled : true;\r\n    }\r\n\r\n    invoke(...args: any) {\r\n        if (this.enabled === false) return;\r\n        if (!this.method) {\r\n            console.warn(\"No function. Please check you assigned a method to invoke on export\", this);\r\n            return;\r\n        }\r\n        this.method(...args);\r\n    }\r\n\r\n}\r\n\r\nconst isUpperCase = (string) => /^[A-Z]*$/.test(string);\r\n\r\nexport class EventListEvent extends Event { //implements ArrayLike<T> {\r\n\r\n    args?: [];\r\n}\r\n\r\n// UnityEvent is emitted as EventList\r\nexport class EventList {\r\n\r\n    private target?: object;\r\n    private key?: string;\r\n\r\n    // TODO: serialization should not take care of the args but instead give them to the eventlist directly\r\n    // so we can handle passing them on here instead of in the serializer\r\n    // this would also allow us to pass them on to the component EventTarget\r\n\r\n    /** set an event target to try invoke the EventTarget dispatchEvent when this EventList is invoked */\r\n    setEventTarget(key: string, target: object) {\r\n        this.key = key;\r\n        this.target = target;\r\n        if (this.key !== undefined) {\r\n            let temp = \"\";\r\n            let foundFirstLetter = false;\r\n            for (let c of this.key) {\r\n                if (foundFirstLetter && isUpperCase(c))\r\n                    temp += \"-\";\r\n                foundFirstLetter = true;\r\n                temp += c.toLowerCase();\r\n            }\r\n            this.key = temp;\r\n        }\r\n    }\r\n\r\n    private _isInvoking: boolean = false;\r\n\r\n    // TODO: can we make functions serializable?\r\n    private methods: CallInfo[] = [];\r\n\r\n    constructor(evts?: CallInfo[]) {\r\n        this.methods = evts ?? [];\r\n    }\r\n\r\n    invoke(...args: any) {\r\n        if (this._isInvoking) {\r\n            console.warn(\"Circular event invocation detected. Please check your event listeners for circular references.\", this);\r\n            return;\r\n        }\r\n\r\n\r\n        this._isInvoking = true;\r\n        try {\r\n\r\n            // first invoke all the methods that were subscribed to this eventlist\r\n            for (const m of this.methods) {\r\n                m.invoke(...args);\r\n            }\r\n\r\n            // then try to dispatch the event on the object that is owning this eventlist\r\n            // with this we get automatic event listener support for unity events on all componnets\r\n            // so example for a component with a click UnityEvent you can also subscribe to the component like this:\r\n            // myComponent.addEventListener(\"click\", args => {...\")\r\n            if (typeof this.target === \"object\" && typeof this.key === \"string\") {\r\n                const fn = this.target[\"dispatchEvent\"];\r\n                if (typeof fn === \"function\") {\r\n                    const evt = new EventListEvent(this.key);\r\n                    evt.args = args;\r\n                    fn.call(this.target, evt);\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._isInvoking = false;\r\n        }\r\n    }\r\n\r\n    addEventListener(cb: Function): Function {\r\n        this.methods.push(new CallInfo(cb, true));\r\n        return cb;\r\n    }\r\n\r\n    removeEventListener(cb: Function | null | undefined) {\r\n        if (!cb) return;\r\n        for (let i = this.methods.length - 1; i >= 0; i--) {\r\n            if (this.methods[i].method === cb) {\r\n                this.methods[i].enabled = false;\r\n                this.methods.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeAllEventListeners() {\r\n        this.methods.length = 0;\r\n    }\r\n}", "import { WebGLRenderTarget } from \"three\"\r\n\r\nexport class RenderTexture extends WebGLRenderTarget\r\n{\r\n    \r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as THREE from 'three'\r\nimport { getWorldPosition } from \"../engine/engine_three_utils\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Watch } from \"../engine/engine_utils\";\r\nimport { Matrix4, Object3D, Vector3 } from \"three\";\r\nimport { IRigidbody } from \"../engine/engine_types\";\r\nimport { CollisionDetectionMode, RigidbodyConstraints } from \"../engine/engine_physics.types\";\r\nimport { validate } from \"../engine/engine_util_decorator\";\r\nimport { Context, FrameEvent } from \"../engine/engine_setup\";\r\n\r\nclass TransformWatch {\r\n\r\n    get isDirty(): boolean {\r\n        return this.positionChanged || this.rotationChanged;\r\n    }\r\n    positionChanged: boolean = false;\r\n    rotationChanged: boolean = false;\r\n\r\n    position?: { x?: number, y?: number, z?: number };\r\n    quaternion?: { _x?: number, _y?: number, _z?: number, _w?: number };\r\n\r\n    private _positionKeys: string[] = [\"x\", \"y\", \"z\"];\r\n    private _quaternionKeys: string[] = [\"_x\", \"_y\", \"_z\", \"_w\"];\r\n\r\n    reset(clearPreviousValues: boolean = false) {\r\n        this.positionChanged = false;\r\n        this.rotationChanged = false;\r\n        this.mute = false;\r\n\r\n        if (clearPreviousValues) {\r\n            if (this.position)\r\n                for (const key of this._positionKeys)\r\n                    delete this.position[key];\r\n            if (this.quaternion)\r\n                for (const key of this._quaternionKeys)\r\n                    delete this.quaternion[key];\r\n        }\r\n    }\r\n\r\n    syncValues(){\r\n        for(const key of this._positionKeys){\r\n            this.position![key] = this.obj.position[key];\r\n        }\r\n        for(const key of this._quaternionKeys){\r\n            this.quaternion![key] = this.obj.quaternion[key];\r\n        }\r\n    }\r\n\r\n    mute: boolean = false;\r\n\r\n    applyValues() {\r\n        // only apply the values that actually changed\r\n        // since we want to still control all the other values via physics \r\n        if (this.positionChanged && this.position) {\r\n            for (const key of this._positionKeys) {\r\n                const val = this.position[key];\r\n                if (val !== undefined)\r\n                    this.obj.position[key] = val;\r\n            }\r\n        }\r\n        if (this.rotationChanged) {\r\n            if (this.quaternion) {\r\n                for (const key of this._quaternionKeys) {\r\n                    const val = this.quaternion[key];\r\n                    if (val !== undefined)\r\n                        this.obj.quaternion[key] = val;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readonly context: Context;\r\n    readonly obj: Object3D;\r\n    private _positionWatch?: Watch;\r\n    private _rotationWatch?: Watch;\r\n\r\n    constructor(obj: Object3D, context: Context) {\r\n        this.context = context;\r\n        this.obj = obj;\r\n    }\r\n\r\n    start(position: boolean, rotation: boolean) {\r\n        this.reset();\r\n        if (position) {\r\n            if (!this._positionWatch)\r\n                this._positionWatch = new Watch(this.obj.position, [\"x\", \"y\", \"z\"]);\r\n            this._positionWatch.apply();\r\n            this.position = {};\r\n            // this.position = this.obj.position.clone();\r\n            this._positionWatch.subscribeWrite((val, prop) => {\r\n                if (this.context.physics.isUpdating || this.mute) return;\r\n                const prev = this.position![prop];\r\n                if (Math.abs(prev - val) < .00001) return;\r\n                this.position![prop] = val;\r\n                this.positionChanged = true;\r\n            })\r\n        }\r\n        if (rotation) {\r\n            if (!this._rotationWatch)\r\n                this._rotationWatch = new Watch(this.obj.quaternion, [\"_x\", \"_y\", \"_z\", \"_w\"]);\r\n            this._rotationWatch.apply();\r\n            this.quaternion = {};\r\n            // this.quaternion = this.obj.quaternion.clone();\r\n            this._rotationWatch.subscribeWrite((val, prop) => {\r\n                if (this.context.physics.isUpdating || this.mute) return;\r\n                const prev = this.quaternion![prop];\r\n                if (Math.abs(prev - val) < .00001) return;\r\n                this.quaternion![prop] = val;\r\n                this.rotationChanged = true;\r\n            })\r\n        }\r\n\r\n        // detect changes in the parent matrix\r\n        const original = this.obj.matrixWorld.multiplyMatrices.bind(this.obj.matrixWorld);\r\n        const lastParentMatrix = new Matrix4();\r\n        this.obj.matrixWorld[\"multiplyMatrices\"] = (parent: Matrix4, matrix: Matrix4) => {\r\n            if (!lastParentMatrix.equals(parent)) {\r\n                this.positionChanged = true;\r\n                this.rotationChanged = true;\r\n                lastParentMatrix.copy(parent);\r\n            }\r\n            return original(parent, matrix);;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this._positionWatch?.revoke();\r\n        this._rotationWatch?.revoke();\r\n    }\r\n}\r\n\r\n\r\nexport class Rigidbody extends Behaviour implements IRigidbody {\r\n\r\n    @validate()\r\n    @serializable()\r\n    mass: number = 1;\r\n\r\n    @validate()\r\n    @serializable()\r\n    useGravity: boolean = true;\r\n\r\n    @validate()\r\n    @serializable()\r\n    constraints: RigidbodyConstraints = RigidbodyConstraints.None;\r\n\r\n    @validate()\r\n    @serializable()\r\n    isKinematic: boolean = false;\r\n\r\n    @validate()\r\n    @serializable()\r\n    drag: number = 0;\r\n\r\n    @validate()\r\n    @serializable()\r\n    angularDrag: number = 1;\r\n\r\n    @validate()\r\n    @serializable()\r\n    detectCollisions: boolean = true;\r\n\r\n    @validate()\r\n    @serializable()\r\n    sleepThreshold: number = 0.01;\r\n\r\n    @validate()\r\n    @serializable()\r\n    collisionDetectionMode: CollisionDetectionMode = CollisionDetectionMode.Discrete;\r\n\r\n    get lockPositionX() {\r\n        return (this.constraints & RigidbodyConstraints.FreezePositionX) !== 0;\r\n    }\r\n    get lockPositionY() {\r\n        return (this.constraints & RigidbodyConstraints.FreezePositionY) !== 0;\r\n    }\r\n    get lockPositionZ() {\r\n        return (this.constraints & RigidbodyConstraints.FreezePositionZ) !== 0;\r\n    }\r\n    get lockRotationX() {\r\n        return (this.constraints & RigidbodyConstraints.FreezeRotationX) !== 0;\r\n    }\r\n    get lockRotationY() {\r\n        return (this.constraints & RigidbodyConstraints.FreezeRotationY) !== 0;\r\n    }\r\n    get lockRotationZ() {\r\n        return (this.constraints & RigidbodyConstraints.FreezeRotationZ) !== 0;\r\n    }\r\n\r\n    set lockPositionX(v: boolean) {\r\n        if (v) this.constraints |= RigidbodyConstraints.FreezePositionX;\r\n        else this.constraints &= ~RigidbodyConstraints.FreezePositionX;\r\n    }\r\n    set lockPositionY(v: boolean) {\r\n        if (v) this.constraints |= RigidbodyConstraints.FreezePositionY;\r\n        else this.constraints &= ~RigidbodyConstraints.FreezePositionY;\r\n    }\r\n    set lockPositionZ(v: boolean) {\r\n        if (v) this.constraints |= RigidbodyConstraints.FreezePositionZ;\r\n        else this.constraints &= ~RigidbodyConstraints.FreezePositionZ;\r\n    }\r\n    set lockRotationX(v: boolean) {\r\n        if (v) this.constraints |= RigidbodyConstraints.FreezeRotationX;\r\n        else this.constraints &= ~RigidbodyConstraints.FreezeRotationX;\r\n    }\r\n    set lockRotationY(v: boolean) {\r\n        if (v) this.constraints |= RigidbodyConstraints.FreezeRotationY;\r\n        else this.constraints &= ~RigidbodyConstraints.FreezeRotationY;\r\n    }\r\n    set lockRotationZ(v: boolean) {\r\n        if (v) this.constraints |= RigidbodyConstraints.FreezeRotationZ;\r\n        else this.constraints &= ~RigidbodyConstraints.FreezeRotationZ;\r\n    }\r\n\r\n    private static tempPosition: THREE.Vector3 = new THREE.Vector3();\r\n    private _propertiesChanged: boolean = false;\r\n    private _currentVelocity: THREE.Vector3 = new THREE.Vector3();\r\n    private _smoothedVelocity: THREE.Vector3 = new THREE.Vector3();\r\n    private _smoothedVelocityGetter: THREE.Vector3 = new THREE.Vector3();\r\n    private _lastPosition: THREE.Vector3 = new THREE.Vector3();\r\n\r\n    private _watch?: TransformWatch;\r\n\r\n    awake() {\r\n        this._watch = undefined;\r\n        this._propertiesChanged = false;\r\n    }\r\n\r\n    onEnable() {\r\n        if (!this._watch) {\r\n            this._watch = new TransformWatch(this.gameObject, this.context);\r\n        }\r\n        this._watch.start(true, true);\r\n        this.startCoroutine(this.beforePhysics(), FrameEvent.LateUpdate);\r\n    }\r\n\r\n    onDisable() {\r\n        this._watch?.stop();\r\n        this.context.physics.removeBody(this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.context.physics.removeBody(this);\r\n    }\r\n\r\n    onValidate() {\r\n        this._propertiesChanged = true;\r\n    }\r\n\r\n    // need to do this right before updating physics to prevent rendered object glitching through physical bodies\r\n    *beforePhysics() {\r\n        while (true) {\r\n            if (this._propertiesChanged) {\r\n                this._propertiesChanged = false;\r\n                this.context.physics.updateProperties(this);\r\n            }\r\n            if (this._watch?.isDirty) {\r\n                this._watch.mute = true;\r\n                this._watch.applyValues();\r\n                this.context.physics.updateBody(this, this._watch.positionChanged, this._watch.rotationChanged);\r\n                this._watch.reset();\r\n            }\r\n            else this._watch?.syncValues();\r\n            this.captureVelocity();\r\n            yield;\r\n        }\r\n    }\r\n\r\n    private get body() {\r\n        return this.context.physics.internal_getRigidbody(this);\r\n    }\r\n\r\n    public teleport(pt: { x: number, y: number, z: number }, localspace:boolean = true) {\r\n        this._watch?.reset(true);\r\n        if(localspace) this.gameObject.position.set(pt.x, pt.y, pt.z);\r\n        else this.setWorldPosition(pt.x, pt.y, pt.z);\r\n        this.resetForcesAndTorques();\r\n        this.resetVelocities();\r\n    }\r\n\r\n    public resetForces() {\r\n        this.body?.resetForces(true);\r\n    }\r\n\r\n    public resetTorques() {\r\n        this.body?.resetTorques(true);\r\n    }\r\n\r\n    public resetVelocities() {\r\n        this.setVelocity(0, 0, 0);\r\n        this.setAngularVelocity(0, 0, 0);\r\n    }\r\n\r\n    public resetForcesAndTorques() {\r\n        this.resetForces();\r\n        this.resetTorques();\r\n    }\r\n\r\n    public wakeUp() {\r\n        this.body?.wakeUp();\r\n    }\r\n\r\n    public applyForce(vec: Vector3, _rel?: THREE.Vector3) {\r\n        this.body?.addForce(vec, true);\r\n    }\r\n\r\n    public applyImpulse(vec: Vector3) {\r\n        this.body?.applyImpulse(vec, true);\r\n    }\r\n\r\n    public setForce(x: number, y: number, z: number) {\r\n        this.body?.resetForces(true);\r\n        this.body?.addForce({ x, y, z }, true);\r\n    }\r\n\r\n    public getVelocity(): Vector3 {\r\n        const vel = this.body?.linvel();\r\n        if (!vel) return this._currentVelocity.set(0, 0, 0);\r\n        this._currentVelocity.x = vel.x;\r\n        this._currentVelocity.y = vel.y;\r\n        this._currentVelocity.z = vel.z;\r\n        return this._currentVelocity;\r\n    }\r\n\r\n    public setVelocity(x: number | Vector3, y?: number, z?: number) {\r\n        if (x instanceof Vector3) {\r\n            const vec = x;\r\n            this.body?.setLinvel(vec, true);\r\n            return;\r\n        }\r\n        if (y === undefined || z === undefined) return;\r\n        this.body?.setLinvel({ x: x, y: y, z: z }, true);\r\n    }\r\n\r\n    public setAngularVelocity(x: number | Vector3, y?: number, z?: number) {\r\n        if (x instanceof Vector3) {\r\n            const vec = x;\r\n            this.body?.setAngvel(vec, true);\r\n            return;\r\n        }\r\n        if (y === undefined || z === undefined) return;\r\n        this.body?.setAngvel({ x: x, y: y, z: z }, true);\r\n    }\r\n\r\n    public setTorque(x: number | Vector3, y: number, z: number) {\r\n        this.setAngularVelocity(x, y, z);\r\n    }\r\n\r\n    public get smoothedVelocity(): Vector3 {\r\n        this._smoothedVelocityGetter.copy(this._smoothedVelocity);\r\n        return this._smoothedVelocityGetter.multiplyScalar(1 / this.context.time.deltaTime);\r\n    }\r\n\r\n    // public get smoothedVelocity() { return this._smoothedVelocity; }\r\n\r\n\r\n\r\n    /**d\r\n     * @deprecated not used anymore\r\n     */\r\n    public setBodyFromGameObject(_velocity: THREE.Vector3 | null | { x: number, y: number, z: number } = null) {\r\n        if (this.gameObject && !this.destroyed) {\r\n            // this.context.physics.updateBody(this);\r\n            // this._ignoreChange = true;\r\n            // const wp = this.worldPosition;\r\n            // this.body.position.set(wp.x, wp.y, wp.z);\r\n            // const wr = this.worldQuaternion;\r\n            // this.body.quaternion.set(wr.x, wr.y, wr.z, wr.w);\r\n\r\n            // if (velocity) {\r\n            //     Rigidbody.copyVector3.set(velocity.x, velocity.y, velocity.z);\r\n            //     this._smoothedVelocity.lerp(Rigidbody.copyVector3, this.context.time.deltaTime / .1);\r\n            //     const sm = this._smoothedVelocity;\r\n            //     this.body.velocity.x = sm.x;\r\n            //     this.body.velocity.y = sm.y;\r\n            //     this.body.velocity.z = sm.z;\r\n            // }\r\n            // this._ignoreChange = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private captureVelocity() {\r\n        if (this.body) {\r\n            const wp = getWorldPosition(this.gameObject);\r\n            Rigidbody.tempPosition.copy(wp);\r\n            const vel = wp.sub(this._lastPosition);\r\n            this._lastPosition.copy(Rigidbody.tempPosition);\r\n            this._smoothedVelocity.lerp(vel, this.context.time.deltaTime / .1);\r\n            // this._smoothedVelocity.set(0, 1 / this.context.time.deltaTime, 0);\r\n        }\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport { Rigidbody } from \"./RigidBody\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Event, Mesh, Object3D, Vector3 } from \"three\"\r\n// import { IColliderProvider, registerColliderProvider } from \"../engine/engine_physics\";\r\nimport { ICollider } from \"../engine/engine_types\";\r\nimport { getWorldScale } from \"../engine/engine_three_utils\";\r\n\r\n\r\nexport class Collider extends Behaviour implements ICollider {\r\n\r\n    get isCollider(): any {\r\n        return true;\r\n    }\r\n\r\n    @serializable(Rigidbody)\r\n    attachedRigidbody: Rigidbody | null = null;\r\n    @serializable()\r\n    isTrigger: boolean = false;\r\n\r\n\r\n    awake() {\r\n        super.awake();\r\n        if (!this.attachedRigidbody)\r\n            this.attachedRigidbody = this.gameObject.getComponentInParent(Rigidbody);\r\n    }\r\n\r\n    start() {\r\n        if (!this.attachedRigidbody)\r\n            this.attachedRigidbody = this.gameObject.getComponentInParent(Rigidbody);\r\n    }\r\n\r\n    onEnable() {\r\n        // a rigidbody is not assigned if we export an asset\r\n        if (!this.attachedRigidbody)\r\n            this.attachedRigidbody = this.gameObject.getComponentInParent(Rigidbody);\r\n    }\r\n\r\n    onDisable() {\r\n        this.context.physics.removeBody(this);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class SphereCollider extends Collider {\r\n\r\n    @serializable()\r\n    radius: number = .5;\r\n    @serializable(Vector3)\r\n    center: Vector3 = new Vector3(0, 0, 0);\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n        this.context.physics.addSphereCollider(this, this.center, this.radius);\r\n    }\r\n}\r\n\r\nexport class BoxCollider extends Collider {\r\n\r\n    @serializable(Vector3)\r\n    size: Vector3 = new Vector3(1, 1, 1);\r\n    @serializable(Vector3)\r\n    center: Vector3 = new Vector3(0, 0, 0);\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n        this.context.physics.addBoxCollider(this, this.center, this.size);\r\n    }\r\n}\r\n\r\n\r\nexport class MeshCollider extends Collider {\r\n\r\n\r\n    sharedMesh?: Mesh;\r\n    @serializable()\r\n    convex: boolean = false;\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n        if (!this.sharedMesh?.isMesh) {\r\n            // HACK using the renderer mesh\r\n            if (this.gameObject instanceof Mesh) {\r\n                this.sharedMesh = this.gameObject;\r\n            }\r\n        }\r\n        if (this.sharedMesh?.isMesh)\r\n            this.context.physics.addMeshCollider(this, this.sharedMesh, this.convex, getWorldScale(this.gameObject));\r\n    }\r\n}\r\n\r\n\r\nexport class CapsuleCollider extends Collider {\r\n    @serializable(Vector3)\r\n    center: Vector3 = new Vector3(0, 0, 0);\r\n\r\n    @serializable()\r\n    radius: number = .5;\r\n    @serializable()\r\n    height: number = 2;\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n        this.context.physics.addCapsuleCollider(this, this.center, this.height, this.radius);\r\n    }\r\n\r\n}", "import { Behaviour } from \"./Component\";\r\nimport { IPointerClickHandler, IPointerEnterHandler, PointerEventData } from \"./ui/PointerEvents\";\r\n\r\n\r\nexport class Interactable extends Behaviour implements IPointerClickHandler {\r\n\r\n    canGrab : boolean = true;\r\n\r\n    onPointerClick(_args: PointerEventData) {\r\n        // console.log(\"CLICK\");\r\n    }\r\n\r\n    // OnPointerEnter(args: PointerEventData) {\r\n    //     console.log(\"ENTER\");\r\n    // }\r\n\r\n    // OnPointerExit(args: PointerEventData) {\r\n    //     console.log(\"Exit\");\r\n    // }\r\n}\r\n\r\n\r\n// TODO: how do we sync things like that...\r\nexport class UsageMarker extends Behaviour\r\n{\r\n    public isUsed : boolean = true;\r\n    public usedBy : any = null;\r\n}", "\r\nimport * as THREE from \"three\";\r\nimport { syncDestroy } from \"../engine/engine_networking_instantiate\";\r\nimport { BoxHelperComponent } from \"./BoxHelperComponent\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { UsageMarker } from \"./Interactable\";\r\n\r\n\r\nexport class DeleteBox extends BoxHelperComponent {}\r\n\r\n\r\nexport class Deletable extends Behaviour {\r\n\r\n    private deleteBoxes: DeleteBox[] = [];\r\n\r\n    awake() {\r\n        this.deleteBoxes = GameObject.findObjectsOfType(DeleteBox, this.context);\r\n    }\r\n\r\n    update(): void {\r\n        for (const box of this.deleteBoxes) {\r\n            const obj = this.gameObject as unknown as THREE.Mesh;\r\n            const res = box.isInBox(obj);\r\n            // console.log(res);\r\n            if (res === true) {\r\n                const marker = GameObject.getComponentInParent(this.gameObject, UsageMarker);\r\n                if (!marker) {\r\n                    // console.log(\"DESTROY\");\r\n                    syncDestroy(this.gameObject, this.context.connection);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\n\r\n\r\nexport enum DeviceType {\r\n    Never = 0,\r\n    Desktop = 1 << 0,\r\n    Mobile = 2 << 0,\r\n}\r\n\r\nexport class DeviceFlag extends Behaviour {\r\n\r\n    @serializable()\r\n    visibleOn!: DeviceType;\r\n\r\n\r\n    onEnable() {\r\n        this.apply();\r\n    }\r\n\r\n    apply() {    \r\n        if (!this.test()) {\r\n            GameObject.setActive(this.gameObject, false);\r\n        }\r\n    }\r\n\r\n    private test() : boolean {\r\n        if(this.visibleOn < 0) return true;\r\n        if(isMobile()){\r\n            return (this.visibleOn & (DeviceType.Mobile)) !== 0;\r\n        }\r\n        const allowDesktop = (this.visibleOn & (DeviceType.Desktop)) !== 0;\r\n        return allowDesktop;\r\n    }\r\n\r\n}\r\n\r\n// shamelessly taken from https://stackoverflow.com/a/11381730\r\nlet _isMobile: boolean | undefined = undefined;\r\nfunction isMobile() {\r\n    if (_isMobile === true || _isMobile === false) return _isMobile;\r\n    let check = false;\r\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window[\"opera\"]);\r\n    _isMobile = check;\r\n    return check;\r\n};", "import * as THREE from 'three'\r\nimport { OwnershipModel, RoomEvents } from \"../engine/engine_networking\"\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { Rigidbody } from \"./RigidBody\";\r\nimport * as utils from \"../engine/engine_utils\"\r\nimport { sendDestroyed } from '../engine/engine_networking_instantiate';\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\nimport { SyncedTransformModel } from '../engine-schemes/synced-transform-model';\r\nimport * as flatbuffers from \"flatbuffers\";\r\nimport { Transform } from '../engine-schemes/transform';\r\nimport { registerType } from '../engine-schemes/schemes';\r\nimport { setWorldEuler } from '../engine/engine_three_utils';\r\n\r\nconst debug = utils.getParam(\"debugsync\");\r\nexport const SyncedTransformIdentifier = \"STRS\";\r\nregisterType(SyncedTransformIdentifier, SyncedTransformModel.getRootAsSyncedTransformModel);\r\n\r\nconst builder = new flatbuffers.Builder();\r\n\r\nexport function createTransformModel(guid: string, b: Behaviour, fast: boolean = true): Uint8Array {\r\n    builder.clear();\r\n    const guidObj = builder.createString(guid);\r\n    SyncedTransformModel.startSyncedTransformModel(builder);\r\n    SyncedTransformModel.addGuid(builder, guidObj);\r\n    SyncedTransformModel.addFast(builder, fast);\r\n    const p = b.worldPosition;\r\n    const r = b.worldEuler;\r\n    const s = b.gameObject.scale; // todo: world scale\r\n    // console.log(p, r, s);\r\n    SyncedTransformModel.addTransform(builder, Transform.createTransform(builder, p.x, p.y, p.z, r.x, r.y, r.z, s.x, s.y, s.z));\r\n    const res = SyncedTransformModel.endSyncedTransformModel(builder);\r\n    // SyncedTransformModel.finishSyncedTransformModelBuffer(builder, res);\r\n    builder.finish(res, SyncedTransformIdentifier);\r\n    return builder.asUint8Array();\r\n}\r\n\r\n\r\nexport class SyncedTransform extends Behaviour {\r\n\r\n    // public autoOwnership: boolean = true;\r\n    public overridePhysics: boolean = true\r\n    public interpolatePosition: boolean = true;\r\n    public interpolateRotation: boolean = true;\r\n    public fastMode: boolean = false;\r\n    public syncDestroy: boolean = false;\r\n\r\n    // private _state!: SyncedTransformModel;\r\n    private _model: OwnershipModel | null = null;\r\n    private _needsUpdate: boolean = true;\r\n    private rb: Rigidbody | null = null;\r\n    private _wasKinematic: boolean | undefined = false;\r\n    private _receivedDataBefore: boolean = false;\r\n\r\n    private _targetPosition!: THREE.Vector3;\r\n    private _targetRotation!: THREE.Quaternion;\r\n\r\n    private _receivedFastUpdate: boolean = false;\r\n    private _shouldRequestOwnership: boolean = false;\r\n\r\n    public requestOwnership() {\r\n        if (debug)\r\n            console.log(\"Request ownership\");\r\n        if (!this._model) {\r\n            this._shouldRequestOwnership = true;\r\n            this._needsUpdate = true;\r\n        }\r\n        else\r\n            this._model.requestOwnership();\r\n    }\r\n\r\n    public hasOwnership(): boolean | undefined {\r\n        return this._model?.hasOwnership ?? undefined;\r\n    }\r\n\r\n    public isOwned(): boolean | undefined {\r\n        return this._model?.isOwned;\r\n    }\r\n\r\n    private joinedRoomCallback: any = null;\r\n    private receivedDataCallback: any = null;\r\n\r\n    awake() {\r\n        if (debug)\r\n            console.log(\"new instance\", this.guid, this);\r\n        this._receivedDataBefore = false;\r\n        this._targetPosition = new THREE.Vector3();\r\n        this._targetRotation = new THREE.Quaternion();\r\n\r\n        // sync instantiate issue was because they shared the same last pos vector!\r\n        this.lastWorldPos = new THREE.Vector3();\r\n        this.lastWorldRotation = new THREE.Quaternion();\r\n\r\n        this.rb = GameObject.getComponentInChildren(this.gameObject, Rigidbody);\r\n        if (this.rb) {\r\n            this._wasKinematic = this.rb.isKinematic;\r\n        }\r\n\r\n        this.receivedUpdate = true;\r\n        // this._state = new TransformModel(this.guid, this);\r\n        this._model = new OwnershipModel(this.context.connection, this.guid);\r\n        if (this.context.connection.isConnected) {\r\n            this.tryGetLastState();\r\n        }\r\n\r\n        this.joinedRoomCallback = this.tryGetLastState.bind(this);\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, this.joinedRoomCallback);\r\n        this.receivedDataCallback = this.onReceivedData.bind(this);\r\n        this.context.connection.beginListenBinrary(SyncedTransformIdentifier, this.receivedDataCallback);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        // TODO: can we add a new component for this?! do we really need this?!\r\n        if (this.syncDestroy)\r\n            sendDestroyed(this.guid, this.context.connection);\r\n        this._model = null;\r\n        this.context.connection.stopListening(RoomEvents.JoinedRoom, this.joinedRoomCallback);\r\n        this.context.connection.stopListenBinary(SyncedTransformIdentifier, this.receivedDataCallback);\r\n    }\r\n\r\n    private tryGetLastState() {\r\n        const model = this.context.connection.tryGetState(this.guid) as unknown as SyncedTransformModel;\r\n        if (model) this.onReceivedData(model);\r\n    }\r\n\r\n    private tempEuler: THREE.Euler = new THREE.Euler();\r\n\r\n    private onReceivedData(data: SyncedTransformModel) {\r\n        if (this.destroyed) return;\r\n        if (typeof data.guid === \"function\" && data.guid() === this.guid) {\r\n            if (debug)\r\n                console.log(\"new data\", this.context.connection.connectionId, this.context.time.frameCount, this.guid, data);\r\n            this.receivedUpdate = true;\r\n            this._receivedFastUpdate = data.fast();\r\n            const transform = data.transform();\r\n            if (transform) {\r\n                InstancingUtil.markDirty(this.gameObject, true);\r\n                const position = transform.position();\r\n                if (position) {\r\n                    if (this.interpolatePosition)\r\n                        this._targetPosition?.set(position.x(), position.y(), position.z());\r\n                    if (!this.interpolatePosition || !this._receivedDataBefore)\r\n                        this.setWorldPosition(position.x(), position.y(), position.z());\r\n                }\r\n\r\n                const rotation = transform.rotation();\r\n                if (rotation) {\r\n                    this.tempEuler.set(rotation.x(), rotation.y(), rotation.z());\r\n                    if (this.interpolateRotation) {\r\n                        this._targetRotation.setFromEuler(this.tempEuler);\r\n                    }\r\n                    if (!this.interpolateRotation || !this._receivedDataBefore)\r\n                        setWorldEuler(this.gameObject, this.tempEuler);\r\n                }\r\n            }\r\n            this._receivedDataBefore = true;\r\n\r\n            // if (this.rb && !this._model?.hasOwnership) {\r\n            //     this.rb.setBodyFromGameObject(data.velocity)\r\n            // }\r\n        }\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.lastWorldPos.copy(this.worldPosition);\r\n        this.lastWorldRotation.copy(this.worldQuaternion);\r\n        this._needsUpdate = true;\r\n        // console.log(\"ENABLE\", this.guid, this.gameObject.guid, this.lastWorldPos);\r\n        if (this._model) {\r\n            this._model.updateIsOwned();\r\n        }\r\n    }\r\n\r\n    onDisable(): void {\r\n        if (this._model)\r\n            this._model.freeOwnership();\r\n    }\r\n\r\n\r\n    private receivedUpdate = false;\r\n    private lastWorldPos!: THREE.Vector3;\r\n    private lastWorldRotation!: THREE.Quaternion;\r\n\r\n    onBeforeRender() {\r\n        if (!this.activeAndEnabled || !this.context.connection.isConnected) return;\r\n        // console.log(\"BEFORE RENDER\", this.destroyed, this.guid, this._model?.isOwned, this.name, this.gameObject);\r\n\r\n        if (!this.context.connection.isInRoom || !this._model) {\r\n            if (debug)\r\n                console.log(\"no model or room\", this.name, this.guid, this.context.connection.isInRoom);\r\n            return;\r\n        }\r\n\r\n        if (this._shouldRequestOwnership) {\r\n            this._shouldRequestOwnership = false;\r\n            this._model.requestOwnership();\r\n        }\r\n\r\n        let wp = this.worldPosition;\r\n        let wr = this.worldQuaternion;\r\n        if (this._model.isOwned && !this.receivedUpdate) {\r\n            const worlddiff = wp.distanceTo(this.lastWorldPos);\r\n            const worldRot = wr.angleTo(this.lastWorldRotation);\r\n            const threshold = this._model.hasOwnership || this.fastMode ? .0001 : .001;\r\n            if (worlddiff > threshold || worldRot > threshold) {\r\n                // console.log(worlddiff, worldRot);\r\n                if (!this._model.hasOwnership) {\r\n\r\n                    if (debug)\r\n                        console.log(this.guid, \"reset because not owned but\", this.gameObject.name, this.lastWorldPos);\r\n\r\n                    this.worldPosition = this.lastWorldPos;\r\n                    wp.copy(this.lastWorldPos);\r\n\r\n                    this.worldQuaternion = this.lastWorldRotation;\r\n                    wr.copy(this.lastWorldRotation);\r\n\r\n                    InstancingUtil.markDirty(this.gameObject, true);\r\n                    this._needsUpdate = false;\r\n                }\r\n                else {\r\n                    this._needsUpdate = true;\r\n                }\r\n            }\r\n        }\r\n        // else if (this._model.isOwned === false) {\r\n        //     if (!this._didRequestOwnershipOnce && this.autoOwnership) {\r\n        //         this._didRequestOwnershipOnce = true;\r\n        //         this._model.requestOwnershipIfNotOwned();\r\n        //     }\r\n        // }\r\n\r\n\r\n        if (this._model && !this._model.hasOwnership && this._model.isOwned) {\r\n            if (this._receivedDataBefore) {\r\n                const factor = this._receivedFastUpdate || this.fastMode ? .5 : .3;\r\n                const t = factor;//Mathf.clamp01(this.context.time.deltaTime * factor);\r\n                let requireMarkDirty = false;\r\n                if (this.interpolatePosition && this._targetPosition) {\r\n                    const pos = this.worldPosition;\r\n                    pos.lerp(this._targetPosition, t);\r\n                    this.worldPosition = pos;\r\n                    requireMarkDirty = true;\r\n                }\r\n                if (this.interpolateRotation && this._targetRotation) {\r\n                    const rot = this.worldQuaternion;\r\n                    rot.slerp(this._targetRotation, t);\r\n                    this.worldQuaternion = rot;\r\n                    requireMarkDirty = true;\r\n                }\r\n                if (requireMarkDirty)\r\n                    InstancingUtil.markDirty(this.gameObject, true);\r\n            }\r\n        }\r\n\r\n\r\n        this.receivedUpdate = false;\r\n        this.lastWorldPos.copy(wp);\r\n        this.lastWorldRotation.copy(wr);\r\n\r\n\r\n        // if (this._model.isOwned === false && this.autoOwnership) {\r\n        //     this.requestOwnership();\r\n        // }\r\n\r\n        if (!this._model) return;\r\n        // only run if we are the owner\r\n        if (!this._model || this._model.hasOwnership === undefined || !this._model.hasOwnership) {\r\n            if (this.rb) {\r\n                this.rb.isKinematic = this._model.isOwned ?? false;\r\n                this.rb.setVelocity(0, 0, 0);\r\n                this.rb.setBodyFromGameObject();\r\n            }\r\n            return;\r\n        }\r\n\r\n        // local user is owner:\r\n\r\n        if (this.rb) {\r\n            if (this._wasKinematic !== undefined) {\r\n                if (debug)\r\n                    console.log(\"reset kinematic\", this.rb.name, this._wasKinematic);\r\n                this.rb.isKinematic = this._wasKinematic;\r\n            }\r\n\r\n            // hacky reset if too far off\r\n            if (this.gameObject.position.distanceTo(new THREE.Vector3(0, 0, 0)) > 1000) {\r\n                if (debug)\r\n                    console.log(\"RESET\", this.name)\r\n                this.gameObject.position.set(0, 1, 0);\r\n                this.rb.setVelocity(0, 0, 0);\r\n                this.rb.setBodyFromGameObject();\r\n            }\r\n        }\r\n\r\n        const updateInterval = 10;\r\n        const fastUpdate = this.rb || this.fastMode;\r\n        if (this._needsUpdate && (updateInterval <= 0 || updateInterval > 0 && this.context.time.frameCount % updateInterval === 0 || fastUpdate)) {\r\n\r\n            if (debug)\r\n                console.log(\"send update\", this.context.connection.connectionId, this.guid, this.gameObject.name, this.gameObject.guid);\r\n\r\n            if (this.overridePhysics && this.rb) {\r\n                this.rb.setBodyFromGameObject();\r\n            }\r\n\r\n            this._needsUpdate = false;\r\n            const st = createTransformModel(this.guid, this, fastUpdate ? true : false);\r\n            // this._state.update(this, this.rb);\r\n            // this._state.fast = fastUpdate ? true : false;\r\n            this.context.connection.sendBinary(st);\r\n        }\r\n    }\r\n\r\n\r\n    // private lastPosition: THREE.Vector3 = new THREE.Vector3();\r\n\r\n    // private async setPosition(pt: THREE.Vector3) {\r\n\r\n    //     if (this._model.isConnected && !this._model?.hasOwnership) {\r\n    //         await this._model?.requestOwnershipAsync();\r\n    //     }\r\n\r\n    //     if (pt.distanceTo(this.lastPosition) < .001) {\r\n    //         return;\r\n    //     }\r\n    //     this.lastPosition.copy(pt);\r\n\r\n    //     if(this.gameObject.parent) this.gameObject.parent.worldToLocal(pt);\r\n    //     // this.gameObject.position.copy(pt);\r\n    //     this.gameObject.position.set(pt.x, pt.y, pt.z);\r\n    //     this._target.set(pt.x, pt.y, pt.z);\r\n    //     this._needsUpdate = true;\r\n    //     if (this.rb) {\r\n    //         this.gameObject.position.set(pt.x, pt.y + .5, pt.z);\r\n    //         this.rb.setVelocity(0, 0, 0);\r\n    //         this.rb.setBodyFromGameObject();\r\n    //     }\r\n    // }\r\n}", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nexport class Vec3 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec3 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nx():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n}\r\n\r\ny():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n}\r\n\r\nz():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n}\r\n\r\nstatic sizeOf():number {\r\n  return 12;\r\n}\r\n\r\nstatic createVec3(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(z);\r\n  builder.writeFloat32(y);\r\n  builder.writeFloat32(x);\r\n  return builder.offset();\r\n}\r\n\r\n}\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nimport { Vec3 } from './vec3';\r\n\r\n\r\nexport class Transform {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Transform {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nposition(obj?:Vec3):Vec3|null {\r\n  return (obj || new Vec3()).__init(this.bb_pos, this.bb!);\r\n}\r\n\r\nrotation(obj?:Vec3):Vec3|null {\r\n  return (obj || new Vec3()).__init(this.bb_pos + 12, this.bb!);\r\n}\r\n\r\nscale(obj?:Vec3):Vec3|null {\r\n  return (obj || new Vec3()).__init(this.bb_pos + 24, this.bb!);\r\n}\r\n\r\nstatic sizeOf():number {\r\n  return 36;\r\n}\r\n\r\nstatic createTransform(builder:flatbuffers.Builder, position_x: number, position_y: number, position_z: number, rotation_x: number, rotation_y: number, rotation_z: number, scale_x: number, scale_y: number, scale_z: number):flatbuffers.Offset {\r\n  builder.prep(4, 36);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(scale_z);\r\n  builder.writeFloat32(scale_y);\r\n  builder.writeFloat32(scale_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(rotation_z);\r\n  builder.writeFloat32(rotation_y);\r\n  builder.writeFloat32(rotation_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(position_z);\r\n  builder.writeFloat32(position_y);\r\n  builder.writeFloat32(position_x);\r\n  return builder.offset();\r\n}\r\n\r\n}\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nimport { Transform } from './transform';\r\n\r\n\r\nexport class SyncedTransformModel {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SyncedTransformModel {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nstatic getRootAsSyncedTransformModel(bb:flatbuffers.ByteBuffer, obj?:SyncedTransformModel):SyncedTransformModel {\r\n  return (obj || new SyncedTransformModel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic getSizePrefixedRootAsSyncedTransformModel(bb:flatbuffers.ByteBuffer, obj?:SyncedTransformModel):SyncedTransformModel {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new SyncedTransformModel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\n/**\r\n * the guid of the object that this transform info belongs to\r\n */\r\nguid():string|null\r\nguid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nguid(optionalEncoding?:any):string|Uint8Array|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n}\r\n\r\n/**\r\n * if the transform interpolation should be fast, this is true when the send interval is low and we want to have snappy transforms\r\n */\r\nfast():boolean {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n}\r\n\r\ntransform(obj?:Transform):Transform|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Transform()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\n/**\r\n * if the server should not save this info\r\n */\r\ndontSave():boolean {\r\n  const offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n}\r\n\r\nstatic startSyncedTransformModel(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n}\r\n\r\nstatic addGuid(builder:flatbuffers.Builder, guidOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, guidOffset, 0);\r\n}\r\n\r\nstatic addFast(builder:flatbuffers.Builder, fast:boolean) {\r\n  builder.addFieldInt8(1, +fast, +false);\r\n}\r\n\r\nstatic addTransform(builder:flatbuffers.Builder, transformOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, transformOffset, 0);\r\n}\r\n\r\nstatic addDontSave(builder:flatbuffers.Builder, dontSave:boolean) {\r\n  builder.addFieldInt8(3, +dontSave, +false);\r\n}\r\n\r\nstatic endSyncedTransformModel(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  const offset = builder.endObject();\r\n  return offset;\r\n}\r\n\r\nstatic finishSyncedTransformModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset);\r\n}\r\n\r\nstatic finishSizePrefixedSyncedTransformModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, undefined, true);\r\n}\r\n\r\n}\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\n// import { DragControls as Control } from \"../include/three/DragControls\";\r\nimport { SyncedTransform } from \"./SyncedTransform\";\r\nimport * as THREE from \"three\";\r\nimport { IPointerClickHandler, IPointerDownHandler, IPointerEnterHandler, IPointerExitHandler, IPointerUpHandler, PointerEventData } from \"./ui/PointerEvents\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { Interactable, UsageMarker } from \"./Interactable\";\r\nimport { Rigidbody } from \"./RigidBody\";\r\nimport { WebXR } from \"./WebXR\";\r\nimport { Avatar_POI } from \"./avatar/Avatar_Brain_LookAt\";\r\nimport { RaycastOptions } from \"../engine/engine_physics\";\r\nimport { getWorldPosition, getWorldQuaternion, setWorldPosition } from \"../engine/engine_three_utils\";\r\nimport { KeyCode } from \"../engine/engine_input\";\r\nimport { nameofFactory } from \"../engine/engine_utils\";\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\nimport { OrbitControls } from \"./OrbitControls\";\r\n\r\nconst debug = false;\r\n\r\nexport enum DragEvents {\r\n    SelectStart = \"selectstart\",\r\n    SelectEnd = \"selectend\",\r\n}\r\n\r\ninterface SelectArgs {\r\n    selected: THREE.Object3D;\r\n    attached: THREE.Object3D | GameObject | null;\r\n}\r\n\r\n\r\nexport interface IDragEventListener {\r\n    onDragStart?();\r\n    onDragEnd?();\r\n}\r\n\r\nexport class DragControls extends Interactable implements IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler {\r\n\r\n    private static _active: number = 0;\r\n    public static get HasAnySelected(): boolean { return this._active > 0; }\r\n\r\n\r\n    public transformSelf: boolean = true;\r\n    // public transformGroup: boolean = true;\r\n    // public targets: THREE.Object3D[] | null = null;\r\n\r\n    // private controls: Control | null = null;\r\n    private orbit: OrbitControls | null = null;\r\n\r\n    private selectStartEventListener: ((controls: DragControls, args: SelectArgs) => void)[] = [];\r\n    private selectEndEventListener: Array<Function> = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.selectStartEventListener = [];\r\n        this.selectEndEventListener = [];\r\n        this._dragDelta = new THREE.Vector2();\r\n    }\r\n\r\n    addDragEventListener(type: DragEvents, cb: (ctrls: DragControls, args: SelectArgs) => void | Function) {\r\n        switch (type) {\r\n            case DragEvents.SelectStart:\r\n                this.selectStartEventListener.push(cb);\r\n                break;\r\n            case DragEvents.SelectEnd:\r\n                this.selectEndEventListener.push(cb);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _dragHelper: DragHelper | null = null;\r\n\r\n\r\n    start() {\r\n        this.orbit = GameObject.findObjectOfType(OrbitControls, this.context);\r\n    }\r\n\r\n    private static lastHovered: THREE.Object3D;\r\n    private _draggingRigidbodies: Rigidbody[] = [];\r\n\r\n    private allowEdit(_obj: THREE.Object3D | null = null) {\r\n        return this.context.connection.allowEditing;\r\n    }\r\n\r\n    onPointerEnter(evt: PointerEventData) {\r\n        if (!this.allowEdit(this.gameObject)) return;\r\n        if (WebXR.IsInWebXR) return;\r\n        // const interactable = GameObject.getComponentInParent(evt.object, Interactable);\r\n        // if (!interactable) return;\r\n        const dc = GameObject.getComponentInParent(evt.object, DragControls);\r\n        if (!dc || dc !== this) return;\r\n        DragControls.lastHovered = evt.object;\r\n        this.context.domElement.style.cursor = 'pointer';\r\n    }\r\n\r\n    onPointerExit(evt: PointerEventData) {\r\n        if (!this.allowEdit(this.gameObject)) return;\r\n        if (WebXR.IsInWebXR) return;\r\n        if (DragControls.lastHovered !== evt.object) return;\r\n        // const interactable = GameObject.getComponentInParent(evt.object, Interactable);\r\n        // if (!interactable) return;\r\n        this.context.domElement.style.cursor = 'auto';\r\n    }\r\n\r\n    private _waitingForDragStart: PointerEventData | null = null;\r\n\r\n    onPointerDown(args: PointerEventData) {\r\n        if (!this.allowEdit(this.gameObject)) return;\r\n        if (WebXR.IsInWebXR) return;\r\n        DragControls._active += 1;\r\n        this._dragDelta.set(0, 0);\r\n        this._didDrag = false;\r\n        this._waitingForDragStart = args;\r\n        args.StopPropagation();\r\n        // disabling pointer controls here already, otherwise we get a few frames of movement event in orbit controls and this will rotate the camera sligthly AFTER drag controls dragging ends.\r\n        if (this.orbit) this.orbit.enabled = false;\r\n    }\r\n\r\n    onPointerUp(args: PointerEventData) {\r\n        this._waitingForDragStart = null;\r\n        if (!this.allowEdit(this.gameObject)) return;\r\n        if(DragControls._active > 0)\r\n            DragControls._active -= 1;\r\n        if (WebXR.IsInWebXR) return;\r\n        this.onDragEnd(args);\r\n        args.StopPropagation();\r\n        if (this.orbit) this.orbit.enabled = true;\r\n    }\r\n\r\n\r\n    update(): void {\r\n        if (WebXR.IsInWebXR) return;\r\n\r\n        // drag start only after having dragged for some pixels\r\n        if (this._waitingForDragStart) {\r\n\r\n            if (!this._didDrag) {\r\n                // this is so we can e.g. process clicks without having a drag change the position\r\n                // e.g. a click to rotate the object\r\n                const delta = this.context.input.getPointerPositionDelta(0);\r\n                if (delta)\r\n                    this._dragDelta.add(delta);\r\n                if (this._dragDelta.length() > 2)\r\n                    this._didDrag = true;\r\n                else return;\r\n            }\r\n\r\n            const args = this._waitingForDragStart;\r\n            this._waitingForDragStart = null;\r\n            this.onDragStart(args);\r\n        }\r\n\r\n        if (this._dragHelper && this._dragHelper.hasSelected) {\r\n            this.onUpdateDrag();\r\n        }\r\n\r\n\r\n        if (this._isDragging) {\r\n            if (this._dragHelper?.hasSelected === false) {\r\n                this.onDragEnd(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isDragging: boolean = false;\r\n    private _marker: UsageMarker | null = null;\r\n    private _dragDelta!: THREE.Vector2;\r\n    private _didDrag: boolean = false;\r\n\r\n    private onDragStart(evt: PointerEventData) {\r\n        if (!this._dragHelper) {\r\n            if (this.context.mainCamera)\r\n                this._dragHelper = new DragHelper(this.context.mainCamera);\r\n            else\r\n                return;\r\n        }\r\n        if (!evt || !evt.object) return;\r\n\r\n        const dc = GameObject.getComponentInParent(evt.object, DragControls);\r\n        if (!dc || dc !== this) return;\r\n\r\n\r\n        let object: THREE.Object3D = evt.object;\r\n\r\n        if (this.transformSelf) {\r\n            object = this.gameObject;\r\n        }\r\n\r\n        // raise event\r\n        const args: { selected: THREE.Object3D, attached: THREE.Object3D | null } = { selected: object, attached: object };\r\n        for (const listener of this.selectStartEventListener) {\r\n            listener(this, args);\r\n        }\r\n\r\n        if (!args.attached) return;\r\n        if (args.attached !== object) {\r\n            // if duplicatable changes the object being dragged\r\n            // should it also change the active drag controls (e.g. if it has a own one)\r\n            // const drag = GameObject.getComponentInParent(args.attached, DragControls);\r\n            // if(drag !== this){\r\n            //     console.log(args.attached, object);\r\n            //     drag?.onDragStart(evt);\r\n            //     return;\r\n            // }\r\n        }\r\n        object = args.attached;\r\n        this._isDragging = true;\r\n        this._dragHelper.setSelected(object, this.context);\r\n        if (this.orbit) this.orbit.enabled = false;\r\n\r\n        const sync = GameObject.getComponentInChildren(object, SyncedTransform);\r\n        if (debug)\r\n            console.log(\"DRAG START\", sync, object);\r\n        if (sync) {\r\n            sync.fastMode = true;\r\n            sync?.requestOwnership();\r\n        }\r\n\r\n        this._marker = GameObject.addNewComponent(object, UsageMarker);\r\n\r\n        // console.log(object, this._marker);\r\n\r\n        this._draggingRigidbodies.length = 0;\r\n        const rbs = GameObject.getComponentsInChildren(object, Rigidbody);\r\n        if (rbs)\r\n            this._draggingRigidbodies.push(...rbs);\r\n\r\n        const l = nameofFactory<IDragEventListener>();\r\n        GameObject.invokeOnChildren(this._dragHelper.selected, l(\"onDragStart\"));\r\n    }\r\n\r\n    private onUpdateDrag() {\r\n        if (!this._dragHelper) return;\r\n\r\n        this._dragHelper.onUpdate(this.context);\r\n        for (const rb of this._draggingRigidbodies) {\r\n            rb.wakeUp();\r\n            rb.resetVelocities();\r\n        }\r\n    }\r\n\r\n    private onDragEnd(evt: PointerEventData | null) {\r\n        if (!this || !this._isDragging) return;\r\n        this._isDragging = false;\r\n        if (!this._dragHelper) return;\r\n        for(const rb of this._draggingRigidbodies){\r\n            rb.setVelocity(rb.smoothedVelocity);\r\n        }\r\n        this._draggingRigidbodies.length = 0;\r\n        const selected = this._dragHelper.selected;\r\n        if (debug)\r\n            console.log(\"DRAG END\", selected, selected?.visible)\r\n        this._dragHelper.setSelected(null, this.context);\r\n        if (this.orbit) this.orbit.enabled = true;\r\n        if (evt?.object) {\r\n            const sync = GameObject.getComponentInChildren(evt.object, SyncedTransform);\r\n            if (sync) {\r\n                sync.fastMode = false;\r\n                // sync?.requestOwnership();\r\n            }\r\n            if (this._marker) {\r\n                this._marker.destroy();\r\n            }\r\n        }\r\n        // raise event\r\n        for (const listener of this.selectEndEventListener) {\r\n            listener(this);\r\n        }\r\n\r\n        const l = nameofFactory<IDragEventListener>();\r\n        GameObject.invokeOnChildren(selected, l(\"onDragEnd\"));\r\n    }\r\n}\r\n\r\n\r\n\r\nclass DragHelper {\r\n\r\n    public get hasSelected(): boolean {\r\n        return this._selected !== null && this._selected !== undefined;\r\n    }\r\n\r\n    public get selected(): THREE.Object3D | null {\r\n        return this._selected;\r\n    }\r\n\r\n    private _selected: THREE.Object3D | null = null;\r\n    private _context: Context | null = null;\r\n    private _camera: THREE.Camera;;\r\n    private _cameraPlane: THREE.Plane = new THREE.Plane();\r\n\r\n    private _hasGroundPlane: boolean = false;\r\n    private _groundPlane: THREE.Plane = new THREE.Plane();\r\n    private _groundOffset: THREE.Vector3 = new THREE.Vector3();\r\n    private _groundOffsetFactor: number = 0;\r\n    private _groundDistance: number = 0;\r\n    private _groundPlanePoint: THREE.Vector3 = new THREE.Vector3();\r\n\r\n    private _raycaster = new THREE.Raycaster();\r\n    private _cameraPlaneOffset = new THREE.Vector3();\r\n    private _intersection = new THREE.Vector3();\r\n    private _worldPosition = new THREE.Vector3();\r\n    private _inverseMatrix = new THREE.Matrix4();\r\n    private _rbs: Rigidbody[] = [];\r\n\r\n    private _groundLine: THREE.Line;\r\n    private _groundMarker: THREE.Object3D;\r\n    private static geometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, -1, 0)]);\r\n\r\n    constructor(camera: THREE.Camera) {\r\n        this._camera = camera;\r\n\r\n        const line = new THREE.Line(DragHelper.geometry);\r\n        const mat = line.material as THREE.LineBasicMaterial;\r\n        mat.color = new THREE.Color(.4, .4, .4);\r\n        line.layers.set(2);\r\n        line.name = 'line';\r\n        line.scale.y = 1;\r\n        // line.matrixAutoUpdate = false;\r\n        this._groundLine = line;\r\n\r\n        const geometry = new THREE.SphereGeometry(.5, 22, 22);\r\n        const material = new THREE.MeshBasicMaterial({ color: mat.color });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        sphere.visible = false;\r\n        sphere.layers.set(2);\r\n        this._groundMarker = sphere;\r\n    }\r\n\r\n    setSelected(newSelected: THREE.Object3D | null, context: Context) {\r\n        if (this._selected && context) {\r\n            for (const rb of this._rbs) {\r\n                rb.wakeUp();\r\n                // if (!rb.smoothedVelocity) continue;\r\n                rb.setVelocity(0,0,0);\r\n            }\r\n        }\r\n\r\n        if (this._selected) {\r\n\r\n            Avatar_POI.Remove(context, this._selected);\r\n        }\r\n\r\n        this._selected = newSelected;\r\n        this._context = context;\r\n        this._rbs.length = 0;\r\n\r\n        if (newSelected) {\r\n            context.scene.add(this._groundLine);\r\n            context.scene.add(this._groundMarker);\r\n        }\r\n        else {\r\n            this._groundLine.removeFromParent();\r\n            this._groundMarker.removeFromParent();\r\n        }\r\n\r\n        if (this._selected) {\r\n            if (!context) {\r\n                console.error(\"DragHelper: no context\");\r\n                return;\r\n            }\r\n            Avatar_POI.Add(context, this._selected, null);\r\n\r\n            this._groundOffsetFactor = 0;\r\n            this._hasGroundPlane = true;\r\n            this._groundOffset.set(0, 0, 0);\r\n            this._requireUpdateGroundPlane = true;\r\n\r\n            // this._rbs = GameObject.getComponentsInChildren(this._selected, Rigidbody);\r\n            this.onUpdateScreenSpacePlane();\r\n        }\r\n    }\r\n\r\n    private _groundOffsetVector = new THREE.Vector3(0, 1, 0);\r\n    private _requireUpdateGroundPlane = true;\r\n    private _didDragOnGroundPlaneLastFrame: boolean = false;\r\n\r\n    onUpdate(_context: Context) {\r\n        if (!this._context) return;\r\n\r\n\r\n        const mainKey = KeyCode.SPACE;\r\n        const secondaryKey = KeyCode.KEY_D;\r\n        const scaleKey = KeyCode.KEY_S;\r\n\r\n        const isRotateKeyPressed = this._context?.input.isKeyPressed(mainKey) || this._context?.input.isKeyPressed(secondaryKey);\r\n        const isRotating = this._context.input.getTouchesPressedCount() >= 2 || isRotateKeyPressed;\r\n        if (isRotating) {\r\n            const dt = this._context.input.getPointerPositionDelta(0);\r\n            if (dt) {\r\n                this._groundOffsetVector.set(0, 1, 0);\r\n                this._selected?.rotateOnWorldAxis(this._groundOffsetVector, dt.x * this._context.time.deltaTime);\r\n            }\r\n        }\r\n\r\n        // todo: allow this once synced transform sends world scale\r\n        // const isScaling = this._context?.input.isKeyPressed(scaleKey);\r\n        // if(isScaling){\r\n        //     const dt = this._context.input.getPointerPositionDelta(0);\r\n        //     if(dt){\r\n        //         this._selected?.scale.multiplyScalar(1 + (dt.x * this._context.time.deltaTime));\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        const rc = this._context.input.getPointerPositionRC(0);\r\n        if (!rc) return;\r\n        this._raycaster.setFromCamera(rc, this._camera);\r\n\r\n        if (this._selected) {\r\n            if (debug) console.log(\"UPDATE DRAG\", this._selected);\r\n            this._groundOffsetVector.set(0, 1, 0);\r\n            const lookDirection = getWorldPosition(this._camera).clone().sub(getWorldPosition(this._selected)).normalize();\r\n            const lookDot = Math.abs(lookDirection.dot(this._groundOffsetVector));\r\n\r\n            const switchModeKeyPressed = this._context?.input.isKeyPressed(mainKey) || this._context?.input.isKeyPressed(secondaryKey);\r\n            const dragOnGroundPlane = !isRotating && lookDot > .2 && !switchModeKeyPressed && this._context!.input.getPointerPressedCount() <= 1;\r\n            const changed = this._didDragOnGroundPlaneLastFrame !== dragOnGroundPlane;\r\n            this._didDragOnGroundPlaneLastFrame = dragOnGroundPlane;\r\n\r\n            if (!this._hasGroundPlane) this._requireUpdateGroundPlane = true;\r\n            if (this._requireUpdateGroundPlane || !dragOnGroundPlane || changed)\r\n                this.onUpdateGroundPlane();\r\n\r\n            this._requireUpdateGroundPlane = false;\r\n            if (this._hasGroundPlane) {\r\n                // const wp = getWorldPosition(this._selected);\r\n                // const ray = new THREE.Ray(wp, new THREE.Vector3(0, -1, 0));\r\n\r\n                if (this._raycaster.ray.intersectPlane(this._groundPlane, this._intersection)) {\r\n                    const y = this._intersection.y;\r\n                    this._groundPlanePoint.copy(this._intersection).sub(this._groundOffset);\r\n                    this._groundPlanePoint.y = y;\r\n\r\n                    if (dragOnGroundPlane) {\r\n                        this._groundOffsetVector.set(0, 1, 0);\r\n                        // console.log(this._groundOffset);\r\n                        const wp = this._intersection.sub(this._groundOffset).add(this._groundOffsetVector.multiplyScalar(this._groundOffsetFactor));\r\n                        this.onUpdateWorldPosition(wp, this._groundPlanePoint, false);\r\n                        this.onDidUpdate();\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO: fix this\r\n                else this._groundPlanePoint.set(0, 99999, 0);\r\n                // else  if (ray.intersectPlane(this._groundPlane, this._intersection)) {\r\n                //     const y = this._intersection.y;\r\n                //     this._groundPlanePoint.copy(this._intersection).sub(this._groundOffset);\r\n                //     this._groundPlanePoint.y = y;\r\n                // }\r\n            }\r\n\r\n            if (changed) {\r\n                this.onUpdateScreenSpacePlane();\r\n            }\r\n\r\n            this._requireUpdateGroundPlane = true;\r\n            if (this._raycaster.ray.intersectPlane(this._cameraPlane, this._intersection)) {\r\n                this.onUpdateWorldPosition(this._intersection.sub(this._cameraPlaneOffset), this._groundPlanePoint, true);\r\n                this.onDidUpdate();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onUpdateWorldPosition(wp: THREE.Vector3, pointOnPlane: THREE.Vector3 | null, heightOnly: boolean) {\r\n        if (!this._selected) return;\r\n        if (heightOnly) {\r\n            const cur = getWorldPosition(this._selected);\r\n            cur.y = wp.y;\r\n            wp = cur;\r\n        }\r\n        setWorldPosition(this._selected, wp);\r\n        setWorldPosition(this._groundLine, wp);\r\n        if (this._hasGroundPlane) {\r\n            this._groundLine.scale.y = this._groundDistance;\r\n        }\r\n        else this._groundLine.scale.y = 1000;\r\n\r\n        this._groundMarker.visible = pointOnPlane !== null;\r\n        if (pointOnPlane) {\r\n            const s = getWorldPosition(this._camera).distanceTo(pointOnPlane) * .01;\r\n            this._groundMarker.scale.set(s, s, s);\r\n            setWorldPosition(this._groundMarker, pointOnPlane);\r\n        }\r\n    }\r\n\r\n    private onUpdateScreenSpacePlane() {\r\n        if (!this._selected || !this._context) return;\r\n        const rc = this._context.input.getPointerPositionRC(0);\r\n        if (!rc) return;\r\n        this._raycaster.setFromCamera(rc, this._camera);\r\n        this._cameraPlane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._cameraPlane.normal), this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\r\n        if (this._raycaster.ray.intersectPlane(this._cameraPlane, this._intersection) && this._selected.parent) {\r\n            this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\r\n            this._cameraPlaneOffset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\r\n        }\r\n    }\r\n\r\n    private onUpdateGroundPlane() {\r\n        if (!this._selected || !this._context) return;\r\n        const wp = getWorldPosition(this._selected);\r\n        const ray = new THREE.Ray(new THREE.Vector3(0, .1, 0).add(wp), new THREE.Vector3(0, -1, 0));\r\n        const opts = new RaycastOptions();\r\n        opts.ignore = [this._selected];\r\n        const hits = this._context.physics.raycastFromRay(ray, opts);\r\n        for (let i = 0; i < hits.length; i++) {\r\n            const hit = hits[i];\r\n            if (!hit.face || this.contains(this._selected, hit.object)) {\r\n                continue;\r\n            }\r\n            const normal = new THREE.Vector3(0, 1, 0); // hit.face.normal\r\n            this._groundPlane.setFromNormalAndCoplanarPoint(normal, hit.point);\r\n            break;\r\n        }\r\n\r\n        this._hasGroundPlane = true;\r\n        this._groundPlane.setFromNormalAndCoplanarPoint(ray.direction.multiplyScalar(-1), ray.origin);\r\n        this._raycaster.ray.intersectPlane(this._groundPlane, this._intersection);\r\n        this._groundDistance = this._intersection.distanceTo(wp);\r\n        this._groundOffset.copy(this._intersection).sub(wp);\r\n    }\r\n\r\n    private onDidUpdate() {\r\n        // todo: when using instancing we need to mark the matrix to update\r\n        InstancingUtil.markDirty(this._selected);\r\n\r\n        for (const rb of this._rbs) {\r\n            rb.wakeUp();\r\n            rb.resetForcesAndTorques();\r\n            // rb.setBodyFromGameObject({ x: 0, y: 0, z: 0 });\r\n            rb.setAngularVelocity(0, 0, 0);\r\n        }\r\n    }\r\n\r\n    private contains(obj: THREE.Object3D, toSearch: THREE.Object3D): boolean {\r\n        if (obj === toSearch) return true;\r\n        if (obj.children) {\r\n            for (const child of obj.children) {\r\n                if (this.contains(child, toSearch)) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n", "import { ArrayCamera, Color, Euler, EventDispatcher, Group, Matrix4, Mesh, MeshBasicMaterial, Object3D, Quaternion, RingGeometry, Texture, Vector3 } from 'three';\r\nimport { ARButton } from '../include/three/ARButton.js';\r\nimport { VRButton } from '../include/three/VRButton.js';\r\n\r\nimport { AssetReference } from \"../engine/engine_addressables\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { XRSessionMode } from \"../engine/engine_setup\";\r\nimport { getWorldPosition, getWorldQuaternion, setWorldPosition, setWorldQuaternion } from \"../engine/engine_three_utils\";\r\nimport { INeedleEngineComponent } from \"../engine/engine_types\";\r\nimport { getParam, isMozillaXR, setOrAddParamsToUrl } from \"../engine/engine_utils\";\r\n\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { noVoip } from \"./Voip\";\r\nimport { WebARSessionRoot } from \"./WebARSessionRoot\";\r\nimport { ControllerType, WebXRController } from \"./WebXRController\";\r\nimport { XRRig } from \"./WebXRRig\";\r\nimport { WebXRSync } from \"./WebXRSync\";\r\nimport { XRFlag, XRState, XRStateFlag } from \"./XRFlag\";\r\n\r\n\r\nexport async function detectARSupport() {\r\n    if(isMozillaXR()) return true;\r\n    if (\"xr\" in navigator) {\r\n        //@ts-ignore\r\n        return (await navigator[\"xr\"].isSessionSupported('immersive-ar')) === true;\r\n    }\r\n    return false;\r\n}\r\nexport async function detectVRSupport() {\r\n    if (\"xr\" in navigator) {\r\n        //@ts-ignore\r\n        return (await navigator[\"xr\"].isSessionSupported('immersive-vr')) === true;\r\n    }\r\n    return false;\r\n}\r\n\r\nlet arSupported = false;\r\nlet vrSupported = false;\r\ndetectARSupport().then(res => arSupported = res);\r\ndetectVRSupport().then(res => vrSupported = res);\r\n\r\n// import TeleportVR from \"teleportvr\";\r\n\r\nexport enum WebXREvent {\r\n    XRStarted = \"xrStarted\",\r\n    XRStopped = \"xrStopped\",\r\n    XRUpdate = \"xrUpdate\",\r\n    RequestVRSession = \"requestVRSession\",\r\n}\r\n\r\nexport declare type CreateButtonOptions = {\r\n    registerClick: boolean\r\n};\r\n\r\nexport class WebXR extends Behaviour {\r\n\r\n    @serializable()\r\n    enableVR = true;\r\n    @serializable()\r\n    enableAR = true;\r\n\r\n    @serializable(AssetReference)\r\n    defaultAvatar?: AssetReference;\r\n    @serializable()\r\n    handModelPath: string = \"\";\r\n\r\n    @serializable()\r\n    createVRButton: boolean = true;\r\n    @serializable()\r\n    createARButton: boolean = true;\r\n\r\n    private static _isInXr: boolean = false;\r\n    private static events: EventDispatcher = new EventDispatcher();\r\n\r\n    public static get IsInWebXR(): boolean { return this._isInXr; }\r\n    public static get XRSupported(): boolean { return 'xr' in navigator && (arSupported || vrSupported); }\r\n    public static get IsARSupported(): boolean { return arSupported; }\r\n    public static get IsVRSupported(): boolean { return vrSupported; }\r\n\r\n    public static addEventListener(type: string, listener: any): any {\r\n        this.events.addEventListener(type, listener);\r\n        return listener;\r\n    }\r\n    public static removeEventListener(type: string, listener: any): any {\r\n        this.events.removeEventListener(type, listener);\r\n        return listener;\r\n    }\r\n\r\n    public static createVRButton(webXR: WebXR, opts?: CreateButtonOptions): HTMLButtonElement {\r\n        if (!WebXR.XRSupported) {\r\n            console.warn(\"WebXR is not supported on this device\");\r\n        }\r\n        else\r\n            webXR.__internalAwake();\r\n        const vrButton = VRButton.createButton(webXR.context.renderer);\r\n        vrButton.classList.add('webxr-ar-button');\r\n        vrButton.classList.add('webxr-button');\r\n        this.resetButtonStyles(vrButton);\r\n        // if (this.enableAR) vrButton.style.marginLeft = \"60px\";\r\n        if (opts?.registerClick ?? true)\r\n            vrButton.addEventListener('click', webXR.onClickedVRButton.bind(webXR));\r\n        return vrButton;\r\n    }\r\n\r\n    public static createARButton(webXR: WebXR, opts?: CreateButtonOptions): HTMLButtonElement {\r\n        webXR.__internalAwake();\r\n        const domOverlayRoot = webXR.webAR?.getAROverlayContainer();\r\n        const features: any = {};\r\n        if (domOverlayRoot) {\r\n            features.domOverlay = { root: domOverlayRoot };\r\n            features.optionalFeatures = ['hit-test', 'dom-overlay'];\r\n        }\r\n        else {\r\n            console.warn(\"No dom overlay root found, HTML overlays on top of screen-based AR will not work.\");\r\n        }\r\n        features.optionalFeatures.push('plane-detection');\r\n        // features.optionalFeatures.push('light-estimation');\r\n        features.optionalFeatures.push('anchors');\r\n\r\n        const arButton = ARButton.createButton(webXR.context.renderer, features);\r\n        arButton.classList.add('webxr-ar-button');\r\n        arButton.classList.add('webxr-button');\r\n        WebXR.resetButtonStyles(arButton);\r\n        if (opts?.registerClick ?? true)\r\n            arButton.addEventListener('click', webXR.onClickedARButton.bind(webXR));\r\n        return arButton;\r\n    }\r\n\r\n    public static resetButtonStyles(button) {\r\n        if (!button) return;\r\n        button.style.position = \"\";\r\n        button.style.bottom = \"\";\r\n        button.style.left = \"\";\r\n    }\r\n\r\n    public endSession() {\r\n        const session = this.context.renderer.xr.getSession();\r\n        if (session) session.end();\r\n    }\r\n\r\n    public get Rig(): Object3D {\r\n        if (!this.rig) this.ensureRig();\r\n        return this.rig;\r\n    }\r\n\r\n    private controllers: WebXRController[] = [];\r\n    public get Controllers(): WebXRController[] {\r\n        return this.controllers;\r\n    }\r\n\r\n    public get LeftController(): WebXRController | null {\r\n        if (this.controllers.length > 0 && this.controllers[0].input?.handedness === \"left\") return this.controllers[0];\r\n        if (this.controllers.length > 1 && this.controllers[1].input?.handedness === \"left\") return this.controllers[1];\r\n        return null;\r\n    }\r\n\r\n    public get RightController(): WebXRController | null {\r\n        if (this.controllers.length > 0 && this.controllers[0].input?.handedness === \"right\") return this.controllers[0];\r\n        if (this.controllers.length > 1 && this.controllers[1].input?.handedness === \"right\") return this.controllers[1];\r\n        return null;\r\n    }\r\n\r\n    public get ARButton(): HTMLButtonElement | undefined {\r\n        return this._arButton;\r\n    }\r\n\r\n    public get VRButton(): HTMLButtonElement | undefined {\r\n        return this._vrButton;\r\n    }\r\n\r\n    public get IsInVR() { return this._isInVR; }\r\n    public get IsInAR() { return this._isInAR; }\r\n\r\n    private rig!: Object3D;\r\n    private isInit: boolean = false;\r\n\r\n    private _requestedAR: boolean = false;\r\n    private _requestedVR: boolean = false;\r\n    private _isInAR: boolean = false;\r\n    private _isInVR: boolean = false;\r\n\r\n    private _arButton?: HTMLButtonElement;\r\n    private _vrButton?: HTMLButtonElement;\r\n\r\n    private webAR: WebAR | null = null;\r\n\r\n    awake(): void {\r\n        // as the webxr component is most of the times currently loaded as part of the scene \r\n        // and not part of the glTF directly and thus does not go through the whole serialization process currently\r\n        // we need to to manuall make sure it is of the correct type here\r\n        if (this.defaultAvatar) {\r\n            if (typeof (this.defaultAvatar) === \"string\") {\r\n                this.defaultAvatar = AssetReference.getOrCreate(this.sourceId ?? \"/\", this.defaultAvatar, this.context);\r\n            }\r\n        }\r\n        if (!GameObject.findObjectOfType(WebXRSync, this.context)) {\r\n            const sync = GameObject.addNewComponent(this.gameObject, WebXRSync, false) as WebXRSync;\r\n            sync.webXR = this;\r\n        }\r\n        this.webAR = new WebAR(this);\r\n    }\r\n\r\n    onEnable() {\r\n        if (this.isInit) return;\r\n        if (!this.enableAR && !this.enableVR) return;\r\n        this.isInit = true;\r\n\r\n        this.context.renderer.xr.enabled = true;\r\n\r\n        // general WebXR support?\r\n        const browserSupportsXR = WebXR.XRSupported;\r\n\r\n\r\n        // TODO: move the whole buttons positioning out of here and make it configureable from css\r\n        // better set proper classes so user code can react to it instead \r\n        // of this hardcoded stuff\r\n        let arButton, vrButton;\r\n        const buttonsContainer = document.createElement('div');\r\n        buttonsContainer.classList.add(\"webxr-buttons\");\r\n        this.context.domElement.append(buttonsContainer);\r\n\r\n        // AR support\r\n        if (this.enableAR && this.createARButton) {\r\n            arButton = WebXR.createARButton(this);\r\n            this._arButton = arButton;\r\n            buttonsContainer.appendChild(arButton);\r\n        }\r\n\r\n        // VR support\r\n        if (this.createVRButton && this.enableVR) {\r\n            vrButton = WebXR.createVRButton(this);\r\n            this._vrButton = vrButton;\r\n            buttonsContainer.appendChild(vrButton);\r\n        }\r\n        setTimeout(() => {\r\n            WebXR.resetButtonStyles(vrButton);\r\n            WebXR.resetButtonStyles(arButton);\r\n        }, 1000);\r\n    }\r\n\r\n    private _transformOrientation: Quaternion = new Quaternion();\r\n    public get TransformOrientation(): Quaternion { return this._transformOrientation; }\r\n\r\n    private _currentHeadPose: XRViewerPose | null = null;\r\n    public get HeadPose(): XRViewerPose | null { return this._currentHeadPose; }\r\n\r\n    onBeforeRender(frame) {\r\n        if (!frame) return;\r\n        // TODO: figure out why screen is black if we enable the code written here\r\n        // const referenceSpace = renderer.xr.getReferenceSpace();\r\n        const session = this.context.renderer.xr.getSession();\r\n\r\n        if (session) {\r\n            const pose = frame.getViewerPose(this.context.renderer.xr.getReferenceSpace());\r\n            this._currentHeadPose = pose;\r\n            if (!pose) return; // e.g. if user is not wearing headset\r\n            const transform: XRRigidTransform = pose?.transform;\r\n\r\n            if (transform) {\r\n                this._transformOrientation.set(transform.orientation.x, transform.orientation.y, transform.orientation.z, transform.orientation.w);\r\n            }\r\n\r\n            for (const ctrl of this.controllers) {\r\n                ctrl.onUpdate(session);\r\n            }\r\n\r\n            if (this._isInAR) {\r\n                this.webAR?.onUpdate(session, frame);\r\n            }\r\n        }\r\n\r\n        if (WebXR._isInXr === false && session) {\r\n            this.onEnterXR(session, frame);\r\n        }\r\n        WebXR.events.dispatchEvent({ type: WebXREvent.XRUpdate, frame: frame, xr: this.context.renderer.xr, rig: this.rig });\r\n    }\r\n\r\n    private onClickedARButton() {\r\n        if (!this._isInAR) {\r\n            this._requestedAR = true;\r\n            this._requestedVR = false;\r\n\r\n            // if we do this on enter xr the state has already been changed in AR mode\r\n            // so we need to to this before session has started\r\n            this.captureStateBeforeXR();\r\n        }\r\n    }\r\n\r\n    private onClickedVRButton() {\r\n        if (!this._isInVR) {\r\n\r\n            // happens e.g. when headset is off and xr session never actually started\r\n            if (this._requestedVR) {\r\n                this.onExitXR(null);\r\n                return;\r\n            }\r\n\r\n            this._requestedAR = false;\r\n            this._requestedVR = true;\r\n            this.captureStateBeforeXR();\r\n\r\n            // build controllers before session begins - this seems to fix issue with controller models not appearing/not getting connection event\r\n            this.ensureRig();\r\n            for (let i = 0; i < 2; i++) {\r\n                WebXRController.Create(this, i, this.gameObject as GameObject, ControllerType.PhysicalDevice);\r\n            }\r\n\r\n            WebXR.events.dispatchEvent({ type: WebXREvent.RequestVRSession });\r\n        }\r\n    }\r\n\r\n    private captureStateBeforeXR() {\r\n        if (this.context.mainCamera) {\r\n            this._originalCameraPosition.copy(getWorldPosition(this.context.mainCamera));\r\n            this._originalCameraRotation.copy(getWorldQuaternion(this.context.mainCamera));\r\n            this._originalCameraParent = this.context.mainCamera.parent;\r\n        }\r\n        if(this.Rig){\r\n            this._originalXRRigParent = this.Rig.parent;\r\n            this._originalXRRigPosition.copy(this.Rig.position);\r\n            this._originalXRRigRotation.copy(this.Rig.quaternion);\r\n        }\r\n    }\r\n\r\n    private ensureRig() {\r\n        if (!this.rig) {\r\n            // currently just used for pose\r\n            const xrRig = GameObject.findObjectOfType(XRRig, this.context);\r\n            if (xrRig) {\r\n                // make it match unity forward\r\n                this.rig = xrRig.gameObject;\r\n                this.rig.rotateY(Math.PI);\r\n                // this.rig.position.copy(existing.worldPosition);\r\n                // this.rig.quaternion.premultiply(existing.worldQuaternion);\r\n            }\r\n            else {\r\n                this.rig = new Group();\r\n                this.rig.rotateY(Math.PI);\r\n                this.rig.name = \"XRRig\";\r\n                this.context.scene.add(this.rig);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _originalCameraParent: Object3D | null = null;\r\n    private _originalCameraPosition: Vector3 = new Vector3();\r\n    private _originalCameraRotation: Quaternion = new Quaternion();\r\n\r\n    private _originalXRRigParent: Object3D | null = null;\r\n    private _originalXRRigPosition: Vector3 = new Vector3();\r\n    private _originalXRRigRotation: Quaternion = new Quaternion();\r\n\r\n    private onEnterXR(session: XRSession, frame: XRFrame) {\r\n        console.log(\"[XR] session begin\", session);\r\n        WebXR._isInXr = true;\r\n\r\n        this.ensureRig();\r\n\r\n        const space = this.context.renderer.xr.getReferenceSpace();\r\n        if (space && this.rig) {\r\n            const pose = frame.getViewerPose(space);\r\n            const rot = pose?.transform.orientation;\r\n            if (rot) {\r\n                const quat = new Quaternion(rot.x, rot.y, rot.z, rot.w);\r\n                const eu = new Euler().setFromQuaternion(quat);\r\n                this.rig.rotateY(eu.y);\r\n                // this.rig.quaternion.multiply(quat);\r\n            }\r\n        }\r\n\r\n        // when we set unity layers objects will only be rendered on one eye\r\n        // we set layers to sync raycasting and have a similar behaviour to unity\r\n        const xr = this.context.renderer.xr;\r\n        if (this.context.mainCamera) {\r\n            //@ts-ignore\r\n            const cam = xr.getCamera(this.context.mainCamera) as ArrayCamera;\r\n            for (const c of cam.cameras) {\r\n                c.layers.enableAll();\r\n            }\r\n\r\n            this.rig.add(this.context.mainCamera);\r\n            if (this._requestedAR) {\r\n                this.context.scene.add(this.rig);\r\n            }\r\n        }\r\n\r\n        const flag = this._requestedAR ? XRStateFlag.AR : XRStateFlag.VR;\r\n\r\n        XRState.Global.Set(flag);\r\n\r\n        switch (flag) {\r\n            case XRStateFlag.AR:\r\n                this.context.xrSessionMode = XRSessionMode.ImmersiveAR;\r\n                this._isInAR = true;\r\n                this.webAR?.onBegin(session);\r\n                break;\r\n            case XRStateFlag.VR:\r\n                this.context.xrSessionMode = XRSessionMode.ImmersiveVR;\r\n                this._isInVR = true;\r\n                this.onEnterVR(session);\r\n                break;\r\n        }\r\n\r\n        session.addEventListener('end', () => {\r\n            console.log(\"[XR] session end\");\r\n            WebXR._isInXr = false;\r\n            this.onExitXR(session);\r\n        });\r\n\r\n        this.onEnterXR_HandleMirrorWindow(session);\r\n\r\n        WebXR.events.dispatchEvent({ type: WebXREvent.XRStarted, session: session });\r\n    }\r\n\r\n    private onExitXR(session: XRSession | null) {\r\n\r\n        const wasInAR = this._isInAR;\r\n\r\n        if (this._isInAR && session) {\r\n            this.webAR?.onEnd(session);\r\n        }\r\n\r\n        this._isInAR = false;\r\n        this._isInVR = false;\r\n        this._requestedAR = false;\r\n        this._requestedVR = false;\r\n        this.context.xrSessionMode = undefined;\r\n\r\n        if (this.xrMirrorWindow) {\r\n            this.xrMirrorWindow.close();\r\n            this.xrMirrorWindow = null;\r\n        }\r\n\r\n        this.destroyControllers();\r\n\r\n        if (this.context.mainCamera) {\r\n            this._originalCameraParent?.add(this.context.mainCamera);\r\n            setWorldPosition(this.context.mainCamera, this._originalCameraPosition);\r\n            setWorldQuaternion(this.context.mainCamera, this._originalCameraRotation);\r\n            this.context.mainCamera.scale.set(1, 1, 1);\r\n        }\r\n\r\n        if(wasInAR){\r\n            this._originalXRRigParent?.add(this.rig);\r\n            this.rig.position.copy(this._originalXRRigPosition);\r\n            this.rig.quaternion.copy(this._originalXRRigRotation);\r\n        }\r\n\r\n        XRState.Global.Set(XRStateFlag.Browser | XRStateFlag.ThirdPerson);\r\n        WebXR.events.dispatchEvent({ type: WebXREvent.XRStopped, session: session });\r\n    }\r\n\r\n    private onEnterVR(_session: XRSession) {\r\n    }\r\n\r\n    private destroyControllers() {\r\n        for (let i = this.controllers.length - 1; i >= 0; i -= 1) {\r\n            this.controllers[i]?.destroy();\r\n        }\r\n        this.controllers.length = 0;\r\n    }\r\n\r\n    private xrMirrorWindow: Window | null = null;\r\n\r\n    private onEnterXR_HandleMirrorWindow(session: XRSession) {\r\n        if (!getParam(\"mirror\")) return;\r\n        setTimeout(() => {\r\n            if (!WebXR.IsInWebXR) return;\r\n            const url = new URL(window.location.href);\r\n            setOrAddParamsToUrl(url.searchParams, noVoip, 1);\r\n            setOrAddParamsToUrl(url.searchParams, \"isMirror\", 1);\r\n            const str = url.toString();\r\n            this.xrMirrorWindow = window.open(str, \"webxr sync\", \"popup=yes\");\r\n            if (this.xrMirrorWindow) {\r\n                this.xrMirrorWindow.onload = () => {\r\n                    if (this.xrMirrorWindow)\r\n                        this.xrMirrorWindow.onbeforeunload = () => {\r\n                            if (WebXR.IsInWebXR)\r\n                                session.end();\r\n                        };\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n\r\n// not sure if this should be a behaviour. \r\n// for now we dont really need it to go through the usual update loop\r\nexport class WebAR {\r\n\r\n    get webxr(): WebXR { return this._webxr; }\r\n\r\n    private _webxr: WebXR;\r\n\r\n    private reticle: Object3D | null = null;\r\n    private reticleParent: Object3D | null = null;\r\n    private hitTestSource: XRHitTestSource | null = null;\r\n    private reticleActive: boolean = true;\r\n\r\n    // scene.background before entering AR\r\n    private previousBackground: Color | null | Texture = null;\r\n    private previousEnvironment: Texture | null = null;\r\n\r\n    private sessionRoot: WebARSessionRoot | null = null;\r\n    private _previousParent: Object3D | null = null;\r\n    // we need this in case the session root is on the same object as the webxr component\r\n    // so if we disable the session root we attach the webxr component to this temporary object\r\n    // to still receive updates\r\n    private static tempWebXRObject: Object3D;\r\n\r\n    private get context() { return this.webxr.context; }\r\n\r\n    constructor(webxr: WebXR) {\r\n        this._webxr = webxr;\r\n    }\r\n\r\n    private arDomOverlay: HTMLElement | null = null;\r\n    private arOverlayElement: INeedleEngineComponent | HTMLElement | null = null;\r\n    private noHitTestAvailable: boolean = false;\r\n    private didPlaceARSessionRoot: boolean = false;\r\n\r\n    getAROverlayContainer(): HTMLElement | null {\r\n        this.arDomOverlay = this.webxr.context.domElement as HTMLElement;\r\n        // for react cases we dont have an Engine Element\r\n        const element: any = this.arDomOverlay;\r\n        if (element.getAROverlayContainer)\r\n            this.arOverlayElement = element.getAROverlayContainer();\r\n        else this.arOverlayElement = this.arDomOverlay;\r\n        return this.arOverlayElement;\r\n    }\r\n\r\n    setReticleActive(active: boolean) {\r\n        this.reticleActive = active;\r\n    }\r\n\r\n    async onBegin(session: XRSession) {\r\n        const context = this.webxr.context;\r\n        this.reticleActive = true;\r\n        this.didPlaceARSessionRoot = false;\r\n        this.getAROverlayContainer();\r\n\r\n        const deviceType = navigator.userAgent?.includes(\"OculusBrowser\") ? ControllerType.PhysicalDevice : ControllerType.Touch;\r\n        const controllerCount = deviceType === ControllerType.Touch ? 4 : 2;\r\n        for (let i = 0; i < controllerCount; i++) {\r\n            WebXRController.Create(this.webxr, i, this.webxr.gameObject as GameObject, deviceType)\r\n        }\r\n\r\n        if (!this.sessionRoot || this.sessionRoot.destroyed || !this.sessionRoot.activeAndEnabled)\r\n            this.sessionRoot = GameObject.findObjectOfType(WebARSessionRoot, context);\r\n\r\n        this.previousBackground = context.scene.background;\r\n        this.previousEnvironment = context.scene.environment;\r\n        context.scene.background = null;\r\n\r\n        session.requestReferenceSpace('viewer').then((referenceSpace) => {\r\n            session.requestHitTestSource?.call(session, { space: referenceSpace })?.then((source) => {\r\n                this.hitTestSource = source;\r\n            }).catch((err) => {\r\n                this.noHitTestAvailable = true;\r\n                console.warn(\"WebXR: Hit test not supported\", err);\r\n            });\r\n        });\r\n\r\n        if (!this.reticle && this.sessionRoot) {\r\n            this.reticle = new Mesh(\r\n                new RingGeometry(0.07, 0.09, 32).rotateX(- Math.PI / 2),\r\n                new MeshBasicMaterial()\r\n            );\r\n            this.reticle.name = \"AR Placement reticle\";\r\n            this.reticle.matrixAutoUpdate = false;\r\n            this.reticle.visible = false;\r\n\r\n            // create AR reticle parent to allow WebXRSessionRoot to be translated, rotated or scaled\r\n            this.reticleParent = new Object3D();\r\n            this.reticleParent.name = \"AR Reticle Parent\";\r\n            this.reticleParent.matrixAutoUpdate = false;\r\n            this.reticleParent.add(this.reticle);\r\n            this.reticleParent.matrix.copy(this.sessionRoot.gameObject.matrixWorld);\r\n\r\n            if (this.webxr.scene) {\r\n                this.context.scene.add(this.reticleParent);\r\n                // this.context.scene.add(this.reticle);\r\n                this.context.scene.visible = true;\r\n            }\r\n            else console.warn(\"Could not found WebXR Rig\");\r\n        }\r\n\r\n        this._previousParent = this.webxr.gameObject;\r\n        if (!WebAR.tempWebXRObject) WebAR.tempWebXRObject = new Object3D();\r\n        this.context.scene.add(WebAR.tempWebXRObject);\r\n        GameObject.addComponent(WebAR.tempWebXRObject as GameObject, this.webxr);\r\n\r\n        if (this.sessionRoot) {\r\n            this.sessionRoot.webAR = this;\r\n            this.sessionRoot?.onBegin(session);\r\n        }\r\n        else console.warn(\"No WebARSessionRoot found in scene\")\r\n\r\n        const eng = this.context.domElement as INeedleEngineComponent;\r\n        eng?.onEnterAR?.call(eng, session, this.arOverlayElement!);\r\n\r\n        this.context.mainCameraComponent?.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n\r\n    onEnd(session: XRSession) {\r\n        if (this._previousParent) {\r\n            GameObject.addComponent(this._previousParent as GameObject, this.webxr);\r\n            this._previousParent = null;\r\n        }\r\n        this.hitTestSource = null;\r\n        const context = this.webxr.context;\r\n        context.scene.background = this.previousBackground;\r\n        context.scene.environment = this.previousEnvironment;\r\n        if (this.sessionRoot) {\r\n            this.sessionRoot.onEnd(this.webxr.Rig, session);\r\n        }\r\n\r\n        const el = this.context.domElement as INeedleEngineComponent;\r\n        el.onExitAR?.call(el, session);\r\n\r\n        this.context.mainCameraComponent?.applyClearFlagsIfIsActiveCamera();\r\n    }\r\n\r\n    onUpdate(session: XRSession, frame: XRFrame) {\r\n\r\n        if (this.noHitTestAvailable === true) {\r\n            if (this.reticle)\r\n                this.reticle.visible = false;\r\n            if (!this.didPlaceARSessionRoot) {\r\n                this.didPlaceARSessionRoot = true;\r\n                const rig = this.webxr.Rig;\r\n                const placementMatrix = arPlacementWithoutHitTestMatrix.clone();\r\n                if (rig) {\r\n                    const positionFromRig = new Vector3(0, 0, 0).add(rig.position).divideScalar(this.sessionRoot?.arScale ?? 1);\r\n                    placementMatrix.multiply(new Matrix4().makeTranslation(positionFromRig.x, positionFromRig.y, positionFromRig.z));\r\n                    // placementMatrix.setPosition(positionFromRig);\r\n                }\r\n                this.sessionRoot?.placeAt(rig, placementMatrix);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!this.hitTestSource) return;\r\n        const hitTestResults = frame.getHitTestResults(this.hitTestSource);\r\n        if (hitTestResults.length) {\r\n            const hit = hitTestResults[0];\r\n            const referenceSpace = this.webxr.context.renderer.xr.getReferenceSpace();\r\n            if (referenceSpace) {\r\n                const pose = hit.getPose(referenceSpace);\r\n\r\n                if (this.sessionRoot) {\r\n                    const didPlace = this.sessionRoot.onUpdate(this.webxr.Rig, session, pose);\r\n                    this.didPlaceARSessionRoot = didPlace;\r\n                }\r\n\r\n                if (this.reticle) {\r\n                    this.reticle.visible = this.reticleActive;\r\n                    if (this.reticleActive) {\r\n                        if (pose) {\r\n                            const matrix = pose.transform.matrix;\r\n                            this.reticle.matrix.fromArray(matrix);\r\n                            if (this.webxr.Rig)\r\n                                this.reticle.matrix.premultiply(this.webxr.Rig.matrix);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            this.sessionRoot?.onUpdate(this.webxr.Rig, session, null);\r\n            if (this.reticle)\r\n                this.reticle.visible = false;\r\n        }\r\n    }\r\n}\r\n\r\nconst arPlacementWithoutHitTestMatrix = new Matrix4().identity().makeTranslation(0, -0.5, 0);", "class ARButton {\r\n\r\n\tstatic createButton( renderer, sessionInit = {} ) {\r\n\r\n\t\tconst button = document.createElement( 'button' );\r\n\t\tlet ARButtonControlsDomOverlay = false;\r\n\r\n\t\tfunction showStartAR( /*device*/ ) {\r\n\r\n\t\t\tif ( sessionInit.domOverlay === undefined) {\r\n\r\n\t\t\t\tvar overlay = document.createElement( 'div' );\r\n\t\t\t\toverlay.style.display = 'none';\r\n\t\t\t\tdocument.body.appendChild( overlay );\r\n\r\n\t\t\t\tvar svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\r\n\t\t\t\tsvg.setAttribute( 'width', 38 );\r\n\t\t\t\tsvg.setAttribute( 'height', 38 );\r\n\t\t\t\tsvg.style.position = 'absolute';\r\n\t\t\t\tsvg.style.right = '20px';\r\n\t\t\t\tsvg.style.top = '20px';\r\n\t\t\t\tsvg.addEventListener( 'click', function () {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t} );\r\n\t\t\t\toverlay.appendChild( svg );\r\n\r\n\t\t\t\tvar path = document.createElementNS( 'http://www.w3.org/2000/svg', 'path' );\r\n\t\t\t\tpath.setAttribute( 'd', 'M 12,12 L 28,28 M 28,12 12,28' );\r\n\t\t\t\tpath.setAttribute( 'stroke', '#fff' );\r\n\t\t\t\tpath.setAttribute( 'stroke-width', 2 );\r\n\t\t\t\tsvg.appendChild( path );\r\n\r\n\t\t\t\tif ( sessionInit.optionalFeatures === undefined ) {\r\n\r\n\t\t\t\t\tsessionInit.optionalFeatures = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsessionInit.optionalFeatures.push( 'dom-overlay' );\r\n\t\t\t\tsessionInit.domOverlay = { root: overlay };\r\n\t\t\t\tARButtonControlsDomOverlay = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( sessionInit.optionalFeatures === undefined ) sessionInit.optionalFeatures = [];\r\n\r\n\t\t\t// added for Hololens support\r\n\t\t\tsessionInit.optionalFeatures.push( 'local-floor' );\r\n\t\t\tsessionInit.optionalFeatures.push( 'hand-tracking' );\r\n\t\t\tsessionInit.optionalFeatures.push( 'layers' );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet currentSession = null;\r\n\t\t\tlet originalDomOverlayParent = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\t// Workaround: seems WebXR Viewer has a non-standard behaviour when it comes to DOM Overlay and Canvas;\r\n\t\t\t\t// HTMLElements that are inside the Canvas element are not visible in the DOM Overlay.\r\n\t\t\t\tconst isWebXRViewer = /WebXRViewer\\//i.test( navigator.userAgent );\r\n\t\t\t\tif (isWebXRViewer) {\r\n\t\t\t\t\tif(sessionInit.domOverlay?.root) {\r\n\t\t\t\t\t\tconst overlayElement = sessionInit.domOverlay.root;\r\n\t\t\t\t\t\toriginalDomOverlayParent = overlayElement.parentElement;\r\n\t\t\t\t\t\tif (originalDomOverlayParent) {\r\n\t\t\t\t\t\t\tconsole.log(\"Reparent DOM Overlay to body\", overlayElement, overlayElement.style.display);\r\n\t\t\t\t\t\t\t// mozilla webxr does hide elements on session start\r\n\t\t\t\t\t\t\t// this is only necessary if we generated the overlay element\r\n\t\t\t\t\t\t\toverlayElement.style.display = \"\";\r\n\t\t\t\t\t\t\toverlayElement.style.visibility = \"\";\r\n\t\t\t\t\t\t\tdocument.body.appendChild(overlayElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn(\"WebXRViewer: No DOM Overlay found\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\t// 'local' is head-relative, 'local-floor' is what the device thinks the floor is (e.g. Hololens knows pretty well)\r\n\t\t\t\t// renderer.xr.setReferenceSpaceType( 'local' );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\r\n\t\t\t\tbutton.textContent = 'STOP AR';\r\n\t\t\t\t\r\n\t\t\t\tif (ARButtonControlsDomOverlay)\r\n\t\t\t\t\tsessionInit.domOverlay.root.style.display = '';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'START AR';\r\n\t\t\t\t\r\n\t\t\t\t// if we reparented the DOM overlay, we're reverting it here\r\n\t\t\t\tif (originalDomOverlayParent)\r\n\t\t\t\t\toriginalDomOverlayParent.appendChild(sessionInit.domOverlay.root);\r\n\t\t\t\t\r\n\t\t\t\tif (ARButtonControlsDomOverlay)\r\n\t\t\t\t\tsessionInit.domOverlay.root.style.display = 'none';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'START AR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-ar', sessionInit ).then( onSessionStarted );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.disabled = true;\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showARNotSupported() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'AR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'ARButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-ar' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showStartAR() : showARNotSupported();\r\n\r\n\t\t\t} ).catch( showARNotSupported );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ARButton };", "class VRButton {\r\n\r\n\tstatic createButton( renderer, options ) {\r\n\r\n\t\tif ( options ) {\r\n\r\n\t\t\tconsole.error( 'THREE.VRButton: The \"options\" parameter has been removed. Please set the reference space type via renderer.xr.setReferenceSpaceType() instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n                // console.log(\"Session started, features: \",session)\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'high-fixed-foveation-level', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.disabled = true;\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif(VRButton.xrSessionIsGranted){\r\n\t\t\t\t\tconsole.log(\"XR session is granted - will enter immersive web now\")\r\n\t\t\t\t\tbutton.click();\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };", "\r\nimport { Behaviour } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { RoomEvents } from \"../engine/engine_networking\"\r\nimport Peer, { MediaConnection } from \"peerjs\"\r\nimport { AudioSource } from \"./AudioSource\";\r\nimport * as utils from \"../engine/engine_utils\"\r\nimport { AudioAnalyser } from \"three\";\r\nimport { SendQueue } from \"../engine/engine_networking_types\";\r\n\r\nexport const noVoip = \"noVoip\";\r\nconst debug = utils.getParam(\"debugvoip\");\r\nconst allowVoip = utils.getParam(\"voip\");\r\n\r\nenum PeerMessage {\r\n    Update_ID = \"peer-update-id\",\r\n}\r\n\r\nclass PeerModel {\r\n    id: string;\r\n\r\n    constructor(id: string) {\r\n        this.id = id;\r\n    }\r\n}\r\n\r\ninterface IPeerUpdateResponse {\r\n    id: string; // user id \r\n    peerId: string; // peer id\r\n}\r\n\r\nenum PeerDebugOptions {\r\n    None = 0,\r\n    Errors = 1,\r\n    ErrorsAndWarnings = 2,\r\n    All = 3\r\n}\r\n\r\nclass PeerConnection {\r\n    private readonly peer: Peer;\r\n    private voip: Voip;\r\n    private userId: string;\r\n    private peerId: string;\r\n    private call: MediaConnection | null = null;\r\n    private callErrorListener: ((error: Error) => void) | null = null;\r\n    private stream: MediaStream | null = null;\r\n\r\n    constructor(voip: Voip, peer: Peer, userId: string, peerId: string) {\r\n        this.voip = voip;\r\n        this.peer = peer;\r\n        this.userId = userId;\r\n        this.peerId = peerId;\r\n    }\r\n\r\n    public close() {\r\n        if (debug)\r\n            console.log(\"close voip call\");\r\n        if (this.callErrorListener)\r\n            this.peer.off(\"error\", this.callErrorListener);\r\n        if (this.call && this.call.open)\r\n            this.call.close();\r\n        this.stream?.getTracks().forEach(function (track) {\r\n            track.stop();\r\n        });\r\n    }\r\n\r\n    public updateMute(mute: boolean) {\r\n        if (!this.stream) return;\r\n        const tracks = this.stream?.getAudioTracks();\r\n        for (const track of tracks) {\r\n            track.enabled = !mute;\r\n        }\r\n    }\r\n\r\n    public async startVoipCall() {\r\n\r\n        const res = await Voip.HasMicrophonePermissions();\r\n        if (!res) {\r\n            console.warn(\"no permission to use microphone, can not start call\");\r\n            return;\r\n        }\r\n\r\n        if (debug)\r\n            console.log(\"start voip call\");\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\r\n        this.updateMute(this.voip.muteOutput);\r\n        if (debug)\r\n            console.log(this.stream)\r\n        this.call = this.peer.call(this.peerId, this.stream, { metadata: { userId: this.userId } });\r\n        this.call.on(\"error\", err => {\r\n            console.error(err);\r\n        });\r\n        this.call.on(\"stream\", remoteStream => {\r\n            if (debug)\r\n                console.log(\"received stream from remote again\", remoteStream);\r\n            // const ic = new AudioConnection(this.voip.gameObject, this.call).openAudioStream(remoteStream);\r\n        });\r\n        //@ts-ignore - ignore overload error\r\n        this.peer.on(\"close\", this.onCallClose.bind(this));\r\n\r\n        this.callErrorListener = err => {\r\n            if (err.message.includes(this.peerId)) {\r\n                console.log(\"Could not connect to \" + this.peerId);\r\n                if (this.callErrorListener)\r\n                    this.peer.off(\"error\", this.callErrorListener);\r\n                if (this.call)\r\n                    this.call.close();\r\n                this.stream?.getTracks().forEach(function (track) {\r\n                    track.stop();\r\n                });\r\n                this.stream = null;\r\n            }\r\n            else\r\n                console.error(err)\r\n        }\r\n        //@ts-ignore - ignore overload error\r\n        this.peer.on(\"error\", this.callErrorListener);\r\n    }\r\n\r\n    private onCallClose(evt) {\r\n        if (debug)\r\n            console.log(\"call closed\", evt);\r\n    }\r\n}\r\n\r\nclass AudioConnection {\r\n    public get currentStream(): MediaStream | null {\r\n        return this.stream;\r\n    }\r\n\r\n    public get currentAudio(): THREE.Audio | null {\r\n        return this.audio;\r\n    }\r\n\r\n    public get currentAnalyzer(): THREE.AudioAnalyser | null { return this.analyzer; }\r\n\r\n    private voip: Voip;\r\n    private call: MediaConnection;\r\n    private audio: THREE.Audio | null = null;\r\n    private stream: MediaStream | null = null;\r\n    private obj: THREE.Object3D;\r\n    private analyzer: THREE.AudioAnalyser | null = null;\r\n\r\n    private waitingForStart: boolean = false;\r\n    private closed: boolean = false;\r\n    private audioElement: HTMLAudioElement | null = null;\r\n\r\n    public constructor(voip: Voip, obj: THREE.Object3D, call: MediaConnection) {\r\n        this.voip = voip;\r\n        this.obj = obj;\r\n        this.call = call;\r\n    }\r\n\r\n\r\n    public openAudioStream(stream: MediaStream) {\r\n        const tracks = stream.getAudioTracks();\r\n        for (const track of tracks) {\r\n            if (track.kind === \"audio\" && track.readyState === \"live\") {\r\n                this.open(track);\r\n                return;\r\n            }\r\n        }\r\n        console.warn(\"failed finding valid audio stream to begin call\");\r\n    }\r\n\r\n    public open(track: MediaStreamTrack) {\r\n        console.assert(track.kind === \"audio\", \"invalid track kind, expected audio but received \" + track.kind);\r\n        if (this.waitingForStart) return;\r\n        this.waitingForStart = true;\r\n        // console.trace();\r\n        if (!AudioSource.userInteractionRegistered) {\r\n            if (debug)\r\n                console.log(\"Incoming call, waiting for user interaction before opening audio\");\r\n        }\r\n        AudioSource.registerWaitForAllowAudio(async () => {\r\n            if (this.call.open && !this.closed) {\r\n                if (debug)\r\n                    console.log(\"Setup audio and begin listening\");\r\n\r\n                // console.log(track);\r\n                this.stream = new MediaStream([track as MediaStreamTrack]);\r\n\r\n\r\n                // three does not work?\r\n                const listener = new THREE.AudioListener();\r\n                this.audio = new THREE.Audio(listener);\r\n                this.audio.setVolume(this.voip.muteInput ? 0 : 1);\r\n\r\n                // this.stream = track as MediaStream;\r\n                // if (!this.stream)\r\n                this.audio.setMediaStreamSource(this.stream);\r\n                // this.obj.add(listener);\r\n                // this.obj.add(this.audio);\r\n\r\n                // stream only plays if we create this audio element too\r\n                const audio: HTMLAudioElement = document.createElement('audio');\r\n                this.audioElement = audio;\r\n                audio.style.display = \"none\";\r\n                document.body.appendChild(audio);\r\n                audio.srcObject = this.stream;\r\n                if (audio[\"sinkId\"] !== undefined) {\r\n                    // select speaker output for mobile devices\r\n                    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n                        if (!audio) return;\r\n                        console.log(devices);\r\n                        for (const dev of devices) {\r\n                            if (dev.label === \"Speakerphone\") {\r\n                                audio[\"sinkId\"] = dev.deviceId;\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                // audio.play();\r\n\r\n                // this.audio.setMediaElementSource(audio);\r\n                if (debug)\r\n                    console.log(\"call is setup, you should hear something now\");\r\n\r\n                this.analyzer = new AudioAnalyser(this.audio, 32);\r\n\r\n                // const context = this.audio.context;\r\n                // context.audioWorklet.addModule('./include/Voip_Volume.js').then(() => {\r\n                //     const samplingNode = new AudioWorkletNode(context, \"white-noise-processor\");\r\n                //     samplingNode.connect(context.destination);\r\n                // }).catch(err => {\r\n                //     console.error(err);\r\n                // });\r\n            }\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.closed = true;\r\n        if (this.call?.open)\r\n            this.call.close();\r\n        this.audio?.disconnect();\r\n        this.stream?.getTracks().forEach(track => { track.stop(); });\r\n        this.stream = null;\r\n        if (this.audioElement)\r\n            this.audioElement.remove();\r\n    }\r\n}\r\n\r\n\r\nexport class Voip extends Behaviour {\r\n\r\n    requireParam: boolean = false;\r\n\r\n    set muteInput(value: boolean) {\r\n        if (value === this._inputMuted) return;\r\n        this._inputMuted = value;\r\n        if (!this.currentIncomingCalls) return;\r\n        const vol = this._inputMuted ? 0 : 1;\r\n        for (const cur in this.currentIncomingCalls) {\r\n            const call = this.currentIncomingCalls[cur];\r\n            call?.currentAudio?.setVolume(vol);\r\n        }\r\n    }\r\n    get muteInput(): boolean {\r\n        return this._inputMuted;\r\n    }\r\n\r\n    set muteOutput(value: boolean) {\r\n        if (value === this._outputMuted) return;\r\n        this._outputMuted = value;\r\n        if (!this.connections) return;\r\n        for (const cur in this.connections) {\r\n            const call = this.connections[cur];\r\n            call?.updateMute(value);\r\n        }\r\n    }\r\n    get muteOutput(): boolean {\r\n        return this._outputMuted;\r\n    }\r\n\r\n    public getFrequency(userId: string | null): number | null {\r\n        // null is get the first with some data\r\n        if (userId === null) {\r\n            for (const c in this.currentIncomingCalls) {\r\n                const call = this.currentIncomingCalls[c];\r\n                if (call && call.currentAnalyzer) return call.currentAnalyzer.getAverageFrequency();\r\n            }\r\n            return null;\r\n        }\r\n        const call = this.currentIncomingCalls[userId];\r\n        if (call && call.currentAnalyzer) return call.currentAnalyzer.getAverageFrequency();\r\n        return null;\r\n    }\r\n\r\n    private peer: Peer | null = null;\r\n    private model: PeerModel | null = null;\r\n    private connections: { [key: string]: PeerConnection | null } = {};\r\n    private currentIncomingCalls: { [key: string]: AudioConnection | null } = {};\r\n\r\n    private _inputMuted: boolean = false;\r\n    private _outputMuted: boolean = false;\r\n\r\n    awake() {\r\n        if (utils.getParam(noVoip)) {\r\n            console.log(\"VOIP is disabled by url parameter: \" + noVoip);\r\n            return;\r\n        }\r\n\r\n        if (this.requireParam && !allowVoip) {\r\n            console.debug(\"VOIP must be enabled explicitly by url parameter\");\r\n            return;\r\n        }\r\n\r\n        if (utils.isiOS() && utils.isSafari()) {\r\n            console.log(\"VOIP is currently not supported on Safari iOS\")\r\n            return;\r\n        }\r\n\r\n        this.peer = new Peer();\r\n        navigator[\"getUserMedia\"] = (navigator[\"getUserMedia\"] || navigator[\"webkitGetUserMedia\"] || navigator[\"mozGetUserMedia\"] || navigator[\"msGetUserMedia\"]);\r\n\r\n\r\n        // navigator.mediaDevices.enumerateDevices().then(console.log);\r\n\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, _evt => {\r\n            // request mic once\r\n            navigator.mediaDevices.getUserMedia({ audio: true, video: false });\r\n        });\r\n\r\n        this.context.connection.beginListen(PeerMessage.Update_ID, (cb: IPeerUpdateResponse) => {\r\n            if (cb.id !== this.context.connection.connectionId) {\r\n                const prevConnection = this.connections[cb.id];\r\n                if (prevConnection) {\r\n                    prevConnection.close();\r\n                }\r\n                if (this.peer && this.context.connection.connectionId) {\r\n                    const newConnection = new PeerConnection(this, this.peer, this.context.connection.connectionId, cb.peerId);\r\n                    this.connections[cb.id] = newConnection;\r\n                    newConnection.startVoipCall();\r\n                }\r\n            }\r\n        });\r\n        this.context.connection.beginListen(RoomEvents.UserLeftRoom, evt => {\r\n            const { userId: id } = evt;\r\n            const activeConnection = this.connections[id];\r\n            this.connections[id] = null;\r\n            if (activeConnection) {\r\n                activeConnection.close();\r\n            }\r\n            const incoming = this.currentIncomingCalls[id];\r\n            if (debug)\r\n                console.log(\"UserLeftRoom\", evt, id, incoming);\r\n            if (incoming) {\r\n                incoming.close();\r\n                this.currentIncomingCalls[id] = null;\r\n            }\r\n        });\r\n\r\n        this.peer.on('open', this.onOpenPeerConnection.bind(this));\r\n    }\r\n\r\n    onEnable(): void {\r\n        // for(const key in this.connections){\r\n        //     const con = this.connections[key];\r\n        //     con?.startVoipCall();\r\n        // }\r\n    }\r\n\r\n    onDisable(): void {\r\n        console.log(\"TODO: close all\");\r\n        for (const key in this.currentIncomingCalls) {\r\n            try {\r\n                const call = this.currentIncomingCalls[key];\r\n                call?.close();\r\n                const con = this.connections[key];\r\n                con?.close();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    // update() {\r\n    //     if (this.context.time.frameCount % 20 !== 0) return;\r\n    //     for (const c in this.currentIncomingCalls) {\r\n    //         const call = this.currentIncomingCalls[c];\r\n    //         if (!call || !call.currentAnalyzer) continue;\r\n    //         const vol = call.currentAnalyzer.getAverageFrequency();\r\n    //         if (vol !== 0) {\r\n\r\n    //             const t = 100 / vol;\r\n    //             call.currentAudio?.setVolume(t);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    private async onOpenPeerConnection(id: string) {\r\n        if (debug)\r\n            console.log(\"Peer connection established and received id\");\r\n\r\n        this.model = new PeerModel(id);\r\n        this.context.connection.send(PeerMessage.Update_ID, this.model, SendQueue.OnRoomJoin);\r\n\r\n        if (this.peer) {\r\n            this.peer.on('call', this.onReceiveCall.bind(this));\r\n\r\n            this.peer.on('connection', function (conn) {\r\n                if (debug)\r\n                    console.log(\"CONNECTION\", conn);\r\n                conn.on('data', function (data) {\r\n                    if (debug)\r\n                        console.log('Received', data);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private async onReceiveCall(call) {\r\n\r\n        const { metadata } = call;\r\n        console.assert(metadata.userId);\r\n        const { userId } = metadata;\r\n        const { peer: peerId } = call;\r\n        const currentCall = this.currentIncomingCalls[userId];\r\n        if (currentCall) {\r\n            currentCall.close();\r\n        }\r\n        if (debug)\r\n            console.log(\"received call\");\r\n\r\n        // if we have mic permissions we can answer with our own mic\r\n        if (await Voip.HasMicrophonePermissions()) {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\r\n            call.answer(stream);\r\n        }\r\n        // otherwise take the call but dont send any audio ourselves\r\n        else call.answer(null);\r\n\r\n        this.currentIncomingCalls[userId] = new AudioConnection(this, this.gameObject, call);\r\n\r\n        // let done = false;\r\n        call.on('stream', remoteStream => {\r\n            if (debug)\r\n                console.log(\"receive caller stream, will setup audio now\");\r\n            this.currentIncomingCalls[userId]?.openAudioStream(remoteStream);\r\n        });\r\n        call.on(\"error\", console.error);\r\n    };\r\n\r\n    // update(): void {\r\n    //     for (const k in this.currentIncomingCalls) {\r\n    //         const currentCall = this.currentIncomingCalls[k];\r\n    //         if (currentCall && currentCall.currentAnalyzer) {\r\n    //             console.log(currentCall.currentAnalyzer.getAverageFrequency());\r\n    //             //     // const c = currentCall.currentAudio.getOutput();\r\n    //             //     console.log(c, c.gain.value);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    public static async HasMicrophonePermissions(): Promise<boolean> {\r\n        //@ts-ignore\r\n        const res = await navigator.permissions.query({ name: 'microphone' });\r\n        if (res.state === \"denied\") {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { Matrix4, Object3D } from \"three\";\r\nimport { WebAR, WebXR } from \"./WebXR\";\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\n// https://github.com/takahirox/takahirox.github.io/blob/master/js.mmdeditor/examples/js/controls/DeviceOrientationControls.js\r\n\r\nexport class WebARSessionRoot extends Behaviour {\r\n\r\n    webAR: WebAR | null = null;\r\n\r\n    get rig(): Object3D | undefined {\r\n        return this.webAR?.webxr.Rig;\r\n    }\r\n\r\n    @serializable()\r\n    invertForward: boolean = false;\r\n\r\n    @serializable()\r\n    get arScale(): number {\r\n        return this._arScale;\r\n    }\r\n    set arScale(val: number) {\r\n        if (val === this._arScale) return;\r\n        this._arScale = val;\r\n        this.setScale(val);\r\n    }\r\n\r\n    private readonly _initalMatrix = new Matrix4();\r\n    private readonly _selectStartFn = this.onSelectStart.bind(this);\r\n    private readonly _selectEndFn = this.onSelectEnd.bind(this);\r\n\r\n    start() {\r\n        const xr = GameObject.findObjectOfType(WebXR);\r\n        if (xr) {\r\n            xr.Rig.updateMatrix();\r\n            this._initalMatrix.copy(xr.Rig.matrix);\r\n        }\r\n    }\r\n\r\n    private _arScale: number = 5;\r\n    private _rig: Object3D | null = null;\r\n    private _startPose: Matrix4 | null = null;\r\n    private _placementPose: Matrix4 | null = null;\r\n    private _isTouching: boolean = false;\r\n    private _rigStartPose: Matrix4 | undefined | null = null;\r\n\r\n    onBegin(session: XRSession) {\r\n        this._placementPose = null;\r\n        this.gameObject.visible = false;\r\n        this.gameObject.matrixAutoUpdate = false;\r\n        this._startPose = this.gameObject.matrix.clone();\r\n        this._rigStartPose = this.rig?.matrix.clone();\r\n        session.addEventListener('selectstart', this._selectStartFn);\r\n        session.addEventListener('selectend', this._selectEndFn);\r\n        // setTimeout(() => this.gameObject.visible = false, 1000); // TODO test on phone AR and Hololens if this was still needed\r\n\r\n        // console.log(this.rig?.position, this.rig?.quaternion, this.rig?.scale);\r\n        this.gameObject.visible = false;\r\n\r\n        if (this.rig) {\r\n            // reset rig to initial pose, this is helping the mix of immersive AR and immersive VR that we now have on quest\r\n            // where the rig can be moved and scaled by the user in VR mode and we use the rig position when entering\r\n            // immersive Ar right now to place the user/offset the session\r\n            this.rig.matrixAutoUpdate = true;\r\n            this._initalMatrix.decompose(this.rig.position, this.rig.quaternion, this.rig.scale);\r\n        }\r\n    }\r\n\r\n    onUpdate(rig: Object3D | null, _session: XRSession, pose: XRPose | null | undefined): boolean {\r\n\r\n        if (pose && !this._placementPose) {\r\n            if (this._isTouching) {\r\n                if (this.webAR) this.webAR.setReticleActive(false);\r\n                this.placeAt(rig, new Matrix4().fromArray(pose.transform.matrix).invert());\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n        // if (this._placementPose) {\r\n        //     this.gameObject.matrixAutoUpdate = false;\r\n        //     const matrix = pose?.transform.matrix;\r\n        //     if (matrix) {\r\n        //         this.gameObject.matrix.fromArray(matrix);\r\n        //     }\r\n        //     this.gameObject.visible = true;\r\n        // }\r\n    }\r\n\r\n    placeAt(rig: Object3D | null, mat: Matrix4) {\r\n        if (!this._placementPose) this._placementPose = new Matrix4();\r\n        this._placementPose.copy(mat);\r\n        if (rig) {\r\n\r\n            if (this.invertForward) {\r\n                const rot = new Matrix4().makeRotationY(Math.PI);\r\n                this._placementPose.premultiply(rot);\r\n            }\r\n            this._rig = rig;\r\n\r\n            this.setScale(this.arScale);\r\n        }\r\n        else this._rig = null;\r\n        // this.gameObject.matrix.copy(this._placementPose);\r\n        // if (rig) {\r\n        //     this.gameObject.matrix.premultiply(rig.matrixWorld)\r\n        // }\r\n        this.gameObject.visible = true;\r\n    }\r\n\r\n    onEnd(rig: Object3D | null, _session: XRSession) {\r\n        this._placementPose = null;\r\n        this.gameObject.visible = false;\r\n        this.gameObject.matrixAutoUpdate = false;\r\n        if (this._startPose) {\r\n            this.gameObject.matrix.copy(this._startPose);\r\n        }\r\n        if (rig) {\r\n            rig.matrixAutoUpdate = true;\r\n            if (this._rigStartPose) {\r\n                this._rigStartPose.decompose(rig.position, rig.quaternion, rig.scale);\r\n                // console.log(rig.position, rig.quaternion, rig.scale);\r\n            }\r\n        }\r\n        InstancingUtil.markDirty(this.gameObject, true);\r\n        // HACK to fix physics being not in correct place after exiting AR\r\n        setTimeout(() => {\r\n            this.gameObject.matrixAutoUpdate = true;\r\n            this.gameObject.visible = true;\r\n        }, 100);\r\n    }\r\n\r\n\r\n    private onSelectStart() {\r\n        this._isTouching = true;\r\n    }\r\n\r\n    private onSelectEnd() {\r\n        this._isTouching = false;\r\n    }\r\n\r\n    private setScale(scale) {\r\n        const rig = this._rig;\r\n        if (!rig || !this._placementPose) {\r\n            return;\r\n        }\r\n        if (!this._rigStartPose) {\r\n            this._rigStartPose = rig.matrix.clone();\r\n        }\r\n        rig.matrixAutoUpdate = false;\r\n        rig.matrix.multiplyMatrices(new Matrix4().makeScale(scale, scale, scale), this._placementPose);\r\n        rig.matrix.decompose(rig.position, rig.quaternion, rig.scale);\r\n        rig.updateMatrixWorld();\r\n        console.log(\"Place\", rig.position);\r\n    }\r\n}", "import { BoxHelper, BufferGeometry, Color, Euler, Group, Intersection, Layers, Line, LineBasicMaterial, Material, Mesh, MeshBasicMaterial, Object3D, PerspectiveCamera, Quaternion, Ray, SphereGeometry, Vector2, Vector3 } from \"three\";\r\nimport { OculusHandModel } from 'three/examples/jsm/webxr/OculusHandModel.js';\r\nimport { OculusHandPointerModel } from 'three/examples/jsm/webxr/OculusHandPointerModel.js';\r\nimport { XRControllerModel, XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\n\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { RaycastOptions } from \"../engine/engine_physics\";\r\nimport { getWorldPosition, getWorldQuaternion, setWorldPosition, setWorldQuaternion } from \"../engine/engine_three_utils\";\r\nimport { getParam, getPath } from \"../engine/engine_utils\";\r\nimport { addDracoAndKTX2Loaders } from \"../engine/engine_loaders\";\r\n\r\nimport { Avatar_POI } from \"./avatar/Avatar_Brain_LookAt\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { Interactable, UsageMarker } from \"./Interactable\";\r\nimport { Rigidbody } from \"./RigidBody\";\r\nimport { SyncedTransform } from \"./SyncedTransform\";\r\nimport { UIRaycastUtils } from \"./ui/RaycastUtils\";\r\nimport { WebXR } from \"./WebXR\";\r\n\r\nconst debug = getParam(\"debugwebxrcontroller\");\r\n\r\nexport enum ControllerType {\r\n    PhysicalDevice = 0,\r\n    Touch = 1,\r\n}\r\n\r\nexport enum ControllerEvents {\r\n    SelectStart = \"select-start\",\r\n    SelectEnd = \"select-end\",\r\n    Update = \"update\",\r\n}\r\n\r\nexport class TeleportTarget extends Behaviour {\r\n\r\n}\r\n\r\nexport class WebXRController extends Behaviour {\r\n\r\n    public static Factory: XRControllerModelFactory = new XRControllerModelFactory();\r\n\r\n    private static raycastColor: Color = new Color(.9, .3, .3);\r\n    private static raycastNoHitColor: Color = new Color(.6, .6, .6);\r\n    private static geometry = new BufferGeometry().setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\r\n    private static handModels: { [index: number]: OculusHandPointerModel } = {};\r\n\r\n    private static CreateRaycastLine(): Line {\r\n        const line = new Line(this.geometry);\r\n        const mat = line.material as LineBasicMaterial;\r\n        mat.color = this.raycastColor;\r\n        // mat.linewidth = 10;\r\n        line.layers.set(2);\r\n        line.name = 'line';\r\n        line.scale.z = 1;\r\n        return line;\r\n    }\r\n\r\n    private static CreateRaycastHitPoint(): Mesh {\r\n        const geometry = new SphereGeometry(.5, 22, 22);\r\n        const material = new MeshBasicMaterial({ color: this.raycastColor });\r\n        const sphere = new Mesh(geometry, material);\r\n        sphere.visible = false;\r\n        sphere.layers.set(2);\r\n        return sphere;\r\n    }\r\n\r\n    public static Create(owner: WebXR, index: number, addTo: GameObject, type: ControllerType): WebXRController {\r\n        const ctrl = addTo ? GameObject.addNewComponent(addTo, WebXRController, false) : new WebXRController();\r\n\r\n        ctrl.webXR = owner;\r\n        ctrl.index = index;\r\n        ctrl.type = type;\r\n\r\n        const context = owner.context;\r\n        // from https://github.com/mrdoob/js/blob/master/examples/webxr_vr_dragging.html\r\n        // controllers\r\n        ctrl.controller = context.renderer.xr.getController(index);\r\n        ctrl.controllerGrip = context.renderer.xr.getControllerGrip(index);\r\n        ctrl.controllerModel = this.Factory.createControllerModel(ctrl.controller);\r\n        ctrl.controllerGrip.add(ctrl.controllerModel);\r\n\r\n        ctrl.hand = context.renderer.xr.getHand(index);\r\n\r\n        const loader = new GLTFLoader();\r\n        addDracoAndKTX2Loaders(loader, context);\r\n        if (ctrl.webXR.handModelPath && ctrl.webXR.handModelPath !== \"\")\r\n            loader.setPath(getPath(owner.sourceId, ctrl.webXR.handModelPath));\r\n        else\r\n            // from XRHandMeshModel.js\r\n            loader.setPath('https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/');\r\n        //@ts-ignore\r\n        const hand = new OculusHandModel(ctrl.hand, loader);\r\n\r\n        ctrl.hand.add(hand);\r\n        ctrl.hand.traverse(x => x.layers.set(2));\r\n\r\n        ctrl.handPointerModel = new OculusHandPointerModel(ctrl.hand, ctrl.controller);\r\n\r\n\r\n        // TODO remove all these once https://github.com/mrdoob/js/pull/23279 lands\r\n        ctrl.controller.addEventListener('connected', (_) => {\r\n            ctrl.setControllerLayers(ctrl.controllerModel, 2);\r\n            ctrl.setControllerLayers(ctrl.controllerGrip, 2);\r\n            ctrl.setControllerLayers(ctrl.hand, 2);\r\n            setTimeout(() => {\r\n                ctrl.setControllerLayers(ctrl.controllerModel, 2);\r\n                ctrl.setControllerLayers(ctrl.controllerGrip, 2);\r\n                ctrl.setControllerLayers(ctrl.hand, 2);\r\n            }, 1000);\r\n        });\r\n\r\n        // TODO: unsubscribe! this should be moved into onenable and ondisable!\r\n        // TODO remove all these once https://github.com/mrdoob/js/pull/23279 lands\r\n        ctrl.hand.addEventListener('connected', (event) => {\r\n            const xrInputSource = event.data;\r\n            if (xrInputSource.hand) {\r\n                if (owner.Rig) owner.Rig.add(ctrl.hand);\r\n                ctrl.type = ControllerType.PhysicalDevice;\r\n                ctrl.handPointerModel.traverse(x => x.layers.set(2)); // ignore raycast\r\n                ctrl.handPointerModel.pointerObject?.traverse(x => x.layers.set(2));\r\n\r\n                // when exiting and re-entering xr the joints are not parented to the hand anymore\r\n                // this is a workaround to fix that temporarely\r\n                // see https://github.com/needle-tools/needle-tiny-playground/issues/123\r\n                const jnts = ctrl.hand[\"joints\"];\r\n                if (jnts) {\r\n                    for (const key of Object.keys(jnts)) {\r\n                        const joint = jnts[key];\r\n                        if (joint.parent) continue;\r\n                        ctrl.hand.add(joint);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    // TODO: replace with component events\r\n    public static addEventListener(evt: ControllerEvents, callback: (controller: WebXRController, args: any) => void) {\r\n        const list = this.eventSubs[evt] ?? [];\r\n        list.push(callback);\r\n        this.eventSubs[evt] = list;\r\n    }\r\n\r\n    // TODO: replace with component events\r\n    public static removeEventListener(evt: ControllerEvents, callback: (controller: WebXRController, args: any) => void) {\r\n        if (!callback) return;\r\n        const list = this.eventSubs[evt] ?? [];\r\n        const idx = list.indexOf(callback);\r\n        if (idx >= 0) list.splice(idx, 1);\r\n        this.eventSubs[evt] = list;\r\n    }\r\n\r\n    private static eventSubs: { [key: string]: Function[] } = {};\r\n\r\n    public webXR!: WebXR;\r\n    public index: number = -1;\r\n    public controllerModel!: XRControllerModel;\r\n    public controller!: Group;\r\n    public controllerGrip!: Group;\r\n    public hand!: Group;\r\n    public handPointerModel!: OculusHandPointerModel;\r\n    public grabbed: AttachedObject | null = null;\r\n    public input: XRInputSource | null = null;\r\n    public type: ControllerType = ControllerType.PhysicalDevice;\r\n    public showRaycastLine : boolean = true;\r\n\r\n    get isUsingHands(): boolean {\r\n        const r = this.input?.hand;\r\n        return r !== null && r !== undefined;\r\n    }\r\n\r\n    get wrist(): Object3D | null {\r\n        if (!this.hand) return null;\r\n        const jnts = this.hand[\"joints\"];\r\n        if (!jnts) return null;\r\n        return jnts[\"wrist\"];\r\n    }\r\n\r\n    private _wristQuaternion: Quaternion | null = null;\r\n    getWristQuaternion(): Quaternion | null {\r\n        const wrist = this.wrist;\r\n        if (!wrist) return null;\r\n        if (!this._wristQuaternion) this._wristQuaternion = new Quaternion();\r\n        const wr = getWorldQuaternion(wrist).multiply(this._wristQuaternion.setFromEuler(new Euler(-Math.PI / 4, 0, 0)));\r\n        return wr;\r\n    }\r\n\r\n    private movementVector: Vector3 = new Vector3();\r\n    private worldRot: Quaternion = new Quaternion();\r\n    private joystick: Vector2 = new Vector2();\r\n    private didRotate: boolean = false;\r\n    private didTeleport: boolean = false;\r\n    private didChangeScale: boolean = false;\r\n    private static PreviousCameraFarDistance: number | undefined = undefined;\r\n    private static MovementSpeedFactor: number = 1;\r\n\r\n    private lastHit: Intersection | null = null;\r\n\r\n    private raycastLine: Line | null = null;\r\n    private _raycastHitPoint: Object3D | null = null;\r\n    private _connnectedCallback: any | null = null;\r\n    private _disconnectedCallback: any | null = null;\r\n    private _selectStartEvt: any | null = null;\r\n    private _selectEndEvt: any | null = null;\r\n\r\n    public get selectionDown(): boolean { return this._selectionPressed && !this._selectionPressedLastFrame; }\r\n    public get selectionUp(): boolean { return !this._selectionPressed && this._selectionPressedLastFrame; }\r\n    public get selectionPressed(): boolean { return this._selectionPressed; }\r\n    public get selectionClick(): boolean { return this._selectionEndTime - this._selectionStartTime < 0.3; }\r\n    public get raycastHitPoint(): Object3D | null { return this._raycastHitPoint; }\r\n\r\n    private _selectionPressed: boolean = false;\r\n    private _selectionPressedLastFrame: boolean = false;\r\n    private _selectionStartTime: number = 0;\r\n    private _selectionEndTime: number = 0;\r\n\r\n    public get useSmoothing(): boolean { return this._useSmoothing };\r\n    private _useSmoothing: boolean = true;\r\n\r\n    awake(): void {\r\n        if (!this.controller) {\r\n            console.warn(\"Missing Controller!!!\", this);\r\n            return;\r\n        }\r\n        this._connnectedCallback = this.onSourceConnected.bind(this);\r\n        this._disconnectedCallback = this.onSourceDisconnected.bind(this);\r\n        this._selectStartEvt = this.onSelectStart.bind(this);\r\n        this._selectEndEvt = this.onSelectEnd.bind(this);\r\n        if (this.type === ControllerType.Touch) {\r\n            this.controllerGrip.addEventListener(\"connected\", this._connnectedCallback);\r\n            this.controllerGrip.addEventListener(\"disconnected\", this._disconnectedCallback);\r\n            this.controller.addEventListener('selectstart', this._selectStartEvt);\r\n            this.controller.addEventListener('selectend', this._selectEndEvt);\r\n        }\r\n        if (this.type === ControllerType.PhysicalDevice) {\r\n            this.controller.addEventListener('selectstart', this._selectStartEvt);\r\n            this.controller.addEventListener('selectend', this._selectEndEvt);\r\n        }\r\n    }\r\n\r\n    onDestroy(): void {\r\n        if (this.type === ControllerType.Touch) {\r\n            this.controllerGrip.removeEventListener(\"connected\", this._connnectedCallback);\r\n            this.controllerGrip.removeEventListener(\"disconnected\", this._disconnectedCallback);\r\n            this.controller.removeEventListener('selectstart', this._selectStartEvt);\r\n            this.controller.removeEventListener('selectend', this._selectEndEvt);\r\n        }\r\n        if (this.type === ControllerType.PhysicalDevice) {\r\n            this.controller.removeEventListener('selectstart', this._selectStartEvt);\r\n            this.controller.removeEventListener('selectend', this._selectEndEvt);\r\n        }\r\n\r\n        this.hand?.clear();\r\n        this.controllerGrip?.clear();\r\n        this.controller?.clear();\r\n    }\r\n\r\n    public onEnable(): void {\r\n        if (this.hand)\r\n            this.hand.name = \"Hand\";\r\n        if (this.controllerGrip)\r\n            this.controllerGrip.name = \"ControllerGrip\";\r\n        if (this.controller)\r\n            this.controller.name = \"Controller\";\r\n        if (this.raycastLine)\r\n            this.raycastLine.name = \"RaycastLine;\"\r\n\r\n        if (this.webXR.Controllers.indexOf(this) < 0)\r\n            this.webXR.Controllers.push(this);\r\n\r\n        if (!this.raycastLine)\r\n            this.raycastLine = WebXRController.CreateRaycastLine();\r\n        if (!this._raycastHitPoint)\r\n            this._raycastHitPoint = WebXRController.CreateRaycastHitPoint();\r\n\r\n        this.webXR.Rig?.add(this.hand);\r\n        this.webXR.Rig?.add(this.controllerGrip);\r\n        this.webXR.Rig?.add(this.controller);\r\n        this.webXR.Rig?.add(this.raycastLine);\r\n        this.raycastLine?.add(this._raycastHitPoint);\r\n        this._raycastHitPoint.visible = false;\r\n        this.hand.add(this.handPointerModel);\r\n        if (debug)\r\n            console.log(\"ADDED TO RIG\", this.webXR.Rig);\r\n\r\n        // // console.log(\"enable\", this.index, this.controllerGrip.uuid)\r\n    }\r\n\r\n    onDisable(): void {\r\n        // console.log(\"XR controller disabled\", this);\r\n        this.hand?.removeFromParent();\r\n        this.controllerGrip?.removeFromParent();\r\n        this.controller?.removeFromParent();\r\n        this.raycastLine?.removeFromParent();\r\n        this._raycastHitPoint?.removeFromParent();\r\n        // console.log(\"Disable\", this._connnectedCallback, this._disconnectedCallback);\r\n        // this.controllerGrip.removeEventListener(\"connected\", this._connnectedCallback);\r\n        // this.controllerGrip.removeEventListener(\"disconnected\", this._disconnectedCallback);\r\n\r\n        const i = this.webXR.Controllers.indexOf(this);\r\n        if (i >= 0)\r\n            this.webXR.Controllers.splice(i, 1);\r\n    }\r\n\r\n    // onDestroy(): void {\r\n    //     console.log(\"destroyed\", this.index);\r\n    // }\r\n\r\n    private _isConnected: boolean = false;\r\n\r\n    private onSourceConnected(e: { data: XRInputSource, target: any }) {\r\n        if (this._isConnected) {\r\n            console.warn(\"Received connected event for controller that is already connected\", this.index, e);\r\n            return;\r\n        }\r\n        this._isConnected = true;\r\n        this.input = e.data;\r\n\r\n        if (this.type === ControllerType.Touch) {\r\n            this.onSelectStart();\r\n            this.createPointerEvent(\"down\");\r\n        }\r\n    }\r\n\r\n    private onSourceDisconnected(_e: any) {\r\n        if (!this._isConnected) {\r\n            console.warn(\"Received discnnected event for controller that is not connected\", _e);\r\n            return;\r\n        }\r\n        this._isConnected = false;\r\n        if (this.type === ControllerType.Touch) {\r\n            this.onSelectEnd();\r\n            this.createPointerEvent(\"up\");\r\n        }\r\n        this.input = null;\r\n    }\r\n\r\n    private createPointerEvent(type: string) {\r\n        switch (type) {\r\n            case \"down\":\r\n                this.context.input.createPointerDown({ clientX: 0, clientY: 0, button: this.index, pointerType: \"touch\" });\r\n                break;\r\n            case \"move\":\r\n                break;\r\n            case \"up\":\r\n                this.context.input.createPointerUp({ clientX: 0, clientY: 0, button: this.index, pointerType: \"touch\" });\r\n                break;\r\n        }\r\n    }\r\n\r\n    rayRotation: Quaternion = new Quaternion();\r\n\r\n    update(): void {\r\n\r\n        // TODO: we should wait until we actually have models, this is just a workaround\r\n        if (this.context.time.frameCount % 60 === 0) {\r\n            this.setControllerLayers(this.controller, 2);\r\n            this.setControllerLayers(this.controllerGrip, 2);\r\n            this.setControllerLayers(this.hand, 2);\r\n        }\r\n\r\n        const subs = WebXRController.eventSubs[ControllerEvents.Update];\r\n        if (subs && subs.length > 0) {\r\n            for (const sub of subs) {\r\n                sub(this);\r\n            }\r\n        }\r\n\r\n        let t = 1;\r\n        if (this.type === ControllerType.PhysicalDevice) t = this.context.time.deltaTime / .1;\r\n        else if (this.isUsingHands && this.handPointerModel.pinched) t = this.context.time.deltaTime / .3;\r\n        this.rayRotation.slerp(getWorldQuaternion(this.controller), this.useSmoothing ? t : 1.0);\r\n        const wp = getWorldPosition(this.controller);\r\n\r\n        // hide hand pointer model, it's giant and doesn't really help\r\n        if (this.isUsingHands && this.handPointerModel.cursorObject) {\r\n            this.handPointerModel.cursorObject.visible = false;\r\n        }\r\n\r\n        if (this.raycastLine) {\r\n            const allowRaycastLineVisible = this.showRaycastLine && this.context.isInVR;\r\n            if (this.type === ControllerType.Touch) {\r\n                this.raycastLine.visible = false;\r\n            }\r\n            else if (this.isUsingHands) {\r\n                this.raycastLine.visible = !this.grabbed && allowRaycastLineVisible;\r\n                setWorldPosition(this.raycastLine, wp);\r\n                const jnts = this.hand!['joints'];\r\n                if (jnts) {\r\n                    const wrist = jnts['wrist'];\r\n                    if (wrist && this.grabbed && this.grabbed.isCloseGrab) {\r\n                        const wr = this.getWristQuaternion();\r\n                        if (wr)\r\n                            this.rayRotation.copy(wr);\r\n                        // this.rayRotation.slerp(wr, this.useSmoothing ? t * 2 : 1);\r\n                    }\r\n                }\r\n                setWorldQuaternion(this.raycastLine, this.rayRotation);\r\n            }\r\n            else {\r\n                this.raycastLine.visible = allowRaycastLineVisible;\r\n                setWorldQuaternion(this.raycastLine, this.rayRotation);\r\n                setWorldPosition(this.raycastLine, wp);\r\n            }\r\n        }\r\n\r\n        this.lastHit = this.updateLastHit();\r\n\r\n        if (this.grabbed) {\r\n            this.grabbed.update();\r\n        }\r\n\r\n        this._selectionPressedLastFrame = this._selectionPressed;\r\n\r\n        if (this.selectStartCallback) {\r\n            this.selectStartCallback();\r\n        }\r\n    }\r\n\r\n    private _pinchStartTime: number | undefined = undefined;\r\n\r\n    onUpdate(session: XRSession) {\r\n        this.lastHit = null;\r\n\r\n        if (!session || session.inputSources.length <= this.index) {\r\n            this.input = null;\r\n            return;\r\n        }\r\n        if (this.type === ControllerType.PhysicalDevice)\r\n            this.input = session.inputSources[this.index];\r\n        if (!this.input) return;\r\n        const rig = this.webXR.Rig;\r\n        if (!rig) return;\r\n\r\n        if (this._didNotEndSelection && !this.handPointerModel.pinched) {\r\n            this._didNotEndSelection = false;\r\n            this.onSelectEnd();\r\n        }\r\n\r\n        this.updateStick(this.input);\r\n\r\n        const buttons = this.input?.gamepad?.buttons;\r\n\r\n        switch (this.input.handedness) {\r\n            case \"left\":\r\n                const speedFactor = 3 * WebXRController.MovementSpeedFactor;\r\n                const powFactor = 2;\r\n                const speed = Mathf.clamp01(this.joystick.length() * 2);\r\n\r\n                const sideDir = this.joystick.x > 0 ? 1 : -1;\r\n                let side = Math.pow(this.joystick.x, powFactor);\r\n                side *= sideDir;\r\n                side *= speed;\r\n\r\n\r\n                const forwardDir = this.joystick.y > 0 ? 1 : -1;\r\n                let forward = Math.pow(this.joystick.y, powFactor);\r\n                forward *= forwardDir;\r\n                side *= speed;\r\n\r\n                rig.getWorldQuaternion(this.worldRot);\r\n                this.movementVector.set(side, 0, forward);\r\n                this.movementVector.applyQuaternion(this.webXR.TransformOrientation);\r\n                this.movementVector.y = 0;\r\n                this.movementVector.applyQuaternion(this.worldRot);\r\n                this.movementVector.multiplyScalar(speedFactor * this.context.time.deltaTime);\r\n                rig.position.add(this.movementVector);\r\n\r\n                if (this.isUsingHands)\r\n                    this.runTeleport(rig, buttons);\r\n                break;\r\n\r\n            case \"right\":\r\n                const rotate = this.joystick.x;\r\n                const rotAbs = Math.abs(rotate);\r\n                if (rotAbs < 0.4) {\r\n                    this.didRotate = false;\r\n                }\r\n                else if (rotAbs > .5 && !this.didRotate) {\r\n                    const dir = rotate > 0 ? -1 : 1;\r\n                    rig.rotateY(Mathf.toRadians(30 * dir));\r\n                    this.didRotate = true;\r\n                }\r\n\r\n                this.runTeleport(rig, buttons);\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    private runTeleport(rig, buttons) {\r\n        let teleport = -this.joystick.y;\r\n        if (this.hand?.visible && !this.grabbed) {\r\n            const pinched = this.handPointerModel.isPinched();\r\n            if (pinched && this._pinchStartTime === undefined) {\r\n                this._pinchStartTime = this.context.time.time;\r\n            }\r\n            if (pinched && this._pinchStartTime && this.context.time.time - this._pinchStartTime > .8) {\r\n                // hacky approach for basic hand teleportation - \r\n                // we teleport if we pinch and the back of the hand points down (open hand gesture)\r\n                // const v1 = new Vector3();\r\n                // const worldQuaternion = new Quaternion();\r\n                // this.controller.getWorldQuaternion(worldQuaternion);\r\n                // v1.copy(this.controller.up).applyQuaternion(worldQuaternion);\r\n                // const dotPr = -v1.dot(this.controller.up);\r\n                teleport = this.handPointerModel.isPinched() ? 1 : 0;\r\n            }\r\n            if (!pinched) this._pinchStartTime = undefined;\r\n        }\r\n        else this._pinchStartTime = undefined;\r\n\r\n        let doTeleport = teleport > .5 && this.webXR.IsInVR;\r\n        let isInMiniatureMode = this.webXR.Rig ? this.webXR.Rig?.scale?.x < .999 : false;\r\n        let newRigScale: number | null = null;\r\n\r\n        if (buttons && this.input && !this.input.hand) {\r\n            for (let i = 0; i < buttons.length; i++) {\r\n                const btn = buttons[i];\r\n                // button[4] seems to be the A button if it exists. On hololens it's randomly pressed though for hands\r\n                // see https://www.w3.org/TR/webxr-gamepads-module-1/#xr-standard-gamepad-mapping\r\n                if (i === 4) {\r\n                    if (btn.pressed && !this.didChangeScale && this.webXR.IsInVR) {\r\n                        this.didChangeScale = true;\r\n                        const rig = this.webXR.Rig;\r\n                        if (rig) {\r\n                            if (!isInMiniatureMode) {\r\n                                isInMiniatureMode = true;\r\n                                doTeleport = true;\r\n                                newRigScale = .1;\r\n                                WebXRController.MovementSpeedFactor = newRigScale * 2;\r\n                                const cam = this.context.mainCamera as PerspectiveCamera;\r\n                                WebXRController.PreviousCameraFarDistance = cam.far;\r\n                                cam.far /= newRigScale;\r\n                            }\r\n                            else {\r\n                                isInMiniatureMode = false;\r\n                                rig.scale.set(1, 1, 1);\r\n                                newRigScale = 1;\r\n                                WebXRController.MovementSpeedFactor = 1;\r\n                                const cam = this.context.mainCamera as PerspectiveCamera;\r\n                                if (WebXRController.PreviousCameraFarDistance)\r\n                                    cam.far = WebXRController.PreviousCameraFarDistance;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (!btn.pressed)\r\n                        this.didChangeScale = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (doTeleport) {\r\n            if (!this.didTeleport) {\r\n                const rc = this.raycast();\r\n                this.didTeleport = true;\r\n                if (rc && rc.length > 0) {\r\n                    const hit = rc[0];\r\n                    if (isInMiniatureMode || this.isValidTeleportTarget(hit.object)) {\r\n                        const point = hit.point;\r\n                        setWorldPosition(rig, point);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (teleport < .1) {\r\n            this.didTeleport = false;\r\n        }\r\n\r\n        if (newRigScale !== null) {\r\n            rig.scale.set(newRigScale, newRigScale, newRigScale);\r\n            rig.updateMatrixWorld();\r\n        }\r\n    }\r\n\r\n    private isValidTeleportTarget(obj: Object3D): boolean {\r\n        return GameObject.getComponentInParent(obj, TeleportTarget) != null;\r\n    }\r\n\r\n    private updateStick(inputSource: XRInputSource) {\r\n        if (!inputSource || !inputSource.gamepad || inputSource.gamepad.axes?.length < 4) return;\r\n        this.joystick.x = inputSource.gamepad.axes[2];\r\n        this.joystick.y = inputSource.gamepad.axes[3];\r\n    }\r\n\r\n    private updateLastHit(): Intersection | null {\r\n        const rc = this.raycast();\r\n        const hit = rc ? rc[0] : null;\r\n        this.lastHit = hit;\r\n        let factor = 1;\r\n        if (this.webXR.Rig) {\r\n            factor /= this.webXR.Rig.scale.x;\r\n        }\r\n        // if (!hit) factor = 0;\r\n\r\n        if (this.raycastLine) {\r\n            this.raycastLine.scale.z = factor * (this.lastHit?.distance ?? 9999);\r\n            const mat = this.raycastLine.material as LineBasicMaterial;\r\n            if (hit != null) mat.color = WebXRController.raycastColor;\r\n            else mat.color = WebXRController.raycastNoHitColor;\r\n        }\r\n        if (this._raycastHitPoint) {\r\n            if (this.lastHit != null) {\r\n                this._raycastHitPoint.position.z = -1;// -this.lastHit.distance;\r\n                const scale = Mathf.clamp(this.lastHit.distance * .01 * factor, .015, .1);\r\n                this._raycastHitPoint.scale.set(scale, scale, scale);\r\n            }\r\n            this._raycastHitPoint.visible = this.lastHit !== null && this.lastHit !== undefined;\r\n        }\r\n        return hit;\r\n    }\r\n\r\n    private onSelectStart() {\r\n        if (!this.context.connection.allowEditing) return;\r\n        // console.log(\"SELECT START\", _event);\r\n        // if we process the event immediately the controller \r\n        // world positions are not yet correctly updated and we have info from the last frame\r\n        // so we delay the event processing one frame\r\n        // only necessary for AR - ideally we can get it to work right here\r\n        // but should be fine as a workaround for now\r\n        this.selectStartCallback = () => this.onHandleSelectStart();\r\n    }\r\n\r\n    private selectStartCallback: Function | null = null;\r\n    private lastSelectStartObject: Object3D | null = null;;\r\n\r\n    private onHandleSelectStart() {\r\n        this.selectStartCallback = null;\r\n        this._selectionPressed = true;\r\n        this._selectionStartTime = this.context.time.time;\r\n        this._selectionEndTime = 1000;\r\n        // console.log(\"DOWN\", this.index, WebXRController.eventSubs);\r\n\r\n        // let maxDistance = this.isUsingHands ? .1 : undefined;\r\n        let intersections: Intersection[] | null = null;\r\n        let closeGrab: boolean = false;\r\n        if (this.isUsingHands) {\r\n            intersections = this.overlap();\r\n            if (intersections.length <= 0) {\r\n                intersections = this.raycast();\r\n                closeGrab = false;\r\n            }\r\n            else {\r\n                closeGrab = true;\r\n            }\r\n        }\r\n        else intersections = this.raycast();\r\n\r\n        if (debug)\r\n            console.log(\"onHandleSelectStart\", \"close grab? \" + closeGrab, \"intersections\", intersections);\r\n\r\n        if (intersections && intersections.length > 0) {\r\n            for (const intersection of intersections) {\r\n                const object = intersection.object;\r\n                this.lastSelectStartObject = object;\r\n                const args = { selected: object, grab: object };\r\n                const subs = WebXRController.eventSubs[ControllerEvents.SelectStart];\r\n                if (subs && subs.length > 0) {\r\n                    for (const sub of subs) {\r\n                        sub(this, args);\r\n                    }\r\n                }\r\n                if (args.grab !== object && debug)\r\n                    console.log(\"Grabbed object changed\", \"original\", object, \"new\", args.grab);\r\n                if (args.grab) {\r\n                    this.grabbed = AttachedObject.TryTake(this, args.grab, intersection, closeGrab);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            const subs = WebXRController.eventSubs[ControllerEvents.SelectStart];\r\n            const args = { selected: null, grab: null };\r\n            if (subs && subs.length > 0) {\r\n                for (const sub of subs) {\r\n                    sub(this, args);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _didNotEndSelection: boolean = false;\r\n\r\n    private onSelectEnd() {\r\n        if (this.isUsingHands) {\r\n            if (this.handPointerModel.pinched) {\r\n                this._didNotEndSelection = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this._selectionPressed) return;\r\n        this.selectStartCallback = null;\r\n        this._selectionPressed = false;\r\n        this._selectionEndTime = this.context.time.time;\r\n\r\n        const args = { grab: this.grabbed?.selected ?? this.lastSelectStartObject };\r\n        const subs = WebXRController.eventSubs[ControllerEvents.SelectEnd];\r\n        if (subs && subs.length > 0) {\r\n            for (const sub of subs) {\r\n                sub(this, args);\r\n            }\r\n        }\r\n\r\n        if (this.grabbed) {\r\n            this.grabbed.free();\r\n            this.grabbed = null;\r\n        }\r\n    }\r\n\r\n    private testIsVisible(obj: Object3D | null): boolean {\r\n        if (!obj) return false;\r\n        if (GameObject.isActiveInHierarchy(obj) === false) return false;\r\n        if (UIRaycastUtils.isInteractable(obj) === false) {\r\n            return false;\r\n        }\r\n        return true;\r\n        // if (!obj.visible) return false;\r\n        // return this.testIsVisible(obj.parent);\r\n    }\r\n\r\n    private setControllerLayers(obj: Object3D, layer: number) {\r\n        if (!obj) return;\r\n        obj.layers.set(layer);\r\n        if (obj.children) {\r\n            for (const ch of obj.children) {\r\n                if (this.grabbed?.selected === ch || this.grabbed?.selectedMesh === ch) {\r\n                    continue;\r\n                }\r\n                this.setControllerLayers(ch, layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getRay(): Ray {\r\n        const ray = new Ray();\r\n        // this.tempMatrix.identity().extractRotation(this.controller.matrixWorld);\r\n        // ray.origin.setFromMatrixPosition(this.controller.matrixWorld);\r\n        ray.origin.copy(getWorldPosition(this.controller));\r\n        ray.direction.set(0, 0, -1).applyQuaternion(this.rayRotation);\r\n        return ray;\r\n    }\r\n\r\n    private closeGrabBoundingBoxHelper?: BoxHelper;\r\n\r\n    public overlap(): Intersection[] {\r\n        const overlapCenter = (this.isUsingHands && this.handPointerModel) ? this.handPointerModel.pointerObject : this.controllerGrip;\r\n\r\n        if (debug) {\r\n            if (!this.closeGrabBoundingBoxHelper && overlapCenter) {\r\n                this.closeGrabBoundingBoxHelper = new BoxHelper(overlapCenter, 0xffff00);\r\n                this.scene.add(this.closeGrabBoundingBoxHelper);\r\n            }\r\n\r\n            if (this.closeGrabBoundingBoxHelper && overlapCenter) {\r\n                this.closeGrabBoundingBoxHelper.setFromObject(overlapCenter);\r\n            }\r\n        }\r\n\r\n        if (!overlapCenter)\r\n            return new Array<Intersection>();\r\n\r\n        const wp = getWorldPosition(overlapCenter).clone();\r\n        return this.context.physics.sphereOverlap(wp, .02);\r\n    }\r\n\r\n    public raycast(): Intersection[] {\r\n        const opts = new RaycastOptions();\r\n        opts.layerMask = new Layers();\r\n        opts.layerMask.set(0);\r\n        opts.layerMask.disable(2);\r\n        opts.ray = this.getRay();\r\n        const hits = this.context.physics.raycast(opts);\r\n        for (let i = 0; i < hits.length; i++) {\r\n            const hit = hits[i];\r\n            const obj = hit.object;\r\n            if (!this.testIsVisible(obj)) {\r\n                hits.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            hit.object = UIRaycastUtils.getObject(obj);\r\n            break;\r\n        }\r\n        // console.log(...hits);\r\n        return hits;\r\n    }\r\n}\r\n\r\n\r\nexport enum AttachedObjectEvents {\r\n    WillTake = \"WillTake\",\r\n    DidTake = \"DidTake\",\r\n    WillFree = \"WillFree\",\r\n    DidFree = \"DidFree\",\r\n}\r\n\r\nexport class AttachedObject {\r\n\r\n    public static Events: { [key: string]: Function[] } = {};\r\n    public static AddEventListener(event: AttachedObjectEvents, callback: Function): Function {\r\n        if (!AttachedObject.Events[event]) AttachedObject.Events[event] = [];\r\n        AttachedObject.Events[event].push(callback);\r\n        return callback;\r\n    }\r\n    public static RemoveEventListener(event: AttachedObjectEvents, callback: Function | null) {\r\n        if (!callback) return;\r\n        if (!AttachedObject.Events[event]) return;\r\n        const idx = AttachedObject.Events[event].indexOf(callback);\r\n        if (idx >= 0) AttachedObject.Events[event].splice(idx, 1);\r\n    }\r\n\r\n\r\n    public static Current: AttachedObject[] = [];\r\n\r\n    private static Register(obj: AttachedObject) {\r\n\r\n        if (!this.Current.find(x => x === obj)) {\r\n            this.Current.push(obj);\r\n        }\r\n    }\r\n\r\n    private static Remove(obj: AttachedObject) {\r\n        const i = this.Current.indexOf(obj);\r\n        if (i >= 0) {\r\n            this.Current.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public static TryTake(controller: WebXRController, candidate: Object3D, intersection: Intersection, closeGrab: boolean): AttachedObject | null {\r\n        const interactable = GameObject.getComponentInParent(candidate, Interactable);\r\n        if (!interactable) {\r\n            if (debug)\r\n                console.warn(\"Prevented taking object that is not interactable\", candidate);\r\n            return null;\r\n        }\r\n        else candidate = interactable.gameObject;\r\n\r\n\r\n        let objectToAttach = candidate;\r\n        const sync = GameObject.getComponentInParent(candidate, SyncedTransform);\r\n        if (sync) {\r\n            sync.requestOwnership();\r\n            objectToAttach = sync.gameObject;\r\n        }\r\n\r\n        for (const o of this.Current) {\r\n            if (o.selected === objectToAttach) {\r\n                if (o.controller === controller) return o;\r\n                o.free();\r\n                o.Take(controller, objectToAttach, candidate, sync, interactable, intersection, closeGrab);\r\n                return o;\r\n            }\r\n        }\r\n\r\n        const att = new AttachedObject();\r\n        att.Take(controller, objectToAttach, candidate, sync, interactable, intersection, closeGrab);\r\n        return att;\r\n    }\r\n\r\n\r\n    public sync: SyncedTransform | null = null;\r\n    public selected: Object3D | null = null;\r\n    public selectedParent: Object3D | null = null;\r\n    public selectedMesh: Mesh | null = null;\r\n    public controller: WebXRController | null = null;\r\n    public grabTime: number = 0;\r\n    public grabUUID: string = \"\";\r\n    public isCloseGrab: boolean = false; // when taken via sphere cast with hands\r\n\r\n    private originalMaterial: Material | Material[] | null = null;\r\n    private usageMarker: UsageMarker | null = null;\r\n    private rigidbodies: Rigidbody[] | null = null;\r\n    private didReparent: boolean = false;\r\n    private grabDistance: number = 0;\r\n    private interactable: Interactable | null = null;\r\n    private positionSource: Object3D | null = null;\r\n\r\n    private Take(controller: WebXRController, take: Object3D, hit: Object3D, sync: SyncedTransform | null, _interactable: Interactable,\r\n        intersection: Intersection, closeGrab: boolean)\r\n        : AttachedObject {\r\n        console.assert(take !== null, \"Expected object to be taken but was\", take);\r\n\r\n        if (controller.isUsingHands) {\r\n            this.positionSource = closeGrab ? controller.wrist : controller.controller;\r\n        }\r\n        else {\r\n            this.positionSource = controller.controller;\r\n        }\r\n        if (!this.positionSource) {\r\n            console.warn(\"No position source\");\r\n            return this;\r\n        }\r\n\r\n        const args = { controller, take, hit, sync, interactable: _interactable };\r\n        AttachedObject.Events.WillTake?.forEach(x => x(this, args));\r\n\r\n\r\n        const mesh = hit as Mesh;\r\n        if (mesh?.material) {\r\n            this.originalMaterial = mesh.material;\r\n            if (!Array.isArray(mesh.material)) {\r\n                mesh.material = (mesh.material as Material).clone();\r\n                if (mesh.material && mesh.material[\"emissive\"])\r\n                    mesh.material[\"emissive\"].b = .2;\r\n            }\r\n        }\r\n\r\n        this.selected = take;\r\n        if (!this.selectedParent) {\r\n            this.selectedParent = take.parent;\r\n        }\r\n        this.selectedMesh = mesh;\r\n        this.controller = controller;\r\n        this.interactable = _interactable;\r\n        this.isCloseGrab = closeGrab;\r\n        // if (interactable.canGrab) {\r\n        //     this.didReparent = true;\r\n        //     this.device.controller.attach(take);\r\n        // }\r\n        // else \r\n        this.didReparent = false;\r\n\r\n\r\n        this.sync = sync;\r\n        this.grabTime = controller.context.time.time;\r\n        this.grabUUID = Date.now().toString();\r\n        this.usageMarker = GameObject.addNewComponent(this.selected, UsageMarker);\r\n        this.rigidbodies = GameObject.getComponentsInChildren(this.selected, Rigidbody);\r\n        getWorldPosition(this.positionSource, this.lastControllerWorldPos);\r\n        const getGrabPoint = () => closeGrab ? this.lastControllerWorldPos.clone() : intersection.point.clone();\r\n        this.grabDistance = getGrabPoint().distanceTo(this.lastControllerWorldPos);\r\n        this.totalChangeAlongDirection = 0.0;\r\n\r\n        // we're storing position relative to the grab point\r\n        // we're storing rotation relative to the ray\r\n        this.localPositionOffsetToGrab = this.selected.worldToLocal(getGrabPoint());\r\n        const rot = controller.isUsingHands && closeGrab ? this.controller.getWristQuaternion()!.clone() : controller.rayRotation.clone();\r\n        getWorldQuaternion(this.selected, this.localQuaternionToGrab).premultiply(rot.invert());\r\n\r\n        const rig = this.controller.webXR.Rig;\r\n        if (rig)\r\n            this.rigPositionLastFrame.copy(getWorldPosition(rig))\r\n\r\n        Avatar_POI.Add(controller.context, this.selected);\r\n        AttachedObject.Register(this);\r\n\r\n        if (this.sync) {\r\n            this.sync.fastMode = true;\r\n        }\r\n\r\n        AttachedObject.Events.DidTake?.forEach(x => x(this, args));\r\n\r\n        return this;\r\n    }\r\n\r\n    public free(): void {\r\n        if (!this.selected) return;\r\n\r\n        const args = { controller: this.controller, take: this.selected, hit: this.selected, sync: this.sync, interactable: null };\r\n        AttachedObject.Events.WillFree?.forEach(x => x(this, args));\r\n\r\n        Avatar_POI.Remove(this.controller!.context, this.selected);\r\n        AttachedObject.Remove(this);\r\n\r\n        if (this.sync) {\r\n            this.sync.fastMode = false;\r\n        }\r\n\r\n        const mesh = this.selectedMesh;\r\n        if (mesh && this.originalMaterial && mesh.material) {\r\n            mesh.material = this.originalMaterial;\r\n        }\r\n\r\n        const object = this.selected;\r\n        // only attach the object back if it has a parent\r\n        // no parent means it was destroyed while holding it!\r\n        if (this.didReparent && object.parent) {\r\n            const prevParent = this.selectedParent;\r\n            if (prevParent) prevParent.attach(object);\r\n            else this.controller?.context.scene.attach(object);\r\n        }\r\n\r\n        this.usageMarker?.destroy();\r\n\r\n        if (this.controller)\r\n            this.controller.grabbed = null;\r\n        this.selected = null;\r\n        this.selectedParent = null;\r\n        this.selectedMesh = null;\r\n        this.sync = null;\r\n\r\n\r\n        // TODO: make throwing work again\r\n        if (this.rigidbodies) {\r\n            for (const rb of this.rigidbodies) {\r\n                rb.wakeUp();\r\n                rb.setVelocity(rb.smoothedVelocity);\r\n            }\r\n        }\r\n        this.rigidbodies = null;\r\n\r\n        this.localPositionOffsetToGrab = null;\r\n        this.quaternionLerp = null;\r\n\r\n        AttachedObject.Events.DidFree?.forEach(x => x(this, args));\r\n    }\r\n\r\n    public grabPoint: Vector3 = new Vector3();\r\n\r\n    private localPositionOffsetToGrab: Vector3 | null = null;\r\n    private localPositionOffsetToGrab_worldSpace: Vector3 = new Vector3();\r\n    private localQuaternionToGrab: Quaternion = new Quaternion(0, 0, 0, 1);\r\n    private targetDir: Vector3 | null = null;\r\n    private quaternionLerp: Quaternion | null = null;\r\n\r\n    private controllerDir = new Vector3();\r\n    private controllerWorldPos = new Vector3();\r\n    private lastControllerWorldPos = new Vector3();\r\n    private controllerPosDelta = new Vector3();\r\n    private totalChangeAlongDirection = 0.0;\r\n    private rigPositionLastFrame = new Vector3();\r\n\r\n    private controllerMovementSinceLastFrame() {\r\n        if (!this.positionSource || !this.controller) return 0.0;\r\n\r\n        // controller direction\r\n        this.controllerDir.set(0, 0, -1);\r\n        this.controllerDir.applyQuaternion(this.controller.rayRotation);\r\n\r\n        // controller delta\r\n        getWorldPosition(this.positionSource, this.controllerWorldPos);\r\n        this.controllerPosDelta.copy(this.controllerWorldPos);\r\n        this.controllerPosDelta.sub(this.lastControllerWorldPos);\r\n        this.lastControllerWorldPos.copy(this.controllerWorldPos);\r\n        const rig = this.controller.webXR.Rig;\r\n        if (rig) {\r\n            const rigPos = getWorldPosition(rig);\r\n            const rigDelta = this.rigPositionLastFrame.sub(rigPos);\r\n            this.controllerPosDelta.add(rigDelta);\r\n            this.rigPositionLastFrame.copy(rigPos);\r\n        }\r\n\r\n        // calculate delta along direction\r\n        const changeAlongControllerDirection = this.controllerDir.dot(this.controllerPosDelta);\r\n\r\n        return changeAlongControllerDirection;\r\n    }\r\n\r\n    public update() {\r\n        if (this.rigidbodies)\r\n            for (const rb of this.rigidbodies)\r\n                rb.resetVelocities();\r\n        // TODO: add/use sync lost ownership event\r\n        if (this.sync && this.controller && this.controller.context.connection.isInRoom) {\r\n            const td = this.controller.context.time.time - this.grabTime;\r\n            // if (time.frameCount % 60 === 0) {\r\n            //     console.log(\"ownership?\", this.selected.name, this.sync.hasOwnership(), td)\r\n            // }\r\n            if (td > 3) {\r\n                // if (time.frameCount % 60 === 0) {\r\n                //     console.log(this.sync.hasOwnership())\r\n                // }\r\n                if (this.sync.hasOwnership() === false) {\r\n                    console.log(\"no ownership, will leave\", this.sync.guid);\r\n                    this.free();\r\n                }\r\n            }\r\n        }\r\n        if (this.interactable && !this.interactable.canGrab) return;\r\n\r\n        if (!this.didReparent && this.selected && this.controller) {\r\n\r\n            const rigScale = this.controller.webXR.Rig?.scale.x ?? 1.0;\r\n\r\n            this.totalChangeAlongDirection += this.controllerMovementSinceLastFrame();\r\n            // console.log(this.totalChangeAlongDirection);\r\n\r\n            // alert(\"yo: \" + this.controller.webXR.Rig?.scale.x); // this is 0.1 on Hololens\r\n            let currentDist = 1.0;\r\n            if (this.controller.type === ControllerType.PhysicalDevice) // only for controllers and not on touch (AR touches are controllers)\r\n            {\r\n                currentDist = Math.max(0.0, 1 + this.totalChangeAlongDirection * 2.0 / rigScale);\r\n                currentDist = currentDist * currentDist * currentDist;\r\n            }\r\n            if (this.grabDistance / rigScale < 0.8) currentDist = 1.0; // don't accelerate if this is a close grab, want full control\r\n\r\n            if (!this.targetDir) {\r\n                this.targetDir = new Vector3();\r\n            }\r\n            this.targetDir.set(0, 0, -this.grabDistance * currentDist);\r\n            const target = this.targetDir.applyQuaternion(this.controller.rayRotation).add(this.controllerWorldPos);\r\n\r\n            // apply rotation\r\n            const targetQuat = this.controller.rayRotation.clone().multiplyQuaternions(this.controller.rayRotation, this.localQuaternionToGrab);\r\n            if (!this.quaternionLerp) {\r\n                this.quaternionLerp = targetQuat.clone();\r\n            }\r\n            this.quaternionLerp.slerp(targetQuat, this.controller.useSmoothing ? this.controller.context.time.deltaTime / .03 : 1.0);\r\n            setWorldQuaternion(this.selected, this.quaternionLerp);\r\n            this.selected.updateWorldMatrix(false, false); // necessary so that rotation is correct for the following position update\r\n\r\n            // apply position\r\n            this.grabPoint.copy(target);\r\n            // apply local grab offset\r\n            if (this.localPositionOffsetToGrab) {\r\n                this.localPositionOffsetToGrab_worldSpace.copy(this.localPositionOffsetToGrab);\r\n                this.selected.localToWorld(this.localPositionOffsetToGrab_worldSpace).sub(getWorldPosition(this.selected));\r\n                target.sub(this.localPositionOffsetToGrab_worldSpace);\r\n            }\r\n            setWorldPosition(this.selected, target);\r\n        }\r\n\r\n\r\n        if (this.rigidbodies != null) {\r\n            for (const rb of this.rigidbodies) {\r\n                rb.wakeUp();\r\n                rb.setBodyFromGameObject({ x: 0, y: 0, z: 0 });\r\n            }\r\n        }\r\n\r\n        InstancingUtil.markDirty(this.selected, true);\r\n    }\r\n}\r\n", "import * as THREE from \"three\";\r\nimport { TypeStore } from \"../../engine/engine_typestore\";\r\nimport { Behaviour, GameObject } from \"../Component\";\r\nimport { AvatarMarker } from \"../WebXRAvatar\";\r\nimport * as utils from \"../../engine/engine_three_utils\";\r\nimport { OwnershipModel } from \"../../engine/engine_networking\";\r\nimport { Int8BufferAttribute } from \"three\";\r\nimport { Context } from \"../../engine/engine_setup\";\r\nimport { IModel } from \"../../engine/engine_networking_types\";\r\n\r\nexport class Avatar_POI {\r\n\r\n    public static Pois: { obj: THREE.Object3D, avatar: AvatarMarker | null }[] = [];\r\n    public static LastChangeTime: number = 0;\r\n\r\n    public static Add(context: Context, obj: THREE.Object3D, ignoredBy: AvatarMarker | null = null) {\r\n        if (!obj) return;\r\n        for (const e of this.Pois) {\r\n            if (e.obj === obj) return;\r\n        }\r\n        this.Pois.push({ obj: obj, avatar: ignoredBy });\r\n        this.LastChangeTime = context.time.time;\r\n        // console.log(\"Added\", obj?.name);\r\n    }\r\n\r\n    public static Remove(context: Context | null, obj: THREE.Object3D | null) {\r\n\r\n        if (!obj) return;\r\n        for (const e of this.Pois) {\r\n            if (e.obj === obj) {\r\n                this.Pois.splice(this.Pois.indexOf(e), 1);\r\n                this.LastChangeTime = context?.time.time ?? Context.Current?.time.time;\r\n                // console.log(\"Removed\", obj?.name);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nenum NetworkEvents {\r\n    TargetChanged = \"avatar-look-target-changed\"\r\n}\r\n\r\nclass TargetModel implements IModel {\r\n    public guid!: string;\r\n    public position: THREE.Vector3 = new THREE.Vector3();\r\n}\r\n\r\nexport class Avatar_Brain_LookAt extends Behaviour {\r\n\r\n    public set controlledTarget(target: THREE.Object3D) {\r\n        this.target = target;\r\n        // HACK\r\n        const r = TypeStore.get(\"MoveRandom\");\r\n        if (r && this.target) {\r\n            const rm = GameObject.getComponent(this.target, r) as Behaviour;\r\n            if (rm) {\r\n                rm.destroy();\r\n            }\r\n        }\r\n\r\n        // this.target.add(new THREE.AxesHelper(.1));\r\n    }\r\n\r\n    // that target to copy positions into\r\n    private target: THREE.Object3D | null = null;\r\n\r\n    private avatar: AvatarMarker | null = null;\r\n    private _model: OwnershipModel | null = null;\r\n    private _targetModel: TargetModel = new TargetModel();\r\n    private _currentTargetObject: THREE.Object3D | null = null;\r\n    private _lastUpdateTime: number = 0;\r\n    private _lookDuration: number = 0;\r\n    private _lastPoiChangedTime: number = 0;\r\n\r\n    awake(): void {\r\n        this.avatar = GameObject.getComponentInParent(this.gameObject, AvatarMarker);\r\n\r\n        if (this.avatar) {\r\n            const marker = GameObject.getComponentInParent(this.gameObject, AvatarMarker);\r\n            this._model = new OwnershipModel(this.context.connection, this.guid);\r\n            if (marker?.isLocalAvatar) {\r\n                this._model.requestOwnership();\r\n            }\r\n        }\r\n\r\n        this.context.connection.beginListen(NetworkEvents.TargetChanged, (cb: TargetModel) => {\r\n            if (this.target && cb && cb.guid === this.avatar?.guid) {\r\n                utils.setWorldPosition(this.target, cb.position);\r\n            }\r\n        });\r\n\r\n        // console.log(this);\r\n    }\r\n\r\n    update(): void {\r\n        const connected = this.context.connection.isConnected;\r\n        if (!connected || this._model?.hasOwnership) {\r\n\r\n            if (Avatar_POI.LastChangeTime !== this._lastPoiChangedTime) {\r\n                this._lastPoiChangedTime = Avatar_POI.LastChangeTime;\r\n                this._lookDuration = 0;\r\n            }\r\n\r\n            this.selectTarget();\r\n\r\n            // send target info\r\n            if (this._currentTargetObject && this.context.time.frameCount % 10 === 0 && this.target) {\r\n                const wp = utils.getWorldPosition(this._currentTargetObject);\r\n                utils.setWorldPosition(this.target, wp);\r\n\r\n                if (this.context.connection.isConnected && this.avatar) {\r\n                    this.context.connection.send(NetworkEvents.TargetChanged, this._targetModel);\r\n                    this._targetModel.guid = this.avatar.guid;\r\n                    this._targetModel.position.copy(wp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectTarget() {\r\n        // select random target\r\n        const td = this.context.time.time - this._lastUpdateTime;\r\n        if (td > this._lookDuration) {\r\n            this._lastUpdateTime = this.context.time.time;\r\n            this._lookDuration = Math.random() * .5 + .2;\r\n            const pois = Avatar_POI.Pois;\r\n            if (pois.length > 0) {\r\n                const poi = pois[Math.floor(Math.random() * pois.length)];\r\n                if (poi && poi.obj) {\r\n                    if (poi.avatar && poi.avatar === this.avatar) return;\r\n                    this._currentTargetObject = poi.obj;\r\n                    // console.log(this._currentTargetObject);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { WebXR } from \"./WebXR\";\r\nimport { Quaternion, Vector3 } from \"three\";\r\nimport { AvatarLoader } from \"./AvatarLoader\";\r\nimport { XRFlag, XRStateFlag } from \"./XRFlag\";\r\nimport { Avatar_POI } from \"./avatar/Avatar_Brain_LookAt\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { AssetReference } from \"../engine/engine_addressables\";\r\nimport { Object3D } from \"three\";\r\nimport { VRUserState } from \"./WebXRSync\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { ViewDevice } from \"../engine/engine_playerview\";\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\n\r\nexport const debug = getParam(\"debugavatar\");\r\n\r\nexport type AvatarMarkerEventArgs = {\r\n    avatarMarker: AvatarMarker;\r\n    gameObject: Object3D;\r\n}\r\n\r\nexport class AvatarMarker extends Behaviour {\r\n\r\n    public static getAvatar(index: number): AvatarMarker | null {\r\n        if (index >= 0 && index < AvatarMarker.instances.length)\r\n            return AvatarMarker.instances[index];\r\n        return null;\r\n    }\r\n\r\n    public static instances: AvatarMarker[] = [];\r\n\r\n    public static onAvatarMarkerCreated(cb: (args: AvatarMarkerEventArgs) => void): Function {\r\n        AvatarMarker._onNewAvatarMarkerAdded.push(cb);\r\n        return cb;\r\n    }\r\n\r\n    public static onAvatarMarkerDestroyed(cb: (args: AvatarMarkerEventArgs) => void): Function {\r\n        AvatarMarker._onAvatarMarkerDestroyed.push(cb);\r\n        return cb;\r\n    }\r\n\r\n    private static _onNewAvatarMarkerAdded: Array<(args: AvatarMarkerEventArgs) => void> = [];\r\n    private static _onAvatarMarkerDestroyed: Array<(args: AvatarMarkerEventArgs) => void> = [];\r\n\r\n\r\n    public connectionId!: string;\r\n    public avatar?: WebXRAvatar | Object3D;\r\n\r\n    awake() {\r\n        AvatarMarker.instances.push(this);\r\n        if (debug)\r\n            console.log(this);\r\n\r\n        for (const cb of AvatarMarker._onNewAvatarMarkerAdded)\r\n            cb({ avatarMarker: this, gameObject: this.gameObject });\r\n    }\r\n\r\n    onDestroy() {\r\n        AvatarMarker.instances.splice(AvatarMarker.instances.indexOf(this), 1);\r\n\r\n        for (const cb of AvatarMarker._onAvatarMarkerDestroyed)\r\n            cb({ avatarMarker: this, gameObject: this.gameObject });\r\n    }\r\n\r\n    isLocalAvatar() {\r\n        return this.connectionId === this.context.connection.connectionId;\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n        if (this.avatar) {\r\n            if (\"setVisible\" in this.avatar)\r\n                this.avatar.setVisible(visible);\r\n            else {\r\n                GameObject.setActive(this.avatar, visible);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class WebXRAvatar {\r\n    private static loader: AvatarLoader = new AvatarLoader();\r\n\r\n    private _isVisible: boolean = true;\r\n    setVisible(visible: boolean) {\r\n        this._isVisible = visible;\r\n        this.updateVisibility();\r\n    }\r\n\r\n    get isWebXRAvatar() { return true; }\r\n\r\n    // TODO: set layers on all avatars \r\n    /** the user id */\r\n    public guid: string;\r\n\r\n    private root: Object3D | null = null;\r\n    public head: Object3D | null = null;\r\n    public handLeft: Object3D | null = null;\r\n    public handRight: Object3D | null = null;\r\n    public lastUpdate: number = -1;\r\n    public isLocalAvatar: boolean = false;\r\n    public flags: XRFlag[] | null = null;\r\n    private headScale: Vector3 = new Vector3(1, 1, 1);\r\n    private handLeftScale: Vector3 = new Vector3(1, 1, 1);\r\n    private handRightScale: Vector3 = new Vector3(1, 1, 1);\r\n\r\n    private readonly webxr: WebXR;\r\n\r\n    private lastAvatarId: string | null = null;\r\n    private hasAvatarOverride: boolean = false;\r\n\r\n\r\n    private context: Context;\r\n    private avatarMarker: AvatarMarker | null = null;\r\n\r\n    constructor(context: Context, guid: string, webXR: WebXR) {\r\n        this.context = context;\r\n        this.guid = guid;\r\n        this.webxr = webXR;\r\n        this.setupCustomAvatar(this.webxr.defaultAvatar as AssetReference);\r\n    }\r\n\r\n    public updateFlags() {\r\n        if (!this.flags)\r\n            return;\r\n        let mask = this.isLocalAvatar ? XRStateFlag.FirstPerson : XRStateFlag.ThirdPerson;\r\n        if (this.context.isInVR)\r\n            mask |= XRStateFlag.VR;\r\n        else if (this.context.isInAR)\r\n            mask |= XRStateFlag.AR;\r\n        else\r\n            mask |= XRStateFlag.Browser;\r\n        for (const f of this.flags) {\r\n            f.gameObject.visible = true;\r\n            f.UpdateVisible(mask);\r\n        }\r\n    }\r\n\r\n    public async setAvatarOverride(avatarId: string | null): Promise<boolean | null> {\r\n        this.hasAvatarOverride = avatarId !== null;\r\n        if (this.hasAvatarOverride && this.lastAvatarId !== avatarId) {\r\n            this.lastAvatarId = avatarId;\r\n            if (avatarId != null && avatarId.length > 0)\r\n                return await this.setupCustomAvatar(avatarId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private _headTarget: Object3D = new Object3D();\r\n    private _handLeftTarget: Object3D = new Object3D();\r\n    private _handRightTarget: Object3D = new Object3D();\r\n    private _canInterpolate: boolean = false;\r\n\r\n    private static invertRotation: Quaternion = new Quaternion().setFromAxisAngle(new Vector3(0, 1, 0), Math.PI);\r\n\r\n    public tryUpdate(state: VRUserState, _timeDiff: number) {\r\n        if (state.guid === this.guid) {\r\n\r\n            if (this.lastAvatarId !== state.avatarId && state.avatarId && state.avatarId.length > 0) {\r\n                this.lastAvatarId = state.avatarId;\r\n                this.setupCustomAvatar(state.avatarId);\r\n            }\r\n\r\n            this.lastUpdate = state.time;\r\n            if (this.head) {\r\n\r\n                const device = this.webxr.IsInAR ? ViewDevice.Handheld : ViewDevice.Headset;\r\n                let viewObj = this.head;\r\n                // if (this.isLocalAvatar) {\r\n                //     if (this.context.mainCamera && this.context.isInXR) {\r\n                //         viewObj = this.context.renderer.xr.getCamera(this.context.mainCamera);\r\n                //     }\r\n                // }\r\n                this.context.players.setPlayerView(state.guid, viewObj, device);\r\n\r\n                InstancingUtil.markDirty(this.head);\r\n\r\n                this._canInterpolate = true;\r\n                const ht = this.isLocalAvatar ? this.head : this._headTarget;\r\n                ht.position.set(state.position.x, state.position.y, state.position.z);\r\n                // not sure how position in local space can be correct but rotation is wrong / offset when parent rotates\r\n                ht.quaternion.set(state.rotation.x, state.rotation.y, state.rotation.z, state.rotation.w);\r\n                ht.scale.set(state.scale, state.scale, state.scale);\r\n                ht.scale.multiply(this.headScale);\r\n\r\n                if (this.handLeft) {\r\n                    const ht = this.isLocalAvatar ? this.handLeft : this._handLeftTarget;\r\n                    ht.position.set(state.posLeftHand.x, state.posLeftHand.y, state.posLeftHand.z);\r\n                    ht.quaternion.set(state.rotLeftHand[\"_x\"], state.rotLeftHand[\"_y\"], state.rotLeftHand[\"_z\"], state.rotLeftHand[\"_w\"]);\r\n                    ht.quaternion.multiply(WebXRAvatar.invertRotation);\r\n                    ht.scale.set(state.scale, state.scale, state.scale);\r\n                    ht.scale.multiply(this.handLeftScale);\r\n                    InstancingUtil.markDirty(this.handLeft);\r\n                }\r\n\r\n                if (this.handRight) {\r\n                    const ht = this.isLocalAvatar ? this.handRight : this._handRightTarget;\r\n                    ht.position.set(state.posRightHand.x, state.posRightHand.y, state.posRightHand.z);\r\n                    ht.quaternion.set(state.rotRightHand[\"_x\"], state.rotRightHand[\"_y\"], state.rotRightHand[\"_z\"], state.rotRightHand[\"_w\"]);\r\n                    ht.quaternion.multiply(WebXRAvatar.invertRotation);\r\n                    ht.scale.set(state.scale, state.scale, state.scale);\r\n                    ht.scale.multiply(this.handRightScale);\r\n                    InstancingUtil.markDirty(this.handRight);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public update() {\r\n        if (this.isLocalAvatar)\r\n            return;\r\n        if (!this._canInterpolate)\r\n            return;\r\n        const t = this.context.time.deltaTime / .1;\r\n        if (this.head) {\r\n            this.head.position.lerp(this._headTarget.position, t);\r\n            this.head.quaternion.slerp(this._headTarget.quaternion, t);\r\n            this.head.scale.lerp(this._headTarget.scale, t);\r\n        }\r\n        if (this.handLeft && this._handLeftTarget) {\r\n            this.handLeft.position.lerp(this._handLeftTarget.position, t);\r\n            this.handLeft.quaternion.slerp(this._handLeftTarget.quaternion, t);\r\n            this.handLeft.scale.lerp(this._handLeftTarget.scale, t);\r\n        }\r\n        if (this.handRight && this._handRightTarget) {\r\n            this.handRight.position.lerp(this._handRightTarget.position, t);\r\n            this.handRight.quaternion.slerp(this._handRightTarget.quaternion, t);\r\n            this.handRight.scale.lerp(this._handRightTarget.scale, t);\r\n        }\r\n    }\r\n\r\n    public destroy() {\r\n        if (debug)\r\n            console.log(\"Destroy avatar\", this.guid);\r\n        this.root?.removeFromParent();\r\n        this.avatarMarker?.destroy();\r\n        this.lastAvatarId = null;\r\n\r\n        if (this.head) {\r\n            Avatar_POI.Remove(this.context, this.head);\r\n        }\r\n        // this.head?.removeFromParent();\r\n        // this.handLeft?.removeFromParent();\r\n        // this.handRight?.removeFromParent();\r\n    }\r\n\r\n    private updateVisibility() {\r\n        const root = this.root;\r\n        if (root) {\r\n            GameObject.setActive(root, this._isVisible);\r\n        }\r\n    }\r\n\r\n    private async setupCustomAvatar(avatarId: string | Object3D | AssetReference): Promise<boolean> {\r\n        if (debug)\r\n            console.log(\"LOAD\", avatarId, this);\r\n\r\n        if (!avatarId || (typeof avatarId === \"string\" && avatarId.length <= 0))\r\n            return false;\r\n\r\n        if (this.head) {\r\n            Avatar_POI.Remove(this.context, this.head);\r\n        }\r\n\r\n        const reference = avatarId as AssetReference;\r\n        if (reference?.loadAssetAsync !== undefined) {\r\n            await reference.loadAssetAsync();\r\n            const prefab = reference.asset as Object3D;\r\n            GameObject.setActive(prefab, false);\r\n            avatarId = GameObject.instantiate(prefab as Object3D) as Object3D;\r\n            GameObject.setActive(avatarId, true);\r\n            // console.log(\"Avatar\", avatarId);\r\n        }\r\n        if (debug)\r\n            console.log(avatarId);\r\n\r\n        const model = await WebXRAvatar.loader.getOrCreateNewAvatarInstance(this.context, avatarId as (Object3D | string));\r\n        if (debug)\r\n            console.log(model, model?.isValid, this.lastAvatarId, avatarId);\r\n        // if (this.lastAvatarId !== avatarId) {\r\n        //     // avatar id changed in the meantime\r\n        //     return true;\r\n        // }\r\n        if (model?.isValid) {\r\n            this.root = model.root;\r\n\r\n            this.root.position.set(0, 0, 0);\r\n            this.root.quaternion.set(0, 0, 0, 1);\r\n            this.root.scale.set(1, 1, 1); // should we allow a scaled avatar root?!\r\n\r\n            this.avatarMarker = GameObject.addNewComponent(this.root as GameObject, AvatarMarker) as AvatarMarker;\r\n            this.avatarMarker.connectionId = this.guid;\r\n            this.avatarMarker.avatar = this;\r\n\r\n            if (this.head && this.head !== model.head)\r\n                this.head?.removeFromParent();\r\n            this.head = model.head;\r\n            this.headScale.copy(this.head.scale);\r\n\r\n            if (this.head && !this.isLocalAvatar) {\r\n                Avatar_POI.Add(this.context, this.head, this.avatarMarker);\r\n            }\r\n\r\n            if (model.leftHand)\r\n                this.handLeft?.removeFromParent();\r\n            this.handLeft = model.leftHand ?? this.handLeft;\r\n            if (this.handLeft)\r\n                this.handLeftScale.copy(this.handLeft.scale);\r\n            else\r\n                this.handLeftScale.set(1, 1, 1);\r\n\r\n            if (model.rigthHand)\r\n                this.handRight?.removeFromParent();\r\n            this.handRight = model.rigthHand ?? this.handRight;\r\n            if (this.handRight)\r\n                this.handRightScale.copy(this.handRight.scale);\r\n            else\r\n                this.handRightScale.set(1, 1, 1);\r\n\r\n\r\n            this.context.scene.add(this.root);\r\n            // scene.add(this.handLeft);\r\n            // scene.add(this.handRight);\r\n            // this.mouthShapes = null;\r\n            // this.needSearchEyes = true;\r\n            if (this.flags == null)\r\n                this.flags = [];\r\n            this.flags.length = 0;\r\n            this.flags.push(...GameObject.getComponentsInChildren(this.root as GameObject, XRFlag));\r\n            // if no flags are found add at least a head flag to hide head in first person VR\r\n            if (this.flags.length <= 0) {\r\n                if (this.head) {\r\n                    const flag = GameObject.addNewComponent(this.head, XRFlag) as XRFlag;\r\n                    flag.visibleIn = XRStateFlag.ThirdPerson | XRStateFlag.VR;\r\n                    this.flags.push(flag);\r\n                    if (debug)\r\n                        console.log(\"Added flag to head: \" + flag.visibleIn, this.head.name);\r\n                }\r\n            }\r\n\r\n            if (debug)\r\n                console.log(\"[Avatar], is Local? \", this.isLocalAvatar, this.root);\r\n            this.updateFlags();\r\n\r\n            this.updateVisibility();\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            if (debug)\r\n                console.warn(\"build avatar failed\");\r\n            return false;\r\n        }\r\n    }\r\n}\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as utils from \"../engine/engine_utils\";\r\n\r\n\r\nconst debug = utils.getParam(\"debugflags\");\r\n\r\nexport enum XRStateFlag {\r\n    Never = 0,\r\n    Browser = 1 << 0,\r\n    AR = 1 << 1,\r\n    VR = 1 << 2,\r\n    FirstPerson = 1 << 3,\r\n    ThirdPerson = 1 << 4,\r\n    All = 0xffffffff\r\n}\r\n\r\n// console.log(XRStateFlag);\r\n\r\nexport class XRState {\r\n\r\n    public static Global: XRState = new XRState();\r\n\r\n    public Mask: XRStateFlag = XRStateFlag.Browser | XRStateFlag.ThirdPerson;\r\n\r\n    public Has(state: XRStateFlag) {\r\n        const res = (this.Mask & state);\r\n        return res !== 0;\r\n    }\r\n\r\n    public Set(state: number) {\r\n        if(debug) console.warn(\"Set XR flag state to\", state)\r\n        this.Mask = state as number;\r\n        XRFlag.Apply();\r\n    }\r\n\r\n    public Enable(state: number) {\r\n        this.Mask |= state;\r\n        XRFlag.Apply();\r\n    }\r\n\r\n    public Disable(state: number) {\r\n        this.Mask &= ~state;\r\n        XRFlag.Apply();\r\n    }\r\n\r\n    public Toggle(state: number) {\r\n        this.Mask ^= state;\r\n        XRFlag.Apply();\r\n    }\r\n\r\n    public EnableAll() {\r\n        this.Mask = 0xffffffff | 0;\r\n        XRFlag.Apply();\r\n    }\r\n\r\n    public DisableAll() {\r\n        this.Mask = 0;\r\n        XRFlag.Apply();\r\n    }\r\n}\r\n\r\nexport class XRFlag extends Behaviour {\r\n\r\n    private static registry: XRFlag[] = [];\r\n\r\n    public static Apply() {\r\n        for (const r of this.registry) r.UpdateVisible(XRState.Global);\r\n    }\r\n\r\n    private static firstApply: boolean;\r\n    private static buffer: XRState = new XRState();\r\n\r\n    awake() {\r\n        XRFlag.registry.push(this);\r\n    }\r\n\r\n    onEnable(): void {\r\n        if (!XRFlag.firstApply) {\r\n            XRFlag.firstApply = true;\r\n            XRFlag.Apply();\r\n        }\r\n    }\r\n\r\n    onDestroy(): void {\r\n        const i = XRFlag.registry.indexOf(this);\r\n        if (i >= 0)\r\n            XRFlag.registry.splice(i, 1);\r\n    }\r\n\r\n    public visibleIn!: number;\r\n\r\n    public get isOn(): boolean { return this.gameObject.visible; }\r\n\r\n    public UpdateVisible(state: XRState | XRStateFlag | null = null) {   \r\n        // XR flags set visibility of whole hierarchy which is like setting the whole object inactive\r\n        // so we need to ignore the enabled state of the XRFlag component\r\n        // if(!this.enabled) return;\r\n        let res: boolean | undefined = undefined;\r\n\r\n        const flag = state as number;\r\n        if (flag && typeof flag === \"number\") {\r\n            console.assert(typeof flag === \"number\", \"XRFlag.UpdateVisible: state must be a number\", flag);\r\n            if (debug)\r\n                console.log(flag);\r\n            XRFlag.buffer.Mask = flag;\r\n            state = XRFlag.buffer;\r\n        }\r\n\r\n        const st = state as XRState;\r\n        if (st) {\r\n            if (debug)\r\n                console.warn(this.name, \"use passed in mask\", st.Mask, this.visibleIn)\r\n            res = st.Has(this.visibleIn);\r\n        }\r\n        else {\r\n            if (debug)\r\n                console.log(this.name, \"use global mask\")\r\n            XRState.Global.Has(this.visibleIn);\r\n        }\r\n        if (res === undefined) return;\r\n        if (res) {\r\n            if (debug)\r\n                console.log(this.name, \"is visible\", this.gameObject.uuid)\r\n            // this.gameObject.visible = true;\r\n            GameObject.setActive(this.gameObject, true);\r\n        } else {\r\n            if (debug)\r\n                console.log(this.name, \"is not visible\", this.gameObject.uuid);\r\n            const isVisible = this.gameObject.visible;\r\n            if(!isVisible) return;\r\n            this.gameObject.visible = false;\r\n            // console.trace(\"DISABLE\", this.name);\r\n            // GameObject.setActive(this.gameObject, false);\r\n        }\r\n    }\r\n}", "// import { Canvas } from './Canvas';\r\nimport * as ThreeMeshUI from 'three-mesh-ui';\r\nimport { Behaviour, GameObject } from \"../Component\";\r\nimport { EventSystem } from \"./EventSystem\";\r\nimport { showGizmos } from '../../engine/engine_default_parameters';\r\nimport { AxesHelper, Object3D } from 'three';\r\nimport { IGraphic } from './Interfaces';\r\nimport { ShadowCastingMode } from '../Renderer';\r\nexport const includesDir = \"./include\";\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\r\n\r\n\r\nThreeMeshUI.Block.prototype[\"interactable\"] = {\r\n    get() {\r\n        return this.interactive;\r\n    },\r\n    set(value) {\r\n        this.interactable = value;\r\n    }\r\n}\r\n\r\nexport const $shadowDomOwner = Symbol(\"shadowDomOwner\");\r\n\r\nexport class BaseUIComponent extends Behaviour {\r\n\r\n    isRoot() { return this.Root?.gameObject === this.gameObject; }\r\n\r\n    markDirty() {\r\n        EventSystem.markUIDirty(this.context);\r\n    }\r\n\r\n    shadowComponent: ThreeMeshUI.Block | null = null;\r\n\r\n    private _controlsChildLayout = true;\r\n    get controlsChildLayout(): boolean { return this._controlsChildLayout; }\r\n    set controlsChildLayout(val: boolean) {\r\n        this._controlsChildLayout = val;\r\n        if (this.shadowComponent) {\r\n            //@ts-ignore\r\n            (this.shadowComponent as ThreeMeshUI.MeshUIComponent).autoLayout = val;\r\n        }\r\n    }\r\n\r\n    private _root?: UIRootComponent | null = undefined;\r\n    protected get Root(): UIRootComponent | null {\r\n        if (this._root === undefined) {\r\n            this._root = GameObject.getComponentInParent(this.gameObject, UIRootComponent);\r\n        }\r\n        return this._root;\r\n    }\r\n\r\n    // private _intermediate?: Object3D;\r\n    protected _parentComponent?: BaseUIComponent | null = undefined;\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    //@ts-ignore\r\n    protected addShadowComponent(container: any, parent?: BaseUIComponent) {\r\n\r\n        this.removeShadowComponent();\r\n\r\n        // instead of inserting here, we attach to the matching shadow hierarchy starting with the Canvas component.\r\n        const searchFrom = this.isRoot() ? this.gameObject : this.gameObject.parent;\r\n        this._parentComponent = GameObject.getComponentInParent(searchFrom!, BaseUIComponent);\r\n        if (!this._parentComponent) {\r\n            console.warn(`Component \\\"${this.name}\\\" doesn't have a UI parent anywhere. Do you have a UI element outside a Canvas?`, this);\r\n            return;\r\n        }\r\n\r\n        container.name = this.name + \" (\" + (this.constructor.name ?? \"UI\") + \")\";\r\n        container.autoLayout = this._parentComponent.controlsChildLayout;\r\n        container[$shadowDomOwner] = this;\r\n\r\n        // TODO: raycastTarget doesnt work anymore -> i think we need to set the gameObject layer and then check in the raycaster if the shadowComponentOwner is on the correct layer?!\r\n        // const raycastTarget = (this as unknown as IGraphic).raycastTarget;\r\n        // this.gameObject.layers.set(2)\r\n\r\n\r\n        // TODO: only traverse our own hierarchy, we can stop if we find another owner\r\n        container.traverse(c => {\r\n            if (c[$shadowDomOwner] === undefined) {\r\n                c[$shadowDomOwner] = this;\r\n            }\r\n\r\n            // // this makes text not render anymore when enabled again\r\n            // if (raycastTarget === false) {\r\n            //     c.layers.set(2);\r\n            // }\r\n        });\r\n\r\n        let needsUpdate = false;\r\n\r\n        if (this.Root?.gameObject === this.gameObject) {\r\n            this.gameObject.add(container);\r\n        }\r\n        else {\r\n            let targetShadowComponent = this._parentComponent.shadowComponent;\r\n            if (targetShadowComponent) {\r\n                // console.log(\"ADD\", this.name, \"to\", this._parentComponent.name, targetShadowComponent);\r\n                targetShadowComponent?.add(container);\r\n                needsUpdate = true;\r\n            }\r\n        }\r\n        this.shadowComponent = container;\r\n        if (parent && parent.shadowComponent && this.shadowComponent) {\r\n            parent.shadowComponent.add(this.shadowComponent);\r\n        }\r\n        // this.applyTransform();\r\n\r\n        if (showGizmos) {\r\n            container.add(new AxesHelper(.5));\r\n        }\r\n\r\n        this.onAfterAddedToScene();\r\n\r\n        // make sure to update the layout when adding content\r\n        // otherwise it will fail when object are enabled at runtime\r\n        if (needsUpdate)\r\n            ThreeMeshUI.update();\r\n    }\r\n\r\n\r\n    set(_state: object) {\r\n        // if (!this.shadowComponent) return;\r\n        // this.traverseOwnedShadowComponents(this.shadowComponent, this, o => {\r\n        //     for (const ch of o.children) {\r\n        //         console.log(this, ch);\r\n        //         if (ch.isUI && typeof ch.set === \"function\") {\r\n        //             // ch.set(state);\r\n        //             // ch.update(true, true, true);\r\n        //         }\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    private traverseOwnedShadowComponents(current: Object3D, owner: any, callback: (obj: any) => void) {\r\n        if (!current) return;\r\n        if (current[$shadowDomOwner] === owner) {\r\n            callback(current);\r\n            for (const ch of current.children) {\r\n                this.traverseOwnedShadowComponents(ch, owner, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected removeShadowComponent() {\r\n        if (this.shadowComponent) {\r\n            this.shadowComponent.removeFromParent();\r\n        }\r\n    }\r\n\r\n    protected onAfterAddedToScene() {\r\n\r\n    }\r\n\r\n    setInteractable(value: boolean) {\r\n        if (this.shadowComponent) {\r\n            //@ts-ignore\r\n            this.shadowComponent.interactable = value;\r\n        }\r\n    }\r\n}\r\n\r\nexport class UIRootComponent extends BaseUIComponent {\r\n    awake() {\r\n        super.awake();\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\n// import { Camera } from \"./Camera\";\r\nimport { OrbitControls as ThreeOrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { LookAtConstraint } from \"./LookAtConstraint\";\r\nimport * as THREE from \"three\";\r\nimport { getWorldPosition, setWorldPosition, slerp } from \"../engine/engine_three_utils\";\r\nimport { RaycastOptions } from \"../engine/engine_physics\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Camera } from \"./Camera\";\r\nimport { getParam, isMobileDevice } from \"../engine/engine_utils\";\r\n\r\nconst freeCam = getParam(\"freecam\");\r\n\r\nconst disabledKeys = { LEFT: \"\", UP: \"\", RIGHT: \"\", BOTTOM: \"\" };\r\nlet defaultKeys: any = undefined;\r\n\r\nexport class OrbitControls extends Behaviour {\r\n    public get controls() {\r\n        return this._controls;\r\n    }\r\n\r\n    public get controllerObject(): THREE.Object3D | null {\r\n        return this._cameraObject;\r\n    }\r\n\r\n    public onStartInteraction(func: Function) {\r\n        this.controls?.addEventListener(\"start\", func as any);\r\n    }\r\n\r\n    autoRotate: boolean = false;\r\n    autoRotateSpeed: number = 1.0;\r\n    enableKeys: boolean = true;\r\n    enableDamping: boolean = true;\r\n    dampingFactor: number = 0.1;\r\n    enableZoom: boolean = true;\r\n    minZoom: number = 0;\r\n    maxZoom: number = Infinity;\r\n    enablePan: boolean = true;\r\n    @serializable(LookAtConstraint)\r\n    lookAtConstraint: LookAtConstraint | null = null;\r\n    lookAtConstraint01: number = 1;\r\n    middleClickToFocus: boolean = true;\r\n    doubleClickToFocus: boolean = true;\r\n\r\n    // remove once slerp works correctly\r\n    useSlerp: boolean = true;\r\n\r\n\r\n    debugLog: boolean = false;\r\n    targetLerpSpeed = 5;\r\n\r\n    private _lookTargetPosition!: THREE.Vector3;\r\n    private _controls: ThreeOrbitControls | null = null;\r\n    private _cameraObject: THREE.Object3D | null = null;\r\n\r\n    private _lerpToTargetPosition: boolean = false;\r\n    private _lerpCameraToTarget: boolean = false;\r\n    private _cameraTargetPosition: THREE.Vector3 | null = null;\r\n\r\n    private _inputs: number = 0;\r\n    private _enableTime: number = 0; // use to disable double click when double clicking on UI\r\n    private _startedListeningToKeyEvents: boolean = false;\r\n\r\n    awake(): void {\r\n        this._lookTargetPosition = new THREE.Vector3();\r\n        this._startedListeningToKeyEvents = false;\r\n    }\r\n\r\n    onEnable() {\r\n\r\n        this._enableTime = this.context.time.time;\r\n        const camGo = GameObject.getComponent(this.gameObject, Camera);\r\n        const cam = camGo?.cam;\r\n        if (!this._controls) {\r\n            console.assert(cam !== null && cam !== undefined, \"Missing camera\", this);\r\n            if (cam)\r\n                this._cameraObject = cam;\r\n            this._controls = new ThreeOrbitControls(cam!, this.context.renderer.domElement);\r\n            if (defaultKeys === undefined) defaultKeys = { ...this._controls.keys };\r\n        }\r\n\r\n        if (this._controls) {\r\n            if (freeCam) {\r\n                this.enablePan = true;\r\n                this.enableZoom = true;\r\n                this.middleClickToFocus = true;\r\n                if (isMobileDevice()) this.doubleClickToFocus = true;\r\n            }\r\n\r\n            this._controls.enableDamping = this.enableDamping;\r\n            this._controls.keys = this.enableKeys ? defaultKeys : disabledKeys;\r\n            this._controls.autoRotate = this.autoRotate;\r\n            this._controls.autoRotateSpeed = this.autoRotateSpeed;\r\n            this._controls.enableZoom = this.enableZoom;\r\n            if (cam?.type === \"PerspectiveCamera\") {\r\n                if (freeCam) {\r\n                    // dont set limits\r\n                }\r\n                else {\r\n                    this._controls.minDistance = this.minZoom;\r\n                    this._controls.maxDistance = this.maxZoom;\r\n                }\r\n            }\r\n            else {\r\n                if (freeCam) {\r\n                    // dont set limits\r\n                }\r\n                else {\r\n                    this._controls.minZoom = this.minZoom;\r\n                    this._controls.maxZoom = this.maxZoom;\r\n                }\r\n            }\r\n            this._controls.dampingFactor = this.dampingFactor;\r\n            this._controls.enablePan = this.enablePan;\r\n            if (!this._startedListeningToKeyEvents) {\r\n                this._startedListeningToKeyEvents = true;\r\n                this._controls.listenToKeyEvents(window.document.body);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onDisable() {\r\n        if (this._controls) {\r\n            this._controls.enabled = false;\r\n            this._controls.autoRotate = false;\r\n            // this._controls.reset();\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this._controls?.dispose();\r\n    }\r\n\r\n    start() {\r\n        if (this._controls) {\r\n            const camGo = GameObject.getComponent(this.gameObject, Camera);\r\n            if (camGo && !this.setFromTargetPosition()) {\r\n                if (this.debugLog)\r\n                    console.log(\"NO TARGET\");\r\n                const forward = new THREE.Vector3(0, 0, -1).applyMatrix4(camGo.cam.matrixWorld);\r\n                this.setTarget(forward, true);\r\n            }\r\n        }\r\n        this.startCoroutine(this.startRaycastDelayed());\r\n    }\r\n\r\n    // we need to wait one frame (when starting the scene for the very first time)\r\n    private * startRaycastDelayed() {\r\n        yield;\r\n        if (!this.setFromTargetPosition()) {\r\n            const opts = new RaycastOptions();\r\n            // center of the screen:\r\n            opts.screenPoint = new THREE.Vector2(0, 0);\r\n            opts.lineThreshold = 0.1;\r\n            const hits = this.context.physics.raycast(opts);\r\n            if (hits.length > 0) {\r\n                this.setTarget(hits[0].point, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    onBeforeRender() {\r\n        if (!this._controls) return;\r\n\r\n        if (this.context.input.getPointerDown(0) || this.context.input.getPointerDown(1) || this.context.input.getPointerDown(2)) {\r\n            this._inputs += 1;\r\n        }\r\n        if (this._inputs > 0) {\r\n            this.autoRotate = false;\r\n            this._controls.autoRotate = false;\r\n            this._lerpCameraToTarget = false;\r\n            this._lerpToTargetPosition = false;\r\n        }\r\n        this._inputs = 0;\r\n\r\n        // if (this.context.input.getPointerLongPress(0) && this.context.time.frameCount % 20 === 0) console.log(\"LP\", this.context.alias);\r\n\r\n        let focusAtPointer = (this.middleClickToFocus && this.context.input.getPointerClicked(1));\r\n        focusAtPointer ||= (this.doubleClickToFocus && this.context.input.getPointerDoubleClicked(0) && this.context.time.time - this._enableTime > .3);\r\n        if (focusAtPointer) {\r\n            this.setTargetFromRaycast();\r\n        }\r\n        else if (this.context.input.getPointerDown(0) || this.context.input.mouseWheelChanged) {\r\n            this._lerpToTargetPosition = false;\r\n            this._lerpCameraToTarget = false;\r\n        }\r\n\r\n        if (this._lerpToTargetPosition || this._lerpCameraToTarget) {\r\n            const step = this.context.time.deltaTime * this.targetLerpSpeed;\r\n\r\n            // confusing naming ahead:\r\n            // _targetObject: the target where the camera moves to\r\n            // targetPosition: the target where the look target moves to\r\n\r\n            // lerp the camera\r\n            if (this._lerpCameraToTarget && this._cameraTargetPosition && this._cameraObject) {\r\n                // setWorldPosition(this._cameraObject, this._cameraTargetPosition);\r\n                if (this.useSlerp) {\r\n                    const position = this._cameraObject?.position;\r\n                    slerp(position, this._cameraTargetPosition, step);\r\n                }\r\n                else {\r\n                    this._cameraObject?.position.lerp(this._cameraTargetPosition, step);\r\n                }\r\n                if (this._cameraObject.position.distanceTo(this._cameraTargetPosition) < .0001) {\r\n                    this._lerpCameraToTarget = false;\r\n                }\r\n            }\r\n\r\n            // lerp the look target\r\n            if (this._lerpToTargetPosition) {\r\n\r\n                this.lerpTarget(this._lookTargetPosition, step);\r\n                if (this._lookTargetPosition.distanceTo(this._controls.target) < .00001) {\r\n                    this._lerpToTargetPosition = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!freeCam && this.lookAtConstraint?.locked) this.setFromTargetPosition(0, this.lookAtConstraint01);\r\n\r\n\r\n        if (this._controls && !this.context.isInXR) {\r\n            if (this.debugLog)\r\n                this._controls.domElement = this.context.renderer.domElement;\r\n            this._controls.enabled = true;\r\n            this._controls.update();\r\n        }\r\n    }\r\n\r\n    public setCameraTarget(position?: THREE.Vector3 | null, immediate: boolean = false) {\r\n        if (!position) this._lerpCameraToTarget = false;\r\n        else {\r\n            this._lerpCameraToTarget = true;\r\n            this._cameraTargetPosition = position.clone();\r\n            if (immediate && this._cameraTargetPosition) {\r\n                this.controllerObject?.position.copy(this._cameraTargetPosition);\r\n            }\r\n        }\r\n    }\r\n\r\n    public setFromTargetPosition(index: number = 0, t: number = 1): boolean {\r\n        if (!this._controls) return false;\r\n        const sources = this.lookAtConstraint?.sources;\r\n        if (sources && sources.length > 0) {\r\n            const target = sources[index];\r\n            if (target) {\r\n                target.getWorldPosition(this._lookTargetPosition);\r\n                this.lerpTarget(this._lookTargetPosition, t);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public setTarget(position: THREE.Vector3 | null = null, immediate: boolean = false) {\r\n        if (!this._controls) return;\r\n        if (position !== null) this._lookTargetPosition.copy(position);\r\n        if (immediate)\r\n            this._controls.target.copy(this._lookTargetPosition);\r\n        else this._lerpToTargetPosition = true;\r\n    }\r\n\r\n    public lerpTarget(position: THREE.Vector3, delta: number) {\r\n        if (!this._controls) return;\r\n        this._controls.target.lerp(position, delta);\r\n    }\r\n\r\n    public distanceToTarget(position: THREE.Vector3): number {\r\n        if (!this._controls) return -1;\r\n        return this._controls.target.distanceTo(position);\r\n    }\r\n\r\n    private setTargetFromRaycast() {\r\n        if (!this.controls) return;\r\n        const rc = this.context.physics.raycast();\r\n        for (const hit of rc) {\r\n            if (hit.distance > 0 && GameObject.isActiveInHierarchy(hit.object)) {\r\n                // if (hit.object && hit.object.parent) {\r\n                //     const par: any = hit.object.parent;\r\n                //     if (par.isUI) continue;\r\n                // }\r\n                // console.log(\"Set target\", this.targetPosition, hit.object.name, hit.object);\r\n                this._lookTargetPosition.copy(hit.point);\r\n                this._lerpToTargetPosition = true;\r\n                this._cameraTargetPosition = null;\r\n                if (this.context.mainCamera) {\r\n                    this._lerpCameraToTarget = true;\r\n                    const pos = getWorldPosition(this.context.mainCamera);\r\n                    this._cameraTargetPosition = pos.clone().sub(this.controls.target).add(this._lookTargetPosition);\r\n                    this._cameraObject?.parent?.worldToLocal(this._cameraTargetPosition);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // private onPositionDrag(){\r\n\r\n    // }\r\n}\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Object3D } from \"three\";\r\n\r\nexport class LookAtConstraint extends Behaviour {\r\n\r\n    constraintActive: boolean = true;\r\n    locked: boolean = false;\r\n    @serializable(Object3D)\r\n    sources: THREE.Object3D[] = [];\r\n}", "export interface IInputEventArgs {\r\n    get used(): boolean;\r\n    Use(): void;\r\n    StopPropagation?(): void;\r\n}\r\n\r\nexport class PointerEventData implements IInputEventArgs {\r\n    used: boolean = false; \r\n\r\n    Use() {\r\n        this.used = true;\r\n    }\r\n\r\n    StopPropagation() {\r\n        this.event?.stopImmediatePropagation();\r\n    }\r\n\r\n    inputSource: any;\r\n    object!: THREE.Object3D;\r\n\r\n    isDown: boolean | undefined;\r\n    isUp: boolean | undefined;\r\n    isPressed: boolean | undefined;\r\n    isClicked: boolean | undefined;\r\n\r\n    private event?:Event;\r\n\r\n    constructor(events?:Event){\r\n        this.event = events;\r\n    }\r\n}\r\n\r\nexport interface IPointerDownHandler {\r\n    onPointerDown?(args: PointerEventData);\r\n}\r\n\r\nexport interface IPointerUpHandler {\r\n    onPointerUp?(args: PointerEventData);\r\n}\r\n\r\nexport interface IPointerEnterHandler {\r\n    onPointerEnter?(args: PointerEventData);\r\n}\r\n\r\nexport interface IPointerExitHandler {\r\n    onPointerExit?(args: PointerEventData);\r\n}\r\n\r\nexport interface IPointerClickHandler {\r\n    onPointerClick?(args: PointerEventData);\r\n}\r\n\r\nexport interface IPointerEventHandler extends IPointerDownHandler,\r\n    IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler { }\r\n", "import { RaycastOptions } from \"../../engine/engine_physics\";\r\nimport { Behaviour, Component, GameObject } from \"../Component\";\r\nimport { WebXR } from \"../WebXR\";\r\nimport { ControllerEvents, WebXRController } from \"../WebXRController\";\r\nimport * as ThreeMeshUI from 'three-mesh-ui'\r\nimport { Context } from \"../../engine/engine_setup\";\r\nimport { OrbitControls } from \"../OrbitControls\";\r\nimport { IPointerEventHandler, PointerEventData } from \"./PointerEvents\";\r\nimport { Raycaster } from \"./Raycaster\";\r\nimport { InputEvents, KeyCode } from \"../../engine/engine_input\";\r\nimport { Object3D } from \"three\";\r\nimport { ICanvasGroup, IGraphic } from \"./Interfaces\";\r\nimport { getParam } from \"../../engine/engine_utils\";\r\nimport { UIRaycastUtils } from \"./RaycastUtils\";\r\nimport { $shadowDomOwner } from \"./BaseUIComponent\";\r\n\r\nconst debug = getParam(\"debugeventsystem\");\r\n\r\nexport class EventSystem extends Behaviour {\r\n\r\n\r\n    private static _eventSystemMap = new Map<Context, EventSystem[]>();\r\n\r\n    static didSearchEventSystem: boolean = false;\r\n    static createIfNoneExists(context: Context) {\r\n        if (!this.didSearchEventSystem) {\r\n            this.didSearchEventSystem = true;\r\n            if (EventSystem.systems.length <= 0) {\r\n                EventSystem.systems.push(...GameObject.findObjectsOfType(EventSystem, context));\r\n            }\r\n        }\r\n        for (const sys of EventSystem.systems) {\r\n            if (sys.context === context) return; // exists\r\n        }\r\n        const go = new Object3D();\r\n        GameObject.addNewComponent(go, EventSystem);\r\n        context.scene.add(go);\r\n    }\r\n    \r\n    static get systems(): EventSystem[] \r\n    {\r\n        const context = Context.Current;\r\n        if (!this._eventSystemMap.has(context)) {\r\n            this._eventSystemMap.set(context, []);\r\n        }  \r\n        return this._eventSystemMap.get(context)!;\r\n    }\r\n\r\n    //@ts-ignore\r\n    static ensureUpdateMeshUI(instance, context: Context) {\r\n        MeshUIHelper.update(instance, context);\r\n    }\r\n    static markUIDirty(_context: Context) {\r\n        MeshUIHelper.markDirty();\r\n    }\r\n\r\n    static get instance(): EventSystem | null {\r\n        return this.systems[0];\r\n    }\r\n\r\n    private orbitControl: OrbitControls | null = null;\r\n    private orbitControlWasEnabled: boolean = false;\r\n    private raycaster: Raycaster[] = [];\r\n\r\n    constructor() {\r\n        super();\r\n        EventSystem.systems.push(this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        EventSystem.systems.splice(EventSystem.systems.indexOf(this), 1);\r\n    }\r\n\r\n    start() {\r\n        // const res = GameObject.findObjectsOfType(Raycaster, this.context);\r\n        // if (res)\r\n        //     this.raycaster = [...res];\r\n    }\r\n\r\n    register(rc: Raycaster) {\r\n        if (rc && this.raycaster && !this.raycaster.includes(rc))\r\n            this.raycaster?.push(rc);\r\n    }\r\n    unregister(rc: Raycaster) {\r\n        const i = this.raycaster?.indexOf(rc);\r\n        if (i !== undefined && i !== -1) {\r\n            this.raycaster?.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    private _selectStartFn?: any;\r\n    private _selectEndFn?: any;\r\n    private _selectUpdateFn?: any;\r\n\r\n    onEnable(): void {\r\n\r\n        const grabbed: Map<any, Object3D | null> = new Map();\r\n        this._selectStartFn ??= (ctrl, args: { grab: THREE.Object3D | null }) => {\r\n            if (!args.grab) return;\r\n            MeshUIHelper.resetLastSelected();\r\n            const opts = new PointerEventData();\r\n            opts.inputSource = ctrl;\r\n            opts.isDown = ctrl.selectionDown;\r\n            opts.isUp = ctrl.selectionUp;\r\n            opts.isPressed = ctrl.selectionPressed;\r\n            opts.isClicked = false;\r\n            grabbed.set(ctrl, args.grab);\r\n            if (args.grab && !this.handleEvents(args.grab, opts)) {\r\n                args.grab = null;\r\n            };\r\n        }\r\n        this._selectEndFn ??= (ctrl, args: { grab: THREE.Object3D }) => {\r\n            if (!args.grab) return;\r\n            const opts = new PointerEventData();\r\n            opts.inputSource = ctrl;\r\n            opts.isDown = ctrl.selectionDown;\r\n            opts.isUp = ctrl.selectionUp;\r\n            opts.isPressed = ctrl.selectionPressed;\r\n            opts.isClicked = ctrl.selectionClick;\r\n            this.handleEvents(args.grab, opts);\r\n            \r\n            const prevGrabbed = grabbed.get(ctrl);\r\n            grabbed.set(ctrl, null);\r\n            if (prevGrabbed) {\r\n                for (let i = 0; i < this.raisedPointerDownEvents.length; i++) {\r\n                    const comp = this.raisedPointerDownEvents[i];\r\n                    const obj = this.raisedPointerDownObjects[i];\r\n                    if (obj === prevGrabbed && comp) {\r\n                        comp.onPointerUp?.call(comp, opts);\r\n                        this.raisedPointerDownEvents.splice(i, 1);\r\n                        this.raisedPointerDownObjects.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const controllerRcOpts = new RaycastOptions();\r\n        this._selectUpdateFn ??= (_ctrl: WebXRController) => {\r\n            controllerRcOpts.ray = _ctrl.getRay();\r\n            const rc = this.performRaycast(controllerRcOpts);\r\n            if (!rc) return;\r\n            const opts = new PointerEventData();\r\n            opts.inputSource = _ctrl;\r\n            this.handleIntersections(rc, opts);\r\n        };\r\n\r\n        WebXRController.addEventListener(ControllerEvents.SelectStart, this._selectStartFn);\r\n        WebXRController.addEventListener(ControllerEvents.SelectEnd, this._selectEndFn);\r\n        WebXRController.addEventListener(ControllerEvents.Update, this._selectUpdateFn);\r\n\r\n        this.context.pre_update_callbacks.push(this.onBeforeUpdate.bind(this));\r\n        this.context.input.addEventListener(InputEvents.PointerDown, this.onPointerDown.bind(this));\r\n    }\r\n\r\n    onDisable(): void {\r\n        WebXRController.removeEventListener(ControllerEvents.SelectStart, this._selectStartFn);\r\n        WebXRController.removeEventListener(ControllerEvents.SelectEnd, this._selectEndFn);\r\n        WebXRController.removeEventListener(ControllerEvents.Update, this._selectUpdateFn);\r\n    }\r\n\r\n    onPointerDown() {\r\n        this.onBeforeUpdate();\r\n    }\r\n\r\n    // doesnt work in dist\r\n    // onBeforeRender() {\r\n    //     MeshUIHelper.update(this.context);\r\n    // }\r\n\r\n    private lastPointerEvent: PointerEventData | null = null;\r\n    private objectsHoveredThisFrame: THREE.Object3D[] = [];\r\n    private objectsHoveredLastFrame: THREE.Object3D[] = [];\r\n\r\n    // todo: these should be listed by input source (e.g. per controller, mouse, touch)\r\n    private raisedPointerDownEvents: IPointerEventHandler[] = []; // << keep in sync\r\n    private raisedPointerDownObjects: THREE.Object3D[] = []; // < keep in sync\r\n\r\n    private _didMove: boolean = false;\r\n\r\n    onBeforeUpdate() {\r\n        this.objectsHoveredThisFrame.length = 0;\r\n        this.resetMeshUIStates();\r\n\r\n        if (WebXR.IsInWebXR) return;\r\n        // console.log(this.context.input.isKeyPressed(KeyCode.ALT));\r\n        if (this.context.input.isKeyPressed(KeyCode.ALT)) {\r\n            // console.log(\"alt pressed\");\r\n            return;\r\n        }\r\n        if (!this._didMove) {\r\n            const pos = this.context.input.getPointerPositionRC(0);\r\n            if (pos && pos.x === 0 && pos.y === 0) return;\r\n            this._didMove = true;\r\n        }\r\n\r\n        const hits = this.performRaycast(null);\r\n        const args: PointerEventData = new PointerEventData(this.context.input.getPointerEvent(0));\r\n        args.inputSource = this.context.input;\r\n        args.isClicked = this.context.input.mouseClick;\r\n        args.isDown = this.context.input.mouseDown;\r\n        args.isUp = this.context.input.mouseUp;\r\n        args.isPressed = this.context.input.mousePressed;\r\n        this.lastPointerEvent = args;\r\n        if (!hits) return;\r\n\r\n        // handle orbit control before handling input events\r\n        // this is just so button events that modify OrbitControls.enabled work\r\n        let orbitControlComponent: OrbitControls | null = null;\r\n        let previousOrbitControlState: boolean | null = null;\r\n        if (this.context.input.mouseDown && this.currentActiveMeshUIComponents.length > 0 && this.context.mainCameraComponent) {\r\n            orbitControlComponent = GameObject.getComponent(this.context.mainCameraComponent.gameObject, OrbitControls) ?? null;\r\n            if (orbitControlComponent) {\r\n                previousOrbitControlState = orbitControlComponent.enabled;\r\n                orbitControlComponent.enabled = false;\r\n            }\r\n        }\r\n\r\n        // if (args.isClicked)\r\n        //     console.log(this.guid, ...hits);\r\n        this.handleIntersections(hits, args);\r\n\r\n        if (orbitControlComponent) {\r\n            this.orbitControl = orbitControlComponent;\r\n            if (this.orbitControl?.enabled) {\r\n                this.orbitControlWasEnabled = this.orbitControl.enabled;\r\n                this.orbitControl.enabled = false;\r\n            }\r\n            else if (this.orbitControl && !this.context.input.mousePressed) {\r\n                this.orbitControl.enabled = this.orbitControlWasEnabled;\r\n                this.orbitControl = null;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _tempComponentsArray: Behaviour[] = [];\r\n    onBeforeRender() {\r\n        if (this.lastPointerEvent)\r\n            this.lastPointerEvent.used = false;\r\n        else return;\r\n\r\n        if (this.lastPointerEvent.isUp) {\r\n            for (const obj of this.raisedPointerDownEvents) {\r\n                if (obj.onPointerUp) {\r\n                    obj.onPointerUp(this.lastPointerEvent);\r\n                }\r\n            }\r\n            this.raisedPointerDownEvents.length = 0;\r\n            this.raisedPointerDownObjects.length = 0;\r\n        }\r\n\r\n        for (const obj of this.objectsHoveredLastFrame) {\r\n            // if the object is not hovered anymore we want to call the exit events\r\n            if (this.objectsHoveredThisFrame.indexOf(obj) < 0) {\r\n                // console.log(\"LAST\", ...this.objectsHoveredLastFrame);\r\n                // console.log(\"THIS\", ...this.objectsHoveredThisFrame);\r\n                this._tempComponentsArray.length = 0;\r\n                const behaviours = GameObject.getComponentsInParent(obj, Behaviour, this._tempComponentsArray);\r\n                this.lastPointerEvent.object = obj;\r\n                for (let i = 0; i < behaviours.length; i++) {\r\n                    const beh = behaviours[i];\r\n                    if (!beh.gameObject || beh.destroyed) continue;\r\n                    const inst: any = beh;\r\n                    if (inst.onPointerExit) {\r\n                        inst.onPointerExit(this.lastPointerEvent);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // swap arrays\r\n        const arr = this.objectsHoveredLastFrame;\r\n        this.objectsHoveredLastFrame = this.objectsHoveredThisFrame;\r\n        this.objectsHoveredThisFrame = arr;\r\n    }\r\n\r\n    private _sortedHits: THREE.Intersection[] = [];\r\n\r\n    private performRaycast(opts: RaycastOptions | null): THREE.Intersection[] | null {\r\n        if (!this.raycaster) return null;\r\n        this._sortedHits.length = 0;\r\n        for (const rc of this.raycaster) {\r\n            if (!rc.activeAndEnabled) continue;\r\n            const res = rc.performRaycast(opts);\r\n            if (res && res.length > 0)\r\n                this._sortedHits.push(...res);\r\n        }\r\n        this._sortedHits.sort((a, b) => {\r\n            return a.distance - b.distance;\r\n        });\r\n        return this._sortedHits;\r\n    }\r\n\r\n    private handleIntersections(hits: THREE.Intersection[], args: PointerEventData): boolean {\r\n        if (!hits || hits.length <= 0) return false;\r\n        // if (pressed)\r\n        //     console.log(this.context.alias, ...hits);\r\n        hits = this.sortCandidates(hits);\r\n        for (const hit of hits) {\r\n            const { object } = hit;\r\n            if (this.handleEvents(object, args)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _sortingBuffer: THREE.Intersection[] = [];\r\n    private _noDepthTestingResults: THREE.Intersection[] = [];\r\n\r\n    private sortCandidates(hits: THREE.Intersection[]): THREE.Intersection[] {\r\n        // iterate over all hits and filter for nodepth objects and normal hit objects\r\n        // the no-depth objects will be handled first starting from the closest\r\n        // assuming the hits array is sorted by distance (closest > furthest)\r\n        this._sortingBuffer.length = 0;\r\n        this._noDepthTestingResults.length = 0;\r\n        for (let i = 0; i < hits.length; i++) {\r\n            const hit = hits[i];\r\n            const object = hit.object as THREE.Mesh;\r\n            if (object.material) {\r\n                if (object.material[\"depthTest\"] === false) {\r\n                    this._noDepthTestingResults.push(hit);\r\n                    continue;\r\n                }\r\n            }\r\n            this._sortingBuffer.push(hit);\r\n        }\r\n        for (const obj of this._sortingBuffer) {\r\n            this._noDepthTestingResults.push(obj);\r\n        }\r\n        return this._noDepthTestingResults;\r\n    }\r\n\r\n    private handleEventsArray: Array<Behaviour> = [];\r\n    private out: { canvasGroup?: ICanvasGroup } = {};\r\n\r\n    private handleEvents(object: THREE.Object3D, args: PointerEventData): boolean {\r\n\r\n        if (!this.testIsVisible(object)) {\r\n            if (args.isClicked && debug)\r\n                console.log(\"not allowed\", object);\r\n            return false;\r\n        }\r\n\r\n        const originalObject = object;\r\n        args.object = object;\r\n        this.lastPointerEvent = args;\r\n\r\n        const parent = object.parent as any;\r\n        let isShadow = false;\r\n        const clicked = args.isClicked ?? false;\r\n\r\n        let canvasGroup: ICanvasGroup | null = null;\r\n\r\n        // handle potential shadow dom built from three mesh ui\r\n        if (parent && parent.isUI) {\r\n            const pressedOrClicked = (args.isPressed || args.isClicked) ?? false;\r\n            if (parent[$shadowDomOwner]) {\r\n                const actualGo = parent[$shadowDomOwner].gameObject;\r\n                if (actualGo) {\r\n                    const res = UIRaycastUtils.isInteractable(actualGo, this.out);\r\n                    if (!res) return this.out.canvasGroup?.interactable ?? false;\r\n                    canvasGroup = this.out.canvasGroup ?? null;\r\n\r\n                    const handled = this.handleMeshUIIntersection(object, pressedOrClicked);\r\n                    if (!clicked && handled) {\r\n                        // return true;\r\n                    }\r\n                    object = actualGo;\r\n                    isShadow = true;\r\n                }\r\n            }\r\n\r\n            if (!isShadow) {\r\n                const obj = this.handleMeshUiObjectWithoutShadowDom(parent, pressedOrClicked);\r\n                if (obj) return true;\r\n            }\r\n        }\r\n\r\n        // if (clicked)\r\n        //     console.log(this.context.time.frame, object);\r\n        this.objectsHoveredThisFrame.push(object);\r\n\r\n        if (canvasGroup === null || canvasGroup.interactable) {\r\n            const isHovered = this.objectsHoveredLastFrame.indexOf(object) >= 0;\r\n            this.handleEventsArray.length = 0;\r\n            const behaviours = GameObject.getComponentsInParent(object, Behaviour, this.handleEventsArray);\r\n            // console.log(behaviours);\r\n            for (let i = 0; i < behaviours.length; i++) {\r\n                if (args.used) return true;\r\n                if (behaviours[i].destroyed) continue;\r\n                const comp = behaviours[i] as any;\r\n\r\n                if (comp.interactable === false) continue;\r\n\r\n                if (comp.onPointerEnter) {\r\n                    if (!isHovered) {\r\n                        comp.onPointerEnter(args);\r\n                    }\r\n                }\r\n\r\n                if (args.isDown) {\r\n                    if (comp.onPointerDown && !this.raisedPointerDownEvents.includes(comp)) {\r\n                        comp.onPointerDown(args);\r\n                        // need to save this to also send pointer up event\r\n                        this.raisedPointerDownEvents.push(comp);\r\n                        this.raisedPointerDownObjects.push(originalObject);\r\n                    }\r\n                }\r\n\r\n                if (args.isUp) {\r\n                    if (comp.onPointerUp) {\r\n                        comp.onPointerUp(args);\r\n                    }\r\n                }\r\n\r\n                if (args.isClicked) {\r\n                    if (comp.onPointerClick) {\r\n                        comp.onPointerClick(args);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private handleMeshUiObjectWithoutShadowDom(obj: any, pressed: boolean) {\r\n        if (!obj || !obj.isUI) return true;\r\n        const hit = this.handleMeshUIIntersection(obj, pressed);\r\n\r\n        return hit;\r\n    }\r\n\r\n    private currentActiveMeshUIComponents: ThreeMeshUI.Block[] = [];\r\n\r\n    private handleMeshUIIntersection(meshUiObject: THREE.Object3D, pressed: boolean): boolean {\r\n        const res = MeshUIHelper.updateState(meshUiObject, pressed);\r\n        if (res) {\r\n            this.currentActiveMeshUIComponents.push(res);\r\n        }\r\n        return res !== null;\r\n    }\r\n\r\n    private resetMeshUIStates() {\r\n\r\n        if (this.context.input.getPointerPressedCount() > 0) {\r\n            MeshUIHelper.resetLastSelected();\r\n        }\r\n\r\n        if (!this.currentActiveMeshUIComponents || this.currentActiveMeshUIComponents.length <= 0) return;\r\n        for (let i = 0; i < this.currentActiveMeshUIComponents.length; i++) {\r\n            const comp = this.currentActiveMeshUIComponents[i];\r\n            MeshUIHelper.resetState(comp);\r\n        }\r\n        this.currentActiveMeshUIComponents.length = 0;\r\n    }\r\n\r\n    private testIsVisible(obj: THREE.Object3D | null): boolean {\r\n        if (!obj) return true;\r\n        if (!GameObject.isActiveSelf(obj)) return false;\r\n        return this.testIsVisible(obj.parent);\r\n    }\r\n}\r\n\r\n\r\nclass MeshUIHelper {\r\n\r\n    private static lastSelected: THREE.Object3D | null = null;\r\n    private static lastUpdateFrame: { context: Context, frame: number }[] = [];\r\n    private static needsUpdate: boolean = false;\r\n\r\n    static markDirty() {\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    static update(threeMeshUI: any, context: Context) {\r\n        for (const lu of this.lastUpdateFrame) {\r\n            if (lu.context === context) {\r\n                if (context.time.frameCount === lu.frame) return;\r\n                lu.frame = context.time.frameCount;\r\n                if (this.needsUpdate || context.time.frameCount < 30) {\r\n                    this.needsUpdate = false;\r\n                    threeMeshUI.update();\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        this.lastUpdateFrame = [{ context, frame: context.time.frameCount }];\r\n        threeMeshUI.update();\r\n    }\r\n\r\n    static updateState(intersect: THREE.Object3D, selectState: boolean): ThreeMeshUI.Block | null {\r\n        let foundBlock: ThreeMeshUI.Block | null = null;\r\n\r\n        if (intersect) {\r\n            foundBlock = this.findBlockInParent(intersect);\r\n            // console.log(intersect, \"-- found block:\", foundBlock)\r\n            if (foundBlock && foundBlock !== this.lastSelected) {\r\n                const interactable = foundBlock[\"interactable\"];\r\n                if (interactable === false) return null;\r\n                if (selectState) {\r\n                    this.lastSelected = foundBlock;\r\n                    //@ts-ignore\r\n                    if (foundBlock.states[\"pressed\"])\r\n                        //@ts-ignore\r\n                        foundBlock.setState(\"pressed\");\r\n\r\n                } else {\r\n                    //@ts-ignore\r\n                    if (foundBlock.states[\"hovered\"])\r\n                        //@ts-ignore\r\n                        foundBlock.setState(\"hovered\");\r\n                };\r\n                this.needsUpdate = true;\r\n            }\r\n        }\r\n\r\n        // Update non-targeted buttons state\r\n        // MeshUIBaseComponent.objectsWithState.forEach((obj) => {\r\n        //     if ((!intersect || obj !== foundBlock) && obj.isUI) {\r\n        //         obj.setState('idle');\r\n        //     };\r\n        // });\r\n\r\n        return foundBlock;\r\n    }\r\n\r\n    static resetLastSelected() {\r\n        const last = this.lastSelected;\r\n        if (!last) return;\r\n        this.lastSelected = null;\r\n        this.resetState(last);\r\n    }\r\n\r\n    static resetState(obj: any) {\r\n        if (!obj) return;\r\n        const interactable = obj[\"interactable\"];\r\n        if (interactable === false) {\r\n            if (obj.states[\"disabled\"])\r\n                obj.setState(\"disabled\");\r\n        }\r\n        else if (obj === this.lastSelected && obj.states[\"selected\"]) {\r\n            obj.setState(\"selected\");\r\n        }\r\n        else obj.setState('normal');\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    static findBlockInParent(elem: any): ThreeMeshUI.Block | null {\r\n        if (!elem) return null;\r\n        if (elem.isBlock) {\r\n            if (Object.keys(elem.states).length > 0)\r\n                return elem;\r\n        }\r\n        return this.findBlockInParent(elem.parent);\r\n    }\r\n}", "import { foreachComponent } from \"../../engine/engine_gameobject\";\r\nimport { objectSerializer } from \"../../engine/engine_serialization_builtin_serializer\";\r\nimport { IComponent } from \"../../engine/engine_types\";\r\nimport { $shadowDomOwner } from \"./BaseUIComponent\";\r\nimport { ICanvasGroup, IGraphic } from \"./Interfaces\";\r\nimport { Object3D } from \"three\";\r\n\r\n\r\nexport class UIRaycastUtils {\r\n\r\n    /** returns the real object when dealing with shadow UI */\r\n    static getObject(obj: Object3D): Object3D {\r\n        const shadowOwner = obj[$shadowDomOwner];\r\n        if(shadowOwner) \r\n        {\r\n            if((shadowOwner as IComponent).isComponent === true) obj = (shadowOwner as IComponent).gameObject;\r\n            else obj = shadowOwner;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    static isInteractable(obj: THREE.Object3D, out?: { canvasGroup?: ICanvasGroup, graphic?: IGraphic }): boolean {\r\n        if(obj === null || obj === undefined || !obj.visible) return false;\r\n\r\n        obj = this.getObject(obj);\r\n\r\n        if(!obj.visible) return false;\r\n        \r\n        const canvasGroup = this.tryFindCanvasGroup(obj);\r\n        if (canvasGroup?.isCanvasGroup === true) {\r\n            if (out) out.canvasGroup = canvasGroup as ICanvasGroup;\r\n            if (canvasGroup.blocksRaycasts === false) return false;\r\n            if (canvasGroup.interactable === false) return false;\r\n        }\r\n        // handle Graphic Raycast target\r\n        const graphic = foreachComponent(obj, c => {\r\n            if ((c as unknown as IGraphic).isGraphic === true) return c;\r\n            return undefined;\r\n        }, false);\r\n        // console.log(obj, graphic?.raycastTarget);\r\n        if (out) {\r\n            if (graphic?.isGraphic === true)\r\n                out.graphic = graphic as IGraphic;\r\n        }\r\n        if (graphic?.raycastTarget === false) return false;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    private static tryFindCanvasGroup(obj: THREE.Object3D | null): ICanvasGroup | null {\r\n        if (!obj) return null;\r\n        // test for canvas groups\r\n        const res = foreachComponent(obj, c => {\r\n            const gr = c as unknown as ICanvasGroup;\r\n            if (gr.blocksRaycasts !== undefined && gr.interactable !== undefined) return gr;\r\n            return undefined;\r\n        }, false);\r\n        if (res !== undefined) return res;\r\n        return this.tryFindCanvasGroup(obj.parent);\r\n    }\r\n}\r\n\r\n", "import { Object3D } from \"three\";\r\nimport { IGameObject } from \"../engine/engine_types\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { BoxGizmo } from \"./Gizmos\";\r\n\r\nconst debug = getParam(\"debugrig\");\r\n\r\nexport class XRRig extends Behaviour {\r\n    awake(): void {\r\n        // const helper = new AxesHelper(.1);\r\n        // this.gameObject.add(helper);\r\n        if (debug) {\r\n            const gizmoObj = new Object3D() as IGameObject;\r\n            gizmoObj.position.y += .5;\r\n            this.gameObject.add(gizmoObj);\r\n            const gizmo = gizmoObj.addNewComponent(BoxGizmo);\r\n            if (gizmo)\r\n                gizmo.isGizmo = false;\r\n        }\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport * as Gizmos from \"../engine/engine_gizmos\";\r\nimport * as params from \"../engine/engine_default_parameters\";\r\nimport { FrameEvent } from \"../engine/engine_setup\";\r\nimport { BoxHelper, Color } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\n\r\nexport class BoxGizmo extends Behaviour {\r\n    @serializable()\r\n    objectBounds: boolean = false;\r\n    @serializable(Color)\r\n    color?: THREE.Color;\r\n    @serializable()\r\n    isGizmo : boolean = true;\r\n\r\n    private _gizmoObject: THREE.Object3D | null | BoxHelper = null;\r\n    private _boxHelper: BoxHelper | null = null;\r\n\r\n    onEnable(): void {\r\n        if (this.isGizmo && !params.showGizmos) return;\r\n        if (!this._gizmoObject) {\r\n            if (this.objectBounds && this.gameObject[\"isMesh\"] === true) {\r\n                this._gizmoObject = new THREE.BoxHelper(this.gameObject, this.color ?? 0xffff00);\r\n            }\r\n            else {\r\n                this.objectBounds = false;\r\n                this._gizmoObject = Gizmos.CreateWireCube(this.color ?? 0xffff00);\r\n            }\r\n        }\r\n        if (this.objectBounds) {\r\n            this.scene.add(this._gizmoObject);\r\n            this._boxHelper = this._gizmoObject as BoxHelper;\r\n            this.startCoroutine(this.syncObjectBounds(), FrameEvent.OnBeforeRender);\r\n        }\r\n        else\r\n            this.gameObject.add(this._gizmoObject);\r\n    }\r\n\r\n    onDisable(): void {\r\n        if (this._gizmoObject) {\r\n            this.gameObject.remove(this._gizmoObject);\r\n        }\r\n    }\r\n\r\n    private *syncObjectBounds() {\r\n        while (this._boxHelper) {\r\n            this._boxHelper?.update();\r\n            yield;\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { RoomEvents, OwnershipModel, NetworkConnection } from \"../engine/engine_networking\";\r\nimport { WebXR, WebXREvent } from \"./WebXR\";\r\nimport { Group, Quaternion, Vector3, Vector4, WebXRManager } from \"three\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { Voip } from \"./Voip\";\r\nimport { Builder, Long } from \"flatbuffers\";\r\nimport { VrUserStateBuffer } from \"../engine-schemes/vr-user-state-buffer\";\r\nimport { Vec3 } from \"../engine-schemes/vec3\";\r\nimport { registerType } from \"../engine-schemes/schemes\";\r\nimport { Vec4 } from \"../engine-schemes/vec4\";\r\nimport { WebXRAvatar } from \"./WebXRAvatar\";\r\n\r\n// for debug GUI\r\n// import { GUI } from \"three/examples/jsm/libs/lil-gui.module.min.js\";\r\n// import { HTMLMesh } from 'three/examples/jsm/interactive/HTMLMesh.js';\r\n// import { InteractiveGroup } from 'three/examples/jsm/interactive/InteractiveGroup.js';\r\n// import { renderer, sceneData } from \"../engine/engine_setup\";\r\n\r\nconst debugLogs = getParam(\"debugxr\");\r\nconst debugAvatar = getParam(\"debugavatar\");\r\n// const debugAvatarVoip = getParam(\"debugavatarvoip\");\r\n\r\nenum WebXRSyncEvent {\r\n    WebXR_UserJoined = \"webxr-user-joined\",\r\n    WebXR_UserLeft = \"webxr-user-left\",\r\n    VRSessionStart = \"vr-session-started\",\r\n    VRSessionEnd = \"vr-session-ended\",\r\n    VRSessionUpdate = \"vr-session-update\",\r\n}\r\n\r\nenum XRMode {\r\n    VR = \"vr\",\r\n    AR = \"ar\",\r\n}\r\n\r\nconst VRUserStateBufferIdentifier = \"VRUS\";\r\nregisterType(VRUserStateBufferIdentifier, VrUserStateBuffer.getRootAsVrUserStateBuffer);\r\n\r\nfunction getTimeStampNow() {\r\n    return new Date().getTime(); // avoid sending millis in flatbuffer\r\n}\r\n\r\nfunction flatbuffers_long_from_number(num: number): Long {\r\n    let low = num & 0xffffffff\r\n    let high = (num / Math.pow(2, 32)) & 0xfffff\r\n    return Long.create(low, high);\r\n}\r\n\r\nexport class VRUserState {\r\n    public guid: string;\r\n    public time!: number;\r\n    public avatarId!: string;\r\n    public position: Vector3 = new Vector3();\r\n    public rotation: Vector4 = new Vector4();\r\n    public scale: number = 1;\r\n\r\n    public posLeftHand = new Vector3();\r\n    public posRightHand = new Vector3();\r\n\r\n    public rotLeftHand = new Quaternion();\r\n    public rotRightHand = new Quaternion();\r\n\r\n    public constructor(guid: string) {\r\n        this.guid = guid;\r\n    }\r\n\r\n    private static invertRotation: Quaternion = new Quaternion().setFromAxisAngle(new Vector3(0, 1, 0), Math.PI);\r\n\r\n    public update(rig: Group, pos: DOMPointReadOnly, rot: DOMPointReadOnly, webXR: WebXR, avatarId: string) {\r\n        this.time = getTimeStampNow();\r\n        this.avatarId = avatarId;\r\n        this.position.set(pos.x, pos.y, pos.z);\r\n        if (rig)\r\n            this.position.applyMatrix4(rig.matrixWorld);\r\n\r\n        let q0 = VRUserState.quat0;\r\n        const q1 = VRUserState.quat1;\r\n        q0.set(rot.x, rot.y, rot.z, rot.w);\r\n        q0 = q0.multiplyQuaternions(q0, VRUserState.invertRotation);\r\n\r\n        if (rig) {\r\n            rig.getWorldQuaternion(q1);\r\n            q0.multiplyQuaternions(q1, q0);\r\n        }\r\n\r\n        this.rotation.set(q0.x, q0.y, q0.z, q0.w);\r\n        this.scale = rig.scale.x;\r\n\r\n        // for controllers, it seems we need grip pose\r\n        const ctrl0 = webXR.LeftController?.controllerGrip;\r\n        if (ctrl0) {\r\n            ctrl0.getWorldPosition(this.posLeftHand);\r\n            ctrl0.getWorldQuaternion(this.rotLeftHand);\r\n        }\r\n        const ctrl1 = webXR.RightController?.controllerGrip;\r\n        if (ctrl1) {\r\n            ctrl1.getWorldPosition(this.posRightHand);\r\n            ctrl1.getWorldQuaternion(this.rotRightHand);\r\n        }\r\n\r\n        // if this is a hand, we need to get the root bone of that / use that for position/rotation\r\n        if (webXR.LeftController?.hand?.visible) {\r\n            const wrist = webXR.LeftController.wrist;\r\n            if (wrist) {\r\n                wrist.getWorldPosition(this.posLeftHand);\r\n                wrist.getWorldQuaternion(this.rotLeftHand);\r\n            }\r\n        }\r\n\r\n        if (webXR.RightController?.hand?.visible) {\r\n            const wrist = webXR.RightController.wrist;\r\n            if (wrist) {\r\n                wrist.getWorldPosition(this.posRightHand);\r\n                wrist.getWorldQuaternion(this.rotRightHand);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static quat0: Quaternion = new Quaternion();\r\n    private static quat1: Quaternion = new Quaternion();\r\n\r\n    public sendAsBuffer(builder: Builder, net: NetworkConnection) {\r\n        builder.clear();\r\n        const guid = builder.createString(this.guid);\r\n        const id = builder.createString(this.avatarId);\r\n        VrUserStateBuffer.startVrUserStateBuffer(builder);\r\n        VrUserStateBuffer.addGuid(builder, guid);\r\n        VrUserStateBuffer.addTime(builder, flatbuffers_long_from_number(this.time));\r\n        VrUserStateBuffer.addAvatarId(builder, id);\r\n        VrUserStateBuffer.addPosition(builder, Vec3.createVec3(builder, this.position.x, this.position.y, this.position.z));\r\n        VrUserStateBuffer.addRotation(builder, Vec4.createVec4(builder, this.rotation.x, this.rotation.y, this.rotation.z, this.rotation.w));\r\n        VrUserStateBuffer.addScale(builder, this.scale);\r\n        VrUserStateBuffer.addPosLeftHand(builder, Vec3.createVec3(builder, this.posLeftHand.x, this.posLeftHand.y, this.posLeftHand.z));\r\n        VrUserStateBuffer.addPosRightHand(builder, Vec3.createVec3(builder, this.posRightHand.x, this.posRightHand.y, this.posRightHand.z));\r\n        VrUserStateBuffer.addRotLeftHand(builder, Vec4.createVec4(builder, this.rotLeftHand.x, this.rotLeftHand.y, this.rotLeftHand.z, this.rotLeftHand.w));\r\n        VrUserStateBuffer.addRotRightHand(builder, Vec4.createVec4(builder, this.rotRightHand.x, this.rotRightHand.y, this.rotRightHand.z, this.rotRightHand.w));\r\n        const res = VrUserStateBuffer.endVrUserStateBuffer(builder);\r\n        builder.finish(res, VRUserStateBufferIdentifier);\r\n        const arr = builder.asUint8Array();\r\n        net.sendBinary(arr);\r\n    }\r\n\r\n    public setFromBuffer(guid: string, state: VrUserStateBuffer) {\r\n        if (!guid) return;\r\n        this.guid = guid;\r\n        this.time = state.time().toFloat64();\r\n        const id = state.avatarId();\r\n        if (id)\r\n            this.avatarId = id;\r\n        const pos = state.position();\r\n        if (pos)\r\n            this.position.set(pos.x(), pos.y(), pos.z());\r\n        // TODO: maybe just send one float more instead of converting back and forth\r\n        const rot = state.rotation();\r\n        if (rot)\r\n            this.rotation.set(rot.x(), rot.y(), rot.z(), rot.w());\r\n        const posLeftHand = state.posLeftHand();\r\n        if (posLeftHand)\r\n            this.posLeftHand.set(posLeftHand.x(), posLeftHand.y(), posLeftHand.z());\r\n        const posRightHand = state.posRightHand();\r\n        if (posRightHand)\r\n            this.posRightHand.set(posRightHand.x(), posRightHand.y(), posRightHand.z());\r\n        const rotLeftHand = state.rotLeftHand();\r\n        if (rotLeftHand)\r\n            this.rotLeftHand.set(rotLeftHand.x(), rotLeftHand.y(), rotLeftHand.z(), rotLeftHand.w());\r\n        const rotRightHand = state.rotRightHand();\r\n        if (rotRightHand)\r\n            this.rotRightHand.set(rotRightHand.x(), rotRightHand.y(), rotRightHand.z(), rotRightHand.w());\r\n        this.scale = state.scale();\r\n    }\r\n}\r\n\r\nexport class WebXRSync extends Behaviour {\r\n\r\n    webXR: WebXR | null = null;\r\n\r\n    // private allowCustomAvatars: boolean | null = true;\r\n\r\n    private debugAvatarUser: WebXRAvatar | null = null;\r\n    private voip: Voip | null = null;\r\n\r\n    async awake() {\r\n\r\n        if(!this.webXR) this.webXR = GameObject.getComponent(this.gameObject, WebXR);\r\n        if(!this.webXR) this.webXR = GameObject.findObjectOfType(WebXR, this.context);\r\n\r\n        if(!this.webXR) \r\n        {\r\n            console.log(\"Missing webxr component\");\r\n            this.webXR = GameObject.findObjectOfType(WebXR, this.context);\r\n            if(!this.webXR) {\r\n                console.error(\"Could not find webxr component\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this.voip) this.voip = GameObject.findObjectOfType(Voip, this.context);\r\n\r\n        if (debugAvatar) {\r\n            const debugGuid = \"debug-avatar-\" + debugAvatar;\r\n            const newUser = new WebXRAvatar(this.context, debugGuid, this.webXR);\r\n            // newUser.isLocalAvatar = true;\r\n            this.debugAvatarUser = newUser;\r\n            if (typeof debugAvatar === \"string\" && debugAvatar.length > 0) {\r\n                if (await newUser.setAvatarOverride(debugAvatar)) {\r\n                    const debugState = new VRUserState(debugGuid);\r\n                    debugState.position.y += 1;\r\n                    const off = .5;\r\n                    debugState.posLeftHand.y += off;\r\n                    debugState.posLeftHand.x += off;\r\n                    debugState.posRightHand.y += off;\r\n                    debugState.posRightHand.x -= off;\r\n                    newUser.tryUpdate(debugState, 0);\r\n                }\r\n                else {\r\n                    newUser.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        // const debugUser = new WebXRAvatar(this.context, \"sorry-no-guid\", this.webXR!);\r\n\r\n        if (!this.webXR) {\r\n            this.webXR = GameObject.getComponent(this.gameObject, WebXR);\r\n            if (!this.webXR) {\r\n                console.warn(\"Missing webxr component on \" + this.gameObject.name);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.eventSub_WebXRStartEvent = this.onXRSessionStart.bind(this);\r\n        WebXR.addEventListener(WebXREvent.XRStarted, this.eventSub_WebXRStartEvent);\r\n        this.eventSub_WebXRUpdateEvent = this.onXRSessionUpdate.bind(this);\r\n        WebXR.addEventListener(WebXREvent.XRUpdate, this.eventSub_WebXRUpdateEvent);\r\n        this.eventSub_WebXREndEvent = this.onXRSessionEnded.bind(this);\r\n        WebXR.addEventListener(WebXREvent.XRStopped, this.eventSub_WebXREndEvent);\r\n\r\n        this.eventSub_ConnectionEvent = this.onConnected.bind(this);\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, this.eventSub_ConnectionEvent);\r\n        this.context.connection.beginListen(WebXRSyncEvent.WebXR_UserJoined, _evt => {\r\n            console.log(\"webxr user joined evt\");\r\n        });\r\n        this.context.connection.beginListen(WebXRSyncEvent.WebXR_UserLeft, evt => {\r\n            const hasId = evt.id !== null && evt.id !== undefined;\r\n            if (!hasId) return;\r\n            console.log(\"webxr user left evt\");\r\n            if (hasId) {\r\n                const avatar = this.avatars[evt.id];\r\n                avatar?.destroy();\r\n                this.avatars[evt.id] = undefined;\r\n            }\r\n        });\r\n        this.context.connection.beginListenBinrary(VRUserStateBufferIdentifier, (state: VrUserStateBuffer) => {\r\n            // console.log(\"BUFFER\", state);\r\n            const guid = state.guid();\r\n            if (!guid) return;\r\n            const time = state.time().toFloat64();\r\n            const temp = this.tempState;\r\n            temp.setFromBuffer(guid, state);\r\n            // console.log(temp);\r\n            const user = this.onTryGetAvatar(guid, time);\r\n            user?.tryUpdate(temp, time);\r\n        });\r\n        this.context.connection.beginListen(WebXRSyncEvent.VRSessionUpdate, (state: VRUserState) => {\r\n            const guid = state.guid;\r\n            const time = state.time;\r\n            const user = this.onTryGetAvatar(guid, time);\r\n            user?.tryUpdate(state, time);\r\n        });\r\n    }\r\n\r\n    private tempState: VRUserState = new VRUserState(\"\");\r\n\r\n    private onTryGetAvatar(guid: string, time: number) {\r\n        if (guid === this.context.connection.connectionId) return null; // ignore self in case we receive that also!\r\n        const timeDiff = new Date().getTime() - time;\r\n        if (timeDiff > 5000) {\r\n            if (debugLogs)\r\n                console.log(\"old data\", timeDiff, guid)\r\n            return null;\r\n        }\r\n        let user = this.avatars[guid];\r\n        if (user === undefined) {\r\n            try {\r\n                console.log(\"create new avatar\");\r\n                const newUser = new WebXRAvatar(this.context, guid, this.webXR!);\r\n                user = newUser;\r\n                this.avatars[guid] = newUser;\r\n            } catch (err) {\r\n                this.avatars[guid] = null;\r\n                console.error(err);\r\n            }\r\n        }\r\n        return user;\r\n    }\r\n\r\n    onDisable() {\r\n        if (this.eventSub_ConnectionEvent)\r\n            this.context.connection.stopListening(RoomEvents.JoinedRoom, this.eventSub_ConnectionEvent);\r\n        WebXR.removeEventListener(WebXREvent.XRStarted, this.eventSub_WebXRStartEvent);\r\n        WebXR.removeEventListener(WebXREvent.XRUpdate, this.eventSub_WebXRUpdateEvent);\r\n        WebXR.removeEventListener(WebXREvent.XRStopped, this.eventSub_WebXREndEvent);\r\n    }\r\n\r\n    update(): void {\r\n\r\n        const now = getTimeStampNow();\r\n\r\n        if (this.debugAvatarUser) {\r\n            this.debugAvatarUser.lastUpdate = now;\r\n        }\r\n\r\n        this.detectPotentiallyDisconnectedAvatarsAndRemove();\r\n\r\n        for (const key in this.avatars) {\r\n            const avatar = this.avatars[key];\r\n            if (!avatar) continue;\r\n            avatar.update();\r\n        }\r\n    }\r\n\r\n\r\n    private _removeAvatarsList: string[] = [];\r\n    private detectPotentiallyDisconnectedAvatarsAndRemove() {\r\n        const utcnow = getTimeStampNow();\r\n        for (const key in this.avatars) {\r\n            const avatar = this.avatars[key];\r\n            if (!avatar) {\r\n                this._removeAvatarsList.push(key);\r\n                continue;\r\n            }\r\n            if (utcnow - avatar.lastUpdate > 10_000) {\r\n                console.log(\"avatar timed out (didnt receive any updates in  a while) - destroying it now\");\r\n                avatar.destroy();\r\n                this.avatars[key] = undefined;\r\n            }\r\n        }\r\n        for (const rem of this._removeAvatarsList) {\r\n            delete this.avatars[rem];\r\n        }\r\n        this._removeAvatarsList.length = 0;\r\n    }\r\n\r\n    private buildLocalAvatar() {\r\n        if (this.localAvatar) return;\r\n        const connectionId = this.context.connection?.connectionId ?? this.k_LocalAvatarNoNetworkingGuid;\r\n        this.localAvatar = new WebXRAvatar(this.context, connectionId, this.webXR!);\r\n        this.localAvatar.isLocalAvatar = true;\r\n        this.localAvatar.setAvatarOverride(this.getAvatarId());\r\n        this.avatars[this.localAvatar.guid] = this.localAvatar;\r\n    }\r\n\r\n\r\n    private eventSub_ConnectionEvent: Function | null = null;\r\n    private eventSub_WebXRStartEvent: Function | null = null;\r\n    private eventSub_WebXREndEvent: Function | null = null;\r\n    private eventSub_WebXRUpdateEvent: Function | null = null;\r\n    private avatars: { [key: string]: WebXRAvatar | undefined | null } = {}\r\n    private localAvatar: WebXRAvatar | null = null;\r\n    private k_LocalAvatarNoNetworkingGuid = \"local\";\r\n\r\n    private onConnected() {\r\n        // this event gets fired when we have joined a room and are ready to update\r\n        if (debugLogs)\r\n            console.log(\"Hey you are connected as \" + this.context.connection.connectionId);\r\n\r\n        if (this.localAvatar?.guid === this.k_LocalAvatarNoNetworkingGuid) {\r\n            if (this.localAvatar) {\r\n                this.localAvatar?.destroy();\r\n                this.avatars[this.localAvatar.guid] = undefined;\r\n            }\r\n            this.localAvatar = null;\r\n            this.xrState = null;\r\n            this.ownership?.freeOwnership();\r\n            this.ownership = null;\r\n        }\r\n    }\r\n\r\n    private onXRSessionStart(_evt: { session: XRSession }) {\r\n        console.log(\"XR session started\");\r\n        this.context.connection.send(WebXRSyncEvent.WebXR_UserJoined, { id: this.context.connection.connectionId, mode: XRMode.VR });\r\n\r\n        if (this.localAvatar) {\r\n            this.localAvatar?.destroy();\r\n            this.avatars[this.localAvatar.guid] = undefined;\r\n            this.localAvatar = null;\r\n        }\r\n        this.xrState = null;\r\n        this.ownership?.freeOwnership();\r\n        this.ownership = null;\r\n\r\n        if (this.avatars) {\r\n            for (const key in this.avatars) {\r\n                this.avatars[key]?.updateFlags();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onXRSessionEnded(_evt: { session: XRSession }) {\r\n        console.log(\"XR session ended\");\r\n        this.context.connection.send(WebXRSyncEvent.WebXR_UserLeft, { id: this.context.connection.connectionId, mode: XRMode.VR });\r\n        if(this.localAvatar){\r\n            this.localAvatar?.destroy();\r\n            this.avatars[this.localAvatar.guid] = undefined;\r\n            this.localAvatar = null;\r\n        }\r\n    }\r\n\r\n    private ownership: OwnershipModel | null = null;\r\n    private xrState: VRUserState | null = null;\r\n    private builder: Builder = new Builder(1024);\r\n\r\n    private onXRSessionUpdate(evt: { rig: Group, frame: XRFrame, xr: WebXRManager, input: XRInputSource[] }) {\r\n\r\n        this.xrState ??= new VRUserState(this.context.connection.connectionId ?? this.k_LocalAvatarNoNetworkingGuid);\r\n        this.ownership ??= new OwnershipModel(this.context.connection, this.context.connection.connectionId ?? this.k_LocalAvatarNoNetworkingGuid);\r\n        this.ownership.guid = this.context.connection.connectionId ?? this.k_LocalAvatarNoNetworkingGuid;\r\n        this.buildLocalAvatar();\r\n\r\n\r\n        const { frame, xr, rig } = evt;\r\n        const pose = frame.getViewerPose(xr.getReferenceSpace()!);\r\n        if (!pose) return; // e.g. if user is not wearing headset\r\n        const transform: XRRigidTransform = pose?.transform;\r\n        const pos = transform.position;\r\n        const rot = transform.orientation;\r\n        this.xrState.update(rig, pos, rot, this.webXR!, this.getAvatarId());\r\n\r\n        if (this.localAvatar) {\r\n            if (this.context.connection.connectionId) {\r\n                this.localAvatar.guid = this.context.connection.connectionId;\r\n            }\r\n            this.localAvatar.tryUpdate(this.xrState, 0);\r\n        }\r\n\r\n        if (this.ownership && !this.ownership.hasOwnership && this.context.connection.isConnected) {\r\n            if (this.context.time.frameCount % 120 === 0)\r\n                this.ownership.requestOwnership();\r\n            if (!this.ownership.hasOwnership) {\r\n                // console.log(\"NO OWNERSHIP\", this.ownership.guid);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this.context.connection.isConnected || !this.context.connection.connectionId) {\r\n            return;\r\n        }\r\n\r\n        this.xrState.sendAsBuffer(this.builder, this.context.connection);\r\n\r\n        // this.context.connection.send(WebXRSyncEvent.VRSessionUpdate, this.xrState);\r\n\r\n    }\r\n\r\n    private getAvatarId() {\r\n        const urlAvatar = getParam(\"avatar\") as string;\r\n        const avatarId = urlAvatar ?? null;\r\n        return avatarId;\r\n    }\r\n}\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nexport class Vec4 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec4 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nx():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n}\r\n\r\ny():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n}\r\n\r\nz():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n}\r\n\r\nw():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n}\r\n\r\nstatic sizeOf():number {\r\n  return 16;\r\n}\r\n\r\nstatic createVec4(builder:flatbuffers.Builder, x: number, y: number, z: number, w: number):flatbuffers.Offset {\r\n  builder.prep(4, 16);\r\n  builder.writeFloat32(w);\r\n  builder.writeFloat32(z);\r\n  builder.writeFloat32(y);\r\n  builder.writeFloat32(x);\r\n  return builder.offset();\r\n}\r\n\r\n}\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nimport { Vec3 } from './vec3';\r\nimport { Vec4 } from './vec4';\r\n\r\n\r\nexport class VrUserStateBuffer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):VrUserStateBuffer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nstatic getRootAsVrUserStateBuffer(bb:flatbuffers.ByteBuffer, obj?:VrUserStateBuffer):VrUserStateBuffer {\r\n  return (obj || new VrUserStateBuffer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic getSizePrefixedRootAsVrUserStateBuffer(bb:flatbuffers.ByteBuffer, obj?:VrUserStateBuffer):VrUserStateBuffer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new VrUserStateBuffer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nguid():string|null\r\nguid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nguid(optionalEncoding?:any):string|Uint8Array|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n}\r\n\r\ntime():flatbuffers.Long {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n}\r\n\r\navatarId():string|null\r\navatarId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\navatarId(optionalEncoding?:any):string|Uint8Array|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n}\r\n\r\nposition(obj?:Vec3):Vec3|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Vec3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nrotation(obj?:Vec4):Vec4|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Vec4()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nscale():number {\r\n  const offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n}\r\n\r\nposLeftHand(obj?:Vec3):Vec3|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? (obj || new Vec3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nposRightHand(obj?:Vec3):Vec3|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? (obj || new Vec3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nrotLeftHand(obj?:Vec4):Vec4|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? (obj || new Vec4()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nrotRightHand(obj?:Vec4):Vec4|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? (obj || new Vec4()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nstatic startVrUserStateBuffer(builder:flatbuffers.Builder) {\r\n  builder.startObject(10);\r\n}\r\n\r\nstatic addGuid(builder:flatbuffers.Builder, guidOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, guidOffset, 0);\r\n}\r\n\r\nstatic addTime(builder:flatbuffers.Builder, time:flatbuffers.Long) {\r\n  builder.addFieldInt64(1, time, builder.createLong(0, 0));\r\n}\r\n\r\nstatic addAvatarId(builder:flatbuffers.Builder, avatarIdOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, avatarIdOffset, 0);\r\n}\r\n\r\nstatic addPosition(builder:flatbuffers.Builder, positionOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, positionOffset, 0);\r\n}\r\n\r\nstatic addRotation(builder:flatbuffers.Builder, rotationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(4, rotationOffset, 0);\r\n}\r\n\r\nstatic addScale(builder:flatbuffers.Builder, scale:number) {\r\n  builder.addFieldFloat32(5, scale, 0.0);\r\n}\r\n\r\nstatic addPosLeftHand(builder:flatbuffers.Builder, posLeftHandOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(6, posLeftHandOffset, 0);\r\n}\r\n\r\nstatic addPosRightHand(builder:flatbuffers.Builder, posRightHandOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(7, posRightHandOffset, 0);\r\n}\r\n\r\nstatic addRotLeftHand(builder:flatbuffers.Builder, rotLeftHandOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(8, rotLeftHandOffset, 0);\r\n}\r\n\r\nstatic addRotRightHand(builder:flatbuffers.Builder, rotRightHandOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(9, rotRightHandOffset, 0);\r\n}\r\n\r\nstatic endVrUserStateBuffer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  const offset = builder.endObject();\r\n  return offset;\r\n}\r\n\r\nstatic finishVrUserStateBufferBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset);\r\n}\r\n\r\nstatic finishSizePrefixedVrUserStateBufferBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, undefined, true);\r\n}\r\n\r\n}\r\n", "import { INetworkingWebsocketUrlProvider } from \"../engine/engine_networking\";\r\nimport { isLocalNetwork } from \"../engine/engine_networking_utils\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { Behaviour } from \"./Component\";\r\n\r\nexport class Networking extends Behaviour implements INetworkingWebsocketUrlProvider {\r\n\r\n    url: string | null = null;\r\n    urlParameterName: string | null = null;\r\n\r\n    // used when local host is detected\r\n    localhost: string | null = null;\r\n\r\n    awake(){\r\n        this.context.connection.registerProvider(this);\r\n    }\r\n\r\n    getWebsocketUrl(): string | null {\r\n\r\n        let socketurl = this.url ? Networking.GetUrl(this.url, this.localhost) : null;\r\n\r\n        if (this.urlParameterName) {\r\n            const res = getParam(this.urlParameterName);\r\n            if (res && typeof res === \"string\") {\r\n                socketurl = res;\r\n            }\r\n        }\r\n\r\n        if (!socketurl) return null;\r\n\r\n        // regex https://regex101.com/r/JQ5WqB/1\r\n        const regex = new RegExp(\"(((https?)|(?<socket_prefix>wss?)):\\/\\/)?(www\\.)?(?<url>.+)\", \"gm\");\r\n        const match = regex.exec(socketurl);\r\n        if (!match?.groups) return null;\r\n        // if the url has a ws or wss prefix already assume the whole url is in the correct format\r\n        const socketPrefix = match?.groups[\"socket_prefix\"];\r\n        if (socketPrefix) return socketurl;\r\n        // otherwise add the ws prefix\r\n        return \"wss://\" + match?.groups[\"url\"];\r\n    }\r\n\r\n\r\n    public static GetUrl(url: string, localhostFallback?: string | null): string {\r\n\r\n        let result = url;\r\n\r\n        const useLocalHostUrl = Networking.IsLocalNetwork() && localhostFallback;\r\n        if (useLocalHostUrl) {\r\n            result = localhostFallback;\r\n        }\r\n\r\n        if (url?.startsWith(\"/\")) {\r\n            const base = useLocalHostUrl ? result : window.location.origin;\r\n            result = base + url;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static IsLocalNetwork(hostname = window.location.hostname) {\r\n        return isLocalNetwork(hostname);\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { RaycastOptions } from \"../engine/engine_physics\";\r\nimport * as files from \"../engine/engine_networking_files\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Networking } from \"../engine-components/Networking\";\r\nimport { GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\n// web.download_file(\"487f7b22f68312d2c1bbc93b1aea445b.glb\", \"487f7b22f68312d2c1bbc93b1aea445b\", 28152).then(async res => {\r\n//     console.log(res);\r\n//     const gltf = await parseSync(res);\r\n//     scene.add(gltf.scene);\r\n//     console.log(\"GLTF\", gltf);\r\n// });\r\n\r\nexport enum DropListenerEvents {\r\n    ObjectAdded = \"object-added\",\r\n}\r\n\r\n\r\nexport class DropListener extends Behaviour {\r\n\r\n    @serializable()\r\n    filesBackendUrl?: string;\r\n\r\n    @serializable()\r\n    localhost?:string;\r\n    \r\n    private _dragOver!: (evt: DragEvent) => void;\r\n    private _drop!: (evt: DragEvent) => void;\r\n\r\n    onEnable(): void {\r\n        this.filesBackendUrl = this.filesBackendUrl ? Networking.GetUrl(this.filesBackendUrl, this.localhost) : undefined;\r\n\r\n        this._dragOver = this.onDrag.bind(this);\r\n        this._drop = this.onDrop.bind(this);\r\n        this.context.domElement.addEventListener(\"dragover\", this._dragOver);\r\n        this.context.domElement.addEventListener(\"drop\", this._drop);\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.context.domElement.removeEventListener(\"dragover\", this._dragOver);\r\n        this.context.domElement.removeEventListener(\"drop\", this._drop);\r\n    }\r\n\r\n    private onDrag(evt: DragEvent) {\r\n        // necessary to get drop event\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async onDrop(evt: DragEvent) {\r\n        console.log(evt);\r\n        if (!evt.dataTransfer) return;\r\n        evt.preventDefault();\r\n        const items = evt.dataTransfer.items;\r\n        if (!items) return;\r\n\r\n        for (const ite in items) {\r\n            const it = items[ite];\r\n            if (it.kind === \"file\") {\r\n                const file = it.getAsFile();\r\n                if (!file) continue;\r\n                console.log(\"Register file \" + file.name + \" to\", this.filesBackendUrl, file);\r\n                const res = await files.addFile(file, this.context, this.filesBackendUrl);\r\n                if (res)\r\n                    this.addObject(evt, res);\r\n            }\r\n            else if (it.kind === \"string\" && it.type == \"text/plain\") {\r\n                it.getAsString(async str => {\r\n                    console.log(\"dropped url\", str);\r\n                    try {\r\n                        const url = new URL(str);\r\n                        if (!url) return;\r\n                        const res = await files.addFileFromUrl(url, this.context);\r\n                        if (res)\r\n                            this.addObject(evt, res);\r\n                    }\r\n                    catch (_) {\r\n                        console.log(\"dropped string is not a valid URL!\", str);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private async addObject(evt: DragEvent, gltf: GLTF) {\r\n        console.log(\"Dropped\", gltf);\r\n        const opts = new RaycastOptions();\r\n        opts.setMask(0xffffff);\r\n        opts.screenPointFromOffset(evt.offsetX, evt.offsetY);\r\n        const rc = this.context.physics.raycast(opts);\r\n        const obj = gltf.scene;\r\n        if (rc && rc.length > 0) {\r\n            for (const hit of rc) {\r\n                obj.position.copy(hit.point);\r\n                break;\r\n            }\r\n        }\r\n        this.gameObject.add(obj);\r\n        this.dispatchEvent(new CustomEvent(DropListenerEvents.ObjectAdded, { detail: gltf }));\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { WebXRController, ControllerEvents } from \"./WebXRController\";\r\nimport { DragControls, DragEvents } from \"./DragControls\";\r\nimport { Interactable } from \"./Interactable\";\r\nimport { Animation } from \"./Animation\";\r\nimport { Vector3, Quaternion, Object3D } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { InstantiateOptions } from \"../engine/engine_gameobject\";\r\n\r\nexport class Duplicatable extends Interactable {\r\n\r\n    @serializable(Object3D)\r\n    parent: GameObject | null = null;\r\n    @serializable(Object3D)\r\n    object: GameObject | null = null;\r\n\r\n    // limit max object spawn count per interval\r\n    @serializable()\r\n    limitCount = 10;\r\n    @serializable()\r\n    limitInterval = 60;\r\n\r\n    private _currentCount = 0;\r\n    private _startPosition: THREE.Vector3 | null = null;\r\n    private _startQuaternion: THREE.Quaternion | null = null;\r\n\r\n    awake(): void {\r\n        // TODO: add support to not having to assign a object to clone\r\n        // if(!this.object){\r\n        //     const opts = new InstantiateOptions();\r\n        //     opts.parent = this.gameObject;\r\n        //     opts.idProvider = InstantiateIdProvider.createFromString(this.guid);\r\n        //     const clone = GameObject.instantiate(this.gameObject, opts);\r\n        //     const duplicatable = \r\n        //     this.object = clone;\r\n        // }\r\n        // console.log(this, this.object);\r\n        if (this.object) {\r\n            if (this.object as any === this.gameObject) {\r\n                console.error(\"Can not duplicate self\");\r\n                return;\r\n            }\r\n            this.object.visible = false;\r\n\r\n            // when this is in a moveable parent in multiuser scenario somehow the object position gets an offset and might stay that way\r\n            // this is just a workaround to set the object position before duplicating\r\n            this._startPosition = this.object.position?.clone() ?? new Vector3(0, 0, 0);\r\n            this._startQuaternion = this.object.quaternion?.clone() ?? new Quaternion(0, 0, 0, 1);\r\n        }\r\n\r\n        const drag = GameObject.getComponentInParent(this.gameObject, DragControls);\r\n        if (drag) {\r\n            drag.addDragEventListener(DragEvents.SelectStart, (_ctrls, args) => {\r\n                if (this._currentCount >= this.limitCount) {\r\n                    args.attached = null;\r\n                    return;\r\n                }\r\n                const res = this.handleDuplication(args.selected);\r\n                if (res) {\r\n                    console.assert(res !== args.selected, \"Duplicated object is original\");\r\n                    args.attached = res;\r\n                }\r\n            });\r\n        }\r\n        else console.warn(\"Could no find drag controls in parent\", this.name);\r\n\r\n        WebXRController.addEventListener(ControllerEvents.SelectStart, (_controller: WebXRController, args: { selected: THREE.Object3D, grab: THREE.Object3D | GameObject | null }) => {\r\n            if (this._currentCount >= this.limitCount) {\r\n                args.grab = null;\r\n                return;\r\n            }\r\n            const res = this.handleDuplication(args.selected);\r\n            if (res) args.grab = res;\r\n        });\r\n\r\n        this.cloneLimitIntervalFn();\r\n    }\r\n\r\n    private cloneLimitIntervalFn() {\r\n        if (this.destroyed) return;\r\n        if (this._currentCount > 0) {\r\n            this._currentCount -= 1;\r\n        }\r\n        setTimeout(() => {\r\n            this.cloneLimitIntervalFn();\r\n        }, (this.limitInterval / this.limitCount) * 1000);\r\n    }\r\n\r\n    private handleDuplication(selected: THREE.Object3D): THREE.Object3D | null {\r\n        if (this._currentCount >= this.limitCount) return null;\r\n        if (!this.object) return null;\r\n        if (selected === this.gameObject || this.handleMultiObject(selected)) {\r\n\r\n            if (this.object as any === this.gameObject) return null;\r\n            this.object.visible = true;\r\n\r\n            if (this._startPosition)\r\n                this.object.position.copy(this._startPosition);\r\n            if (this._startQuaternion)\r\n                this.object.quaternion.copy(this._startQuaternion);\r\n\r\n            const opts = new InstantiateOptions();\r\n            if (!this.parent) this.parent = this.gameObject.parent as GameObject;\r\n            if (this.parent) {\r\n                opts.parent = this.parent.guid ?? this.parent.userData?.guid;\r\n                opts.keepWorldPosition = true;\r\n            }\r\n            opts.position = this.worldPosition;\r\n            opts.rotation = this.worldQuaternion;\r\n            opts.context = this.context;\r\n            this._currentCount += 1;\r\n\r\n            const newInstance = GameObject.instantiateSynced(this.object as GameObject, opts) as GameObject;\r\n            console.assert(newInstance !== this.object, \"Duplicated object is original\");\r\n            this.object.visible = false;\r\n\r\n            // see if this fixes object being offset when duplicated and dragged - it looks like three clone has shared position/quaternion objects?\r\n            if (this._startPosition)\r\n                this.object.position.clone().copy(this._startPosition);\r\n            if (this._startQuaternion)\r\n                this.object.quaternion.clone().copy(this._startQuaternion);\r\n\r\n            return newInstance;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private handleMultiObject(selected: THREE.Object3D): boolean {\r\n        const shouldSearchInChildren = this.gameObject.type === \"Group\" || this.gameObject.type === \"Object3D\";\r\n        if (!shouldSearchInChildren) return false;\r\n        return this.isInChildren(this.gameObject, selected);\r\n    }\r\n\r\n    private isInChildren(current: THREE.Object3D, search: THREE.Object3D): boolean {\r\n        if (!current) return false;\r\n        if (current === search) return true;\r\n        if (current.children) {\r\n            for (let child of current.children) {\r\n                if (this.isInChildren(child, search)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}", "import { serializable } from \"../engine/engine_serialization\";\r\nimport { EventList } from \"./EventList\";\r\nimport { IPointerEventHandler, PointerEventData } from \"./ui/PointerEvents\"\r\nimport { Behaviour } from \"./Component\"\r\nimport { EventType } from \"./EventType\"\r\n\r\nclass TriggerEvent {\r\n    @serializable()\r\n    eventID!: EventType;\r\n    @serializable(EventList)\r\n    callback!: EventList;\r\n}\r\n\r\nexport class EventTrigger extends Behaviour implements IPointerEventHandler {\r\n    \r\n    @serializable(TriggerEvent)\r\n    private triggers?: Array<TriggerEvent>;\r\n\r\n    invoke(type: EventType) {\r\n        if(!this.triggers) return;\r\n        for(const trigger of this.triggers){\r\n            if(trigger.eventID === type){\r\n                trigger.callback.invoke();\r\n            }\r\n        }\r\n    }\r\n\r\n    onPointerClick(_: PointerEventData) {\r\n        this.invoke(EventType.PointerClick);\r\n    }\r\n    \r\n    onPointerEnter(_: PointerEventData) {\r\n        this.invoke(EventType.PointerEnter);\r\n    }\r\n\r\n    onPointerExit(_: PointerEventData) {\r\n        this.invoke(EventType.PointerExit);\r\n    }\r\n\r\n    onPointerDown(_: PointerEventData) {\r\n        this.invoke(EventType.PointerDown);\r\n    }\r\n\r\n    onPointerUp(_: PointerEventData) {\r\n        this.invoke(EventType.PointerUp);\r\n    }\r\n\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { FlyControls as ThreeFlyControls } from \"three/examples/jsm/controls/FlyControls\";\r\nimport { Camera } from \"./Camera\";\r\n\r\nexport class FlyControls extends Behaviour {\r\n    private _controls: ThreeFlyControls | null = null;\r\n\r\n    onEnable(): void {\r\n        const cam = GameObject.getComponent(this.gameObject, Camera)?.cam;\r\n        this._controls = new ThreeFlyControls(cam!, this.context.renderer.domElement);\r\n        this._controls.rollSpeed = .5;\r\n        this._controls.movementSpeed = 3;\r\n        this._controls.dragToLook = true;\r\n        \r\n    }\r\n\r\n    onDisable(): void {\r\n        this._controls?.dispose();\r\n        this._controls = null;\r\n    }\r\n\r\n    update(): void {\r\n        if (this._controls)\r\n            this._controls.update(this.context.time.deltaTime);\r\n    }\r\n\r\n}", "import { Behaviour } from \"./Component\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport * as params from \"../engine/engine_default_parameters\";\r\nimport { Color, GridHelper as _GridHelper } from \"three\";\r\n\r\nexport class GridHelper extends Behaviour {\r\n\r\n    @serializable()\r\n    public isGizmo:boolean = false;\r\n    @serializable(Color)\r\n    private color0!: THREE.Color;\r\n    @serializable(Color)\r\n    private color1!: THREE.Color;\r\n\r\n    private gridHelper!: THREE.GridHelper | null;\r\n    private size!: number;\r\n    private divisions!: number;\r\n    private offset!: number;\r\n\r\n    onEnable() {\r\n        if (this.isGizmo && !params.showGizmos) return;\r\n\r\n        const size = this.size;\r\n        const divisions = this.divisions;\r\n        if (!this.gridHelper) {\r\n            this.gridHelper = new _GridHelper(size, divisions, this.color0 ?? new Color(.4, .4, .4), this.color1 ?? new Color(.6,.6,.6));\r\n            if (this.offset !== undefined)\r\n                this.gridHelper.position.y += this.offset;\r\n            this.gameObject.add(this.gridHelper);\r\n        }\r\n    }\r\n}\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { GroundProjectedEnv as GroundProjection } from 'three/examples/jsm/objects/GroundProjectedEnv.js';\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Watch as Watch } from \"../engine/engine_utils\";\r\nimport { Texture } from \"three\";\r\n\r\n\r\nexport class GroundProjectedEnv extends Behaviour {\r\n\r\n    @serializable()\r\n    set scale(val: number) {\r\n        this._scale = val;\r\n        this.env?.scale.setScalar(val);\r\n    }\r\n    get scale(): number {\r\n        return this._scale;\r\n    }\r\n    private _scale: number = 20;\r\n\r\n    @serializable()\r\n    set radius(val: number) {\r\n        this._radius = val;\r\n        if (this.env)\r\n            this.env.height = val;\r\n    }\r\n    get radius(): number { return this._radius; }\r\n    private _radius: number = 100;\r\n\r\n    @serializable()\r\n    set height(val: number) {\r\n        this._height = val;\r\n        if (this.env)\r\n            this.env.height = val;\r\n    }\r\n    get height(): number { return this._height; }\r\n    private _height: number = 100;\r\n\r\n    private _lastEnvironment?: Texture;\r\n    private env?: GroundProjection;\r\n    private _watcher?: Watch;\r\n\r\n\r\n    onEnable() {\r\n        // TODO: if we do this in the first frame we can not disable it again. Something buggy with the watch?!\r\n        if (this.context.time.frameCount > 0)\r\n            this.updateAndCreate();\r\n    }\r\n\r\n    start() {\r\n        this.updateAndCreate();\r\n    }\r\n\r\n    onDisable() {\r\n        this._watcher?.revoke();\r\n        this.env?.removeFromParent();\r\n    }\r\n\r\n    private updateAndCreate() {\r\n        this.updateProjection();\r\n        if (!this._watcher) {\r\n            this._watcher = new Watch(this.context.scene, \"environment\");\r\n            this._watcher.subscribeWrite(_ => {\r\n                this.updateProjection();\r\n            });\r\n        }\r\n        this._watcher.apply();\r\n    }\r\n\r\n    updateProjection() {\r\n        if (!this.context.scene.environment) {\r\n            this.env?.removeFromParent();\r\n            return;\r\n        }\r\n        if (!this.env || this.context.scene.environment !== this._lastEnvironment) {\r\n            console.log(\"Create/Update Ground Projection\", this.context.scene.environment.name);\r\n            this.env = new GroundProjection(this.context.scene.environment);\r\n        }\r\n        this._lastEnvironment = this.context.scene.environment;\r\n        if (!this.env.parent)\r\n            this.gameObject.add(this.env);\r\n        this.env.scale.setScalar(this._scale);\r\n        this.env.radius = this._radius;\r\n        this.env.height = this._height;\r\n        // dont make the ground projection raycastable by default\r\n        if (this.env.isObject3D === true) {\r\n            this.env.layers.set(2);\r\n        }\r\n    }\r\n\r\n}", "import { Vector3 } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization\";\r\nimport { Behaviour } from \"./Component\";\r\nimport { Rigidbody } from \"./RigidBody\";\r\n\r\nexport abstract class Joint extends Behaviour {\r\n    @serializable(Rigidbody)\r\n    connectedBody?: Rigidbody;\r\n\r\n    get rigidBody(): Rigidbody | null {\r\n        return this._rigidBody;\r\n    }\r\n    private _rigidBody: Rigidbody | null = null;\r\n\r\n\r\n    onEnable() {\r\n        if (!this._rigidBody) this._rigidBody = this.gameObject.getComponent(Rigidbody);\r\n        if (this.rigidBody && this.connectedBody)\r\n            this.startCoroutine(this.create());\r\n    }\r\n\r\n    private *create() {\r\n        yield;\r\n        if (this.rigidBody && this.connectedBody) {\r\n            this.createJoint(this.rigidBody, this.connectedBody)\r\n        }\r\n    }\r\n\r\n    protected abstract createJoint(self: Rigidbody, other: Rigidbody);\r\n}\r\n\r\nexport class FixedJoint extends Joint {\r\n\r\n    protected createJoint(self: Rigidbody, other: Rigidbody) {\r\n        this.context.physics.addFixedJoint(self, other);\r\n    }\r\n}\r\n\r\nexport class HingeJoint extends Joint {\r\n\r\n    @serializable(Vector3)\r\n    anchor?: Vector3;\r\n\r\n    @serializable(Vector3)\r\n    axis?: Vector3;\r\n\r\n    protected createJoint(self: Rigidbody, other: Rigidbody) {\r\n        if (this.axis && this.anchor)\r\n            this.context.physics.addHingeJoint(self, other, this.anchor, this.axis);\r\n    }\r\n\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { getParam, isMobileDevice } from \"../engine/engine_utils\";\r\nimport { setWorldPositionXYZ } from \"../engine/engine_three_utils\";\r\nimport { FrameEvent } from \"../engine/engine_setup\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Color, DirectionalLight, OrthographicCamera } from \"three\";\r\nimport { WebXR, WebXREvent } from \"./WebXR\";\r\nimport { WebARSessionRoot } from \"./WebARSessionRoot\";\r\nimport { ILight } from \"../engine/engine_types\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { isLocalNetwork } from \"../engine/engine_networking_utils\";\r\n\r\n// https://threejs.org/examples/webgl_shadowmap_csm.html\r\n\r\n\r\nfunction toDegrees(radians) {\r\n    return radians * 180 / Math.PI;\r\n}\r\n\r\nfunction toRadians(degrees) {\r\n    return degrees * Math.PI / 180;\r\n}\r\n\r\nconst shadowMaxDistance = 300;\r\nconst debug = getParam(\"debuglights\");\r\n\r\n\r\n/// <summary>\r\n///   <para>The type of a Light.</para>\r\n/// </summary>\r\nexport enum LightType {\r\n    /// <summary>\r\n    ///   <para>The light is a spot light.</para>\r\n    /// </summary>\r\n    Spot = 0,\r\n    /// <summary>\r\n    ///   <para>The light is a directional light.</para>\r\n    /// </summary>\r\n    Directional = 1,\r\n    /// <summary>\r\n    ///   <para>The light is a point light.</para>\r\n    /// </summary>\r\n    Point = 2,\r\n    Area = 3,\r\n    /// <summary>\r\n    ///   <para>The light is a rectangle shaped area light. It affects only baked lightmaps and lightprobes.</para>\r\n    /// </summary>\r\n    Rectangle = 3,\r\n    /// <summary>\r\n    ///   <para>The light is a disc shaped area light. It affects only baked lightmaps and lightprobes.</para>\r\n    /// </summary>\r\n    Disc = 4,\r\n}\r\nexport enum LightmapBakeType {\r\n    /// <summary>\r\n    ///   <para>Realtime lights cast run time light and shadows. They can change position, orientation, color, brightness, and many other properties at run time. No lighting gets baked into lightmaps or light probes..</para>\r\n    /// </summary>\r\n    Realtime = 4,\r\n    /// <summary>\r\n    ///   <para>Baked lights cannot move or change in any way during run time. All lighting for static objects gets baked into lightmaps. Lighting and shadows for dynamic objects gets baked into Light Probes.</para>\r\n    /// </summary>\r\n    Baked = 2,\r\n    /// <summary>\r\n    ///   <para>Mixed lights allow a mix of realtime and baked lighting, based on the Mixed Lighting Mode used. These lights cannot move, but can change color and intensity at run time. Changes to color and intensity only affect direct lighting as indirect lighting gets baked. If using Subtractive mode, changes to color or intensity are not calculated at run time on static objects.</para>\r\n    /// </summary>\r\n    Mixed = 1,\r\n}\r\n\r\n/// <summary>\r\n///   <para>Shadow casting options for a Light.</para>\r\n/// </summary>\r\nenum LightShadows {\r\n    /// <summary>\r\n    ///   <para>Do not cast shadows (default).</para>\r\n    /// </summary>\r\n    None = 0,\r\n    /// <summary>\r\n    ///   <para>Cast \"hard\" shadows (with no shadow filtering).</para>\r\n    /// </summary>\r\n    Hard = 1,\r\n    /// <summary>\r\n    ///   <para>Cast \"soft\" shadows (with 4x PCF filtering).</para>\r\n    /// </summary>\r\n    Soft = 2,\r\n}\r\n\r\nexport class Light extends Behaviour implements ILight {\r\n\r\n    @serializable()\r\n    private type: LightType = 0;\r\n\r\n    public range: number = 1;\r\n    public spotAngle: number = 1;\r\n    public innerSpotAngle: number = 1;\r\n\r\n    @serializable(Color)\r\n    public color: THREE.Color = new THREE.Color(0xffffff);\r\n\r\n    @serializable()\r\n    set shadowNearPlane(val: number) {\r\n        if (val === this._shadowNearPlane) return;\r\n        this._shadowNearPlane = val;\r\n        if (this.light?.shadow?.camera !== undefined) {\r\n            const cam = this.light.shadow.camera as THREE.OrthographicCamera;\r\n            cam.near = val;\r\n        }\r\n    }\r\n    get shadowNearPlane(): number { return this._shadowNearPlane; }\r\n    private _shadowNearPlane: number = .1;\r\n\r\n    @serializable()\r\n    set shadowBias(val: number) {\r\n        if (val === this._shadowBias) return;\r\n        this._shadowBias = val;\r\n        if (this.light?.shadow?.bias !== undefined) {\r\n            this.light.shadow.bias = val;\r\n            this.light.shadow.needsUpdate = true;\r\n        }\r\n    }\r\n    get shadowBias(): number { return this._shadowBias; }\r\n    private _shadowBias: number = 0;\r\n\r\n    @serializable()\r\n    set shadowNormalBias(val: number) {\r\n        if (val === this._shadowNormalBias) return;\r\n        this._shadowNormalBias = val;\r\n        if (this.light?.shadow?.normalBias !== undefined) {\r\n            this.light.shadow.normalBias = val;\r\n            this.light.shadow.needsUpdate = true;\r\n        }\r\n    }\r\n    get shadowNormalBias(): number { return this._shadowNormalBias; }\r\n    private _shadowNormalBias: number = 1;\r\n\r\n    /** when enabled this will remove the multiplication when setting the shadow bias settings initially */\r\n    private _overrideShadowBiasSettings: boolean = false;\r\n\r\n    @serializable()\r\n    set shadows(val: LightShadows) {\r\n        this._shadows = val;\r\n        if (this.light) {\r\n            this.light.castShadow = val !== LightShadows.None;\r\n            this.updateShadowSoftHard();\r\n        }\r\n    }\r\n    get shadows(): LightShadows { return this._shadows; }\r\n    private _shadows: LightShadows = 1;\r\n\r\n    @serializable()\r\n    private lightmapBakeType: LightmapBakeType = LightmapBakeType.Realtime;\r\n\r\n    @serializable()\r\n    set intensity(val: number) {\r\n        this._intensity = val;\r\n        if (this.light) {\r\n            let factor: number = 1;\r\n            if (this.context.isInXR && this._webARRoot) {\r\n                const scaleFactor = this._webARRoot?.arScale;\r\n                if (typeof scaleFactor === \"number\" && scaleFactor > 0) {\r\n                    factor /= scaleFactor;\r\n                }\r\n            }\r\n            this.light.intensity = val * factor;\r\n        }\r\n    }\r\n    get intensity(): number { return this._intensity; }\r\n    private _intensity: number = -1;\r\n\r\n    @serializable()\r\n    get shadowDistance(): number {\r\n        const light = this.light;\r\n        if (light) {\r\n            const cam = light.shadow.camera as OrthographicCamera;\r\n            return cam.far;\r\n        }\r\n        return -1;\r\n    }\r\n    set shadowDistance(val: number) {\r\n        this._shadowDistance = val;\r\n        const light = this.light;\r\n        if (light) {\r\n            const cam = light.shadow.camera as OrthographicCamera;\r\n            cam.far = val;\r\n            cam.updateProjectionMatrix();\r\n        }\r\n    }\r\n    private _shadowDistance?: number;\r\n    // set from additional component\r\n    private shadowWidth?: number;\r\n    private shadowHeight?: number;\r\n\r\n    @serializable()\r\n    get shadowResolution(): number {\r\n        const light = this.light;\r\n        if (light) {\r\n            return light.shadow.mapSize.x;\r\n        }\r\n        return -1;\r\n    }\r\n    set shadowResolution(val: number) {\r\n        if (val === this._shadowResolution) return;\r\n        this._shadowResolution = val;\r\n        const light = this.light;\r\n        if (light) {\r\n            light.shadow.mapSize.set(val, val);\r\n            light.shadow.needsUpdate = true;\r\n        }\r\n    }\r\n    private _shadowResolution?: number = undefined;\r\n\r\n    get isBaked() {\r\n        return this.lightmapBakeType === LightmapBakeType.Baked;\r\n    }\r\n\r\n    private get selfIsLight(): boolean {\r\n        if (this.gameObject[\"isLight\"] === true) return true;\r\n        switch (this.gameObject.type) {\r\n            case \"SpotLight\":\r\n            case \"PointLight\":\r\n            case \"DirectionalLight\":\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private light: THREE.Light | undefined = undefined;\r\n\r\n    public getWorldPosition(vec: THREE.Vector3): THREE.Vector3 {\r\n        if (this.light) {\r\n            if (this.type === LightType.Directional) {\r\n                return this.light.getWorldPosition(vec).multiplyScalar(1);\r\n            }\r\n            return this.light.getWorldPosition(vec);\r\n        }\r\n        return vec;\r\n    }\r\n\r\n    public updateIntensity() {\r\n        this.intensity = this._intensity;\r\n    }\r\n\r\n    awake() {\r\n        this.color = new THREE.Color(this.color ?? 0xffffff);\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.createLight();\r\n        if (this.isBaked) return;\r\n        else if (this.light) {\r\n            if (this.selfIsLight) {\r\n                // nothing to do\r\n            }\r\n            else if (this.light.parent !== this.gameObject)\r\n                this.gameObject.add(this.light);\r\n        }\r\n        if (this.type === LightType.Directional)\r\n            this.startCoroutine(this.updateMainLightRoutine(), FrameEvent.LateUpdate);\r\n\r\n        this._webXRStartedListener = WebXR.addEventListener(WebXREvent.XRStarted, this.onWebXRStarted.bind(this));\r\n        this._webXREndedListener = WebXR.addEventListener(WebXREvent.XRStopped, this.onWebXREnded.bind(this));\r\n    }\r\n\r\n    onDisable() {\r\n        WebXR.removeEventListener(WebXREvent.XRStarted, this._webXRStartedListener);\r\n        WebXR.removeEventListener(WebXREvent.XRStopped, this._webXREndedListener);\r\n    }\r\n\r\n    private _webXRStartedListener?: Function;\r\n    private _webXREndedListener?: Function;\r\n    private _webARRoot?: WebARSessionRoot;\r\n\r\n    private onWebXRStarted() {\r\n        this._webARRoot = GameObject.getComponentInParent(this.gameObject, WebARSessionRoot) ?? undefined;\r\n        this.startCoroutine(this._updateLightIntensityInARRoutine());\r\n    }\r\n\r\n    private *_updateLightIntensityInARRoutine() {\r\n        while (this.context.isInAR) {\r\n            yield;\r\n            this.updateIntensity();\r\n            for (let i = 0; i < 30; i++) yield;\r\n        }\r\n    }\r\n\r\n    private onWebXREnded() {\r\n        this.updateIntensity();\r\n    }\r\n\r\n    createLight() {\r\n        const lightAlreadyCreated = this.selfIsLight;\r\n\r\n        if (lightAlreadyCreated && !this.light) {\r\n            this.light = this.gameObject as unknown as THREE.Light;\r\n            this._intensity = this.light.intensity;\r\n\r\n            switch (this.type) {\r\n                case LightType.Directional:\r\n                    this.setDirectionalLight(this.light as DirectionalLight);\r\n                    break;\r\n            }\r\n        }\r\n        else if(!this.light) {\r\n            switch (this.type) {\r\n                case LightType.Directional:\r\n                    // console.log(this);\r\n                    const dirLight = new THREE.DirectionalLight(this.color, this.intensity * Math.PI);\r\n                    // directional light target is at 0 0 0 by default\r\n                    dirLight.position.set(0, 0, -shadowMaxDistance * .5).applyQuaternion(this.gameObject.quaternion);\r\n                    this.gameObject.add(dirLight.target);\r\n                    setWorldPositionXYZ(dirLight.target, 0, 0, 0);\r\n                    this.light = dirLight;\r\n                    this.gameObject.position.set(0, 0, 0);\r\n                    this.gameObject.rotation.set(0, 0, 0);\r\n\r\n                    if (debug) {\r\n                        const spotLightHelper = new THREE.DirectionalLightHelper(this.light as THREE.DirectionalLight, .2, this.color);\r\n                        this.context.scene.add(spotLightHelper);\r\n                        // const bh = new THREE.BoxHelper(this.context.scene, 0xfff0000);\r\n                        // this.context.scene.add(bh);\r\n                    }\r\n                    break;\r\n\r\n                case LightType.Spot:\r\n                    const spotLight = new THREE.SpotLight(this.color, this.intensity * Math.PI, this.range, toRadians(this.spotAngle / 2), 1 - toRadians(this.innerSpotAngle / 2) / toRadians(this.spotAngle / 2), 2);\r\n                    spotLight.position.set(0, 0, 0);\r\n                    spotLight.rotation.set(0, 0, 0);\r\n\r\n                    this.light = spotLight;\r\n                    const spotLightTarget = spotLight.target;\r\n                    spotLight.add(spotLightTarget);\r\n                    spotLightTarget.position.set(0, 0, this.range);\r\n                    spotLightTarget.rotation.set(0, 0, 0);\r\n                    break;\r\n\r\n                case LightType.Point:\r\n                    const pointLight = new THREE.PointLight(this.color, this.intensity * Math.PI, this.range);\r\n                    this.light = pointLight;\r\n\r\n                    // const pointHelper = new THREE.PointLightHelper(pointLight, this.range, this.color);\r\n                    // scene.add(pointHelper);\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.light) {\r\n            if (this._intensity >= 0)\r\n                this.light.intensity = this._intensity;\r\n            else  \r\n                this._intensity = this.light.intensity;\r\n\r\n            if (this.shadows !== LightShadows.None) {\r\n                this.light.castShadow = true;\r\n            }\r\n            else this.light.castShadow = false;\r\n\r\n            // shadow intensity is currently not a thing: https://github.com/mrdoob/three.js/pull/14087\r\n            if (this._shadowResolution !== undefined && this._shadowResolution > 4) {\r\n                this.light.shadow.mapSize.width = this._shadowResolution;\r\n                this.light.shadow.mapSize.height = this._shadowResolution;\r\n            }\r\n            else {\r\n                this.light.shadow.mapSize.width = 2048;\r\n                this.light.shadow.mapSize.height = 2048;\r\n            }\r\n            // this.light.shadow.needsUpdate = true;\r\n            // console.log(this.light.shadow.mapSize);\r\n            // return;\r\n\r\n            if (debug)\r\n                console.log(\"Override shadow bias?\", this._overrideShadowBiasSettings, this.shadowBias, this.shadowNormalBias);\r\n\r\n            // shadow bias settings\r\n            if (this._overrideShadowBiasSettings === true) {\r\n                this.light.shadow.bias = this.shadowBias;\r\n                this.light.shadow.normalBias = this.shadowNormalBias;\r\n            }\r\n            else {\r\n                this.light.shadow.bias = this.shadowBias * 0.00001;\r\n                this.light.shadow.normalBias = this.shadowNormalBias * .0001;\r\n            }\r\n\r\n            this.updateShadowSoftHard();\r\n\r\n            const cam = this.light.shadow.camera as THREE.OrthographicCamera;\r\n            cam.near = this.shadowNearPlane;\r\n            // use shadow distance that was set explictly (if any)\r\n            if (this._shadowDistance !== undefined && typeof this._shadowDistance === \"number\")\r\n                cam.far = this._shadowDistance;\r\n            else // otherwise fallback to object scale and max distance\r\n                cam.far = shadowMaxDistance * Math.abs(this.gameObject.scale.z);\r\n\r\n            // width and height\r\n            this.gameObject.scale.set(1, 1, 1);\r\n            if (this.shadowWidth !== undefined) {\r\n                cam.left = -this.shadowWidth / 2;\r\n                cam.right = this.shadowWidth / 2;\r\n            }\r\n            else {\r\n                const sx = this.gameObject.scale.x;\r\n                cam.left *= sx;\r\n                cam.right *= sx;\r\n            }\r\n            if (this.shadowHeight !== undefined) {\r\n                cam.top = this.shadowHeight / 2;\r\n                cam.bottom = -this.shadowHeight / 2;\r\n            }\r\n            else {\r\n                const sy = this.gameObject.scale.y;\r\n                cam.top *= sy;\r\n                cam.bottom *= sy;\r\n            }\r\n\r\n\r\n            this.light.shadow.needsUpdate = true;\r\n            if (debug)\r\n                this.context.scene.add(new THREE.CameraHelper(cam));\r\n\r\n\r\n            if (this.isBaked) {\r\n                this.light.removeFromParent();\r\n            }\r\n            else if (!lightAlreadyCreated)\r\n                this.gameObject.add(this.light);\r\n        }\r\n\r\n    }\r\n\r\n    *updateMainLightRoutine() {\r\n        while (true) {\r\n            if (this.type === LightType.Directional) {\r\n                if (!this.context.mainLight || this.intensity > this.context.mainLight.intensity) {\r\n                    this.context.mainLight = this;\r\n                }\r\n                yield;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    static allowChangingRendererShadowMapType: boolean = true;\r\n\r\n    private updateShadowSoftHard() {\r\n        if (!this.light) return;\r\n        if (this.shadows === LightShadows.Soft) {\r\n            // const radius = this.light.shadow.mapSize.width / 1024 * 5;\r\n            // const samples = Mathf.clamp(Math.round(radius), 2, 10);\r\n            // this.light.shadow.radius = radius;\r\n            // this.light.shadow.blurSamples = samples;\r\n            // if (isMobileDevice()) {\r\n            //     this.light.shadow.radius *= .5;\r\n            //     this.light.shadow.blurSamples = Math.floor(this.light.shadow.blurSamples * .5);\r\n            // }\r\n            // if (Light.allowChangingRendererShadowMapType) {\r\n            //     if(this.context.renderer.shadowMap.type !== THREE.VSMShadowMap){\r\n            //         if(isLocalNetwork()) console.warn(\"Changing renderer shadow map type to VSMShadowMap because a light with soft shadows enabled was found (this will cause all shadow receivers to also cast shadows). If you don't want this behaviour either set the shadow type to hard or set Light.allowChangingRendererShadowMapType to false.\", this);\r\n            //         this.context.renderer.shadowMap.type = THREE.VSMShadowMap;\r\n            //     }\r\n            // }\r\n        }\r\n        else {\r\n            this.light.shadow.radius = 1;\r\n            this.light.shadow.blurSamples = 1;\r\n        }\r\n    }\r\n\r\n    private setDirectionalLight(dirLight: DirectionalLight) {\r\n        dirLight.add(dirLight.target);\r\n        dirLight.target.position.set(0, 0, -1);\r\n        // dirLight.position.add(vec.set(0,0,1).multiplyScalar(shadowMaxDistance*.1).applyQuaternion(this.gameObject.quaternion));\r\n    }\r\n}\r\n\r\nconst vec = new THREE.Vector3(0, 0, 0);\r\n\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Vector3 } from \"three\";\r\n\r\nconst debug = getParam(\"debugLODs\");\r\nconst noLods = getParam(\"noLODs\");\r\n\r\nenum LODFadeMode {\r\n    None = 0,\r\n    CrossFade = 1,\r\n    SpeedTree = 2,\r\n}\r\n\r\nexport class LODModel {\r\n    @serializable()\r\n    screenRelativeTransitionHeight!: number;\r\n    @serializable()\r\n    distance!: number;\r\n    @serializable()\r\n    renderers!: string[];\r\n}\r\n\r\nclass LOD {\r\n    model: LODModel;\r\n    renderers: Renderer[];\r\n\r\n    constructor(group: LODGroup, model: LODModel) {\r\n        this.model = model;\r\n        this.renderers = [];\r\n        for (const guid of model.renderers) {\r\n            const rend = this.findRenderer(guid, group.gameObject as GameObject);// GameObject.findByGuid(guid, group.gameObject) as Renderer;\r\n            if (rend && rend.gameObject) {\r\n                this.renderers.push(rend);\r\n            }\r\n            else if(debug){\r\n                console.warn(\"Renderer not found: \" + guid, group.gameObject);\r\n            }\r\n        }\r\n    }\r\n\r\n    findRenderer(guid: string, go : GameObject) : Renderer | null {\r\n        const res = GameObject.foreachComponent(go, comp => {\r\n            if(comp.guid === guid) return comp;\r\n            // explanation: https://github.com/needle-tools/needle-tiny-playground/issues/218#issuecomment-1150234346\r\n            const prototypeGuid = Object.getPrototypeOf(comp)?.guid;\r\n            if(prototypeGuid === guid) return comp;\r\n            return null;\r\n        });\r\n        if(res) return res;\r\n        for(const ch of go.children){\r\n            const rend = this.findRenderer(guid, ch as GameObject);\r\n            if(rend) return rend;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\ndeclare class LODSetting {\r\n    lod: THREE.LOD;\r\n    levelIndex: number;\r\n    distance: number;\r\n}\r\n\r\nexport class LODGroup extends Behaviour {\r\n\r\n    fadeMode: LODFadeMode = LODFadeMode.None;\r\n    @serializable(Vector3)\r\n    localReferencePoint: THREE.Vector3 | undefined = undefined;\r\n    lodCount: number = 0;\r\n    size: number = 0;\r\n    animateCrossFading: boolean = false;\r\n\r\n    @serializable(LODModel)\r\n    lodModels?: LODModel[];\r\n\r\n    private _lods: LOD[] = [];\r\n    private _settings: LODSetting[] = [];\r\n\r\n    // https://threejs.org/docs/#api/en/objects/LOD\r\n    private _lodsHandler?: Array<THREE.LOD>;\r\n\r\n    start(): void {\r\n        if (noLods) return;\r\n        if (this._lodsHandler) return;\r\n        if (!this.gameObject) return;\r\n        if (debug)\r\n            console.log(this);\r\n\r\n        if (this.lodModels && Array.isArray(this.lodModels)) {\r\n            let maxDistance = 0;\r\n            let renderers: Renderer[] = [];\r\n            for (const model of this.lodModels) {\r\n                maxDistance = Math.max(model.distance, maxDistance);\r\n                const lod = new LOD(this, model);\r\n                this._lods.push(lod);\r\n                for (const rend of lod.renderers) {\r\n                    if (!renderers.includes(rend))\r\n                        renderers.push(rend);\r\n                }\r\n            }\r\n            this._lodsHandler = new Array<THREE.LOD>();\r\n            for (let i = 0; i < renderers.length; i++) {\r\n                const handler = new THREE.LOD();\r\n                this._lodsHandler.push(handler);\r\n                this.gameObject.add(handler);\r\n            }\r\n            const empty = new THREE.Object3D();\r\n            if (debug)\r\n                console.log(renderers);\r\n            for (let i = 0; i < renderers.length; i++) {\r\n                const rend = renderers[i];\r\n                const handler = this._lodsHandler[i];\r\n                const obj = rend.gameObject;\r\n                let maxDistance = 0;\r\n                let lodDistanceDiff = 0;\r\n                if (debug)\r\n                    console.log(i, obj.name);\r\n                for (const lod of this._lods) {\r\n\r\n                    // get object to be lodded, it can be empty\r\n                    let object: THREE.Object3D | null = null;\r\n                    if (lod.renderers.includes(rend)) object = obj;\r\n                    else {\r\n                        object = empty;\r\n                    }\r\n                    if (debug)\r\n                        console.log(\"add\", lod.model.distance, object.name);\r\n\r\n                    const dist = lod.model.distance;\r\n                    lodDistanceDiff = dist - maxDistance;\r\n                    maxDistance = Math.max(dist, maxDistance);\r\n                    this.onAddLodLevel(handler, object, dist);\r\n                }\r\n                const cullDistance = maxDistance + lodDistanceDiff;\r\n                if (debug) {\r\n                    console.log(\"cull\", cullDistance);\r\n                }\r\n                this.onAddLodLevel(handler, empty, cullDistance);\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (!this.gameObject) return;\r\n        if (!this._lodsHandler) return;\r\n        const cam = this.context.mainCamera;\r\n        if (!cam) return;\r\n\r\n        for (const h of this._lodsHandler) {\r\n            h.update(cam);\r\n        }\r\n    }\r\n\r\n    private onAddLodLevel(lod: THREE.LOD, obj: THREE.Object3D, dist: number) {\r\n        lod.addLevel(obj, dist * this._distanceFactor);\r\n        const setting = { lod: lod, levelIndex: lod.levels.length - 1, distance: dist };\r\n        this._settings.push(setting)\r\n    }\r\n\r\n    private _distanceFactor = 1;\r\n\r\n    distanceFactor(factor: number) {\r\n        if (factor === this._distanceFactor) return;\r\n        this._distanceFactor = factor;\r\n        for (const setting of this._settings) {\r\n            const level = setting.lod.levels[setting.levelIndex];\r\n            level.distance = setting.distance * factor;\r\n        }\r\n    }\r\n}", "import { getParam } from \"../engine/engine_utils\";\r\nimport { Behaviour } from \"../engine-components/Component\";\r\nimport { AssetReference, ProgressCallback } from \"../engine/engine_addressables\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { InstantiateIdProvider } from \"../engine/engine_networking_instantiate\";\r\nimport { InstantiateOptions } from \"../engine/engine_gameobject\";\r\n\r\nconst debug = getParam(\"debugnestedgltf\");\r\n\r\nexport class NestedGltf extends Behaviour {\r\n    @serializable(AssetReference)\r\n    filePath?: AssetReference;\r\n\r\n    private _isLoadingOrDoneLoading: boolean = false;\r\n\r\n    listenToProgress(evt: ProgressCallback) {\r\n        this.filePath?.beginListenDownload(evt)\r\n    }\r\n\r\n    preload() {\r\n        this.filePath?.preload();\r\n    }\r\n\r\n    async start() {\r\n        if (this._isLoadingOrDoneLoading) return;\r\n        if (debug) console.log(this, this.guid);\r\n\r\n        const parent = this.gameObject.parent;\r\n        if (parent) {\r\n            this._isLoadingOrDoneLoading = true;\r\n            const opts = new InstantiateOptions();\r\n            // we need to provide stable guids for creating nested gltfs\r\n            opts.idProvider = new InstantiateIdProvider(this.hash(this.guid));\r\n            opts.parent = parent;\r\n            this.gameObject.updateMatrix();\r\n            const matrix = this.gameObject.matrix;\r\n            if (debug) console.log(\"Load nested:\", this.filePath?.uri ?? this.filePath, this.gameObject.position)\r\n            const res = await this.filePath?.instantiate?.call(this.filePath, opts);\r\n            if (res) {\r\n                res.matrixAutoUpdate = false;\r\n                res.matrix.identity();\r\n                res.applyMatrix4(matrix);\r\n                res.matrixAutoUpdate = true;\r\n                res.layers.disableAll();\r\n                res.layers.set(this.layer);\r\n            }\r\n            this.destroy();\r\n            if (debug) console.log(\"Nested loading done:\", this.filePath?.uri ?? this.filePath, res);\r\n        }\r\n    }\r\n\r\n    hash(str: string): number {\r\n        let hash = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n        return hash;\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as utils from \"./../engine/engine_three_utils\";\r\nimport { Quaternion, Euler, Vector3, Plane } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\nexport class OffsetConstraint extends Behaviour {\r\n\r\n    @serializable(GameObject)\r\n    private referenceSpace: GameObject | undefined;\r\n\r\n    @serializable(GameObject)\r\n    private from: GameObject | undefined;\r\n\r\n    private affectPosition: boolean = false;\r\n    private affectRotation: boolean = false;\r\n    private alignLookDirection: boolean = false;\r\n    private levelLookDirection: boolean = false;\r\n    private levelPosition: boolean = false;\r\n    \r\n    @serializable(Vector3)\r\n    private positionOffset: Vector3 = new Vector3(0,0,0);\r\n    @serializable(Vector3)\r\n    private rotationOffset: Vector3 = new Vector3(0,0,0); \r\n\r\n    private offset: Vector3 = new Vector3(0,0,0);\r\n\r\n    update() {\r\n        if (!this.from) return;\r\n\r\n        var pos = utils.getWorldPosition(this.from);\r\n        var rot: Quaternion = utils.getWorldQuaternion(this.from);\r\n        \r\n        this.offset.copy(this.positionOffset);\r\n        const l = this.offset.length();\r\n        if (this.referenceSpace)\r\n            this.offset.transformDirection(this.referenceSpace.matrixWorld).multiplyScalar(l);\r\n        \r\n        pos.add(this.offset);\r\n\r\n        if (this.levelPosition && this.referenceSpace) {\r\n            const plane = new Plane(this.gameObject.up, 0);\r\n            const refSpacePoint = utils.getWorldPosition(this.referenceSpace);\r\n            plane.setFromNormalAndCoplanarPoint(this.gameObject.up, refSpacePoint);\r\n            const v2 = new Vector3(0,0,0);\r\n            plane.projectPoint(pos, v2);\r\n            pos.copy(v2);\r\n        }\r\n\r\n        if (this.affectPosition) utils.setWorldPosition(this.gameObject, pos);\r\n        \r\n        const euler = new Euler(this.rotationOffset.x, this.rotationOffset.y, this.rotationOffset.z);\r\n        const quat = new Quaternion().setFromEuler(euler);\r\n        if(this.affectRotation) utils.setWorldQuaternion(this.gameObject, rot.multiply(quat));\r\n\r\n        let lookDirection = new Vector3();\r\n        this.from.getWorldDirection(lookDirection).multiplyScalar(50);\r\n        if (this.levelLookDirection) lookDirection.y = 0;\r\n        if (this.alignLookDirection) this.gameObject.lookAt(lookDirection);\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { MainModule, EmissionModule, ShapeModule, ParticleSystemShapeType, MinMaxCurve, MinMaxGradient, ColorOverLifetimeModule, SizeOverLifetimeModule, NoiseModule, ParticleSystemSimulationSpace, ParticleBurst, IParticleSystem, ParticleSystemRenderMode, TrailModule, VelocityOverLifetimeModule, TextureSheetAnimationModule, RotationOverLifetimeModule, LimitVelocityOverLifetimeModule, RotationBySpeedModule, InheritVelocityModule, SizeBySpeedModule, ColorBySpeedModule } from \"./ParticleSystemModules\"\r\nimport { getParam } from \"../engine/engine_utils\";\r\n\r\n// https://github.dev/creativelifeform/three-nebula\r\n// import System, { Emitter, Position, Life, SpriteRenderer, Particle, Body, MeshRenderer, } from 'three-nebula';\r\n\r\nimport { serializable } from \"../engine/engine_serialization\";\r\nimport { RGBAColor } from \"./js-extensions/RGBAColor\";\r\nimport { AxesHelper, BufferGeometry, Color, Material, Matrix4, Mesh, MeshStandardMaterial, Object3D, OneMinusDstAlphaFactor, Quaternion, Sprite, SpriteMaterial, Vector3, Vector4 } from \"three\";\r\nimport { getWorldPosition, getWorldQuaternion, getWorldScale } from \"../engine/engine_three_utils\";\r\nimport { assign, deserializeObject } from \"../engine/engine_serialization_core\";\r\nimport { BatchedParticleRenderer, Behavior, BillBoardSettings, BurstParameters, ColorGenerator, ConstantColor, ConstantValue, EmissionState, EmitSubParticleSystem, EmitterShape, FunctionColorGenerator, FunctionJSON, FunctionValueGenerator, IntervalValue, MeshSettings, Particle, ParticleEmitter, ParticleSystem as _ParticleSystem, ParticleSystemParameters, PointEmitter, RecordState, RenderMode, RotationGenerator, SizeOverLife, TrailBatch, TrailParticle, TrailSettings, ValueGenerator } from \"three.quarks\";\r\nimport { createFlatTexture } from \"../engine/engine_shaders\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { ParticleSubEmitter } from \"./ParticleSystemSubEmitter\";\r\n\r\nconst debug = getParam(\"debugparticles\");\r\n\r\n\r\n\r\nexport class SubEmitterSystem {\r\n\r\n    particleSystem?: ParticleSystem;\r\n\r\n    _deserialize(context: Context) {\r\n        const ps = this.particleSystem;\r\n        if (ps && !(ps instanceof ParticleSystem) && typeof ps[\"guid\"] === \"string\") {\r\n            if (debug) console.log(\"DESERIALIZE SUBEMITTER\", ps);\r\n            this.particleSystem = undefined;\r\n            this.particleSystem = GameObject.findByGuid(ps[\"guid\"], context.scene) as ParticleSystem;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class ParticleSystemRenderer extends Behaviour {\r\n\r\n    @serializable()\r\n    renderMode?: ParticleSystemRenderMode;\r\n\r\n    @serializable(Material)\r\n    particleMaterial?: SpriteMaterial;\r\n\r\n    @serializable(Material)\r\n    trailMaterial?: SpriteMaterial;\r\n\r\n    // @serializable(Mesh)\r\n    particleMesh?: Mesh | string;\r\n\r\n    get transparent(): boolean {\r\n        const res = this.particleMaterial?.transparent ?? false;\r\n        // console.log(res, this.particleMaterial);\r\n        return res;\r\n    }\r\n\r\n    getMaterial(trailEnabled: boolean = false) {\r\n        if (trailEnabled === true && this.trailMaterial) return this.trailMaterial;\r\n        return this.particleMaterial;\r\n    }\r\n\r\n    getMesh() {\r\n        let geo: BufferGeometry | null = null;\r\n        if (this.particleMesh instanceof Mesh) {\r\n            geo = this.particleMesh.geometry;\r\n        }\r\n        if (geo === null) geo = new THREE.BoxGeometry(1, 1, 1);\r\n        const res = new Mesh(geo, this.getMaterial());\r\n        return res;\r\n    }\r\n}\r\n\r\nclass MinMaxCurveFunction implements FunctionValueGenerator {\r\n\r\n    private _curve: MinMaxCurve;\r\n\r\n    constructor(curve: MinMaxCurve) { this._curve = curve; }\r\n\r\n    type: \"function\" = \"function\";\r\n\r\n    genValue(t: number): number {\r\n        return this._curve.evaluate(t, Math.random());\r\n    }\r\n    toJSON(): FunctionJSON {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    clone(): FunctionValueGenerator {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nclass MinMaxGradientFunction implements FunctionColorGenerator {\r\n\r\n    private _curve: MinMaxGradient;\r\n\r\n    constructor(curve: MinMaxGradient) { this._curve = curve; }\r\n\r\n    type: \"function\" = \"function\";\r\n\r\n    genColor(color: THREE.Vector4, t: number): THREE.Vector4 {\r\n        const col = this._curve.evaluate(t, Math.random());\r\n        // TODO: incoming color should probably be blended?\r\n        color.set(col.r, col.g, col.b, col.alpha);\r\n        return color;\r\n    }\r\n    toJSON(): FunctionJSON {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    clone(): FunctionColorGenerator {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}\r\n\r\nabstract class BaseValueGenerator implements ValueGenerator {\r\n\r\n    type: \"value\" = \"value\";\r\n    toJSON(): FunctionJSON {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    clone(): ValueGenerator {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    abstract genValue(): number;\r\n\r\n    readonly system: ParticleSystem;\r\n\r\n    constructor(system: ParticleSystem) {\r\n        this.system = system;\r\n    }\r\n}\r\n\r\nclass TextureSheetStartFrameGenerator extends BaseValueGenerator {\r\n    genValue(): number {\r\n        return this.system.textureSheetAnimation.getStartIndex();\r\n    }\r\n\r\n}\r\n\r\nclass ParticleSystemEmissionOverTime extends BaseValueGenerator {\r\n\r\n    private _lastPosition: Vector3 = new Vector3();\r\n    private _lastDistance: number = 0;\r\n\r\n    update() {\r\n        const currentPosition = getWorldPosition(this.system.gameObject);\r\n        this._lastDistance = this._lastPosition.distanceTo(currentPosition)\r\n        this._lastPosition.copy(currentPosition);\r\n    }\r\n\r\n    genValue(): number {\r\n        if (this.system.currentParticles >= this.system.maxParticles) return 0;\r\n        // emission over time\r\n        let emission = this.system.emission.rateOverTime.evaluate(this.system.time / this.system.duration, Math.random());\r\n        // if(this.system.currentParticles + emission > this.system.maxParticles) \r\n        //     emission = (this.system.maxParticles - this.system.currentParticles);\r\n        // const res = Mathf.clamp(emission, 0, this.system.maxParticles - this.system.currentParticles);\r\n\r\n        if (this.system.deltaTime > 0) {\r\n            const distanceEmission = this.system.emission.rateOverDistance.evaluate(this.system.time / this.system.duration, Math.random());\r\n            const meterPerSecond = this._lastDistance / this.system.deltaTime;\r\n            let distanceEmissionValue = meterPerSecond * distanceEmission;\r\n            if (!Number.isFinite(distanceEmissionValue)) distanceEmissionValue = 0;\r\n            emission += distanceEmissionValue;\r\n        }\r\n        const burst = this.system.emission.getBurst();\r\n        if (burst > 0)\r\n            emission += burst / this.system.deltaTime;\r\n\r\n        const maxEmission = (this.system.maxParticles - this.system.currentParticles);\r\n        return Mathf.clamp(emission, 0, maxEmission / this.system.deltaTime);\r\n    }\r\n}\r\n\r\nclass ParticleSystemEmissionOverDistance extends BaseValueGenerator {\r\n\r\n    genValue(): number {\r\n        // this seems not be called yet\r\n        return 0;\r\n        // if (this.system.currentParticles >= this.system.maxParticles) return 0;\r\n        // const emission = this.system.emission.rateOverDistance.evaluate(this.system.time / this.system.duration, Math.random());\r\n        // return emission;\r\n    }\r\n}\r\n\r\nabstract class ParticleSystemBaseBehaviour implements Behavior {\r\n    readonly system: ParticleSystem;\r\n\r\n    get scaleFactorDiff(): number {\r\n        return this.system.worldScale.x - this.system.scale;\r\n    }\r\n\r\n    constructor(ps: ParticleSystem) {\r\n        this.system = ps;\r\n    }\r\n\r\n    abstract type: string;\r\n\r\n    initialize(_particle: Particle): void {\r\n    }\r\n    update(_particle: Particle, _delta: number): void {\r\n    }\r\n    frameUpdate(_delta: number): void {\r\n    }\r\n    toJSON() { throw new Error(\"Method not implemented.\"); }\r\n    clone(): Behavior { throw new Error(\"Method not implemented.\"); }\r\n}\r\n\r\nclass TextureSheetAnimationBehaviour extends ParticleSystemBaseBehaviour {\r\n    type: string = \"NeedleTextureSheet\"\r\n\r\n    update(particle: Particle, _delta: number) {\r\n        const sheet = this.system.textureSheetAnimation;\r\n        if (sheet.enabled) {\r\n            const t01 = particle.age / particle.life;\r\n            const index = sheet.evaluate(t01);;\r\n            if (index !== undefined)\r\n                particle.uvTile = index;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass RotationBehaviour extends ParticleSystemBaseBehaviour {\r\n    type: string = \"NeedleRotation\"\r\n\r\n    update(particle: Particle, delta: number) {\r\n        if (particle.rotation === undefined) return;\r\n\r\n        const t = particle.age / particle.life;\r\n\r\n        if (typeof particle.rotation === \"number\") {\r\n            if (this.system.rotationOverLifetime.enabled) {\r\n                particle.rotation += this.system.rotationOverLifetime.evaluate(t) * delta;\r\n            }\r\n            else {\r\n                if (this.system.renderer.renderMode === ParticleSystemRenderMode.Billboard)\r\n                    particle.rotation = Math.PI;\r\n            }\r\n\r\n            if (this.system.rotationBySpeed.enabled) {\r\n                const speed = particle.velocity.length();\r\n                particle.rotation += this.system.rotationBySpeed.evaluate(t, speed) * delta;\r\n            }\r\n        }\r\n        else {\r\n            // const quat = particle.rotation as Quaternion;\r\n            // TODO: implement rotation by speed for quaternions\r\n        }\r\n    }\r\n}\r\n\r\nconst $sizeLerpFactor = Symbol(\"sizeLerpFactor\");\r\nclass SizeBehaviour extends ParticleSystemBaseBehaviour {\r\n\r\n    type: string = \"NeedleSize\";\r\n\r\n    initialize(particle: Particle) {\r\n        particle[$sizeLerpFactor] = Math.random();\r\n    }\r\n\r\n    update(particle: Particle, _delta: number): void {\r\n        if (this.system.renderer.renderMode === ParticleSystemRenderMode.Mesh) {\r\n\r\n        }\r\n        else {\r\n            const age01 = particle.age / particle.life;\r\n            let size = 1;\r\n            if (this.system.sizeOverLifetime.enabled)\r\n                size *= this.system.sizeOverLifetime.evaluate(age01, undefined, particle[$sizeLerpFactor]).x;\r\n            const scaleFactor = this.system.worldScale.x / this.system.cameraScale;\r\n            particle.size = particle.startSize * size * scaleFactor;\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst $particleLife = Symbol(\"particleLife\");\r\nconst $trailLifetime = Symbol(\"trailLifetime\");\r\nconst $trailStartLength = Symbol(\"trailStartLength\");\r\n\r\nclass TrailBehaviour extends ParticleSystemBaseBehaviour {\r\n    type: string = \"NeedleTrail\";\r\n\r\n    initialize(particle: Particle) {\r\n        if (particle instanceof TrailParticle) {\r\n            particle[$particleLife] = particle.life;\r\n            particle[$trailLifetime] = particle.life;\r\n            if (this.system.trails.enabled && this.system.trails.dieWithParticles === false) {\r\n                particle[$trailLifetime] = this.system.trails.lifetime.evaluate(Math.random(), Math.random());\r\n                particle.life += particle[$trailLifetime];\r\n            }\r\n            particle[$trailStartLength] = particle.length;\r\n        }\r\n\r\n    }\r\n\r\n    update(particle: Particle) {\r\n        if (this.system.trails?.enabled && particle instanceof TrailParticle) {\r\n            const trailParticle = particle as TrailParticle;\r\n            const age01 = particle.age / particle[$particleLife];\r\n            const iter = particle.previous.values();\r\n            const length = particle.previous.length;\r\n            // const maxAge = this.system.trails.lifetime.\r\n            for (let i = 0; i < length; i++) {\r\n                const cur = iter.next();\r\n                const state = cur.value as RecordState;\r\n                const pos01 = 1 - (i / (length - 1));\r\n                state.size = this.system.trails.getWidth(particle.size, age01, pos01);\r\n                state.color.copy(particle.color);\r\n                this.system.trails.getColor(state.color, age01, pos01);\r\n            }\r\n\r\n            // particle.life = particle.age + .1;\r\n            if (particle.age > particle[$particleLife]) {\r\n                particle.velocity.set(0, 0, 0);\r\n                const t = (particle.age - particle[$particleLife]) / particle[$trailLifetime];\r\n                trailParticle.length = Mathf.lerp(particle[$trailStartLength], 0, t);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst $startVelocity = Symbol(\"startVelocity\");\r\nconst $gravityFactor = Symbol(\"gravityModifier\");\r\nconst $velocityLerpFactor = Symbol(\"velocity lerp factor\");\r\nconst temp3 = new Vector3();\r\nconst temp4 = new Quaternion();\r\n\r\nclass VelocityBehaviour extends ParticleSystemBaseBehaviour {\r\n    type: string = \"NeedleVelocity\";\r\n\r\n    private _gravityDirection = new Vector3();\r\n\r\n    initialize(particle: Particle): void {\r\n        const factor = 1 + this.scaleFactorDiff;\r\n\r\n        particle.startSpeed = this.system.main.startSpeed.evaluate(Math.random(), Math.random()) * factor;\r\n        particle.velocity.copy(this.system.shape.getDirection(particle.position)).multiplyScalar(particle.startSpeed);\r\n        if (this.system.inheritVelocity?.enabled) {\r\n            this.system.inheritVelocity.applyInitial(particle.velocity);\r\n        }\r\n        if (!particle[$startVelocity]) particle[$startVelocity] = particle.velocity.clone();\r\n        else particle[$startVelocity].copy(particle.velocity);\r\n\r\n        const gravityFactor = this.system.main.gravityModifier.evaluate(Math.random(), Math.random()) / (9.81 * 2);\r\n        particle[$gravityFactor] = gravityFactor;\r\n\r\n        particle[$velocityLerpFactor] = Math.random();\r\n\r\n        this._gravityDirection.set(0, -1, 0);\r\n        if (this.system.main.simulationSpace === ParticleSystemSimulationSpace.Local)\r\n            this._gravityDirection.applyQuaternion(this.system.worldQuaternionInverted);\r\n    }\r\n\r\n    update(particle: Particle, delta: number): void {\r\n\r\n        //////////////////////\r\n        // calculate speed\r\n        const baseVelocity = particle[$startVelocity];\r\n        let gravityFactor = particle[$gravityFactor];\r\n        if (gravityFactor !== 0) {\r\n            // gravityFactor *= -1;\r\n            temp3.copy(this._gravityDirection).multiplyScalar(gravityFactor);\r\n            // Gizmos.DrawDirection(particle.position, temp3, 0xff0000, 0, false, 10);\r\n            baseVelocity.add(temp3);\r\n        }\r\n        particle.velocity.copy(baseVelocity);\r\n\r\n        const t01 = particle.age / particle.life;\r\n\r\n        if (this.system.inheritVelocity?.enabled) {\r\n            this.system.inheritVelocity.applyCurrent(particle.velocity, t01, particle[$velocityLerpFactor]);\r\n        }\r\n\r\n\r\n        const noise = this.system.noise;\r\n        if (noise.enabled) {\r\n            noise.apply(0, particle.position, particle.velocity, delta, particle.age, particle.life);\r\n        }\r\n\r\n        //////////////////////\r\n        // evaluate by speed modules\r\n        const sizeBySpeed = this.system.sizeBySpeed;\r\n        if (sizeBySpeed?.enabled) {\r\n            particle.size = sizeBySpeed.evaluate(particle.velocity, t01, particle[$velocityLerpFactor], particle.size);\r\n        }\r\n\r\n        const colorBySpeed = this.system.colorBySpeed;\r\n        if (colorBySpeed?.enabled) {\r\n            colorBySpeed.evaluate(particle.velocity, particle[$velocityLerpFactor], particle.color);\r\n        }\r\n\r\n        //////////////////////\r\n        // limit or modify speed\r\n        const velocity = this.system.velocityOverLifetime;\r\n        if (velocity.enabled) {\r\n            velocity.apply(0, particle.position, particle.velocity, delta, particle.age, particle.life);\r\n        }\r\n\r\n        const limitVelocityOverLifetime = this.system.limitVelocityOverLifetime;\r\n        if (limitVelocityOverLifetime.enabled) {\r\n            // const factor = this.system.worldScale.x;\r\n            limitVelocityOverLifetime.apply(particle.position, baseVelocity, particle.velocity, particle.size, t01, delta, 1);\r\n        }\r\n    }\r\n}\r\n\r\nconst $colorLerpFactor = Symbol(\"colorLerpFactor\");\r\nclass ColorBehaviour extends ParticleSystemBaseBehaviour {\r\n    type: string = \"NeedleColor\";\r\n\r\n    initialize(particle: Particle): void {\r\n        const col = this.system.main.startColor.evaluate(particle.age / particle.life, Math.random());\r\n        particle.startColor.set(col.r, col.g, col.b, col.alpha);\r\n        particle.color.copy(particle.startColor);\r\n        particle[$colorLerpFactor] = Math.random();\r\n    }\r\n\r\n    update(particle: Particle, _delta: number): void {\r\n        if (this.system.colorOverLifetime.enabled) {\r\n            const t = particle.age / particle.life;\r\n            const col = this.system.colorOverLifetime.color.evaluate(t, particle[$colorLerpFactor]);\r\n            particle.color.set(col.r, col.g, col.b, col.alpha).multiply(particle.startColor);\r\n        }\r\n        else {\r\n            particle.color.copy(particle.startColor);\r\n        }\r\n    }\r\n}\r\n\r\nclass ParticleSystemInterface implements ParticleSystemParameters {\r\n\r\n    private readonly system: ParticleSystem;\r\n    private readonly emission: ParticleSystemEmissionOverTime;\r\n    private get anim(): TextureSheetAnimationModule {\r\n        return this.system.textureSheetAnimation;\r\n    }\r\n\r\n    constructor(system: ParticleSystem) {\r\n        this.system = system;\r\n        this.emission = new ParticleSystemEmissionOverTime(this.system);\r\n    }\r\n\r\n    update() {\r\n        this.emission.update();\r\n    }\r\n\r\n    autoDestroy?: boolean | undefined;\r\n    get looping() { return this.system.main.loop; }\r\n    get duration() { return this.system.duration; }\r\n    get shape(): EmitterShape { return this.system.shape; }\r\n    get startLife() { return new MinMaxCurveFunction(this.system.main.startLifetime); }\r\n    get startSpeed() { return new MinMaxCurveFunction(this.system.main.startSpeed); }\r\n    get startRotation() { return new MinMaxCurveFunction(this.system.main.startRotation); }\r\n    get startSize() { return new MinMaxCurveFunction(this.system.main.startSize); }\r\n    startLength?: ValueGenerator | FunctionValueGenerator | undefined; /** start length is for trails */\r\n    get startColor() { return new ConstantColor(new Vector4(1, 1, 1, 1)); }\r\n    get emissionOverTime() { return this.emission; }\r\n    /** this is not supported yet */\r\n    get emissionOverDistance() { return new ParticleSystemEmissionOverDistance(this.system); }\r\n    /** not used - burst is controled via emissionOverTime */\r\n    emissionBursts?: BurstParameters[] | undefined;\r\n    onlyUsedByOther?: boolean | undefined;\r\n    readonly behaviors: Behavior[] = [];\r\n    get instancingGeometry() {\r\n        return this.system.renderer.getMesh().geometry;\r\n    }\r\n    get renderMode() {\r\n        if (this.system.trails[\"enabled\"] === true) {\r\n            return RenderMode.Trail;\r\n        }\r\n        switch (this.system.renderer.renderMode) {\r\n            case ParticleSystemRenderMode.Billboard: return RenderMode.BillBoard;\r\n            // case ParticleSystemRenderMode.Stretch: return RenderMode.Stretch;\r\n            // case ParticleSystemRenderMode.HorizontalBillboard: return RenderMode.HorizontalBillboard;\r\n            // case ParticleSystemRenderMode.VerticalBillboard: return RenderMode.VerticalBillboard;\r\n            case ParticleSystemRenderMode.Mesh: return RenderMode.LocalSpace;\r\n        }\r\n        return RenderMode.BillBoard;\r\n    }\r\n    rendererEmitterSettings: TrailSettings = {\r\n        startLength: new ConstantValue(220),\r\n        followLocalOrigin: false,\r\n    };\r\n    get speedFactor() { return this.system.main.simulationSpeed; }\r\n    get texture(): THREE.Texture {\r\n        const mat = this.system.renderer.getMaterial(this.system.trails.enabled);\r\n        if (mat && mat[\"map\"]) {\r\n            const tex = mat[\"map\"]!;\r\n            tex.premultiplyAlpha = false;\r\n            tex.encoding = THREE.LinearEncoding;\r\n            return tex;\r\n        }\r\n        return createFlatTexture(new RGBAColor(1, 1, 1, 1), 1)\r\n    }\r\n    get startTileIndex() { return new TextureSheetStartFrameGenerator(this.system); }\r\n    get uTileCount() { return this.anim.enabled ? this.anim?.numTilesX : undefined }\r\n    get vTileCount() { return this.anim.enabled ? this.anim?.numTilesY : undefined }\r\n    get renderOrder() { return 1; }\r\n    get blending(): THREE.Blending { return this.system.renderer.particleMaterial?.blending ?? THREE.NormalBlending; }\r\n    get transparent() { return this.system.renderer.transparent; }\r\n    get worldSpace() { return this.system.main.simulationSpace === ParticleSystemSimulationSpace.World; }\r\n\r\n}\r\n\r\nclass ParticlesEmissionState implements EmissionState {\r\n\r\n    burstIndex: number = 0;\r\n    burstWaveIndex: number = 0;\r\n    time: number = 0;\r\n    waitEmiting: number = 0;\r\n}\r\n\r\nexport class ParticleSystem extends Behaviour implements IParticleSystem {\r\n\r\n    play(includeChildren: boolean = false) {\r\n        if (includeChildren) {\r\n            GameObject.foreachComponent(this.gameObject, comp => {\r\n                if (comp instanceof ParticleSystem && comp !== this) {\r\n                    comp.play(false);\r\n                }\r\n            }, true)\r\n        }\r\n        this._isPlaying = true;\r\n        this._time = 0;\r\n\r\n        // https://github.com/Alchemist0823/three.quarks/pull/35\r\n        if (this._particleSystem) {\r\n            this._particleSystem[\"emissionState\"].time = 0;\r\n            this._particleSystem[\"emitEnded\"] = false;\r\n        }\r\n        this.emission?.reset();\r\n    }\r\n\r\n    pause() {\r\n        this._isPlaying = false;\r\n    }\r\n    stop() {\r\n        this._isPlaying = false;\r\n        this._time = 0;\r\n    }\r\n\r\n    private _state?: ParticlesEmissionState;\r\n    emit(count: number) {\r\n        if (this._particleSystem) {\r\n            count = Math.min(count, this.maxParticles - this.currentParticles);\r\n            if (!this._state) this._state = new ParticlesEmissionState();\r\n            this._state.waitEmiting = count;\r\n            this._state.time = 0;\r\n            const emitEndedState = this._particleSystem[\"emitEnded\"];\r\n            this._particleSystem[\"emitEnded\"] = false;\r\n            this._particleSystem.emit(this.deltaTime, this._state, this._particleSystem.emitter.matrixWorld);\r\n            this._particleSystem[\"emitEnded\"] = emitEndedState;\r\n        }\r\n    }\r\n\r\n    @serializable(ColorOverLifetimeModule)\r\n    readonly colorOverLifetime!: ColorOverLifetimeModule;\r\n\r\n    @serializable(MainModule)\r\n    readonly main!: MainModule;\r\n\r\n    @serializable(EmissionModule)\r\n    readonly emission!: EmissionModule;\r\n\r\n    @serializable(SizeOverLifetimeModule)\r\n    readonly sizeOverLifetime!: SizeOverLifetimeModule;\r\n\r\n    @serializable(ShapeModule)\r\n    readonly shape!: ShapeModule;\r\n\r\n    @serializable(NoiseModule)\r\n    readonly noise!: NoiseModule;\r\n\r\n    @serializable(TrailModule)\r\n    readonly trails!: TrailModule;\r\n\r\n    @serializable(VelocityOverLifetimeModule)\r\n    readonly velocityOverLifetime!: VelocityOverLifetimeModule;\r\n\r\n    @serializable(LimitVelocityOverLifetimeModule)\r\n    readonly limitVelocityOverLifetime!: LimitVelocityOverLifetimeModule;\r\n\r\n    @serializable(InheritVelocityModule)\r\n    readonly inheritVelocity!: InheritVelocityModule;\r\n\r\n    @serializable(ColorBySpeedModule)\r\n    readonly colorBySpeed!: ColorBySpeedModule;\r\n\r\n    @serializable(TextureSheetAnimationModule)\r\n    readonly textureSheetAnimation!: TextureSheetAnimationModule;\r\n\r\n    @serializable(RotationOverLifetimeModule)\r\n    readonly rotationOverLifetime!: RotationOverLifetimeModule;\r\n\r\n    @serializable(RotationBySpeedModule)\r\n    readonly rotationBySpeed!: RotationBySpeedModule;\r\n\r\n    @serializable(SizeBySpeedModule)\r\n    readonly sizeBySpeed!: SizeBySpeedModule;\r\n\r\n    get renderer(): ParticleSystemRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    get isPlaying() { return this._isPlaying; }\r\n\r\n    get currentParticles() {\r\n        return this._particleSystem?.particleNum ?? 0;\r\n    }\r\n    get maxParticles() {\r\n        return this.main.maxParticles;\r\n    }\r\n    get time() {\r\n        return this._time;\r\n    }\r\n    get duration() {\r\n        return this.main.duration;\r\n    }\r\n    get deltaTime() {\r\n        return this.context.time.deltaTime * this.main.simulationSpeed;\r\n    }\r\n    get scale() {\r\n        return this.gameObject.scale.x;\r\n    }\r\n    get cameraScale(): number {\r\n        return this._cameraScale;\r\n    }\r\n    private _cameraScale: number = 1;\r\n\r\n    get container(): Object3D {\r\n        return this._container!;\r\n    }\r\n\r\n    get worldspace() {\r\n        return this.main.simulationSpace === ParticleSystemSimulationSpace.World;\r\n    }\r\n\r\n    private __worldQuaternion = new Quaternion();\r\n    get worldQuaternion(): Quaternion {\r\n        return this.__worldQuaternion;\r\n    }\r\n    private _worldQuaternionInverted = new Quaternion();\r\n    get worldQuaternionInverted(): Quaternion {\r\n        return this._worldQuaternionInverted;\r\n    }\r\n    private _worldScale = new Vector3();\r\n    get worldScale(): Vector3 {\r\n        return this._worldScale;\r\n    }\r\n\r\n    private _worldPositionFrame: number = -1;\r\n    private _worldPos: Vector3 = new Vector3();\r\n    get worldPos(): Vector3 {\r\n        if (this._worldPositionFrame !== this.context.time.frame) {\r\n            this._worldPositionFrame = this.context.time.frame;\r\n            getWorldPosition(this.gameObject, this._worldPos);\r\n        }\r\n        return this._worldPos;\r\n    }\r\n\r\n    get matrixWorld(): Matrix4 {\r\n        return this._container.matrixWorld;\r\n    }\r\n\r\n    get isSubsystem() {\r\n        return this._isUsedAsSubsystem;\r\n    }\r\n\r\n    private _renderer!: ParticleSystemRenderer;\r\n    private _batchSystem?: BatchedParticleRenderer;\r\n    private _particleSystem?: _ParticleSystem;\r\n    private _interface!: ParticleSystemInterface;\r\n\r\n    // private _system!: System;\r\n    // private _emitter: Emitter;\r\n    // private _size!: SizeBehaviour;\r\n    private _container!: Object3D;\r\n    private _time: number = 0;\r\n    private _isPlaying: boolean = true;\r\n    private _isUsedAsSubsystem: boolean = false;\r\n\r\n    /** called from deserialization */\r\n    private set bursts(arr: ParticleBurst[]) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const burst = arr[i];\r\n            if ((burst instanceof ParticleBurst) === false) {\r\n                const instance = new ParticleBurst();\r\n                assign(instance, burst);\r\n                arr[i] = instance;\r\n            }\r\n        }\r\n        this._bursts = arr;\r\n    }\r\n    private _bursts?: ParticleBurst[];\r\n\r\n    /** called from deserialization */\r\n    private set subEmitterSystems(arr: SubEmitterSystem[]) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const sub = arr[i];\r\n            if ((sub instanceof SubEmitterSystem) === false) {\r\n                const instance = new SubEmitterSystem();\r\n                assign(instance, sub);\r\n                arr[i] = instance;\r\n            }\r\n        }\r\n        this._subEmitterSystems = arr;\r\n    }\r\n    private _subEmitterSystems?: SubEmitterSystem[];\r\n\r\n    awake(): void {\r\n\r\n        if (this._subEmitterSystems && Array.isArray(this._subEmitterSystems)) {\r\n            for (const sub of this._subEmitterSystems) {\r\n                sub._deserialize(this.context);\r\n            }\r\n        }\r\n\r\n        this._renderer = this.gameObject.getComponent(ParticleSystemRenderer) as ParticleSystemRenderer;\r\n\r\n        this._container = new Object3D();\r\n        this._container.matrixAutoUpdate = false;\r\n        if (this.main.simulationSpace == ParticleSystemSimulationSpace.Local) {\r\n            this.gameObject.add(this._container);\r\n        }\r\n        else {\r\n            this.context.scene.add(this._container);\r\n        }\r\n        // else this._container = this.context.scene;\r\n\r\n        this._batchSystem = new BatchedParticleRenderer();\r\n        this._batchSystem.name = this.gameObject.name;\r\n        this._container.add(this._batchSystem);\r\n        this._interface = new ParticleSystemInterface(this);\r\n        this._particleSystem = new _ParticleSystem(this._batchSystem, this._interface);\r\n        this._particleSystem.addBehavior(new SizeBehaviour(this));\r\n        this._particleSystem.addBehavior(new ColorBehaviour(this));\r\n        this._particleSystem.addBehavior(new TextureSheetAnimationBehaviour(this));\r\n        this._particleSystem.addBehavior(new RotationBehaviour(this));\r\n        this._particleSystem.addBehavior(new VelocityBehaviour(this));\r\n        this._particleSystem.addBehavior(new TrailBehaviour(this));\r\n\r\n        const emitter = this._particleSystem.emitter;\r\n        this.context.scene.add(emitter);\r\n\r\n        if (debug) {\r\n            console.log(this);\r\n            this.gameObject.add(new AxesHelper(1))\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.addSubParticleSystems();\r\n    }\r\n\r\n    onEnable() {\r\n        if (this.inheritVelocity)\r\n            this.inheritVelocity.system = this;\r\n        this.play();\r\n    }\r\n\r\n    onDisable() {\r\n    }\r\n\r\n    onBeforeRender() {\r\n        if (this._bursts) {\r\n            this.emission.bursts = this._bursts;\r\n            delete this._bursts;\r\n        }\r\n        if (!this._isPlaying) return;\r\n\r\n        // sprite materials must be scaled in AR\r\n        const cam = this.context.mainCamera;\r\n        if (cam) {\r\n            const scale = getWorldScale(cam);\r\n            this._cameraScale = scale.x;\r\n        }\r\n\r\n        let source = this._container;\r\n        if (this.worldspace)\r\n            source = this.gameObject;\r\n        getWorldQuaternion(source, this.__worldQuaternion)\r\n        this._worldQuaternionInverted.copy(this.__worldQuaternion).invert();\r\n        getWorldScale(this.gameObject, this._worldScale);\r\n\r\n        if (!this.worldspace && this._container && this.gameObject?.parent) {\r\n            const scale = getWorldScale(this.gameObject.parent);\r\n            scale.x = 1 / scale.x;\r\n            scale.y = 1 / scale.y;\r\n            scale.z = 1 / scale.z;\r\n            this._container.matrix.identity();\r\n            this._container.matrix.scale(scale);\r\n        }\r\n\r\n        this.emission.system = this;\r\n        const dt = this.deltaTime;\r\n        this._interface.update();\r\n        this.shape.update(this, this.context, this.main.simulationSpace, this.gameObject);\r\n        this.noise.update(this.context);\r\n        this.inheritVelocity?.update(this.context);\r\n        this.velocityOverLifetime.update(this);\r\n        this._batchSystem?.update(dt);\r\n        this._time += dt;\r\n        if (this._time > this.duration) this._time = 0;\r\n    }\r\n\r\n    private addSubParticleSystems() {\r\n        if (this._subEmitterSystems && this._particleSystem) {\r\n            for (const sys of this._subEmitterSystems) {\r\n                const system = sys.particleSystem?._particleSystem;\r\n                if (system) {\r\n                    sys.particleSystem!._isUsedAsSubsystem = true;\r\n                    // sys.particleSystem!.main.simulationSpace = ParticleSystemSimulationSpace.World;\r\n                    const sub = new ParticleSubEmitter(this, this._particleSystem, sys.particleSystem!, system);\r\n                    this._particleSystem.addBehavior(sub);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n", "import { Color, Matrix4, Object3D, PointLightShadow, Quaternion, Vector3, Vector2, Euler, Vector4, DirectionalLightHelper } from \"three\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { serializable } from \"../engine/engine_serialization\";\r\nimport { RGBAColor } from \"./js-extensions/RGBAColor\";\r\nimport { AnimationCurve } from \"./AnimationCurve\";\r\nimport { Vec2, Vec3 } from \"../engine/engine_types\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { EmitterShape, FrameOverLife, Particle, ShapeJSON } from \"three.quarks\";\r\n\r\ndeclare type Color4 = { r: number, g: number, b: number, a: number };\r\ndeclare type ColorKey = { time: number, color: Color4 };\r\ndeclare type AlphaKey = { time: number, alpha: number };\r\n\r\nexport interface IParticleSystem {\r\n    get currentParticles(): number;\r\n    get maxParticles(): number;\r\n    get time(): number;\r\n    get deltaTime(): number;\r\n    get duration(): number;\r\n    readonly main: MainModule;\r\n    get container(): Object3D;\r\n    get worldspace(): boolean;\r\n    get worldPos(): Vector3;\r\n    get worldQuaternion(): Quaternion;\r\n    get worldQuaternionInverted(): Quaternion;\r\n    get worldScale(): Vector3;\r\n    get matrixWorld(): Matrix4;\r\n}\r\n\r\n\r\nexport enum ParticleSystemRenderMode {\r\n    Billboard = 0,\r\n    //   Stretch = 1,\r\n    //   HorizontalBillboard = 2,\r\n    //   VerticalBillboard = 3,\r\n    Mesh = 4,\r\n    //   None = 5,\r\n}\r\n\r\n\r\nexport class Gradient {\r\n    @serializable()\r\n    alphaKeys!: Array<AlphaKey>;\r\n    @serializable()\r\n    colorKeys!: Array<ColorKey>;\r\n\r\n    get duration(): number {\r\n        return 1;\r\n    }\r\n\r\n    evaluate(time: number, target: RGBAColor) {\r\n\r\n        // target.r = this.colorKeys[0].color.r;\r\n        // target.g = this.colorKeys[0].color.g;\r\n        // target.b = this.colorKeys[0].color.b;\r\n        // target.alpha = this.alphaKeys[0].alpha;\r\n        // return;\r\n\r\n        let closestAlpha: AlphaKey | undefined = undefined;\r\n        let closestAlphaIndex = 0;\r\n        let closestColor: ColorKey | null = null;\r\n        let closestColorIndex = 0;\r\n        for (let i = 0; i < this.alphaKeys.length; i++) {\r\n            const key = this.alphaKeys[i];\r\n            if (key.time < time || !closestAlpha) {\r\n                closestAlpha = key;\r\n                closestAlphaIndex = i;\r\n            }\r\n        }\r\n        for (let i = 0; i < this.colorKeys.length; i++) {\r\n            const key = this.colorKeys[i];\r\n            if (key.time < time || !closestColor) {\r\n                closestColor = key;\r\n                closestColorIndex = i;\r\n            }\r\n        }\r\n        if (closestColor) {\r\n            const hasNextColor = closestColorIndex + 1 < this.colorKeys.length;\r\n            if (hasNextColor) {\r\n                const nextColor = this.colorKeys[closestColorIndex + 1];\r\n                const t = Mathf.remap(time, closestColor.time, nextColor.time, 0, 1);\r\n                target.r = Mathf.lerp(closestColor.color.r, nextColor.color.r, t);\r\n                target.g = Mathf.lerp(closestColor.color.g, nextColor.color.g, t);\r\n                target.b = Mathf.lerp(closestColor.color.b, nextColor.color.b, t);\r\n            }\r\n            else {\r\n                target.r = closestColor.color.r;\r\n                target.g = closestColor.color.g;\r\n                target.b = closestColor.color.b;\r\n            }\r\n        }\r\n        if (closestAlpha) {\r\n            const hasNextAlpha = closestAlphaIndex + 1 < this.alphaKeys.length;\r\n            if (hasNextAlpha) {\r\n                const nextAlpha = this.alphaKeys[closestAlphaIndex + 1];\r\n                const t = Mathf.remap(time, closestAlpha.time, nextAlpha.time, 0, 1);\r\n                target.alpha = Mathf.lerp(closestAlpha.alpha, nextAlpha.alpha, t);\r\n            }\r\n            else {\r\n                target.alpha = closestAlpha.alpha;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\r\n\r\nexport enum ParticleSystemCurveMode {\r\n    Constant = 0,\r\n    Curve = 1,\r\n    TwoCurves = 2,\r\n    TwoConstants = 3\r\n}\r\n\r\nexport enum ParticleSystemGradientMode {\r\n    Color = 0,\r\n    Gradient = 1,\r\n    TwoColors = 2,\r\n    TwoGradients = 3,\r\n    RandomColor = 4,\r\n}\r\n\r\nexport enum ParticleSystemSimulationSpace {\r\n    Local = 0,\r\n    World = 1,\r\n    Custom = 2\r\n}\r\n\r\nexport enum ParticleSystemShapeType {\r\n    Sphere = 0,\r\n    SphereShell = 1,\r\n    Hemisphere = 2,\r\n    HemisphereShell = 3,\r\n    Cone = 4,\r\n    Box = 5,\r\n    Mesh = 6,\r\n    ConeShell = 7,\r\n    ConeVolume = 8,\r\n    ConeVolumeShell = 9,\r\n    Circle = 10,\r\n    CircleEdge = 11,\r\n    SingleSidedEdge = 12,\r\n    MeshRenderer = 13,\r\n    SkinnedMeshRenderer = 14,\r\n    BoxShell = 15,\r\n    BoxEdge = 16,\r\n    Donut = 17,\r\n    Rectangle = 18,\r\n    Sprite = 19,\r\n    SpriteRenderer = 20\r\n}\r\n\r\nexport enum ParticleSystemShapeMultiModeValue {\r\n    Random = 0,\r\n    Loop = 1,\r\n    PingPong = 2,\r\n    BurstSpread = 3,\r\n}\r\n\r\nexport class MinMaxCurve {\r\n    @serializable()\r\n    mode!: ParticleSystemCurveMode;\r\n    @serializable()\r\n    constant!: number;\r\n    @serializable()\r\n    constantMin!: number;\r\n    @serializable()\r\n    constantMax!: number;\r\n    @serializable(AnimationCurve)\r\n    curve?: AnimationCurve;\r\n    @serializable(AnimationCurve)\r\n    curveMin?: AnimationCurve;\r\n    @serializable(AnimationCurve)\r\n    curveMax?: AnimationCurve;\r\n    @serializable()\r\n    curveMultiplier?: number;\r\n\r\n    evaluate(t01: number, lerpFactor?: number): number {\r\n        const t = lerpFactor === undefined ? Math.random() : lerpFactor;\r\n        switch (this.mode) {\r\n            case ParticleSystemCurveMode.Constant:\r\n                return this.constant;\r\n            case ParticleSystemCurveMode.Curve:\r\n                t01 = Mathf.clamp01(t01);\r\n                return this.curve!.evaluate(t01) * this.curveMultiplier!;\r\n            case ParticleSystemCurveMode.TwoCurves:\r\n                const t1 = t01 * this.curveMin!.duration;\r\n                const t2 = t01 * this.curveMax!.duration;\r\n                return Mathf.lerp(this.curveMin!.evaluate(t1), this.curveMax!.evaluate(t2), t % 1) * this.curveMultiplier!;\r\n            case ParticleSystemCurveMode.TwoConstants:\r\n                return Mathf.lerp(this.constantMin, this.constantMax, t % 1)\r\n            default:\r\n                this.curveMax!.evaluate(t01) * this.curveMultiplier!;\r\n                break;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport class MinMaxGradient {\r\n    mode!: ParticleSystemGradientMode;\r\n    @serializable(RGBAColor)\r\n    color!: RGBAColor;\r\n    @serializable(RGBAColor)\r\n    colorMin!: RGBAColor;\r\n    @serializable(RGBAColor)\r\n    colorMax!: RGBAColor;\r\n    @serializable(Gradient)\r\n    gradient!: Gradient;\r\n    @serializable(Gradient)\r\n    gradientMin!: Gradient;\r\n    @serializable(Gradient)\r\n    gradientMax!: Gradient;\r\n\r\n    private static _temp: RGBAColor = new RGBAColor(0, 0, 0, 1);\r\n    private static _temp2: RGBAColor = new RGBAColor(0, 0, 0, 1);\r\n\r\n    evaluate(t01: number, lerpFactor?: number): RGBAColor {\r\n        const t = lerpFactor === undefined ? Math.random() : lerpFactor;\r\n        switch (this.mode) {\r\n            case ParticleSystemGradientMode.Color:\r\n                return this.color;\r\n            case ParticleSystemGradientMode.Gradient:\r\n                this.gradient.evaluate(t01, MinMaxGradient._temp);\r\n                return MinMaxGradient._temp\r\n            case ParticleSystemGradientMode.TwoColors:\r\n                const col1 = MinMaxGradient._temp.lerpColors(this.colorMin, this.colorMax, t);\r\n                return col1;\r\n            case ParticleSystemGradientMode.TwoGradients:\r\n                this.gradientMin.evaluate(t01, MinMaxGradient._temp);\r\n                this.gradientMax.evaluate(t01, MinMaxGradient._temp2);\r\n                return MinMaxGradient._temp.lerp(MinMaxGradient._temp2, t);\r\n\r\n        }\r\n        // console.warn(\"Not implemented\", ParticleSystemGradientMode[this.mode]);\r\n        MinMaxGradient._temp.set(0xff00ff)\r\n        MinMaxGradient._temp.alpha = 1;\r\n        return MinMaxGradient._temp;\r\n    }\r\n}\r\n\r\ndeclare type ParticleSystemScalingMode = {\r\n    Hierarchy: number;\r\n    Local: number;\r\n    Shape: number;\r\n}\r\n\r\nexport class MainModule {\r\n    cullingMode!: number;\r\n    duration!: number;\r\n    emitterVelocityMode!: number;\r\n    flipRotation!: number;\r\n    @serializable(MinMaxCurve)\r\n    gravityModifier!: MinMaxCurve;\r\n    gravityModifierMultiplier!: number;\r\n    loop!: boolean;\r\n    maxParticles!: number;\r\n    playOnAwake!: boolean;\r\n    prewarm!: boolean;\r\n    ringBufferLoopRange!: { x: number, y: number };\r\n    ringBufferMode!: boolean;\r\n    scalingMode!: ParticleSystemScalingMode;\r\n    simulationSpace!: ParticleSystemSimulationSpace;\r\n    simulationSpeed!: number;\r\n    @serializable(MinMaxGradient)\r\n    startColor!: MinMaxGradient;\r\n    @serializable(MinMaxCurve)\r\n    startDelay!: MinMaxCurve;\r\n    startDelayMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startLifetime!: MinMaxCurve;\r\n    startLifetimeMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startRotation!: MinMaxCurve;\r\n    startRotationMultiplier!: number;\r\n    startRotation3D!: boolean;\r\n    @serializable(MinMaxCurve)\r\n    startRotationX!: MinMaxCurve;\r\n    startRotationXMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startRotationY!: MinMaxCurve;\r\n    startRotationYMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startRotationZ!: MinMaxCurve;\r\n    startRotationZMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startSize!: MinMaxCurve;\r\n    startSize3D!: boolean;\r\n    startSizeMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startSizeX!: MinMaxCurve;\r\n    startSizeXMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startSizeY!: MinMaxCurve;\r\n    startSizeYMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startSizeZ!: MinMaxCurve;\r\n    startSizeZMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    startSpeed!: MinMaxCurve;\r\n    startSpeedMultiplier!: number;\r\n    stopAction!: number;\r\n    useUnscaledTime!: boolean;\r\n}\r\n\r\n\r\nexport class ParticleBurst {\r\n    cycleCount!: number;\r\n    maxCount!: number;\r\n    minCount!: number;\r\n    probability!: number;\r\n    repeatInterval!: number;\r\n    time!: number;\r\n    count!: {\r\n        constant: number;\r\n        constantMax: number;\r\n        constantMin: number;\r\n        curve?: AnimationCurve;\r\n        curveMax?: AnimationCurve;\r\n        curveMin?: AnimationCurve;\r\n        curveMultiplier?: number;\r\n        mode: ParticleSystemCurveMode;\r\n    }\r\n\r\n\r\n    private _performed: number = 0;\r\n\r\n\r\n    reset() {\r\n        this._performed = 0;\r\n    }\r\n    run(time: number): number {\r\n        if (time <= this.time) {\r\n            this.reset();\r\n            return 0;\r\n        }\r\n        let amount = 0;\r\n        if (this.cycleCount === 0 || this._performed < this.cycleCount) {\r\n            const nextTime = this.time + this.repeatInterval * this._performed;\r\n            if (time >= nextTime) {\r\n                this._performed += 1;\r\n                if (Math.random() < this.probability) {\r\n                    switch (this.count.mode) {\r\n                        case ParticleSystemCurveMode.Constant:\r\n                            amount = this.count.constant;\r\n                            break;\r\n                        case ParticleSystemCurveMode.TwoConstants:\r\n                            amount = Mathf.lerp(this.count.constantMin, this.count.constantMax, Math.random());\r\n                            break;\r\n                        case ParticleSystemCurveMode.Curve:\r\n                            amount = this.count.curve!.evaluate(Math.random());\r\n                            break;\r\n                        case ParticleSystemCurveMode.TwoCurves:\r\n                            const t = Math.random();\r\n                            amount = Mathf.lerp(this.count.curveMin!.evaluate(t), this.count.curveMax!.evaluate(t), Math.random());\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return amount;\r\n    }\r\n}\r\n\r\nexport class EmissionModule {\r\n\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n\r\n    get burstCount() {\r\n        return this.bursts?.length ?? 0;\r\n    }\r\n\r\n    @serializable()\r\n    bursts!: ParticleBurst[];\r\n\r\n    @serializable(MinMaxCurve)\r\n    rateOverTime!: MinMaxCurve;\r\n    @serializable()\r\n    rateOverTimeMultiplier!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    rateOverDistance!: MinMaxCurve;\r\n    @serializable()\r\n    rateOverDistanceMultiplier!: number;\r\n\r\n\r\n    /** set from system */\r\n    system!: IParticleSystem;\r\n\r\n    reset() {\r\n        this.bursts?.forEach(b => b.reset());\r\n    }\r\n\r\n    getBurst() {\r\n        let amount = 0;\r\n        if (this.burstCount > 0) {\r\n            for (let i = 0; i < this.burstCount; i++) {\r\n                const burst = this.bursts[i];\r\n                if (burst.time >= this.system.time) {\r\n                    burst.reset();\r\n                }\r\n                amount += Math.round(burst.run(this.system.time));\r\n            }\r\n        }\r\n        return amount;\r\n    }\r\n}\r\n\r\nexport class ColorOverLifetimeModule {\r\n    enabled!: boolean;\r\n    @serializable(MinMaxGradient)\r\n    color!: MinMaxGradient;\r\n}\r\n\r\nexport class SizeOverLifetimeModule {\r\n    enabled!: boolean;\r\n    separateAxes!: boolean;\r\n    @serializable(MinMaxCurve)\r\n    size!: MinMaxCurve;\r\n    sizeMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    x!: MinMaxCurve;\r\n    xMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    y!: MinMaxCurve;\r\n    yMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    z!: MinMaxCurve;\r\n    zMultiplier!: number;\r\n\r\n    private _time: number = 0;\r\n    private _temp = new Vector3();\r\n\r\n    evaluate(t01: number, target?: Vec3, lerpFactor?: number) {\r\n        if (!target) target = this._temp;\r\n\r\n        if (!this.enabled) {\r\n            target.x = target.y = target.z = 1;\r\n            return target;\r\n        }\r\n\r\n        if (!this.separateAxes) {\r\n            const scale = this.size.evaluate(t01, lerpFactor) * this.sizeMultiplier;\r\n            target.x = scale;\r\n            // target.y = scale;\r\n            // target.z = scale;\r\n        }\r\n        else {\r\n            target.x = this.x.evaluate(t01, lerpFactor) * this.xMultiplier;\r\n            target.y = this.y.evaluate(t01, lerpFactor) * this.yMultiplier;\r\n            target.z = this.z.evaluate(t01, lerpFactor) * this.zMultiplier;\r\n        }\r\n        return target;\r\n    }\r\n}\r\n\r\nexport class ShapeModule implements EmitterShape {\r\n\r\n    get type(): string {\r\n        return ParticleSystemShapeType[this.shapeType];\r\n    }\r\n\r\n    initialize(particle: Particle): void {\r\n        this.getPosition();\r\n        particle.position.copy(this._vector);\r\n    }\r\n    toJSON(): ShapeJSON {\r\n        return this;\r\n    }\r\n    clone(): EmitterShape {\r\n        return new ShapeModule();\r\n    }\r\n\r\n    @serializable()\r\n    shapeType: ParticleSystemShapeType = ParticleSystemShapeType.Box;\r\n    @serializable()\r\n    enabled: boolean = true;\r\n    @serializable()\r\n    alignToDirection: boolean = false;\r\n    @serializable()\r\n    angle: number = 0;\r\n    @serializable()\r\n    arc: number = 360;\r\n    @serializable()\r\n    arcSpread!: number;\r\n    @serializable()\r\n    arcSpeedMultiplier!: number;\r\n    @serializable()\r\n    arcMode!: ParticleSystemShapeMultiModeValue;\r\n\r\n\r\n    @serializable(Vector3)\r\n    boxThickness!: Vector3;\r\n    @serializable(Vector3)\r\n    position!: Vector3;\r\n    @serializable(Vector3)\r\n    rotation!: Vector3;\r\n    private _rotation: Euler = new Euler();\r\n    @serializable(Vector3)\r\n    scale!: Vector3;\r\n\r\n    @serializable()\r\n    radius!: number;\r\n    @serializable()\r\n    radiusThickness!: number;\r\n    @serializable()\r\n    sphericalDirectionAmount!: number;\r\n    @serializable()\r\n    randomDirectionAmount!: number;\r\n    @serializable()\r\n    randomPositionAmount!: number;\r\n\r\n    private system!: IParticleSystem;\r\n    private _space?: ParticleSystemSimulationSpace;\r\n    private readonly _worldSpaceMatrix: Matrix4 = new Matrix4();\r\n    private readonly _worldSpaceMatrixInverse: Matrix4 = new Matrix4();\r\n\r\n\r\n    constructor() {\r\n        // console.log(this);\r\n    }\r\n\r\n    update(system: IParticleSystem, _context: Context, simulationSpace: ParticleSystemSimulationSpace, obj: Object3D) {\r\n        this.system = system;\r\n        this._space = simulationSpace;\r\n        if (simulationSpace === ParticleSystemSimulationSpace.World) {\r\n            this._worldSpaceMatrix.copy(obj.matrixWorld);\r\n            // set scale to 1\r\n            this._worldSpaceMatrix.elements[0] = 1;\r\n            this._worldSpaceMatrix.elements[5] = 1;\r\n            this._worldSpaceMatrix.elements[10] = 1;\r\n            this._worldSpaceMatrixInverse.copy(this._worldSpaceMatrix).invert();\r\n        }\r\n    }\r\n\r\n    /** nebula implementations: */\r\n\r\n    /** initializer implementation */\r\n    private _vector: Vector3 = new Vector3(0, 0, 0);\r\n    private _temp: Vector3 = new Vector3(0, 0, 0);\r\n    /** called by nebula on initialize */\r\n    get vector() {\r\n        return this._vector;\r\n    }\r\n    getPosition(): void {\r\n        if (!this.enabled) {\r\n            this._vector.set(0, 0, 0);\r\n            return;\r\n        }\r\n        const pos = this._temp.copy(this.position);\r\n        const isWorldSpace = this._space === ParticleSystemSimulationSpace.World;\r\n        if (isWorldSpace) {\r\n            pos.applyQuaternion(this.system.worldQuaternion);\r\n        }\r\n\r\n        const isRotated = this.rotation.x !== 0 || this.rotation.y !== 0 || this.rotation.z !== 0;\r\n        if (isRotated) {\r\n            this._rotation.x = Mathf.toRadians(this.rotation.x);\r\n            this._rotation.y = -Mathf.toRadians(this.rotation.y);\r\n            this._rotation.z = -Mathf.toRadians(this.rotation.z);\r\n        }\r\n\r\n        let radius = this.radius;\r\n        if (isWorldSpace) radius *= this.system.worldScale.x;\r\n        switch (this.shapeType) {\r\n            case ParticleSystemShapeType.Box:\r\n                this._vector.x = Math.random() * this.scale.x - this.scale.x / 2;\r\n                this._vector.y = Math.random() * this.scale.y - this.scale.y / 2;\r\n                this._vector.z = Math.random() * this.scale.z - this.scale.z / 2;\r\n                this._vector.add(pos);\r\n                break;\r\n            case ParticleSystemShapeType.Cone:\r\n                this.randomConePoint(this.position, this.angle, radius, this.radiusThickness, this.arc, this.arcMode, this._vector);\r\n                break;\r\n            case ParticleSystemShapeType.Sphere:\r\n                this.randomSpherePoint(this.position, radius, this.radiusThickness, this.arc, this._vector);\r\n                this._vector.x *= this.scale.x;\r\n                this._vector.y *= this.scale.y;\r\n                this._vector.z *= this.scale.z;\r\n                break;\r\n            case ParticleSystemShapeType.Circle:\r\n                this.randomSpherePoint(this.position, radius, this.radiusThickness, this.arc, this._vector);\r\n                this._vector.x *= this.scale.x;\r\n                this._vector.y *= this.scale.y;\r\n                this._vector.z *= 0;\r\n                break;\r\n            default:\r\n                this._vector.set(0, 0, 0);\r\n                break;\r\n            // case ParticleSystemShapeType.Hemisphere:\r\n            //     randomSpherePoint(this.position.x, this.position.y, this.position.z, this.radius, this.radiusThickness, 180, this._vector);\r\n            //     break;\r\n        }\r\n\r\n        this.randomizePosition(this._vector, this.randomPositionAmount);\r\n\r\n        if (isRotated)\r\n            this._vector.applyEuler(this._rotation);\r\n\r\n        if (this._space === ParticleSystemSimulationSpace.World) {\r\n            this._vector.add(this.system.worldPos);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private _dir: Vector3 = new Vector3();\r\n    getDirection(position): Vector3 {\r\n        if (!this.enabled) {\r\n            this._dir.set(0, 0, 1);\r\n            return this._dir;\r\n        }\r\n        switch (this.shapeType) {\r\n            case ParticleSystemShapeType.Box:\r\n                this._dir.set(0, 0, 1);\r\n                break;\r\n            case ParticleSystemShapeType.Cone:\r\n                this._dir.set(0, 0, 1);\r\n                // apply cone angle\r\n                // this._dir.applyAxisAngle(new Vector3(0, 1, 0), Mathf.toRadians(this.angle));\r\n                break;\r\n            case ParticleSystemShapeType.Circle:\r\n            case ParticleSystemShapeType.Sphere:\r\n                const rx = position.x;\r\n                const ry = position.y;\r\n                const rz = position.z;\r\n                this._dir.set(rx, ry, rz).sub(this.position)\r\n                break;\r\n            default:\r\n                this._dir.set(0, 0, 1);\r\n                break;\r\n        }\r\n        if (this._space === ParticleSystemSimulationSpace.World) {\r\n            this._dir.applyMatrix4(this._worldSpaceMatrixInverse);\r\n        }\r\n        this._dir.normalize();\r\n        this.spherizeDirection(this._dir, this.sphericalDirectionAmount);\r\n        this.randomizeDirection(this._dir, this.randomDirectionAmount);\r\n        // Gizmos.DrawDirection(position, this._dir, 0xff0000, .5);\r\n        return this._dir;\r\n    }\r\n\r\n    private static _randomQuat = new Quaternion();\r\n    private static _tempVec = new Vector3();\r\n\r\n    private randomizePosition(pos: Vector3, amount: number) {\r\n        if (amount <= 0) return;\r\n        const rp = ShapeModule._tempVec;\r\n        rp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1);\r\n        rp.x *= amount * this.scale.x;\r\n        rp.y *= amount * this.scale.y;\r\n        rp.z *= amount * this.scale.z;\r\n        pos.add(rp);\r\n    }\r\n\r\n    private randomizeDirection(direction: Vector3, amount: number) {\r\n        if (amount === 0) return;\r\n        const randomQuat = ShapeModule._randomQuat;\r\n        const tempVec = ShapeModule._tempVec;\r\n        tempVec.set(Math.random() - .5, Math.random() - .5, Math.random() - .5).normalize();\r\n        randomQuat.setFromAxisAngle(tempVec, amount * Math.random() * Math.PI);\r\n        direction.applyQuaternion(randomQuat);\r\n    }\r\n\r\n    private spherizeDirection(dir: Vector3, amount: number) {\r\n        if (amount === 0) return;\r\n        const theta = Math.random() * Math.PI * 2;\r\n        const phi = Math.acos(1 - Math.random() * 2);\r\n        const x = Math.sin(phi) * Math.cos(theta);\r\n        const y = Math.sin(phi) * Math.sin(theta);\r\n        const z = Math.cos(phi);\r\n        const v = new Vector3(x, y, z);\r\n        dir.lerp(v, amount);\r\n    }\r\n\r\n    private randomSpherePoint(pos: Vec3, radius: number, thickness: number, arc: number, vec: Vec3) {\r\n        const u = Math.random();\r\n        const v = Math.random();\r\n        const theta = 2 * Math.PI * u * (arc / 360);\r\n        const phi = Math.acos(2 * v - 1);\r\n        const r = Mathf.lerp(1, 1 - (Math.pow(1 - Math.random(), Math.PI)), thickness) * (radius);\r\n        const x = pos.x + (-r * Math.sin(phi) * Math.cos(theta));\r\n        const y = pos.y + (r * Math.sin(phi) * Math.sin(theta));\r\n        const z = pos.z + (r * Math.cos(phi));\r\n        vec.x = x;\r\n        vec.y = y;\r\n        vec.z = z;\r\n    }\r\n\r\n    private _loopTime: number = 0;\r\n    private _loopDirection: number = 1;\r\n\r\n    private randomConePoint(pos: Vec3, _angle: number, radius: number, thickness: number, arc: number, arcMode: ParticleSystemShapeMultiModeValue, vec: Vec3) {\r\n        let u = 0;\r\n        let v = 0;\r\n        switch (arcMode) {\r\n            case ParticleSystemShapeMultiModeValue.Random:\r\n                u = Math.random();\r\n                v = Math.random();\r\n                break;\r\n            case ParticleSystemShapeMultiModeValue.PingPong:\r\n                if (this._loopTime > 1) this._loopDirection = -1;\r\n                if (this._loopTime < 0) this._loopDirection = 1;\r\n            // continue with loop \r\n\r\n            case ParticleSystemShapeMultiModeValue.Loop:\r\n                u = .5;\r\n                v = Math.random()\r\n                this._loopTime += this.system.deltaTime * this._loopDirection;\r\n                break;\r\n        }\r\n\r\n        let theta = 2 * Math.PI * u * (arc / 360);\r\n        switch (arcMode) {\r\n            case ParticleSystemShapeMultiModeValue.PingPong:\r\n            case ParticleSystemShapeMultiModeValue.Loop:\r\n                theta += Math.PI + .5;\r\n                theta += this._loopTime * Math.PI * 2;\r\n                theta %= Mathf.toRadians(arc);\r\n                break;\r\n        }\r\n\r\n        const phi = Math.acos(2 * v - 1);\r\n        const r = Mathf.lerp(1, 1 - (Math.pow(1 - Math.random(), Math.PI)), thickness) * radius;\r\n        const x = pos.x + (-r * Math.sin(phi) * Math.cos(theta));\r\n        const y = pos.y + (r * Math.sin(phi) * Math.sin(theta));\r\n        const z = pos.z;\r\n        vec.x = x * this.scale.x;\r\n        vec.y = y * this.scale.y;\r\n        vec.z = z * this.scale.z;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nimport { createNoise4D, NoiseFunction4D } from 'simplex-noise';\r\n\r\nexport class NoiseModule {\r\n    @serializable()\r\n    damping!: boolean;\r\n    @serializable()\r\n    enabled!: boolean;\r\n    @serializable()\r\n    frequency!: number;\r\n    @serializable()\r\n    octaveCount!: number;\r\n    @serializable()\r\n    octaveMultiplier!: number;\r\n    @serializable()\r\n    octaveScale!: number;\r\n    @serializable(MinMaxCurve)\r\n    positionAmount!: MinMaxCurve;\r\n    @serializable()\r\n    quality!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    remap!: MinMaxCurve;\r\n    @serializable()\r\n    remapEnabled!: boolean;\r\n    @serializable()\r\n    remapMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    remapX!: MinMaxCurve;\r\n    @serializable()\r\n    remapXMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    remapY!: MinMaxCurve;\r\n    @serializable()\r\n    remapYMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    remapZ!: MinMaxCurve;\r\n    @serializable()\r\n    remapZMultiplier!: number;\r\n\r\n    @serializable()\r\n    scrollSpeedMultiplier!: number;\r\n    @serializable()\r\n    separateAxes!: boolean;\r\n    @serializable()\r\n    strengthMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    strengthX!: MinMaxCurve;\r\n    @serializable()\r\n    strengthXMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    strengthY!: MinMaxCurve;\r\n    @serializable()\r\n    strengthYMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    strengthZ!: MinMaxCurve;\r\n    @serializable()\r\n    strengthZMultiplier!: number;\r\n\r\n\r\n    private _noise?: NoiseFunction4D;\r\n    private _time: number = 0;\r\n\r\n    update(context: Context) {\r\n        this._time += context.time.deltaTime * this.scrollSpeedMultiplier;\r\n    }\r\n\r\n    /** nebula implementations: */\r\n    private _temp: Vector3 = new Vector3();\r\n    apply(_index: number, pos: Vec3, vel: Vec3, _deltaTime: number, age: number, life: number) {\r\n        if (!this.enabled) return;\r\n        if (!this._noise) {\r\n            this._noise = createNoise4D(() => 0);\r\n        }\r\n        const temp = this._temp.set(pos.x, pos.y, pos.z).multiplyScalar(this.frequency);\r\n        const nx = this._noise(temp.x, temp.y, temp.z, this._time);\r\n        const ny = this._noise(temp.x, temp.y, temp.z, this._time + 1000 * this.frequency);\r\n        const nz = this._noise(temp.x, temp.y, temp.z, this._time + 2000 * this.frequency);\r\n        this._temp.set(nx, ny, nz).normalize()\r\n\r\n        const t = age / life;\r\n        let strengthFactor = this.positionAmount.evaluate(t);\r\n        if (!this.separateAxes) {\r\n            if (this.strengthX) {\r\n                strengthFactor *= this.strengthX.evaluate(t) * 1.5;\r\n            }\r\n            // strengthFactor *= this.strengthMultiplier;\r\n            // strengthFactor *= deltaTime;\r\n            this._temp.multiplyScalar(strengthFactor);\r\n        }\r\n        else {\r\n            this._temp.x *= strengthFactor * this.strengthXMultiplier\r\n            this._temp.y *= strengthFactor * this.strengthYMultiplier;\r\n            this._temp.z *= strengthFactor * this.strengthZMultiplier;\r\n        }\r\n        // this._temp.setLength(strengthFactor * deltaTime);\r\n        vel.x += this._temp.x;\r\n        vel.y += this._temp.y;\r\n        vel.z += this._temp.z;\r\n    }\r\n}\r\n\r\nexport enum ParticleSystemTrailMode {\r\n    PerParticle,\r\n    Ribbon,\r\n}\r\n\r\nexport enum ParticleSystemTrailTextureMode {\r\n    Stretch = 0,\r\n    Tile = 1,\r\n    DistributePerSegment = 2,\r\n    RepeatPerSegment = 3,\r\n}\r\n\r\nexport class TrailModule {\r\n\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable()\r\n    attachRibbonToTransform = false;\r\n\r\n    @serializable(MinMaxGradient)\r\n    colorOverLifetime!: MinMaxGradient;\r\n\r\n    @serializable(MinMaxGradient)\r\n    colorOverTrail!: MinMaxGradient;\r\n\r\n    @serializable()\r\n    dieWithParticles: boolean = true;\r\n\r\n    @serializable()\r\n    inheritParticleColor: boolean = true;\r\n\r\n    @serializable(MinMaxCurve)\r\n    lifetime!: MinMaxCurve;\r\n    @serializable()\r\n    lifetimeMultiplier!: number;\r\n\r\n    @serializable()\r\n    minVertexDistance: number = .2;\r\n\r\n    @serializable()\r\n    mode: ParticleSystemTrailMode = ParticleSystemTrailMode.PerParticle;\r\n\r\n    @serializable()\r\n    ratio: number = 1;\r\n\r\n    @serializable()\r\n    ribbonCount: number = 1;\r\n\r\n    @serializable()\r\n    shadowBias: number = 0;\r\n\r\n    @serializable()\r\n    sizeAffectsLifetime: boolean = false;\r\n\r\n    @serializable()\r\n    sizeAffectsWidth: boolean = false;\r\n\r\n    @serializable()\r\n    splitSubEmitterRibbons: boolean = false;\r\n\r\n    @serializable()\r\n    textureMode: ParticleSystemTrailTextureMode = ParticleSystemTrailTextureMode.Stretch;\r\n\r\n    @serializable(MinMaxCurve)\r\n    widthOverTrail!: MinMaxCurve;\r\n    @serializable()\r\n    widthOverTrailMultiplier!: number;\r\n\r\n    @serializable()\r\n    worldSpace: boolean = false;\r\n\r\n    getWidth(size: number, _life01: number, pos01: number) {\r\n        let res = this.widthOverTrail.evaluate(pos01);\r\n        if (pos01 === 0) res = size;\r\n        size *= res;\r\n        return size;\r\n    }\r\n\r\n    getColor(color: Vector4, life01: number, pos01: number) {\r\n        const overTrail = this.colorOverTrail.evaluate(pos01);\r\n        const overLife = this.colorOverLifetime.evaluate(life01);\r\n        color.x *= overTrail.r * overLife.r;\r\n        color.y *= overTrail.g * overLife.g;\r\n        color.z *= overTrail.b * overLife.b;\r\n        color.w *= overTrail.alpha * overLife.alpha;\r\n    }\r\n}\r\n\r\nexport class VelocityOverLifetimeModule {\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    /* orbital settings */\r\n\r\n\r\n    @serializable()\r\n    space: ParticleSystemSimulationSpace = ParticleSystemSimulationSpace.Local;\r\n\r\n    @serializable(MinMaxCurve)\r\n    speedModifier!: MinMaxCurve;\r\n    @serializable()\r\n    speedModifierMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    x!: MinMaxCurve;\r\n    @serializable()\r\n    xMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    y!: MinMaxCurve;\r\n    @serializable()\r\n    yMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    z!: MinMaxCurve;\r\n    @serializable()\r\n    zMultiplier!: number;\r\n\r\n    private _system?: IParticleSystem;\r\n    // private _worldRotation: Quaternion = new Quaternion();\r\n\r\n    update(system: IParticleSystem) {\r\n        this._system = system;\r\n    }\r\n\r\n    private _temp: Vector3 = new Vector3();\r\n\r\n    apply(_index: number, _pos: Vec3, vel: Vec3, _dt: number, age: number, life: number) {\r\n        if (!this.enabled) return;\r\n        const t = age / life;\r\n\r\n        const speed = this.speedModifier.evaluate(t) * this.speedModifierMultiplier;\r\n        const x = this.x.evaluate(t);\r\n        const y = this.y.evaluate(t);\r\n        const z = this.z.evaluate(t);\r\n        this._temp.set(-x, y, z);\r\n        if (this._system) {\r\n            if (this.space === ParticleSystemSimulationSpace.World) {\r\n                this._temp.applyQuaternion(this._system.worldQuaternionInverted);\r\n            }\r\n            if (this._system.main.simulationSpace === ParticleSystemSimulationSpace.World) {\r\n                this._temp.applyQuaternion(this._system.worldQuaternion);\r\n            }\r\n        }\r\n        vel.x += this._temp.x;\r\n        vel.y += this._temp.y;\r\n        vel.z += this._temp.z;\r\n        vel.x *= speed;\r\n        vel.y *= speed;\r\n        vel.z *= speed;\r\n    }\r\n}\r\n\r\n\r\n\r\nenum ParticleSystemAnimationTimeMode {\r\n    Lifetime,\r\n    Speed,\r\n    FPS,\r\n}\r\n\r\nenum ParticleSystemAnimationMode {\r\n    Grid,\r\n    Sprites,\r\n}\r\n\r\nenum ParticleSystemAnimationRowMode {\r\n    Custom,\r\n    Random,\r\n    MeshIndex,\r\n}\r\n\r\nenum ParticleSystemAnimationType {\r\n    WholeSheet,\r\n    SingleRow,\r\n}\r\n\r\nexport class TextureSheetAnimationModule {\r\n\r\n    @serializable()\r\n    animation!: ParticleSystemAnimationType;\r\n\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable()\r\n    cycleCount!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    frameOverTime!: MinMaxCurve;\r\n    @serializable()\r\n    frameOverTimeMultiplier!: number;\r\n\r\n    @serializable()\r\n    numTilesX!: number;\r\n    @serializable()\r\n    numTilesY!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    startFrame!: MinMaxCurve;\r\n    @serializable()\r\n    startFrameMultiplier!: number;\r\n\r\n    @serializable()\r\n    rowMode!: ParticleSystemAnimationRowMode;\r\n    @serializable()\r\n    rowIndex!: number;\r\n\r\n    @serializable()\r\n    spriteCount!: number;\r\n\r\n    @serializable()\r\n    timeMode!: ParticleSystemAnimationTimeMode;\r\n\r\n    private sampleOnceAtStart(): boolean {\r\n        if (this.timeMode === ParticleSystemAnimationTimeMode.Lifetime) {\r\n            switch (this.frameOverTime.mode) {\r\n                case ParticleSystemCurveMode.Constant:\r\n                case ParticleSystemCurveMode.TwoConstants:\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getStartIndex(): number {\r\n        if (this.sampleOnceAtStart()) {\r\n            return this.frameOverTime.evaluate(Math.random())\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    evaluate(t01: number): number | undefined {\r\n        if (this.sampleOnceAtStart()) {\r\n            return undefined;\r\n        }\r\n        return this.getIndex(t01);\r\n    }\r\n\r\n    private getIndex(t01: number): number {\r\n        const tiles = this.numTilesX * this.numTilesY;\r\n        // let pos = t01 * this.cycleCount;\r\n        let index = this.frameOverTime.evaluate(t01 % 1);\r\n        index *= this.frameOverTimeMultiplier;\r\n        index *= tiles;\r\n        index = index % tiles;\r\n        index = Math.floor(index);\r\n        // console.log(index);\r\n        return index;\r\n    }\r\n}\r\n\r\n\r\nexport class RotationOverLifetimeModule {\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable()\r\n    separateAxes!: boolean;\r\n\r\n    @serializable(MinMaxCurve)\r\n    x!: MinMaxCurve;\r\n    @serializable()\r\n    xMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    y!: MinMaxCurve;\r\n    @serializable()\r\n    yMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    z!: MinMaxCurve;\r\n    @serializable()\r\n    zMultiplier!: number;\r\n\r\n    evaluate(t01: number): number {\r\n        if (!this.enabled) return 0;\r\n        if (!this.separateAxes) {\r\n            const rot = this.z.evaluate(t01) * -1;\r\n            return rot;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport class RotationBySpeedModule {\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable()\r\n    range!: Vec2;\r\n\r\n    @serializable()\r\n    separateAxes!: boolean;\r\n\r\n    @serializable(MinMaxCurve)\r\n    x!: MinMaxCurve;\r\n    @serializable()\r\n    xMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    y!: MinMaxCurve;\r\n    @serializable()\r\n    yMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    z!: MinMaxCurve;\r\n    @serializable()\r\n    zMultiplier!: number;\r\n\r\n    evaluate(_t01: number, speed: number): number {\r\n        if (!this.enabled) return 0;\r\n        if (!this.separateAxes) {\r\n            const t = Mathf.lerp(this.range.x, this.range.y, speed);\r\n            const rot = this.z.evaluate(t) * -1;\r\n            return rot;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\nexport class LimitVelocityOverLifetimeModule {\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable()\r\n    dampen!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    drag!: MinMaxCurve;\r\n    @serializable()\r\n    dragMultiplier!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    limit!: MinMaxCurve;\r\n    @serializable()\r\n    limitMultiplier!: number;\r\n\r\n    @serializable()\r\n    separateAxes!: boolean;\r\n\r\n    @serializable(MinMaxCurve)\r\n    limitX!: MinMaxCurve;\r\n    @serializable()\r\n    limitXMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    limitY!: MinMaxCurve;\r\n    @serializable()\r\n    limitYMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    limitZ!: MinMaxCurve;\r\n    @serializable()\r\n    limitZMultiplier!: number;\r\n\r\n    @serializable()\r\n    multiplyDragByParticleSize: boolean = false;\r\n    @serializable()\r\n    multiplyDragByParticleVelocity: boolean = false;\r\n\r\n    @serializable()\r\n    space!: ParticleSystemSimulationSpace;\r\n\r\n    private _temp: Vector3 = new Vector3();\r\n    private _temp2: Vector3 = new Vector3();\r\n\r\n    apply(_position: Vec3, baseVelocity: Vector3, currentVelocity: Vector3, _size: number, t01: number, _dt: number, _scale: number) {\r\n        if (!this.enabled) return;\r\n        // if (this.separateAxes) {\r\n        //     // const maxX = this.limitX.evaluate(t01) * this.limitXMultiplier;\r\n        //     // const maxY = this.limitY.evaluate(t01) * this.limitYMultiplier;\r\n        //     // const maxZ = this.limitZ.evaluate(t01) * this.limitZMultiplier;\r\n\r\n        // }\r\n        // else \r\n        {\r\n            const max = this.limit.evaluate(t01) * this.limitMultiplier;\r\n            const speed = baseVelocity.length();\r\n            if (speed > max) {\r\n                this._temp.copy(baseVelocity).normalize().multiplyScalar(max);\r\n                let t = this.dampen * .5;\r\n                // t *= scale;\r\n                baseVelocity.x = Mathf.lerp(baseVelocity.x, this._temp.x, t);\r\n                baseVelocity.y = Mathf.lerp(baseVelocity.y, this._temp.y, t);\r\n                baseVelocity.z = Mathf.lerp(baseVelocity.z, this._temp.z, t);\r\n\r\n                // this._temp2.set(0, 0, 0);\r\n                currentVelocity.x = Mathf.lerp(currentVelocity.x, this._temp.x, t);\r\n                currentVelocity.y = Mathf.lerp(currentVelocity.y, this._temp.y, t);\r\n                currentVelocity.z = Mathf.lerp(currentVelocity.z, this._temp.z, t);\r\n            }\r\n            // vel.multiplyScalar(dragFactor);\r\n        }\r\n        // vel.x *= 0.3;\r\n        // vel.y *= 0.3;\r\n        // vel.z *= 0.3;\r\n    }\r\n}\r\n\r\n\r\nexport enum ParticleSystemInheritVelocityMode {\r\n    Initial,\r\n    Current,\r\n}\r\n\r\nexport class InheritVelocityModule {\r\n\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable(MinMaxCurve)\r\n    curve!: MinMaxCurve;\r\n    @serializable()\r\n    curveMultiplier!: number;\r\n\r\n    @serializable()\r\n    mode!: ParticleSystemInheritVelocityMode;\r\n\r\n    system!: IParticleSystem;\r\n    private _lastWorldPosition!: Vector3;\r\n    private _velocity: Vector3 = new Vector3();\r\n    private _temp: Vector3 = new Vector3();\r\n\r\n    update(_context: Context) {\r\n        if (!this.enabled) return;\r\n        if (this.system.worldspace === false) return;\r\n        if (this._lastWorldPosition) {\r\n            this._velocity.copy(this.system.worldPos).sub(this._lastWorldPosition).multiplyScalar(1 / this.system.deltaTime);\r\n            this._lastWorldPosition.copy(this.system.worldPos);\r\n        }\r\n        else {\r\n            this._velocity.set(0, 0, 0);\r\n            this._lastWorldPosition = this.system.worldPos.clone();\r\n        }\r\n    }\r\n\r\n    // TODO: make work for subsystems\r\n    applyInitial(vel: Vector3) {\r\n        if (!this.enabled) return;\r\n        if (this.system.worldspace === false) return;\r\n        if (this.mode === ParticleSystemInheritVelocityMode.Initial) {\r\n            const factor = this.curve.evaluate(Math.random(), Math.random());\r\n            this._temp.copy(this._velocity).multiplyScalar(factor);\r\n            vel.add(this._temp);\r\n        }\r\n    }\r\n\r\n    applyCurrent(vel: Vector3, t01: number, lerpFactor: number) {\r\n        if (!this.enabled) return;\r\n        if (this.system.worldspace === false) return;\r\n        if (this.mode === ParticleSystemInheritVelocityMode.Current) {\r\n            const factor = this.curve.evaluate(t01, lerpFactor);\r\n            this._temp.copy(this._velocity).multiplyScalar(factor);\r\n            vel.add(this._temp);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class SizeBySpeedModule {\r\n    @serializable()\r\n    enabled!: boolean;\r\n\r\n    @serializable(Vector2)\r\n    range!: Vector2;\r\n    @serializable()\r\n    separateAxes!: boolean;\r\n\r\n    @serializable(MinMaxCurve)\r\n    size!: MinMaxCurve;\r\n    @serializable()\r\n    sizeMultiplier!: number;\r\n\r\n    @serializable(MinMaxCurve)\r\n    x!: MinMaxCurve;\r\n    @serializable()\r\n    xMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    y!: MinMaxCurve;\r\n    @serializable()\r\n    yMultiplier!: number;\r\n    @serializable(MinMaxCurve)\r\n    z!: MinMaxCurve;\r\n    @serializable()\r\n    zMultiplier!: number;\r\n\r\n    evaluate(vel: Vector3, _t01: number, lerpFactor: number, size: number): number {\r\n\r\n        const speed = vel.length();\r\n        const x = Mathf.remap(speed, this.range.x, this.range.y, 0, 1);\r\n        const factor = this.size.evaluate(x, lerpFactor);\r\n        // return size;\r\n        return size * factor;\r\n    }\r\n}\r\n\r\nexport class ColorBySpeedModule {\r\n    @serializable()\r\n    enabled!: boolean;\r\n    @serializable(Vector2)\r\n    range!: Vector2;\r\n    @serializable(MinMaxGradient)\r\n    color!: MinMaxGradient;\r\n\r\n    evaluate(vel: Vector3, lerpFactor: number, color: Vector4) {\r\n        const speed = vel.length();\r\n        const x = Mathf.remap(speed, this.range.x, this.range.y, 0, 1);\r\n        const res = this.color.evaluate(x, lerpFactor);\r\n        color.x *= res.r;\r\n        color.y *= res.g;\r\n        color.z *= res.b;\r\n        color.w *= res.alpha;\r\n    }\r\n}", "import { Behavior, Particle, EmissionState, ParticleSystem, ParticleEmitter } from \"three.quarks\";\r\nimport { Vector3, Quaternion, Matrix4 } from \"three\";\r\nimport { IParticleSystem } from \"./ParticleSystemModules\";\r\nimport { CircularBuffer } from \"../engine/engine_utils\";\r\n\r\nconst VECTOR_ONE = new Vector3(1, 1, 1);\r\nconst VECTOR_Z = new Vector3(0, 0, 1);\r\nconst $emitterMatrix = Symbol(\"emitterMatrix\");\r\n\r\nexport class ParticleSubEmitter implements Behavior {\r\n\r\n    type = \"NeedleParticleSubEmitter\";\r\n\r\n    //private matrix_ = new Matrix4();\r\n    private q_ = new Quaternion();\r\n    private v_ = new Vector3();\r\n    private v2_ = new Vector3();\r\n\r\n\r\n    private _emitterMatrix: Matrix4 = new Matrix4();\r\n    private _circularBuffer: CircularBuffer<Matrix4>;\r\n\r\n    constructor(\r\n        private system: IParticleSystem,\r\n        private particleSystem: ParticleSystem,\r\n        private subSystem: IParticleSystem,\r\n        public subParticleSystem?: ParticleSystem\r\n    ) {\r\n        if (this.subParticleSystem && this.subParticleSystem) {\r\n            this.subParticleSystem.onlyUsedByOther = true;\r\n        }\r\n        const maxMatrices = 1000;\r\n        this._circularBuffer = new CircularBuffer(() => new Matrix4(), maxMatrices)\r\n    }\r\n\r\n    clone(): Behavior {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    initialize(particle: Particle): void {\r\n        particle.emissionState = {\r\n            burstIndex: 0,\r\n            burstWaveIndex: 0,\r\n            time: 0,\r\n            waitEmiting: 0,\r\n            // matrix: new Matrix4(),\r\n        } as EmissionState;\r\n        // particle[$emitterMatrix] = new Matrix4();\r\n        this._emitterMatrix.copy(this.subSystem.matrixWorld).invert().premultiply(this.system.matrixWorld)\r\n    }\r\n\r\n    update(particle: Particle, delta: number): void {\r\n        if (this.subSystem.currentParticles >= this.subSystem.main.maxParticles)\r\n            return;\r\n        if (!this.subParticleSystem || !particle.emissionState)\r\n            return;\r\n\r\n        // TODO: figure out how to re-use matrices\r\n        const m = new Matrix4();// this._circularBuffer.get();// new Matrix4();// particle[$emitterMatrix];\r\n\r\n        m.set(\r\n            1, 0, 0, particle.position.x,\r\n            0, 1, 0, particle.position.y,\r\n            0, 0, 1, particle.position.z,\r\n            0, 0, 0, 1\r\n        );\r\n\r\n        if (!this.particleSystem.worldSpace) {\r\n            m.multiplyMatrices(this._emitterMatrix, m)\r\n        }\r\n\r\n        this.subParticleSystem!.emit(delta, particle.emissionState!, m);\r\n    }\r\n\r\n    frameUpdate(_delta: number): void {\r\n    }\r\n\r\n    toJSON(): any {\r\n    }\r\n}", "import { RoomEvents } from \"../engine/engine_networking\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { AvatarMarker } from \"./WebXRAvatar\";\r\nimport { WaitForSeconds } from \"../engine/engine_coroutine\";\r\n\r\n\r\nexport class PlayerColor extends Behaviour {\r\n\r\n    awake(): void {\r\n        // console.log(\"AWAKE\", this.name);\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, this.tryAssignColor.bind(this));\r\n    }\r\n\r\n    private _didAssignPlayerColor: boolean = false;\r\n\r\n    onEnable(): void {\r\n        // console.log(\"ENABLE\", this.name);\r\n        if (!this._didAssignPlayerColor)\r\n            this.startCoroutine(this.waitForConnection());\r\n    }\r\n\r\n    private *waitForConnection() {\r\n        while (!this.destroyed && this.enabled) {\r\n            yield WaitForSeconds(.2);\r\n            if (this.tryAssignColor()) break;\r\n        }\r\n        // console.log(\"STOP WAITING\", this.name, this.destroyed);\r\n    }\r\n\r\n    private tryAssignColor(): boolean {\r\n        const marker = GameObject.getComponentInParent(this.gameObject, AvatarMarker);\r\n        if (marker && marker.connectionId) {\r\n            this._didAssignPlayerColor = true;\r\n            this.assignUserColor(marker.connectionId);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    assignUserColor(id: string) {\r\n\r\n        // console.log(this.name, id, this);\r\n\r\n        const hash = PlayerColor.hashCode(id);\r\n        const color = PlayerColor.colorFromHashCode(hash);\r\n        if (this.gameObject.type === \"Mesh\") {\r\n            const mesh: THREE.Mesh = this.gameObject as any;\r\n            this.assignColor(color, id, mesh);\r\n        }\r\n        else if (this.gameObject.children) {\r\n            for (const ch of this.gameObject.children) {\r\n                const obj = ch as any;\r\n                if (obj.material && obj.material.color) {\r\n                    this.assignColor(color, id, obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private assignColor(col: THREE.Color, id: string, mesh: THREE.Mesh) {\r\n        let mat = mesh.material as THREE.Material;\r\n        if (!mat) return;\r\n        if (mat[\"_playerMaterial\"] !== id) {\r\n            // console.log(\"ORIG\", mat);\r\n            mat = mat.clone();\r\n            mat[\"_playerMaterial\"] = id;\r\n            mesh.material = mat;\r\n            // console.log(\"CLONE\", mat);\r\n        }\r\n        // else console.log(\"DONT CLONE\", mat);\r\n        mat[\"color\"] = col;\r\n    }\r\n\r\n    public static hashCode(str: string) {\r\n        var hash = 0, i, chr;\r\n        if (str.length === 0) return hash;\r\n        for (i = 0; i < str.length; i++) {\r\n            chr = str.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n\r\n    public static colorFromHashCode(hash: number) {\r\n        const r = (hash & 0xFF0000) >> 16;\r\n        const g = (hash & 0x00FF00) >> 8;\r\n        const b = hash & 0x0000FF;\r\n        return new THREE.Color(r / 255, g / 255, b / 255);\r\n    }\r\n}\r\n\r\n", "import { Context } from \"./engine_setup\";\r\n\r\n\r\nexport function* WaitForSeconds(seconds: number, context: Context | null = null) {\r\n    const time = context ? context.time : Context.Current.time;\r\n    const start = time.time;\r\n    while(time.time - start < seconds) {\r\n        yield;\r\n    }\r\n}\r\n\r\nexport function* WaitForFrames(frames: number) {\r\n    for(let i = 0; i < frames; i++) {\r\n        yield;\r\n    }\r\n}\r\n", "import { Behaviour } from \"./Component\";\r\nimport { Box3, Color, EquirectangularReflectionMapping, LineBasicMaterial, Material, MeshStandardMaterial, Object3D, sRGBEncoding, Texture, Vector3, WebGLCubeRenderTarget, WebGLRenderTarget } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { getWorldPosition, getWorldScale } from \"../engine/engine_three_utils\";\r\nimport { IRenderer } from \"../engine/engine_types\";\r\nimport { BoxHelperComponent } from \"./BoxHelperComponent\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\n\r\nexport const debug = getParam(\"debugreflectionprobe\");\r\nconst disable = getParam(\"noreflectionprobe\");\r\n\r\nconst $reflectionProbeKey = Symbol(\"reflectionProbeKey\");\r\nconst $originalMaterial = Symbol(\"original material\");\r\n\r\nexport class ReflectionProbe extends Behaviour {\r\n\r\n    private static _probes: Map<Context, ReflectionProbe[]> = new Map();\r\n\r\n    public static get(object: Object3D | null | undefined, context: Context, isAnchor: boolean): ReflectionProbe | null {\r\n        if (!object || object.isObject3D !== true) return null;\r\n        if (disable) return null;\r\n        const probes = ReflectionProbe._probes.get(context);\r\n        if (probes) {\r\n            for (const probe of probes) {\r\n                if (!probe.__didAwake) probe.__internalAwake();\r\n                if (probe.enabled && probe.isInBox(object, isAnchor ? .00000001 : undefined)) {\r\n                    if (debug) console.log(\"Found reflection probe\", object.name, probe.name);\r\n                    return probe;\r\n                }\r\n            }\r\n        }\r\n        if (debug)\r\n            console.debug(\"Did not find reflection probe\", object.name, isAnchor, object);\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    private _texture!: Texture;\r\n    set texture(tex: Texture) {\r\n        this._texture = tex;\r\n    }\r\n    get texture(): Texture {\r\n        return this._texture;\r\n    }\r\n\r\n    @serializable(Vector3)\r\n    center?: Vector3;\r\n    @serializable(Vector3)\r\n    size?: Vector3;\r\n\r\n    private _boxHelper?: BoxHelperComponent;\r\n\r\n    private isInBox(obj: Object3D, scaleFactor?: number) {\r\n        return this._boxHelper?.isInBox(obj, scaleFactor);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        if (!ReflectionProbe._probes.has(this.context)) {\r\n            ReflectionProbe._probes.set(this.context, []);\r\n        }\r\n        ReflectionProbe._probes.get(this.context)?.push(this);\r\n    }\r\n\r\n    awake() {\r\n        this._boxHelper = this.gameObject.addNewComponent(BoxHelperComponent) as BoxHelperComponent;\r\n        this._boxHelper.updateBox(true);\r\n        if (debug)\r\n            this._boxHelper.showHelper(0x555500, true);\r\n\r\n        if (this.texture) {\r\n            this.texture.mapping = EquirectangularReflectionMapping;\r\n            this.texture.encoding = sRGBEncoding;\r\n            // this.texture.rotation = Math.PI;\r\n            // this.texture.flipY = true;\r\n            this.texture.needsUpdate = true;\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        const probes = ReflectionProbe._probes.get(this.context);\r\n        if (probes) {\r\n            const index = probes.indexOf(this);\r\n            if (index >= 0) {\r\n                probes.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // when objects are rendered and they share material\r\n    // and some need reflection probe and some don't\r\n    // we need to make sure we don't override the material but use a copy\r\n\r\n    private static _rendererMaterialsCache: Map<IRenderer, Array<{ material: Material, copy: Material }>> = new Map();\r\n\r\n    onSet(_rend: IRenderer) {\r\n        if (disable) return;\r\n        if (_rend.sharedMaterials?.length <= 0) return;\r\n        if (!this.texture) return;\r\n\r\n        let rendererCache = ReflectionProbe._rendererMaterialsCache.get(_rend);\r\n        if (!rendererCache) {\r\n            rendererCache = [];\r\n            ReflectionProbe._rendererMaterialsCache.set(_rend, rendererCache);\r\n        }\r\n\r\n        // TODO: dont clone material for every renderer that uses reflection probes, we can do it once per material when they use the same reflection texture\r\n\r\n        // need to make sure materials are not shared when using reflection probes\r\n        // otherwise some renderers outside of the probe will be affected or vice versa\r\n        for (let i = 0; i < _rend.sharedMaterials.length; i++) {\r\n            const material = _rend.sharedMaterials[i];\r\n            if (!material) continue;\r\n            if (material[\"envMap\"] === undefined) continue;\r\n            if (material[\"envMap\"] === this.texture) {\r\n                continue;\r\n            }\r\n            let cached = rendererCache[i];\r\n\r\n            // make sure we have the currently assigned material cached (and an up to date clone of that)\r\n            if (!cached || cached.material !== material || cached.material.version !== material.version) {\r\n                const clone = material.clone();\r\n\r\n                if (cached) {\r\n                    cached.copy = clone;\r\n                    cached.material = material;\r\n                }\r\n                else {\r\n                    cached = {\r\n                        material: material,\r\n                        copy: clone\r\n                    };\r\n                    rendererCache.push(cached);\r\n                }\r\n\r\n                clone[$reflectionProbeKey] = this;\r\n                clone[$originalMaterial] = material;\r\n\r\n                // make sure the reflection probe is assigned\r\n                clone[\"envMap\"] = this.texture;\r\n\r\n                if (debug)\r\n                    console.log(\"Set reflection\", _rend.name, _rend.guid);\r\n            }\r\n\r\n            /** this is the material that we copied and that has the reflection probe */\r\n            const copy = cached?.copy;\r\n\r\n            _rend.sharedMaterials[i] = copy;\r\n        }\r\n    }\r\n\r\n    onUnset(_rend: IRenderer) {\r\n        const rendererCache = ReflectionProbe._rendererMaterialsCache.get(_rend);\r\n        if (rendererCache) {\r\n            for (let i = 0; i < rendererCache.length; i++) {\r\n                const cached = rendererCache[i];\r\n                _rend.sharedMaterials[i] = cached.material;\r\n            }\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\n// import { RendererCustomShader } from \"./RendererCustomShader\";\r\nimport { RendererLightmap } from \"./RendererLightmap\";\r\nimport { Context, FrameEvent } from \"../engine/engine_setup\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { AxesHelper, Material, Mesh, Object3D, SkinnedMesh, Texture, Vector4 } from \"three\";\r\nimport { NEEDLE_render_objects } from \"../engine/extensions/NEEDLE_render_objects\";\r\nimport { NEEDLE_progressive } from \"../engine/extensions/NEEDLE_progressive\";\r\nimport { NEED_UPDATE_INSTANCE_KEY } from \"../engine/engine_instancing\";\r\nimport { IRenderer, ISharedMaterials } from \"../engine/engine_types\";\r\nimport { debug, ReflectionProbe } from \"./ReflectionProbe\";\r\nimport { setCustomVisibility } from \"../engine/js-extensions/Layers\";\r\n\r\n// for staying compatible with old code\r\nexport { InstancingUtil } from \"../engine/engine_instancing\";\r\n\r\nconst suppressInstancing = getParam(\"noInstancing\");\r\nconst debugLightmap = getParam(\"debuglightmaps\") ? true : false;\r\nconst debugInstancing = getParam(\"debuginstancing\");\r\nconst debugProgressiveLoading = getParam(\"debugprogressive\");\r\nconst suppressProgressiveLoading = getParam(\"noprogressive\");\r\n\r\n\r\nexport enum ReflectionProbeUsage {\r\n    Off = 0,\r\n    BlendProbes = 1,\r\n    BlendProbesAndSkybox = 2,\r\n    Simple = 3,\r\n}\r\n\r\n\r\nexport class FieldWithDefault {\r\n    public path: string | null = null;\r\n    public asset: object | null = null;\r\n    public default: any;\r\n}\r\n\r\nexport enum RenderState {\r\n    Both = 0,\r\n    Back = 1,\r\n    Front = 2,\r\n}\r\n\r\n\r\n// support sharedMaterials[index] assigning materials directly to the objects\r\nclass SharedMaterialArray implements ISharedMaterials {\r\n\r\n    [num: number]: THREE.Material;\r\n\r\n    private _renderer: Renderer;\r\n    private _targets: THREE.Object3D[] = [];\r\n\r\n\r\n    is(renderer: Renderer) {\r\n        return this._renderer === renderer;\r\n    }\r\n\r\n    constructor(renderer: Renderer) {\r\n        this._renderer = renderer;\r\n        const setMaterial = this.setMaterial.bind(this);\r\n        const getMaterial = this.getMaterial.bind(this);\r\n        const go = renderer.gameObject;\r\n        this._targets = [];\r\n        if (go) {\r\n            switch (go.type) {\r\n                case \"Group\":\r\n                    this._targets = [...go.children];\r\n                    break;\r\n                case \"SkinnedMesh\":\r\n                case \"Mesh\":\r\n                    this._targets.push(go);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // this lets us override the javascript indexer, only works in ES6 tho\r\n        // but like that we can use sharedMaterials[index] and it will be assigned to the object directly\r\n        return new Proxy(this, {\r\n            get(target, key) {\r\n                if (typeof key === \"string\") {\r\n                    const index = parseInt(key);\r\n                    if (!isNaN(index)) {\r\n                        return getMaterial(index);\r\n                    }\r\n                }\r\n                return target[key];\r\n            },\r\n            set(target, key, value) {\r\n                if (typeof key === \"string\")\r\n                    setMaterial(value, Number.parseInt(key));\r\n                // console.log(target, key, value);\r\n                return Reflect.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    get length(): number {\r\n        return this._targets.length;\r\n    }\r\n\r\n    private setMaterial(mat: Material, index: number) {\r\n        if (index < 0 || index >= this._targets.length) return;\r\n        const target = this._targets[index];\r\n        if (!target || target[\"material\"] === undefined) return;\r\n        target[\"material\"] = mat;\r\n    }\r\n\r\n    private getMaterial(index: number) {\r\n        if (index < 0) return null;\r\n        const obj = this._targets;\r\n        if (index >= obj.length) return null;\r\n        const target = obj[index];\r\n        if (!target) return null;\r\n        return target[\"material\"];\r\n    }\r\n\r\n}\r\n\r\nexport class Renderer extends Behaviour implements IRenderer {\r\n\r\n    /** Set the rendering state only of an object (makes it visible or invisible) without affecting component state or child hierarchy visibility! You can also just enable/disable the Renderer component on that object for the same effect!\r\n     * \r\n     * If you want to activate or deactivate a complete object you can use obj.visible as usual (it acts the same as setActive in Unity) */\r\n    static setVisible(obj: Object3D, visible: boolean) {\r\n        setCustomVisibility(obj, visible);\r\n    }\r\n\r\n    @serializable()\r\n    receiveShadows: boolean = false;\r\n    @serializable()\r\n    shadowCastingMode: ShadowCastingMode = ShadowCastingMode.Off;\r\n    @serializable()\r\n    lightmapIndex: number = -1;\r\n    @serializable(Vector4)\r\n    lightmapScaleOffset: THREE.Vector4 = new THREE.Vector4(1, 1, 0, 0);\r\n    @serializable()\r\n    enableInstancing: boolean[] | undefined = undefined;\r\n    @serializable()\r\n    renderOrder: number[] | undefined = undefined;\r\n    @serializable()\r\n    allowOcclusionWhenDynamic: boolean = true;\r\n\r\n    @serializable(Object3D)\r\n    probeAnchor?: Object3D;\r\n    @serializable()\r\n    reflectionProbeUsage: ReflectionProbeUsage = ReflectionProbeUsage.Off;\r\n\r\n    // custom shader\r\n    // get materialProperties(): Array<MaterialProperties> | undefined {\r\n    //     return this._materialProperties;\r\n    // }\r\n    // set materialProperties(value: Array<MaterialProperties> | undefined) {\r\n    //     this._materialProperties = value;\r\n    // }\r\n\r\n    // private customShaderHandler: RendererCustomShader | undefined = undefined;\r\n\r\n    // private _materialProperties: Array<MaterialProperties> | undefined = undefined;\r\n    private _lightmaps?: RendererLightmap[];\r\n\r\n    get sharedMesh(): Mesh | undefined {\r\n        if (this.gameObject.type === \"Mesh\") {\r\n            return this.gameObject as unknown as Mesh\r\n        }\r\n        else if (this.gameObject.type === \"SkinnesMesh\") {\r\n            return this.gameObject as unknown as SkinnedMesh;\r\n        }\r\n        else if (this.gameObject.type === \"Group\") {\r\n            return this.gameObject.children[0] as unknown as Mesh;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get sharedMaterial(): THREE.Material {\r\n        return this.sharedMaterials[0];\r\n    }\r\n\r\n    set sharedMaterial(mat: THREE.Material) {\r\n        this.sharedMaterials[0] = mat;\r\n    }\r\n\r\n    /**@deprecated please use sharedMaterial */\r\n    get material(): THREE.Material {\r\n        return this.sharedMaterials[0];\r\n    }\r\n\r\n    /**@deprecated please use sharedMaterial */\r\n    set material(mat: THREE.Material) {\r\n        this.sharedMaterials[0] = mat;\r\n    }\r\n\r\n    private _sharedMaterials!: SharedMaterialArray;\r\n\r\n    get sharedMaterials(): SharedMaterialArray {\r\n        if (!this._sharedMaterials || !this._sharedMaterials.is(this))\r\n            this._sharedMaterials = new SharedMaterialArray(this);\r\n        return this._sharedMaterials!;\r\n    }\r\n\r\n    public static get shouldSuppressInstancing() {\r\n        return suppressInstancing;\r\n    }\r\n\r\n    private _lightmapTextureOverride: Texture | null | undefined = undefined;\r\n    public get lightmap(): Texture | null {\r\n        if (this._lightmaps?.length) {\r\n            return this._lightmaps[0].lightmap;\r\n        }\r\n        return null;\r\n    }\r\n    public set lightmap(tex: Texture | null | undefined) {\r\n        this._lightmapTextureOverride = tex;\r\n        // set undefined to return to default\r\n        if (tex === undefined) {\r\n            tex = this.context.lightmaps.tryGetLightmap(this.sourceId, this.lightmapIndex);\r\n        }\r\n        if (this._lightmaps?.length) {\r\n            for (const lm of this._lightmaps) {\r\n                lm.lightmap = tex;\r\n            }\r\n        }\r\n    }\r\n    get hasLightmap(): boolean {\r\n        const lm = this.lightmap;\r\n        return lm !== null && lm !== undefined;\r\n    }\r\n\r\n    allowProgressiveLoading: boolean = true;\r\n\r\n    awake() {\r\n        this.clearInstancingState();\r\n\r\n        if (this.probeAnchor && debug) this.probeAnchor.add(new AxesHelper(.2));\r\n\r\n        this._reflectionProbe = null;\r\n\r\n        const type = this.gameObject.type;\r\n        if (this.isMultiMaterialObject(this.gameObject)) {\r\n            for (const child of this.gameObject.children) {\r\n                this.context.addBeforeRenderListener(child, this.onBeforeRenderThree.bind(this));\r\n                child.layers.mask = this.gameObject.layers.mask;\r\n            }\r\n\r\n            if (this.renderOrder !== undefined) {\r\n                // Objects can have nested renderers (e.g. contain 2 meshes and then again another group)\r\n                // or perhaps just regular child objects that have their own renderer component (?)\r\n                let index = 0;\r\n                for (let i = 0; i < this.gameObject.children.length; i++) {\r\n                    const ch = this.gameObject.children[i];\r\n                    // ignore nested groups or objects that have their own renderer (aka their own render order settings)\r\n                    if (ch.type !== \"Mesh\" || GameObject.getComponent(ch, Renderer)) continue;\r\n                    if (this.renderOrder.length <= index) {\r\n                        console.error(\"Incorrect element count\", this);\r\n                        break;\r\n                    }\r\n                    ch.renderOrder = this.renderOrder[index];\r\n                    index += 1;\r\n                }\r\n            }\r\n        }\r\n        // TODO: custom shader with sub materials\r\n        else if (this.isMeshOrSkinnedMesh(this.gameObject)) {\r\n\r\n            this.context.addBeforeRenderListener(this.gameObject, this.onBeforeRenderThree.bind(this));\r\n\r\n            if (this.renderOrder !== undefined && this.renderOrder.length > 0)\r\n                this.gameObject.renderOrder = this.renderOrder[0];\r\n        }\r\n\r\n        if (this.lightmapIndex >= 0) {\r\n            // use the override lightmap if its not undefined\r\n            const tex = this._lightmapTextureOverride !== undefined\r\n                ? this._lightmapTextureOverride\r\n                : this.context.lightmaps.tryGetLightmap(this.sourceId, this.lightmapIndex);\r\n            if (tex) {\r\n                // tex.encoding = THREE.LinearEncoding;\r\n                this._lightmaps = [];\r\n\r\n                if (type === \"Mesh\") {\r\n                    if (!this.gameObject[\"material\"]?.isMeshBasicMaterial === true) {\r\n                        const rm = new RendererLightmap(this.gameObject, this.context);// GameObject.addNewComponent(this.gameObject, RendererLightmap);\r\n                        this._lightmaps.push(rm);\r\n                        rm.init(this.lightmapIndex, this.lightmapScaleOffset, tex, debugLightmap);\r\n                    }\r\n                }\r\n                // for multi materials we need to loop through children \r\n                // and then we add a lightmap renderer component to each of them\r\n                else if (this.isMultiMaterialObject(this.gameObject)) {\r\n                    for (const child of this.gameObject.children) {\r\n                        if (!child[\"material\"]?.isMeshBasicMaterial) {\r\n                            const rm = new RendererLightmap(child as GameObject, this.context);\r\n                            this._lightmaps.push(rm);\r\n                            rm.init(this.lightmapIndex, this.lightmapScaleOffset, tex, debugLightmap);\r\n                            // onBeforeRender is not called when the renderer is on a group\r\n                            // this is an issue we probably also need to handle for custom shaders\r\n                            // and need a better solution, but for now this fixes lightmaps for multimaterial objects\r\n                            rm.bindOnBeforeRender();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _isInstancingEnabled: boolean = false;\r\n    private handles: InstanceHandle[] | null | undefined = undefined;\r\n    private prevLayers: number[] | null | undefined = undefined;\r\n\r\n    private clearInstancingState() {\r\n        this._isInstancingEnabled = false;\r\n        this.handles = undefined;\r\n        this.prevLayers = undefined;\r\n    }\r\n    setInstancingEnabled(enabled: boolean): boolean {\r\n        if (this._isInstancingEnabled === enabled) return enabled && (this.handles === undefined || this.handles != null && this.handles.length > 0);\r\n        this._isInstancingEnabled = enabled;\r\n        if (enabled) {\r\n            // if handles is undefined we\r\n            if (this.handles === undefined) {\r\n                this.handles = instancing.setup(this.gameObject, this.context, null, { rend: this, foundMeshes: 0 });\r\n                if (this.handles) {\r\n                    // const disableSelf = this.gameObject.type === \"Mesh\" || this.gameObject.children?.length === this.handles.length;\r\n                    // this.gameObject.visible = !disableSelf;\r\n                    // this.gameObject.type = \"Object3D\";\r\n                    // this.gameObject.material = null;\r\n                    // console.log(\"Using instancing\", this.gameObject.visible);\r\n                    // this.gameObject.onBeforeRender = () => console.log(\"SHOULD NOT BE CALLED\");\r\n                    GameObject.markAsInstancedRendered(this.gameObject, true);\r\n                    return true;\r\n                }\r\n            }\r\n            else if (this.handles !== null) {\r\n                for (const handler of this.handles) {\r\n                    handler.updateInstanceMatrix(true);\r\n                    handler.add();\r\n                }\r\n                // this.gameObject.type = \"Object3D\";\r\n                // this.gameObject.visible = false;\r\n                GameObject.markAsInstancedRendered(this.gameObject, true);\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            if (this.handles) {\r\n                for (const handler of this.handles) {\r\n                    handler.remove();\r\n                }\r\n            }\r\n            // this.gameObject.visible = true;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    start() {\r\n        if (this.enableInstancing && !suppressInstancing) {\r\n            this.setInstancingEnabled(true);\r\n        }\r\n        this.gameObject.frustumCulled = this.allowOcclusionWhenDynamic;\r\n        if (this.isMultiMaterialObject(this.gameObject)) {\r\n            for (let i = 0; i < this.gameObject.children.length; i++) {\r\n                const ch = this.gameObject.children[i];\r\n                ch.frustumCulled = this.allowOcclusionWhenDynamic;\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        this.setVisibility(true);\r\n\r\n        if (this._isInstancingEnabled) {\r\n            this.setInstancingEnabled(true);\r\n        }\r\n        else if (this.enabled) {\r\n            // this.gameObject.visible = true;\r\n            this.applyStencil();\r\n        }\r\n\r\n        this.updateReflectionProbe();\r\n    }\r\n\r\n    onDisable() {\r\n        this.setVisibility(false);\r\n\r\n        if (this.handles && this.handles.length > 0) {\r\n            this.setInstancingEnabled(false);\r\n        }\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.handles = null;\r\n    }\r\n\r\n    applyStencil() {\r\n        NEEDLE_render_objects.applyStencil(this);\r\n    }\r\n\r\n    static envmap: THREE.Texture | null = null;\r\n\r\n    onBeforeRender() {\r\n        if (!this.gameObject) {\r\n            return;\r\n        }\r\n\r\n        Renderer.envmap = this.scene.environment;\r\n\r\n        const needsUpdate: boolean = this.gameObject[NEED_UPDATE_INSTANCE_KEY] === true || this.gameObject.matrixWorldNeedsUpdate;\r\n\r\n        if (this.isMultiMaterialObject(this.gameObject) && this.gameObject.children?.length > 0) {\r\n            for (const ch of this.gameObject.children) {\r\n                this.applySettings(ch);\r\n            }\r\n        }\r\n        else {\r\n            this.applySettings(this.gameObject);\r\n        }\r\n\r\n        if (needsUpdate) {\r\n            delete this.gameObject[NEED_UPDATE_INSTANCE_KEY];\r\n            if (this.handles) {\r\n                const remove = false;// Math.random() < .01;\r\n                for (let i = this.handles.length - 1; i >= 0; i--) {\r\n                    const h = this.handles[i];\r\n                    if (remove) {\r\n                        h.remove();\r\n                        this.handles.splice(i, 1);\r\n                    }\r\n                    else\r\n                        h.updateInstanceMatrix();\r\n                }\r\n                this.gameObject.matrixWorldNeedsUpdate = false;\r\n            }\r\n        }\r\n\r\n        if (this.handles && this.handles.length <= 0) {\r\n            GameObject.markAsInstancedRendered(this.gameObject, false);\r\n        }\r\n\r\n        if (this._isInstancingEnabled && this.handles) {\r\n            for (let i = 0; i < this.handles.length; i++) {\r\n                const handle = this.handles[i];\r\n                if (!this.prevLayers) this.prevLayers = [];\r\n                const layer = handle.object.layers.mask;\r\n                if (i >= this.prevLayers.length) this.prevLayers.push(layer);\r\n                else this.prevLayers[i] = layer;\r\n                handle.object.layers.disableAll();\r\n            }\r\n        }\r\n\r\n        if (this.reflectionProbeUsage !== ReflectionProbeUsage.Off && this._reflectionProbe) {\r\n            this._reflectionProbe.onSet(this);\r\n        }\r\n\r\n    }\r\n\r\n    onBeforeRenderThree(_renderer, _scene, _camera, _geometry, material, _group) {\r\n\r\n        // progressive load before rendering so we only load textures for visible materials\r\n        if (!suppressProgressiveLoading && material._didRequestTextureLOD === undefined && this.allowProgressiveLoading) {\r\n            material._didRequestTextureLOD = 0;\r\n            if (debugProgressiveLoading) {\r\n                console.log(\"Load material LOD (with delay)\", material.name);\r\n                setTimeout(() => {\r\n                    NEEDLE_progressive.assignTextureLOD(this.context, this.sourceId, material);\r\n                }, 2000);\r\n            }\r\n            else {\r\n                NEEDLE_progressive.assignTextureLOD(this.context, this.sourceId, material);\r\n            }\r\n        }\r\n\r\n        if (material.envMapIntensity !== undefined) {\r\n            const factor = this.hasLightmap ? Math.PI : 1;\r\n            material.envMapIntensity = Math.max(0, this.context.rendererData.environmentIntensity / factor);\r\n        }\r\n        // if (this._reflectionProbe?.texture) {\r\n        //     material.envMap = this._reflectionProbe.texture;\r\n        //     // this.context.renderer.prop\r\n        //     // console.log(material.name);\r\n        //     // this.context.renderer.properties.get(material);\r\n        //     // this.context.renderer.properties.update(material, \"environment\", this._reflectionProbe.texture);\r\n        // }\r\n\r\n        //     _scene.environment = null;\r\n        // else _scene.environment = Renderer.envmap;\r\n        // if (!material.envmap)\r\n        //     material.envMap = Renderer.envmap;\r\n        // material.needsUpdate = true;\r\n\r\n        // if (!camera) {\r\n        //     let isXRCamera = false;\r\n        //     if (this.context.isInXR) {\r\n        //         // @ts-ignore\r\n        //         const arr = this.context.renderer.xr.getCamera() as ArrayCamera;\r\n        //         if (arr.cameras?.length > 0) {\r\n        //             camera = arr;\r\n        //             isXRCamera = true;\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // if (this.customShaderHandler) {\r\n        //     this.customShaderHandler.onBeforeRender(renderer, scene, camera, geometry, material, group);\r\n        // }\r\n        // else if (this.rawShaderHandler) {\r\n        //     for (const h of this.rawShaderHandler) {\r\n        //         h.onBeforeRender(this.gameObject, camera);\r\n        //     }\r\n        // }\r\n\r\n        if (this._lightmaps) {\r\n            for (const lm of this._lightmaps) {\r\n                lm.onBeforeRenderThree(material);\r\n            }\r\n        }\r\n    }\r\n\r\n    onAfterRender() {\r\n        if (this._isInstancingEnabled && this.handles && this.prevLayers && this.prevLayers.length >= this.handles.length) {\r\n            for (let i = 0; i < this.handles.length; i++) {\r\n                const handle = this.handles[i];\r\n                handle.object.layers.mask = this.prevLayers[i];\r\n            }\r\n        }\r\n\r\n        if (this.reflectionProbeUsage !== ReflectionProbeUsage.Off && this._reflectionProbe) {\r\n            this._reflectionProbe.onUnset(this)\r\n        }\r\n    }\r\n\r\n    private applySettings(go: THREE.Object3D) {\r\n        go.receiveShadow = this.receiveShadows;\r\n        if (this.shadowCastingMode == ShadowCastingMode.On) {\r\n            go.castShadow = true;\r\n        }\r\n        else go.castShadow = false;\r\n    }\r\n\r\n    private _reflectionProbe: ReflectionProbe | null = null;\r\n    private updateReflectionProbe() {\r\n        // handle reflection probe\r\n        this._reflectionProbe = null;\r\n        if (this.reflectionProbeUsage !== ReflectionProbeUsage.Off) {\r\n            if (!this.probeAnchor) return;\r\n            // update the reflection probe right before rendering\r\n            // if we do it immediately the reflection probe might not be enabled yet \r\n            // (since this method is called from onEnable)\r\n            this.startCoroutine(this._updateReflectionProbe(), FrameEvent.OnBeforeRender);\r\n        }\r\n    }\r\n    private *_updateReflectionProbe(){\r\n        const obj = this.probeAnchor || this.gameObject;\r\n        const isAnchor = this.probeAnchor ? true : false;\r\n        this._reflectionProbe = ReflectionProbe.get(obj, this.context, isAnchor);\r\n    }\r\n\r\n    private setVisibility(visible: boolean) {\r\n\r\n        if (!this.isMultiMaterialObject(this.gameObject)) {\r\n            setCustomVisibility(this.gameObject, visible);\r\n        }\r\n        else {\r\n            for (const ch of this.gameObject.children) {\r\n                if (this.isMeshOrSkinnedMesh(ch)) {\r\n                    setCustomVisibility(ch, visible);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private isMultiMaterialObject(obj: Object3D) {\r\n        return obj.type === \"Group\";\r\n    }\r\n\r\n    private isMeshOrSkinnedMesh(obj: Object3D): obj is Mesh | SkinnedMesh {\r\n        return obj.type === \"Mesh\" || obj.type === \"SkinnedMesh\";\r\n    }\r\n}\r\n\r\nexport class MeshRenderer extends Renderer {\r\n\r\n}\r\n\r\nexport class SkinnedMeshRenderer extends MeshRenderer {\r\n    awake() {\r\n        super.awake();\r\n        // disable skinned mesh occlusion because of https://github.com/mrdoob/three.js/issues/14499\r\n        this.allowOcclusionWhenDynamic = false;\r\n    }\r\n}\r\n\r\nexport enum ShadowCastingMode {\r\n    /// <summary>\r\n    ///   <para>No shadows are cast from this object.</para>\r\n    /// </summary>\r\n    Off,\r\n    /// <summary>\r\n    ///   <para>Shadows are cast from this object.</para>\r\n    /// </summary>\r\n    On,\r\n    /// <summary>\r\n    ///   <para>Shadows are cast from this object, treating it as two-sided.</para>\r\n    /// </summary>\r\n    TwoSided,\r\n    /// <summary>\r\n    ///   <para>Object casts shadows, but is otherwise invisible in the Scene.</para>\r\n    /// </summary>\r\n    ShadowsOnly,\r\n}\r\n\r\n\r\n\r\ndeclare class InstancingSetupArgs { rend: Renderer; foundMeshes: number };\r\n\r\nclass InstancingHandler {\r\n\r\n    public objs: InstancedMeshRenderer[] = [];\r\n\r\n    public setup(obj: THREE.Object3D, context: Context, handlesArray: InstanceHandle[] | null, args: InstancingSetupArgs, level: number = 0)\r\n        : InstanceHandle[] | null {\r\n\r\n        const res = this.tryCreateOrAddInstance(obj, context, args);\r\n        if (res) {\r\n            if (handlesArray === null) handlesArray = [];\r\n            handlesArray.push(res);\r\n            return handlesArray;\r\n        }\r\n\r\n        if (level <= 0 && obj.type !== \"Mesh\") {\r\n            const nextLevel = level + 1;\r\n            for (const ch of obj.children) {\r\n                handlesArray = this.setup(ch, context, handlesArray, args, nextLevel);\r\n            }\r\n        }\r\n        return handlesArray;\r\n    }\r\n\r\n    private tryCreateOrAddInstance(obj: THREE.Object3D, context: Context, args: InstancingSetupArgs): InstanceHandle | null {\r\n        if (obj.type === \"Mesh\") {\r\n            const index = args.foundMeshes;\r\n            args.foundMeshes += 1;\r\n            if (!args.rend.enableInstancing) return null;\r\n            if (index >= args.rend.enableInstancing.length) {\r\n                // console.error(\"Something is wrong with instance setup\", obj, args.rend.enableInstancing, index);\r\n                return null;\r\n            }\r\n            if (!args.rend.enableInstancing[index]) {\r\n                // instancing is disabled\r\n                // console.log(\"Instancing is disabled\", obj);\r\n                return null;\r\n            }\r\n            // instancing is enabled:\r\n            const mesh = obj as THREE.Mesh;\r\n            const geo = mesh.geometry as THREE.BufferGeometry;\r\n            const mat = mesh.material as THREE.Material;\r\n\r\n            for (const i of this.objs) {\r\n                if (i.isFull()) continue;\r\n                if (i.geo === geo && i.material === mat) {\r\n                    return i.addInstance(mesh);\r\n                }\r\n            }\r\n            // console.log(\"Add new instance mesh renderer\", obj);\r\n            const i = new InstancedMeshRenderer(obj.name, geo, mat, 200, context);\r\n            this.objs.push(i);\r\n            return i.addInstance(mesh);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nconst instancing: InstancingHandler = new InstancingHandler();\r\n\r\nclass InstanceHandle {\r\n\r\n    get name(): string {\r\n        return this.object.name;\r\n    }\r\n\r\n    instanceIndex: number = -1;\r\n    object: THREE.Mesh;\r\n    instancer: InstancedMeshRenderer;\r\n\r\n    constructor(instanceIndex: number, originalObject: THREE.Mesh, instancer: InstancedMeshRenderer) {\r\n        this.instanceIndex = instanceIndex;\r\n        this.object = originalObject;\r\n        this.instancer = instancer;\r\n        GameObject.markAsInstancedRendered(originalObject, true);\r\n        // this.object.visible = false;\r\n    }\r\n\r\n    updateInstanceMatrix(updateChildren: boolean = false) {\r\n        if (this.instanceIndex < 0) return;\r\n        this.object.updateWorldMatrix(true, updateChildren);\r\n        this.instancer.updateInstance(this.object.matrixWorld, this.instanceIndex);\r\n    }\r\n\r\n    add() {\r\n        if (this.instanceIndex >= 0) return;\r\n        this.instancer.add(this);\r\n    }\r\n\r\n    remove() {\r\n        if (this.instanceIndex < 0) return;\r\n        this.instancer.remove(this);\r\n    }\r\n}\r\n\r\nclass InstancedMeshRenderer {\r\n\r\n    public name: string = \"\";\r\n    public geo: THREE.BufferGeometry;\r\n    public material: THREE.Material;\r\n    get currentCount(): number { return this.inst.count; }\r\n\r\n    private context: Context;\r\n    private inst: THREE.InstancedMesh;\r\n    private handles: (InstanceHandle | null)[] = [];\r\n    private maxCount: number;\r\n\r\n    private static nullMatrix: THREE.Matrix4 = new THREE.Matrix4();\r\n\r\n    isFull(): boolean {\r\n        return this.currentCount >= this.maxCount;\r\n    }\r\n\r\n    constructor(name: string, geo: THREE.BufferGeometry, material: THREE.Material, count: number, context: Context) {\r\n        this.name = name;\r\n        this.geo = geo;\r\n        this.material = material;\r\n        this.context = context;\r\n        this.maxCount = count;\r\n        if (debugInstancing) {\r\n            material = new THREE.MeshBasicMaterial({ color: this.randomColor() });\r\n        }\r\n        this.inst = new THREE.InstancedMesh(geo, material, count);\r\n        this.inst.count = 0;\r\n        this.inst.layers.set(2);\r\n        this.inst.visible = true;\r\n        // this.inst.castShadow = true;\r\n        // this.inst.receiveShadow = true;\r\n        this.context.scene.add(this.inst);\r\n        // console.log(this.inst);\r\n        // this.context.pre_render_callbacks.push(this.onPreRender.bind(this));\r\n\r\n        // setInterval(() => {\r\n        //     this.inst.visible = !this.inst.visible;\r\n        // }, 500);\r\n    }\r\n\r\n    private randomColor() {\r\n        return new THREE.Color(Math.random(), Math.random(), Math.random());\r\n    }\r\n\r\n    addInstance(obj: THREE.Mesh): InstanceHandle | null {\r\n        if (this.currentCount >= this.maxCount) {\r\n            console.error(\"TOO MANY INSTANCES - resize is not yet implemented!\", this.inst.count); // todo: make it resize\r\n            return null;\r\n        }\r\n        const handle = new InstanceHandle(-1, obj, this);\r\n        this.add(handle);\r\n        return handle;\r\n    }\r\n\r\n\r\n    add(handle: InstanceHandle) {\r\n        if (handle.instanceIndex < 0) {\r\n            handle.instanceIndex = this.currentCount;\r\n            // console.log(handle.instanceIndex, this.currentCount);\r\n            if (handle.instanceIndex >= this.handles.length)\r\n                this.handles.push(handle);\r\n            else this.handles[handle.instanceIndex] = handle;\r\n        }\r\n        // console.log(\"Handle instance\");\r\n        handle.object.updateWorldMatrix(true, true);\r\n        this.inst.setMatrixAt(handle.instanceIndex, handle.object.matrixWorld);\r\n        this.inst.instanceMatrix.needsUpdate = true;\r\n        this.inst.count += 1;\r\n\r\n        if (this.inst.count > 0)\r\n            this.inst.visible = true;\r\n\r\n        // console.log(\"Added\", this.name, this.inst.count, this.handles);\r\n    }\r\n\r\n    remove(handle: InstanceHandle) {\r\n        if (!handle) return;\r\n        if (handle.instanceIndex < 0 || handle.instanceIndex >= this.handles.length || this.inst.count <= 0) {\r\n            return;\r\n        }\r\n        if (this.handles[handle.instanceIndex] !== handle) {\r\n            console.error(\"instance handle is not part of renderer, was it removed before?\", handle.instanceIndex, this.name);\r\n            const index = this.handles.indexOf(handle);\r\n            if (index < 0)\r\n                return;\r\n            handle.instanceIndex = index;\r\n        }\r\n        this.handles[handle.instanceIndex] = null;\r\n        this.inst.setMatrixAt(handle.instanceIndex, InstancedMeshRenderer.nullMatrix);\r\n        const removedLastElement = handle.instanceIndex >= this.currentCount - 1;\r\n        // console.log(removedLastElement, this.currentCount, handle.instanceIndex, this.handles);\r\n        if (!removedLastElement && this.currentCount > 0) {\r\n            const lastElement = this.handles[this.currentCount - 1];\r\n            if (lastElement) {\r\n                lastElement.instanceIndex = handle.instanceIndex;\r\n                lastElement.updateInstanceMatrix();\r\n                this.handles[handle.instanceIndex] = lastElement;\r\n                this.handles[this.currentCount - 1] = null;\r\n                // this.inst.setMatrixAt(handle.instanceIndex, lastElement.object.matrixWorld);\r\n                // this.inst.setMatrixAt(this.currentCount - 1, InstancedMeshRenderer.nullMatrix);\r\n            }\r\n        }\r\n\r\n        if (this.inst.count > 0)\r\n            this.inst.count -= 1;\r\n        handle.instanceIndex = -1;\r\n\r\n        if (this.inst.count <= 0)\r\n            this.inst.visible = false;\r\n\r\n        this.inst.instanceMatrix.needsUpdate = true;\r\n    }\r\n\r\n    updateInstance(mat: THREE.Matrix4, index: number) {\r\n        this.inst.setMatrixAt(index, mat);\r\n        this.inst.instanceMatrix.needsUpdate = true;\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { Texture } from \"three\";\r\nimport { Context, OnBeforeRenderCallback } from \"../engine/engine_setup\";\r\n\r\n// this component is automatically added by the Renderer if the object has lightmap uvs AND we have a lightmap\r\n// for multimaterial objects GLTF exports a \"Group\" with the renderer component\r\n// and every child mesh is a material from unity\r\nexport class RendererLightmap {\r\n\r\n    get lightmap(): Texture | null {\r\n        return this.lightmapTexture;\r\n    }\r\n    set lightmap(tex: Texture | null) {\r\n        if (tex !== this.lightmapTexture) {\r\n            this.lightmapTexture = tex;\r\n            this.setupLightmap();\r\n        }\r\n    }\r\n\r\n    lightmapIndex: number = -1;\r\n    lightmapScaleOffset: THREE.Vector4 = new THREE.Vector4(1, 1, 0, 0);\r\n\r\n    private context: Context;\r\n    private gameObject: GameObject;\r\n    private lightmapTexture: THREE.Texture | null = null;\r\n    private lightmapScaleOffsetUniform = { value: new THREE.Vector4(1, 1, 0, 0) };\r\n    private lightmapUniform: { value: THREE.Texture | null } = { value: null };\r\n\r\n    private beforeRenderCallback?: OnBeforeRenderCallback;\r\n\r\n    constructor(gameObject: GameObject, context: Context) {\r\n        this.gameObject = gameObject;\r\n        this.context = context;\r\n    }\r\n\r\n    init(lightmapIndex: number, lightmapScaleOffset: THREE.Vector4, lightmapTexture: THREE.Texture, debug: boolean = false) {\r\n        console.assert(this.gameObject !== undefined && this.gameObject !== null, \"Missing gameobject\", this);\r\n\r\n        this.lightmapIndex = lightmapIndex;\r\n        if (this.lightmapIndex < 0) return;\r\n        this.lightmapScaleOffset = lightmapScaleOffset;\r\n        this.lightmapTexture = lightmapTexture;\r\n\r\n        const debugLightmaps = debug;\r\n        if (debugLightmaps) this.setLightmapDebugMaterial();\r\n        this.setupLightmap();\r\n    }\r\n\r\n    bindOnBeforeRender() {\r\n        this.beforeRenderCallback = this.onBeforeRenderThreeComplete.bind(this);\r\n        this.context.addBeforeRenderListener(this.gameObject, this.beforeRenderCallback);\r\n        // this.gameObject.onBeforeRender = this.onBeforeRenderThreeComplete.bind(this);\r\n    }\r\n\r\n    private onBeforeRenderThreeComplete(_renderer, _scene, _camera, _geometry, material, _group) {\r\n        this.onBeforeRenderThree(material);\r\n    }\r\n\r\n    private setupLightmap() {\r\n\r\n        if (this.gameObject.type === \"Object3D\") {\r\n            // console.warn(\"Can not add lightmap. Is this object missing a renderer?\");\r\n            return;\r\n        }\r\n\r\n        if (this.gameObject.type === \"Group\") {\r\n            console.warn(\"Lightmap on multimaterial object is not supported yet... please ask kindly for implementation.\");\r\n            return;\r\n        }\r\n\r\n        console.assert(this.gameObject.type === \"Mesh\", \"Lightmap only works on meshes\", this);\r\n\r\n\r\n        const mesh = this.gameObject as unknown as THREE.Mesh;\r\n        // TODO: ensure uv2 exists\r\n        if (!mesh.geometry.getAttribute(\"uv2\"))\r\n            mesh.geometry.setAttribute(\"uv2\", mesh.geometry.getAttribute(\"uv\"));\r\n\r\n        const mat = this.gameObject[\"material\"].clone();\r\n        this.gameObject[\"material\"] = mat;\r\n\r\n        this.gameObject[\"material\"].onBeforeCompile = (shader, _) => {\r\n            shader.uniforms.lightmap = this.lightmapUniform;\r\n            shader.uniforms.lightmapScaleOffset = this.lightmapScaleOffsetUniform;\r\n        };\r\n\r\n\r\n        if (this.lightmapIndex >= 0) {\r\n            const lightmap = this.lightmapTexture;\r\n            const mat = this.gameObject[\"material\"];\r\n            if (mat && lightmap) {\r\n                if (!mat.uniforms) mat.uniforms = {};\r\n                mat.lightMap = lightmap;\r\n                mat.uniforms.lightmap = { value: lightmap };\r\n            }\r\n        }\r\n    }\r\n\r\n    onBeforeRenderThree(material: THREE.Material) {\r\n\r\n        const uniforms = material[\"uniforms\"];\r\n        if (uniforms && uniforms.lightmap) {\r\n            this.lightmapScaleOffsetUniform.value = this.lightmapScaleOffset;\r\n            this.lightmapUniform.value = this.lightmapTexture;\r\n            uniforms.lightmap = this.lightmapUniform;\r\n            uniforms.lightmapScaleOffset = this.lightmapScaleOffsetUniform;\r\n        }\r\n    }\r\n\r\n    private setLightmapDebugMaterial() {\r\n\r\n        // debug lightmaps\r\n        this.gameObject[\"material\"] = new THREE.ShaderMaterial({\r\n            vertexShader: `\r\n                attribute vec2 uv2;\r\n                varying vec2 vUv2;\r\n                void main()\r\n                {\r\n                    vUv2 = uv2;\r\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n                }\r\n                `,\r\n            fragmentShader: `\r\n                uniform sampler2D lightmap;\r\n                uniform float lightMapIntensity;\r\n                uniform vec4 lightmapScaleOffset;\r\n                varying vec2 vUv2;\r\n\r\n                // took from threejs 05fc79cd52b79e8c3e8dec1e7dca72c5c39983a4\r\n                vec4 conv_sRGBToLinear( in vec4 value ) {\r\n                    return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\r\n                }\r\n\r\n                void main() {\r\n                    vec2 lUv = vUv2.xy * lightmapScaleOffset.xy + vec2(lightmapScaleOffset.z, (1. - (lightmapScaleOffset.y + lightmapScaleOffset.w)));\r\n                    \r\n                    vec4 lightMapTexel = texture2D( lightmap, lUv);\r\n                    // The range of RGBM lightmaps goes from 0 to 34.49 (5^2.2) in linear space, and from 0 to 5 in gamma space.\r\n                    //lightMapTexel.rgb *= lightMapTexel.a * 8.; // no idea where that \"8\" comes from... heuristically derived\r\n                    //lightMapTexel.a = 1.;\r\n                    //lightMapTexel = conv_sRGBToLinear(lightMapTexel);\r\n                    // lightMapTexel.rgb = vec3(1.);\r\n\r\n                    // gl_FragColor = vec4(vUv2.xy, 0, 1);\r\n                    gl_FragColor = lightMapTexel;\r\n                }\r\n                `,\r\n            defines: { USE_LIGHTMAP: '' }\r\n        });\r\n    }\r\n}", "import { Layers, Object3D } from \"three\"\r\n\r\n\r\nconst $customVisibilityFlag = Symbol(\"customVisibilityFlag\");\r\nexport function setCustomVisibility(obj: Object3D, visible: boolean) {\r\n    obj.layers[$customVisibilityFlag] = visible;\r\n}\r\n\r\nconst $didPatch = Symbol(\"DidPatchLayers\");\r\nexport function patchLayers() {\r\n    const prot = Layers.prototype;\r\n    if (prot[$didPatch]) return;\r\n    prot[$didPatch] = true;\r\n    const origTest = prot.test;\r\n    prot.test = function (layer: Layers): boolean {\r\n        if(this[$customVisibilityFlag] === false) return false;\r\n        return origTest.call(this, layer);\r\n    };\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { LinearFilter, Material, Mesh, Object3D, RawShaderMaterial, ShaderMaterial, Texture, TextureLoader, Vector2, Vector4, VideoTexture } from \"three\";\r\nimport { awaitInput } from \"../engine/engine_input_utils\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { getWorldScale } from \"../engine/engine_three_utils\";\r\nimport { ObjectUtils, PrimitiveType } from \"../engine/engine_create_objects\";\r\nimport { Context } from \"../engine/engine_setup\";\r\n\r\nconst debug = getParam(\"debugvideo\");\r\n\r\n\r\nexport enum AspectMode {\r\n    None = 0,\r\n    AdjustHeight = 1,\r\n    AdjustWidth = 2,\r\n}\r\n\r\nexport enum VideoSource {\r\n    /// <summary>\r\n    ///   <para>Use the current clip as the video content source.</para>\r\n    /// </summary>\r\n    VideoClip,\r\n    /// <summary>\r\n    ///   <para>Use the current URL as the video content source.</para>\r\n    /// </summary>\r\n    Url,\r\n}\r\n\r\nexport enum VideoAudioOutputMode {\r\n    None = 0,\r\n    AudioSource = 1,\r\n    Direct = 2,\r\n    APIOnly = 3,\r\n}\r\n\r\nexport enum VideoRenderMode {\r\n    CameraFarPlane = 0,\r\n    CameraNearPlane = 1,\r\n    RenderTexture = 2,\r\n    MaterialOverride = 3,\r\n}\r\n\r\nexport class VideoPlayer extends Behaviour {\r\n\r\n    @serializable(Object3D)\r\n    renderer: THREE.Object3D | null = null;\r\n    @serializable()\r\n    playOnAwake: boolean = true;\r\n    @serializable()\r\n    playOnEnable?: boolean;\r\n\r\n    @serializable()\r\n    aspectMode: AspectMode = AspectMode.None;\r\n\r\n    @serializable()\r\n    private renderMode?: VideoRenderMode;\r\n\r\n    @serializable()\r\n    private targetMaterialProperty?: string;\r\n\r\n    @serializable(Renderer)\r\n    private targetMaterialRenderer?: Renderer;\r\n\r\n    @serializable(Texture)\r\n    private targetTexture?: Texture;\r\n\r\n    @serializable()\r\n    private time: number = 0;\r\n\r\n    private _playbackSpeed: number = 1;\r\n    @serializable()\r\n    get playbackSpeed(): number {\r\n        return this.videoElement?.playbackRate ?? this._playbackSpeed;\r\n    }\r\n    set playbackSpeed(val: number) {\r\n        this._playbackSpeed = val;\r\n        if (this.videoElement)\r\n            this.videoElement.playbackRate = val;\r\n    }\r\n\r\n    private _isLooping: boolean = false;\r\n    get isLooping(): boolean {\r\n        return this.videoElement?.loop ?? this._isLooping;\r\n    }\r\n    @serializable()\r\n    set isLooping(val: boolean) {\r\n        this._isLooping = val;\r\n        if (this.videoElement)\r\n            this.videoElement.loop = val;\r\n    }\r\n\r\n    get currentTime(): number {\r\n        return this.videoElement?.currentTime ?? this.time;\r\n    }\r\n    set currentTime(val: number) {\r\n        if (this.videoElement) {\r\n            this.videoElement.currentTime = val;\r\n        }\r\n        else this.time = val;\r\n    }\r\n\r\n    get isPlaying(): boolean {\r\n        const video = this.videoElement;\r\n        if (video) {\r\n            return video.currentTime > 0 && !video.paused && !video.ended\r\n                && video.readyState > video.HAVE_CURRENT_DATA;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get crossOrigin(): string | null {\r\n        return this.videoElement?.crossOrigin ?? this._crossOrigin;\r\n    }\r\n    set crossOrigin(val: string | null) {\r\n        this._crossOrigin = val;\r\n        if (this.videoElement) {\r\n            if (val !== null) this.videoElement.setAttribute(\"crossorigin\", val);\r\n            else this.videoElement.removeAttribute(\"crossorigin\");\r\n        }\r\n    }\r\n\r\n    get videoTexture() {\r\n        return this._videoTexture;\r\n    }\r\n\r\n    private _crossOrigin: string | null = \"anonymous\";\r\n\r\n    private audioOutputMode: VideoAudioOutputMode = VideoAudioOutputMode.AudioSource;\r\n\r\n    private source!: VideoSource;\r\n    private clip?: string | MediaStream | null = null;\r\n    private url?: string | null = null;\r\n\r\n    private videoElement: HTMLVideoElement | null = null;\r\n    private _videoTexture: THREE.VideoTexture | null = null;\r\n    private videoMaterial: Material | null = null;\r\n\r\n    private _isPlaying: boolean = false;\r\n    private wasPlaying: boolean = false;\r\n\r\n    setVideo(video: MediaStream) {\r\n        this.clip = video;\r\n        this.source = VideoSource.VideoClip;\r\n        if (!this.videoElement) this.create(true);\r\n        else {\r\n            // TODO: how to prevent interruption error when another video is already playing\r\n            this.videoElement.srcObject = video;\r\n            if (this._isPlaying)\r\n                this.videoElement.play();\r\n            this.updateAspect();\r\n        }\r\n    }\r\n\r\n    setClipURL(url: string) {\r\n        if (this.url === url) return;\r\n        // console.log(\"SET URL\", url);\r\n        this.url = url;\r\n        this.source = VideoSource.Url;\r\n        if (debug) console.log(\"set url\", url);\r\n        if (!this.videoElement) this.create(true);\r\n        else {\r\n            this.videoElement.src = url;\r\n            if (this._isPlaying) {\r\n                this.stop();\r\n                this.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    awake(): void {\r\n        this.create(this.playOnAwake);\r\n\r\n        window.addEventListener('visibilitychange', _evt => {\r\n            switch (document.visibilityState) {\r\n                case \"hidden\":\r\n                    this.wasPlaying = this._isPlaying;\r\n                    this.pause();\r\n                    break;\r\n                case \"visible\":\r\n                    if (this.wasPlaying) this.play();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnable(): void {\r\n        if (this.playOnEnable === true) {\r\n            this.handleBeginPlaying(true);\r\n        }\r\n        if (this.screenspace) {\r\n            this._overlay?.start();\r\n        }\r\n        else this._overlay?.stop();\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.pause();\r\n    }\r\n\r\n    onDestroy(): void {\r\n        if (this.videoElement) {\r\n            this.videoElement.parentElement?.removeChild(this.videoElement);\r\n            this.videoElement = null;\r\n        }\r\n        if (this._videoTexture) {\r\n            this._videoTexture.dispose();\r\n            this._videoTexture = null;\r\n        }\r\n    }\r\n\r\n    private _receivedInput: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n        awaitInput(() => {\r\n            this._receivedInput = true;\r\n            this.updateVideoElementSettings();\r\n        });\r\n        this._targetObjects = [];\r\n\r\n        if (getParam(\"videoscreenspace\")) {\r\n            window.addEventListener(\"keydown\", evt => {\r\n                if (evt.key === \"f\") {\r\n                    this.screenspace = !this.screenspace;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    play() {\r\n        if (!this.videoElement) return;\r\n        if (this._isPlaying && !this.videoElement?.ended && !this.videoElement?.paused) return;\r\n        this._isPlaying = true;\r\n        if (!this._receivedInput) this.videoElement.muted = true;\r\n        this.updateVideoElementSettings();\r\n        this.videoElement?.play().catch(err => {\r\n            console.warn(err);\r\n        });\r\n        if (debug) console.log(\"play\", this.videoElement);\r\n    }\r\n\r\n    stop() {\r\n        this._isPlaying = false;\r\n        if (!this.videoElement) return;\r\n        this.videoElement.currentTime = 0;\r\n        this.videoElement.pause();\r\n    }\r\n\r\n    pause(): void {\r\n        this._isPlaying = false;\r\n        this.videoElement?.pause();\r\n    }\r\n\r\n\r\n    create(playAutomatically: boolean) {\r\n        let src;\r\n        switch (this.source) {\r\n            case VideoSource.VideoClip:\r\n                src = this.clip;\r\n                break;\r\n            case VideoSource.Url:\r\n                src = this.url;\r\n                break;\r\n        }\r\n\r\n        if (!src) return;\r\n\r\n        // console.log(src, this);\r\n\r\n        if (!this.videoElement) {\r\n            this.videoElement = this.createVideoElement();\r\n            this.context.domElement?.prepend(this.videoElement);\r\n            // hide it because otherwise it would overlay the website with default css\r\n            this.updateVideoElementStyles();\r\n        }\r\n        if (typeof src === \"string\") {\r\n            this.videoElement.src = src;\r\n            const str = this.videoElement[\"captureStream\"]?.call(this.videoElement);\r\n            this.clip = str;\r\n        }\r\n        else\r\n            this.videoElement.srcObject = src;\r\n\r\n\r\n        if (!this._videoTexture)\r\n            this._videoTexture = new THREE.VideoTexture(this.videoElement);\r\n        this._videoTexture.flipY = false;\r\n        this._videoTexture.encoding = THREE.sRGBEncoding;\r\n        this.handleBeginPlaying(playAutomatically);\r\n        if(debug)\r\n            console.log(this);\r\n    }\r\n\r\n    updateAspect() {\r\n        if (this.aspectMode === AspectMode.None) return;\r\n        this.startCoroutine(this.updateAspectImpl());\r\n    }\r\n\r\n    private _overlay: VideoOverlay | null = null;\r\n\r\n    get screenspace(): boolean {\r\n        return this._overlay?.enabled ?? false;\r\n    }\r\n\r\n    set screenspace(val: boolean) {\r\n        if (val) {\r\n            if (!this._videoTexture) return;\r\n            if (!this._overlay) this._overlay = new VideoOverlay(this.context);\r\n            this._overlay.add(this._videoTexture);\r\n        }\r\n        else this._overlay?.remove(this._videoTexture);\r\n        if (this._overlay) this._overlay.enabled = val;\r\n    }\r\n\r\n    private _targetObjects: Array<Object3D>;\r\n\r\n    private createVideoElement(): HTMLVideoElement {\r\n        const video = document.createElement(\"video\") as HTMLVideoElement;\r\n        if (this._crossOrigin)\r\n            video.setAttribute(\"crossorigin\", this._crossOrigin);\r\n        if (debug) console.log(\"create video elment\", video);\r\n        return video;\r\n    }\r\n\r\n    private handleBeginPlaying(playAutomatically: boolean) {\r\n        if (!this.enabled) return;\r\n        if (!this.videoElement) return;\r\n\r\n        this._targetObjects.length = 0;\r\n\r\n        let target: Object3D | undefined = this.gameObject;\r\n\r\n        switch (this.renderMode) {\r\n            case VideoRenderMode.MaterialOverride:\r\n                target = this.targetMaterialRenderer?.gameObject;\r\n                if (!target) target = GameObject.getComponent(this.gameObject, Renderer)?.gameObject;\r\n                break;\r\n            case VideoRenderMode.RenderTexture:\r\n                console.error(\"VideoPlayer renderTexture not implemented yet. Please use material override instead\");\r\n                return;\r\n        }\r\n\r\n        if (!target) {\r\n            console.error(\"Missing target for video material renderer\", this.name, VideoRenderMode[this.renderMode!], this);\r\n            return;\r\n        }\r\n        const mat = target[\"material\"];\r\n        if (mat) {\r\n            this._targetObjects.push(target);\r\n\r\n            if (mat !== this.videoMaterial) {\r\n                this.videoMaterial = mat.clone();\r\n                target[\"material\"] = this.videoMaterial;\r\n            }\r\n\r\n            if (!this.targetMaterialProperty) {\r\n                (this.videoMaterial as any).map = this._videoTexture;\r\n            }\r\n            else {\r\n                switch (this.targetMaterialProperty) {\r\n                    default:\r\n                        (this.videoMaterial as any).map = this._videoTexture;\r\n                        break;\r\n                    // doesnt render:\r\n                    // case \"emissiveTexture\":\r\n                    //     console.log(this.videoMaterial);\r\n                    //     // (this.videoMaterial as any).map = this.videoTexture;\r\n                    //     (this.videoMaterial as any).emissive?.set(1,1,1);// = this.videoTexture;\r\n                    //     (this.videoMaterial as any).emissiveMap = this.videoTexture;\r\n                    //     break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            console.warn(\"Can not play video, no material found, this might be a multimaterial case which is not supported yet\");\r\n            return;\r\n        }\r\n        this.updateVideoElementSettings();\r\n        this.updateVideoElementStyles();\r\n        if (playAutomatically)\r\n            this.play();\r\n    }\r\n\r\n    private updateVideoElementSettings() {\r\n        if (!this.videoElement) return;\r\n        this.videoElement.loop = this._isLooping;\r\n        this.videoElement.currentTime = this.currentTime;\r\n        this.videoElement.playbackRate = this._playbackSpeed;\r\n        // dont open in fullscreen on ios\r\n        this.videoElement.playsInline = true;\r\n        this.videoElement.muted = !this._receivedInput && this.audioOutputMode !== VideoAudioOutputMode.None;\r\n        if (this.playOnAwake || this.playOnEnable)\r\n            this.videoElement.autoplay = true;\r\n    }\r\n\r\n    private updateVideoElementStyles() {\r\n        if (!this.videoElement) return;\r\n        // set style here so preview frame is rendered\r\n        // set display and selectable because otherwise is interfers with input/focus e.g. breaks orbit control\r\n        this.videoElement.style.userSelect = \"none\";\r\n        this.videoElement.style.visibility = \"hidden\";\r\n        this.videoElement.style.display = \"none\";\r\n        this.updateAspect();\r\n    }\r\n\r\n\r\n\r\n\r\n    private _updateAspectRoutineId: number = -1;\r\n    private *updateAspectImpl() {\r\n        const id = ++this._updateAspectRoutineId;\r\n        const lastAspect: number | undefined = undefined;\r\n        const stream = this.clip;\r\n        while (id === this._updateAspectRoutineId && this.aspectMode !== AspectMode.None && this.clip && stream === this.clip && this._isPlaying) {\r\n            if (!stream || typeof stream === \"string\") {\r\n                return;\r\n            }\r\n            let aspect: number | undefined = undefined;\r\n            for (const track of stream.getVideoTracks()) {\r\n                const settings = track.getSettings();\r\n                if (settings && settings.width && settings.height) {\r\n                    aspect = settings.width / settings.height;\r\n                    break;\r\n                }\r\n                // on firefox capture canvas stream works but looks like \r\n                // the canvas stream track doesnt contain settings?!!?\r\n                else {\r\n                    aspect = this.context.renderer.domElement.clientWidth / this.context.renderer.domElement.clientHeight;\r\n                }\r\n            }\r\n            if (aspect === undefined) {\r\n                for (let i = 0; i < 10; i++)\r\n                    yield;\r\n                if (!this.isPlaying) break;\r\n                continue;\r\n            }\r\n            if (lastAspect === aspect) {\r\n                yield;\r\n                continue;\r\n            }\r\n            for (const obj of this._targetObjects) {\r\n                let worldAspect = 1;\r\n                if (obj.parent) {\r\n                    const parentScale = getWorldScale(obj.parent);\r\n                    worldAspect = parentScale.x / parentScale.y;\r\n                }\r\n                switch (this.aspectMode) {\r\n                    case AspectMode.AdjustHeight:\r\n                        obj.scale.y = 1 / aspect * obj.scale.x * worldAspect;\r\n                        break;\r\n                    case AspectMode.AdjustWidth:\r\n                        obj.scale.x = aspect * obj.scale.y * worldAspect;\r\n                        break;\r\n                }\r\n            }\r\n            for (let i = 0; i < 3; i++)\r\n                yield;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass VideoOverlay {\r\n\r\n    readonly context: Context;\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n        this._input = new VideoOverlayInput(this);\r\n    }\r\n\r\n    get enabled() {\r\n        return this._isInScreenspaceMode;\r\n    }\r\n\r\n    set enabled(val: boolean) {\r\n        if (val) this.start();\r\n        else this.stop();\r\n    }\r\n\r\n\r\n    add(video: VideoTexture) {\r\n        if (this._videos.indexOf(video) === -1) {\r\n            this._videos.push(video);\r\n        }\r\n    }\r\n\r\n    remove(video: VideoTexture | null | undefined) {\r\n        if (!video) return;\r\n        const index = this._videos.indexOf(video);\r\n        if (index >= 0) {\r\n            this._videos.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._isInScreenspaceMode) return;\r\n        if (this._videos.length < 0) return;\r\n        const texture = this._videos[this._videos.length - 1];\r\n        if (!texture) return;\r\n\r\n        this._isInScreenspaceMode = true;\r\n        if (!this._screenspaceModeQuad) {\r\n            this._screenspaceModeQuad = ObjectUtils.createPrimitive(PrimitiveType.Quad, {\r\n                material: new ScreenspaceTexture(texture)\r\n            });\r\n            if (!this._screenspaceModeQuad) return;\r\n            this._screenspaceModeQuad.geometry.scale(2, 2, 2);\r\n        }\r\n        \r\n        const quad = this._screenspaceModeQuad;\r\n        this.context.scene.add(quad);\r\n        this.updateScreenspaceMaterialUniforms();\r\n\r\n        const mat = quad.material as ScreenspaceTexture;\r\n        mat?.reset();\r\n\r\n        this._input?.enable(mat);\r\n    }\r\n\r\n    stop() {\r\n        this._isInScreenspaceMode = false;\r\n        if (this._screenspaceModeQuad) {\r\n            this._input?.disable();\r\n            this._screenspaceModeQuad.removeFromParent();\r\n        }\r\n    }\r\n\r\n    updateScreenspaceMaterialUniforms() {\r\n        const mat = this._screenspaceModeQuad?.material as ScreenspaceTexture;\r\n        if (!mat) return;\r\n        // mat.videoAspect = this.videoTexture?.image?.width / this.videoTexture?.image?.height;\r\n        mat.screenAspect = this.context.domElement.clientWidth / this.context.domElement.clientHeight;\r\n    }\r\n\r\n    private _videos: VideoTexture[] = [];\r\n    private _screenspaceModeQuad: Mesh | undefined;\r\n    private _isInScreenspaceMode: boolean = false;\r\n    private _input: VideoOverlayInput;\r\n}\r\n\r\nclass VideoOverlayInput {\r\n\r\n    private _onResizeScreenFn?: () => void;\r\n    private _onKeyUpFn?: (e: KeyboardEvent) => void;\r\n    private _onMouseWheelFn?: (e: WheelEvent) => void;\r\n\r\n    private readonly context: Context;\r\n    private readonly overlay: VideoOverlay;\r\n\r\n    constructor(overlay: VideoOverlay) {\r\n        this.overlay = overlay;\r\n        this.context = overlay.context;\r\n    }\r\n\r\n    private _material?: ScreenspaceTexture;\r\n\r\n    enable(mat: ScreenspaceTexture) {\r\n        this._material = mat;\r\n\r\n        window.addEventListener(\"resize\", this._onResizeScreenFn = () => {\r\n            this.overlay.updateScreenspaceMaterialUniforms();\r\n        });\r\n        window.addEventListener(\"keyup\", this._onKeyUpFn = (args) => {\r\n            if (args.key === \"Escape\")\r\n                this.overlay.stop();\r\n        });\r\n\r\n        window.addEventListener(\"wheel\", this._onMouseWheelFn = (args) => {\r\n            if (this.overlay.enabled) {\r\n                mat.zoom += args.deltaY * .0005;\r\n                args.preventDefault();\r\n            }\r\n        }, { passive: false });\r\n\r\n\r\n        const delta: Vector2 = new Vector2();\r\n\r\n        window.addEventListener(\"mousemove\", (args: MouseEvent) => {\r\n            if (this.overlay.enabled && this.context.input.getPointerPressed(0)) {\r\n                const normalizedMovement = new Vector2(args.movementX, args.movementY);\r\n                normalizedMovement.x /= this.context.domElement.clientWidth;\r\n                normalizedMovement.y /= this.context.domElement.clientHeight;\r\n                delta.set(normalizedMovement.x, normalizedMovement.y);\r\n                delta.multiplyScalar(mat.zoom / -this.context.time.deltaTime * .01);\r\n                mat.offset = mat.offset.add(delta);\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"pointermove\", (args: PointerEvent) => {\r\n            if (this.overlay.enabled && this.context.input.getPointerPressed(0)) {\r\n                const count = this.context.input.getTouchesPressedCount();\r\n                if (count === 1) {\r\n                    delta.set(args.movementX, args.movementY);\r\n                    delta.multiplyScalar(mat.zoom * -this.context.time.deltaTime * .05);\r\n                    mat.offset = mat.offset.add(delta);\r\n                }\r\n            }\r\n        });\r\n\r\n        let lastTouchStartTime = 0;\r\n        window.addEventListener(\"touchstart\", e => {\r\n            if (e.touches.length < 2) {\r\n                if (this.context.time.time - lastTouchStartTime < .3) {\r\n                    this.overlay.stop();\r\n                }\r\n                lastTouchStartTime = this.context.time.time;\r\n                return;\r\n            }\r\n            this._isPinching = true;\r\n            this._lastPinch = 0;\r\n        })\r\n        window.addEventListener(\"touchmove\", e => {\r\n            if (!this._isPinching || !this._material) return;\r\n            const touch1 = e.touches[0];\r\n            const touch2 = e.touches[1];\r\n            const dx = touch1.clientX - touch2.clientX;\r\n            const dy = touch1.clientY - touch2.clientY;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            if (this._lastPinch !== 0) {\r\n                const delta = distance - this._lastPinch;\r\n                this._material.zoom -= delta * .004;\r\n            }\r\n            this._lastPinch = distance;\r\n        })\r\n        window.addEventListener(\"touchend\", () => {\r\n            this._isPinching = false;\r\n        })\r\n    }\r\n\r\n    private _isPinching: boolean = false;\r\n    private _lastPinch = 0;\r\n\r\n    disable() {\r\n\r\n        if (this._onResizeScreenFn) {\r\n            window.removeEventListener(\"resize\", this._onResizeScreenFn);\r\n            this._onResizeScreenFn = undefined;\r\n        }\r\n        if (this._onKeyUpFn) {\r\n            window.removeEventListener(\"keyup\", this._onKeyUpFn);\r\n            this._onKeyUpFn = undefined;\r\n        }\r\n        if (this._onMouseWheelFn) {\r\n            window.removeEventListener(\"wheel\", this._onMouseWheelFn);\r\n            this._onMouseWheelFn = undefined;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass ScreenspaceTexture extends ShaderMaterial {\r\n\r\n    set screenAspect(val: number) {\r\n        this.uniforms[\"screenAspect\"].value = val;\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    set offset(vec: Vector2 | { x: number, y: number }) {\r\n        const val = this.uniforms[\"offsetScale\"].value;\r\n        val.x = vec.x;\r\n        val.y = vec.y;\r\n        // console.log(val);\r\n        this.uniforms[\"offsetScale\"].value = val;\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    private readonly _offset: Vector2 = new Vector2();\r\n    get offset(): Vector2 {\r\n        const val = this.uniforms[\"offsetScale\"].value;\r\n        this._offset.set(val.x, val.y);\r\n        return this._offset;\r\n    }\r\n\r\n    set zoom(val: number) {\r\n        const zoom = this.uniforms[\"offsetScale\"].value;\r\n        if (val < .001) val = .001;\r\n        zoom.z = val;\r\n        // zoom.z = this.maxZoom - val;\r\n        // zoom.z /= this.maxZoom;\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    get zoom(): number {\r\n        return this.uniforms[\"offsetScale\"].value.z;// * this.maxZoom;\r\n    }\r\n\r\n    reset() {\r\n        this.offset = this.offset.set(0, 0);\r\n        this.zoom = 1;\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    // maxZoom : number = 10\r\n\r\n    constructor(tex: Texture) {\r\n        super();\r\n\r\n        this.uniforms = {\r\n            map: { value: tex },\r\n            screenAspect: { value: 1 },\r\n            offsetScale: { value: new Vector4(0, 0, 1, 1) }\r\n        };\r\n\r\n        this.vertexShader = `\r\n        uniform sampler2D map;\r\n        uniform float screenAspect;\r\n        uniform vec4 offsetScale;\r\n        varying vec2 vUv;\r\n\r\n        void main() {\r\n\r\n            gl_Position = vec4( position , 1.0 );\r\n            vUv = uv;\r\n            vUv.y = 1. - vUv.y;\r\n\r\n            // fit into screen\r\n            ivec2 res = textureSize(map, 0);\r\n            float videoAspect = float(res.x) / float(res.y);\r\n            float aspect = videoAspect / screenAspect;\r\n            if(aspect >= 1.0) \r\n            {\r\n                vUv.y = vUv.y * aspect;\r\n                float offset = (1. - aspect) * .5;\r\n                vUv.y = vUv.y + offset;\r\n            }\r\n            else\r\n            {\r\n                vUv.x = vUv.x / aspect;\r\n                float offset = (1. - 1. / aspect) * .5;\r\n                vUv.x = vUv.x + offset;\r\n            }\r\n\r\n            vUv.x -= .5;\r\n            vUv.y -= .5;\r\n\r\n            vUv.x *= offsetScale.z;\r\n            vUv.y *= offsetScale.z;\r\n            vUv.x += offsetScale.x;\r\n            vUv.y += offsetScale.y;\r\n\r\n            vUv.x += .5;\r\n            vUv.y += .5;\r\n        }\r\n\r\n        `\r\n        this.fragmentShader = `\r\n        uniform sampler2D map;\r\n        varying vec2 vUv;\r\n        void main() {\r\n            if(vUv.x < 0. || vUv.x > 1. || vUv.y < 0. || vUv.y > 1.)\r\n                gl_FragColor = vec4(0., 0., 0., 1.);\r\n            else\r\n                gl_FragColor = texture2D(map, vUv);\r\n        }\r\n        `\r\n    }\r\n}\r\n", "\r\nexport function awaitInputAsync() : Promise<void> {\r\n    return new Promise((res, _) => {\r\n        const callback = () => {\r\n            if (fn == undefined) return;\r\n            document.removeEventListener('pointerdown', fn);\r\n            document.removeEventListener('click', fn);\r\n            document.removeEventListener('dragstart', fn);\r\n            document.removeEventListener('touchstart', fn);\r\n            res();\r\n        };\r\n        let fn = callback;\r\n        document.addEventListener('pointerdown', fn);\r\n        document.addEventListener('click', fn);\r\n        document.addEventListener('dragstart', fn);\r\n        document.addEventListener('touchstart', fn);\r\n\r\n    });\r\n}\r\n\r\nexport async function awaitInput(cb) {\r\n    await awaitInputAsync();\r\n    cb();\r\n}", "import { PlaneGeometry, MeshBasicMaterial, DoubleSide, Mesh, Material } from \"three\"\r\n\r\n\r\nexport enum PrimitiveType {\r\n    Quad = 0\r\n}\r\n\r\nexport type ObjectOptions = {\r\n    name?: string,\r\n    material?: Material,\r\n}\r\n\r\nexport class ObjectUtils {\r\n\r\n    static createPrimitive(type: PrimitiveType, opts?: ObjectOptions): Mesh {\r\n        let obj: Mesh;\r\n        switch (type) {\r\n            case PrimitiveType.Quad:\r\n                const geometry = new PlaneGeometry(1, 1, 1, 1);\r\n                const material = opts?.material ?? new MeshBasicMaterial({ color: 0xffffff });\r\n                obj = new Mesh(geometry, material);\r\n        }\r\n        if (opts?.name)\r\n            obj.name = opts.name;\r\n        return obj;\r\n    }\r\n} ", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { VideoPlayer } from \"./VideoPlayer\";\r\nimport Peer from \"peerjs\"\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { RoomEvents } from \"../engine/engine_networking\";\r\nimport { UserJoinedOrLeftRoomModel } from \"../engine/engine_networking\";\r\nimport { serializable } from \"../engine/engine_serialization\";\r\nimport { IPointerClickHandler } from \"./ui/PointerEvents\";\r\nimport { EventDispatcher } from \"three\";\r\nimport { AudioSource } from \"./AudioSource\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { IModel } from \"../engine/engine_networking_types\";\r\n\r\nconst debug = getParam(\"debugscreenshare\");\r\n\r\nexport enum ScreenCaptureDevice {\r\n    Screen = 0,\r\n    Camera = 1,\r\n    Canvas = 2\r\n}\r\n\r\nexport enum ScreenCaptureMode {\r\n    Idle = 0,\r\n    Sending = 1,\r\n    Receiving = 2\r\n}\r\n\r\nfunction disposeStream(str: MediaStream | null | undefined) {\r\n    if (!str) return;\r\n    for (const cap of str.getTracks())\r\n        cap.stop();\r\n}\r\n\r\ndeclare type ScreenCaptureOptions = {\r\n    device?: ScreenCaptureDevice,\r\n    deviceId?: string,\r\n    constraints?: MediaTrackConstraints,\r\n}\r\n\r\nexport class ScreenCapture extends Behaviour implements IPointerClickHandler {\r\n\r\n    onPointerClick() {\r\n        if(this.context.connection.isInRoom === false) return;\r\n        if (this.isReceiving) {\r\n            if (this.videoPlayer)\r\n                this.videoPlayer.screenspace = !this.videoPlayer.screenspace;\r\n            return;\r\n        }\r\n        if (this.isSending) {\r\n            this.close();\r\n            return;\r\n        }\r\n        this.share();\r\n    }\r\n\r\n\r\n    @serializable(VideoPlayer)\r\n    videoPlayer?: VideoPlayer;\r\n\r\n    @serializable()\r\n    device: ScreenCaptureDevice = ScreenCaptureDevice.Screen;\r\n\r\n    get currentScream(): MediaStream | null {\r\n        return this._currentStream;\r\n    }\r\n\r\n    get currentMode(): ScreenCaptureMode {\r\n        return this._currentMode;\r\n    }\r\n\r\n    get isSending() {\r\n        return this._currentStream?.active && this._currentMode === ScreenCaptureMode.Sending;\r\n    }\r\n    get isReceiving() {\r\n        if (this._currentMode === ScreenCaptureMode.Receiving) {\r\n            if (!this._currentStream || this._currentStream.active === false) return false;\r\n            // if any track is still live consider it active\r\n            const tracks = this._currentStream.getTracks();\r\n            for (const track of tracks) {\r\n                if (track.readyState === \"live\") return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _net?: NetworkedVideo;\r\n    private _requestOpen: boolean = false;\r\n    private _currentStream: MediaStream | null = null;\r\n    private _currentMode: ScreenCaptureMode = ScreenCaptureMode.Idle;\r\n\r\n    awake() {\r\n        if (debug)\r\n            console.log(this);\r\n        AudioSource.registerWaitForAllowAudio(() => {\r\n            if (this.videoPlayer && this._currentStream && this._currentMode === ScreenCaptureMode.Receiving) {\r\n                this.videoPlayer.setVideo(this._currentStream);\r\n            }\r\n        });\r\n    }\r\n\r\n    start() {\r\n        if (!this.videoPlayer) {\r\n            this.videoPlayer = GameObject.getComponent(this.gameObject, VideoPlayer) ?? undefined;\r\n        }\r\n        if (!this.videoPlayer) {\r\n            console.error(\"Screencapture did not find a VideoPlayer component\");\r\n            return;\r\n        }\r\n        const handle = PeerHandle.getOrCreate(this.context, this.guid);\r\n        this._net = new NetworkedVideo(this.context, handle);\r\n        this._net.enable();\r\n        //@ts-ignore\r\n        this._net.addEventListener(PeerEvent.ReceiveVideo, this.onReceiveVideo.bind(this));\r\n    }\r\n\r\n    async share(opts?: ScreenCaptureOptions) {\r\n\r\n        if (opts?.device)\r\n            this.device = opts.device;\r\n\r\n        this._requestOpen = true;\r\n        try {\r\n            if (this.videoPlayer) {\r\n\r\n                const settings: MediaTrackConstraints = opts?.constraints ?? {\r\n                    echoCancellation: true,\r\n                    autoGainControl: false,\r\n                };\r\n                const displayMediaOptions: MediaStreamConstraints = {\r\n                    video: settings,\r\n                    audio: settings,\r\n                };\r\n\r\n                switch (this.device) {\r\n                    // Capture a connected camera\r\n                    case ScreenCaptureDevice.Camera:\r\n                        this.tryShareUserCamera(displayMediaOptions, opts);\r\n                        break;\r\n\r\n                    // capture any screen, will show a popup\r\n                    case ScreenCaptureDevice.Screen:\r\n                        if (!navigator.mediaDevices.getDisplayMedia) {\r\n                            console.error(\"No getDisplayMedia support\");\r\n                            return;\r\n                        }\r\n                        const myVideo = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions);\r\n                        if (this._requestOpen) {\r\n                            this.setVideo(myVideo, ScreenCaptureMode.Sending);\r\n                        }\r\n                        else disposeStream(myVideo);\r\n                        break;\r\n\r\n                    // capture the canvas meaning the threejs view\r\n                    case ScreenCaptureDevice.Canvas:\r\n                        // looks like this doesnt work reliably on chrome https://stackoverflow.com/a/66848674\r\n                        // firefox updates fine\r\n                        // https://bugs.chromium.org/p/chromium/issues/detail?id=1156408\r\n                        const fps = 0;\r\n                        const stream = this.context.renderer.domElement.captureStream(fps);\r\n                        this.setVideo(stream, ScreenCaptureMode.Sending);\r\n                        break;\r\n                }\r\n            }\r\n        } catch (err: any) {\r\n            if (err.name === \"NotAllowedError\") {\r\n                // user cancelled stream selection\r\n                console.log(\"Selection cancelled\");\r\n                this._requestOpen = false;\r\n                return;\r\n            }\r\n            console.error(\"Error opening video\", err);\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this._requestOpen = false;\r\n        if (this._currentStream) {\r\n            console.warn(\"Close current stream / disposing resources\");\r\n            this._net?.stopSendingVideo(this._currentStream);\r\n            disposeStream(this._currentStream);\r\n            this._currentMode = ScreenCaptureMode.Idle;\r\n            this._currentStream = null;\r\n        }\r\n    }\r\n\r\n    private setVideo(stream: MediaStream, mode: ScreenCaptureMode) {\r\n        if (stream === this._currentStream) return;\r\n        this.close();\r\n        if (!stream || !this.videoPlayer) return;\r\n        this._currentStream = stream;\r\n        this._requestOpen = true;\r\n        this._currentMode = mode;\r\n        this.videoPlayer.setVideo(stream);\r\n\r\n        const isSending = mode === ScreenCaptureMode.Sending;\r\n        if (isSending) {\r\n            this._net?.startSendingVideo(stream);\r\n\r\n        }\r\n\r\n        stream.addEventListener(\"ended\", () => {\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    private onReceiveVideo(evt: ReceiveVideoEvent) {\r\n        this.setVideo(evt.stream, ScreenCaptureMode.Receiving);\r\n    }\r\n\r\n\r\n\r\n    private async tryShareUserCamera(opts: MediaStreamConstraints, options?: ScreenCaptureOptions) {\r\n\r\n        // let newWindow = open('', 'example', 'width=300,height=300');\r\n        // if (window) {\r\n        //     newWindow!.document.body.innerHTML = \"Please allow access to your camera and microphone\";\r\n        // }\r\n\r\n        // TODO: allow user to select device\r\n        const devices = (await navigator.mediaDevices.enumerateDevices()).filter(d => d.kind === \"videoinput\");\r\n        console.log(\"Request camera\", devices);\r\n        for (const dev of devices) {\r\n            try {\r\n                if (!this._requestOpen) break;\r\n                if (dev.kind !== \"videoinput\") continue;\r\n                const id = dev.deviceId;\r\n                if (options?.deviceId !== undefined) {\r\n                    if (id !== options.deviceId)\r\n                        continue;\r\n                }\r\n                if (opts.video !== false) {\r\n                    if (typeof opts.video === \"undefined\" || typeof opts.video === \"boolean\") {\r\n                        opts.video = {};\r\n                    }\r\n                    opts.video.deviceId = id;\r\n                }\r\n                const userMedia = await navigator.mediaDevices.getUserMedia(opts);\r\n                if (this._requestOpen) {\r\n                    this.setVideo(userMedia, ScreenCaptureMode.Sending);\r\n                }\r\n                else disposeStream(userMedia);\r\n                console.log(\"Selected camera\", dev);\r\n                break;\r\n            }\r\n            catch (err) {\r\n                console.warn(err);\r\n            }\r\n        }\r\n    }\r\n    // private _cameraSelectionWindow : Window | null = null;\r\n    // private openWindowToSelectCamera(){\r\n\r\n    // }\r\n}\r\n\r\n\r\n/////// PEER\r\n\r\nenum PeerEvent {\r\n    Connected = \"peer-user-connected\",\r\n    ReceiveVideo = \"receive-video\",\r\n    Disconnected = \"peer-user-disconnected\",\r\n}\r\n\r\nclass ReceiveVideoEvent {\r\n    readonly type = PeerEvent.ReceiveVideo;\r\n    readonly stream: MediaStream;\r\n    readonly target: CallHandle;\r\n    constructor(stream: MediaStream, target: CallHandle) {\r\n        this.stream = stream\r\n        this.target = target;\r\n    }\r\n}\r\n\r\nclass PeerUserConnectedModel implements IModel {\r\n    /** the peer handle id */\r\n    readonly guid: string;\r\n    readonly peerId: string;\r\n    // internal so server doesnt save it to persistent storage\r\n    readonly dontSave: boolean = true;\r\n    constructor(handle: PeerHandle, peerId: string) {\r\n        this.guid = handle.id;\r\n        this.peerId = peerId;\r\n    }\r\n}\r\n\r\nenum CallDirection {\r\n    Incoming = \"incoming\",\r\n    Outgoing = \"outgoing\",\r\n}\r\n\r\nclass CallHandle extends EventDispatcher {\r\n    readonly userId: string;\r\n    readonly direction: CallDirection;\r\n    readonly call: Peer.MediaConnection;\r\n    get stream() { return this._stream; };\r\n\r\n    private _stream: MediaStream | null = null;\r\n    private _isDisposed: boolean = false;\r\n\r\n    close() {\r\n        if (this._isDisposed) return;\r\n        this._isDisposed = true;\r\n        this.call.close();\r\n        disposeStream(this._stream);\r\n    }\r\n\r\n    get isOpen() {\r\n        return this.call.peerConnection?.connectionState === \"connected\";// && this._stream?.active;\r\n    }\r\n\r\n    get isClosed() {\r\n        return !this.isOpen;\r\n    }\r\n\r\n    constructor(userId: string, call: Peer.MediaConnection, direction: CallDirection) {\r\n        super();\r\n        this.userId = userId;\r\n        this.call = call;\r\n        this.direction = direction;\r\n        this._stream = null;\r\n        call.on(\"stream\", stream => {\r\n            console.log(\"Receive video\", stream.getAudioTracks(), stream.getVideoTracks());\r\n            this._stream = stream;\r\n            if (direction === CallDirection.Incoming) {\r\n                const args: ReceiveVideoEvent = new ReceiveVideoEvent(stream, this);\r\n                this.dispatchEvent(args);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass PeerHandle extends EventDispatcher {\r\n\r\n    private static readonly instances: Map<string, PeerHandle> = new Map();\r\n\r\n    static getOrCreate(context: Context, guid: string): PeerHandle {\r\n        // if (id === undefined) {\r\n        //     // randomId\r\n        //     id = Math.random().toFixed(5);\r\n        // }\r\n        if (PeerHandle.instances.has(guid))\r\n            return PeerHandle.instances.get(guid)!;\r\n        const peer = new PeerHandle(context, guid);\r\n        PeerHandle.instances.set(guid, peer);\r\n        return peer;\r\n    }\r\n\r\n    getMyPeerId(): string | undefined {\r\n        if (this.context.connection.connectionId)\r\n            return this.getPeerIdFromUserId(this.context.connection.connectionId);\r\n        return undefined;\r\n    }\r\n\r\n    getPeerIdFromUserId(userConnectionId: string): string {\r\n        // we build the peer id ourselves so we dont need to wait for peer to report it\r\n        return this.id + \"-\" + userConnectionId;\r\n    }\r\n\r\n    getUserIdFromPeerId(peerId: string): string {\r\n        return peerId.substring(this.id.length + 1);\r\n    }\r\n\r\n    makeCall(peerId: string, stream: MediaStream): CallHandle | undefined {\r\n        const opts = { metadata: { userId: this.context.connection.connectionId } };\r\n        const call = this._peer?.call(peerId, stream, opts);\r\n        if (call)\r\n            return this.registerCall(call, CallDirection.Outgoing);\r\n        return undefined;\r\n    }\r\n\r\n    get peer(): Peer | undefined { return this._peer; }\r\n\r\n    readonly id: string;\r\n    readonly context: Context;\r\n    private _peer: Peer | undefined;\r\n    private _incomingCalls: CallHandle[] = [];\r\n    private _outgoingCalls: CallHandle[] = [];\r\n\r\n    private constructor(context: Context, id: string) {\r\n        super();\r\n        this.context = context;\r\n        this.id = id;\r\n        this.setupPeer();\r\n        navigator[\"getUserMedia\"] = (\r\n            navigator[\"getUserMedia\"] || navigator[\"webkitGetUserMedia\"] ||\r\n            navigator[\"mozGetUserMedia\"] || navigator[\"msGetUserMedia\"]\r\n        );\r\n    }\r\n\r\n    private _enabled: boolean = false;\r\n    private _enabledPeer: boolean = false;\r\n    private onConnectRoomFn: Function = this.onConnectRoom.bind(this);\r\n    private onUserJoinedOrLeftRoomFn: Function = this.onUserJoinedOrLeftRoom.bind(this);\r\n    private onPeerConnectFn: (id) => void = this.onPeerConnect.bind(this);\r\n    private onPeerReceiveCallFn: (call) => void = this.onPeerReceivingCall.bind(this);\r\n    // private _connectionPeerIdMap : Map<string, string> = new Map();\r\n\r\n    enable() {\r\n        if (this._enabled) return;\r\n        this._enabled = true;\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, this.onConnectRoomFn);\r\n        this.context.connection.beginListen(RoomEvents.UserJoinedRoom, this.onUserJoinedOrLeftRoomFn);\r\n        this.context.connection.beginListen(RoomEvents.UserLeftRoom, this.onUserJoinedOrLeftRoomFn);\r\n        this.subscribePeerEvents();\r\n    }\r\n\r\n    disable() {\r\n        if (!this._enabled) return;\r\n        this._enabled = false;\r\n        this.context.connection.stopListening(RoomEvents.JoinedRoom, this.onConnectRoomFn);\r\n        this.context.connection.stopListening(RoomEvents.UserJoinedRoom, this.onUserJoinedOrLeftRoomFn);\r\n        this.context.connection.stopListening(RoomEvents.UserLeftRoom, this.onUserJoinedOrLeftRoomFn);\r\n        this.unsubscribePeerEvents();\r\n    }\r\n\r\n    private onConnectRoom(): void {\r\n        this.setupPeer();\r\n    };\r\n\r\n    private onUserJoinedOrLeftRoom(_: UserJoinedOrLeftRoomModel): void {\r\n    };\r\n\r\n    private setupPeer() {\r\n        if (!this.context.connection.connectionId) return;\r\n        if (this._enabledPeer) return;\r\n        this._enabledPeer = true;\r\n        if (!this._peer) {\r\n            const peerId = this.getMyPeerId();\r\n            this._peer = new Peer(peerId);\r\n        }\r\n        if (this._enabled)\r\n            this.subscribePeerEvents();\r\n    }\r\n\r\n    private subscribePeerEvents() {\r\n        if (!this._peer) return;\r\n        this._peer.on(\"open\", this.onPeerConnectFn);\r\n        this._peer.on(\"call\", this.onPeerReceiveCallFn);\r\n        // this.context.connection.beginListen(PeerEvent.Connected, this.onRemotePeerConnect.bind(this));\r\n    }\r\n\r\n    private unsubscribePeerEvents() {\r\n        // TODO: unsubscribe\r\n    }\r\n\r\n    private onPeerConnect(id): void {\r\n        if (debug)\r\n            console.log(\"Peer connected as\", id);\r\n        this.context.connection.send(PeerEvent.Connected, new PeerUserConnectedModel(this, id));\r\n    }\r\n\r\n    private onPeerReceivingCall(call: Peer.MediaConnection): void {\r\n        call.answer();\r\n        this.registerCall(call, CallDirection.Incoming);\r\n    }\r\n\r\n    private registerCall(call: Peer.MediaConnection, direction: CallDirection): CallHandle {\r\n\r\n        const meta = call.metadata;\r\n        if (!meta || !meta.userId) {\r\n            console.error(\"Missing call metadata\", call);\r\n        }\r\n        const userId = meta.userId;\r\n\r\n        if (direction === CallDirection.Incoming) console.log(\"Receive call from\", call.metadata);\r\n        else console.log(\"Make call to\", call.metadata);\r\n\r\n        const arr = direction === CallDirection.Incoming ? this._incomingCalls : this._outgoingCalls;\r\n        const handle = new CallHandle(userId, call, direction);\r\n        arr.push(handle);\r\n        call.on(\"error\", err => {\r\n            console.error(\"Call error\", err);\r\n        });\r\n        call.on(\"close\", () => {\r\n            console.log(\"Call ended\", call.metadata);\r\n            call.close();\r\n            const index = arr.indexOf(handle);\r\n            if (index !== -1)\r\n                arr.splice(index, 1);\r\n        });\r\n\r\n        if (direction === CallDirection.Incoming) {\r\n\r\n            handle.addEventListener(PeerEvent.ReceiveVideo, e => {\r\n                this.dispatchEvent(e);\r\n            });\r\n\r\n            call.on(\"stream\", () => {\r\n                // workaround for https://github.com/peers/peerjs/issues/636\r\n                let closeInterval = setInterval(() => {\r\n                    if (!handle.isOpen) {\r\n                        clearInterval(closeInterval);\r\n                        handle.close();\r\n                    }\r\n                }, 2000);\r\n            });\r\n        }\r\n        return handle;\r\n    }\r\n\r\n    // private onRemotePeerConnect(user: PeerUserConnectedModel) {\r\n    //     console.log(\"other user connected\", user);\r\n    // }\r\n}\r\n\r\n\r\n// type UserVideoCall = {\r\n//     call: Peer.MediaConnection;\r\n//     stream: MediaStream;\r\n//     userId: string;\r\n// }\r\n\r\n// type IncomingStreamArgs = {\r\n//     stream: MediaStream;\r\n//     userId: string;\r\n// }\r\n\r\nclass NetworkedVideo extends EventDispatcher {\r\n\r\n    private readonly context: Context;\r\n    private readonly peer: PeerHandle;\r\n\r\n    // private _receiveVideoStreamListeners: Array<(info: IncomingStreamArgs) => void> = [];\r\n    private _sendingVideoStreams: Map<MediaStream, CallHandle[]> = new Map();\r\n\r\n    constructor(context: Context, peer: PeerHandle) {\r\n        super();\r\n        this.context = context;\r\n        this.peer = peer;\r\n    }\r\n\r\n    startSendingVideo(stream: MediaStream) {\r\n        if (!this._sendingVideoStreams.has(stream)) {\r\n            this._sendingVideoStreams.set(stream, []);\r\n            this.updateSendingCalls();\r\n        };\r\n    }\r\n\r\n    stopSendingVideo(_steam: MediaStream | undefined | null) {\r\n        if (_steam) {\r\n            const calls = this._sendingVideoStreams.get(_steam);\r\n            if (calls) {\r\n                console.log(\"Closing calls\", calls);\r\n                for (const call of calls) {\r\n                    call.close();\r\n                }\r\n            }\r\n            this._sendingVideoStreams.delete(_steam);\r\n            if (calls)\r\n                console.log(\"Currently sending\", this._sendingVideoStreams);\r\n        }\r\n    }\r\n\r\n    private onConnectRoomFn: Function = this.onConnectRoom.bind(this);\r\n    private onUserConnectedFn: Function = this.onUserConnected.bind(this);\r\n    private onUserLeftFn: Function = this.onUserLeft.bind(this);\r\n\r\n    enable() {\r\n        this.peer.enable();\r\n        this.context.connection.beginListen(PeerEvent.Connected, this.onUserConnectedFn);\r\n        this.peer.addEventListener(\"receive-video\", this.onReceiveVideo.bind(this));\r\n    }\r\n\r\n    disable() {\r\n        this.peer.disable();\r\n        // this.context.connection.stopListening(RoomEvents.UserJoinedRoom, this.onUserConnectedFn);\r\n        // this.context.connection.stopListening(RoomEvents.UserLeftRoom, this.onUserLeftFn);\r\n    }\r\n\r\n    private onReceiveVideo(evt) {\r\n        console.log(\"RECEIVE VIDEO\", evt);\r\n        this.dispatchEvent({ type: \"receive-video\", target: this, stream: evt.stream, userId: evt.userId });\r\n    }\r\n\r\n    private onConnectRoom() {\r\n\r\n    }\r\n\r\n    private onUserConnected(user: PeerUserConnectedModel) {\r\n        // console.log(this.peer.id, user.guid)\r\n        if (this.peer.id === user.guid) {\r\n            console.log(\"USER CONNECTED\", user);\r\n            const stream = this._sendingVideoStreams.keys().next().value;\r\n            this.peer.makeCall(user.peerId, stream);\r\n        }\r\n    }\r\n\r\n    private onUserLeft(_: UserJoinedOrLeftRoomModel) {\r\n        this.stopCallsToUsersThatAreNotInTheRoomAnymore();\r\n    }\r\n\r\n    private updateSendingCalls() {\r\n        let startedNewCall = false;\r\n        for (const stream of this._sendingVideoStreams.keys()) {\r\n            const calls = this._sendingVideoStreams.get(stream) || [];\r\n            for (const userId of this.context.connection.usersInRoom()) {\r\n                if (userId === this.context.connection.connectionId) continue;\r\n                const existing = calls.find(c => c.userId === userId);\r\n                if (!existing) {\r\n                    const handle = this.peer.makeCall(this.peer.getPeerIdFromUserId(userId), stream);\r\n                    if (handle) {\r\n                        startedNewCall = true;\r\n                        calls.push(handle);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._sendingVideoStreams.set(stream, calls);\r\n        }\r\n        this.stopCallsToUsersThatAreNotInTheRoomAnymore();\r\n        if (startedNewCall) {\r\n            console.log(\"Currently sending\", this._sendingVideoStreams);\r\n        }\r\n    }\r\n\r\n    private stopCallsToUsersThatAreNotInTheRoomAnymore() {\r\n        for (const stream of this._sendingVideoStreams.keys()) {\r\n            const calls = this._sendingVideoStreams.get(stream);\r\n            if (!calls) continue;\r\n            for (let i = calls.length - 1; i >= 0; i--) {\r\n                const call = calls[i];\r\n                if (!this.context.connection.userIsInRoom(call.userId)) {\r\n                    call.close();\r\n                    calls.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // const call = peer.call(peerId, stream);\r\n}\r\n", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { RGBAColor } from \"./js-extensions/RGBAColor\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { ShadowMaterial, AdditiveBlending, Material } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\nenum ShadowMode {\r\n    ShadowMask = 0,\r\n    Additive = 1,\r\n}\r\n\r\nexport class ShadowCatcher extends Behaviour {\r\n\r\n    //@type Needle.Engine.ShadowCatcher.Mode\r\n    @serializable()\r\n    mode: ShadowMode = ShadowMode.ShadowMask;\r\n\r\n    //@type UnityEngine.Color\r\n    @serializable(RGBAColor)\r\n    shadowColor: RGBAColor = new RGBAColor(0, 0, 0, 1);\r\n\r\n    awake() {\r\n\r\n        switch (this.mode) {\r\n            case ShadowMode.ShadowMask:\r\n                this.applyShadowMaterial();\r\n                break;\r\n            case ShadowMode.Additive:\r\n                this.applyLightBlendMaterial();\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    // Custom blending, diffuse-only lighting blended onto the scene additively.\r\n    // Works great for Point Lights and spot lights, \r\n    // doesn't work for directional lights (since they're lighting up everything else).\r\n    // Works even better with an additional black-ish gradient to darken parts of the AR scene\r\n    // so that lights become more visible on bright surfaces.\r\n    applyLightBlendMaterial() {\r\n        const renderer = GameObject.getComponent(this.gameObject, Renderer);\r\n        if (renderer) {\r\n            const material = renderer.sharedMaterial;\r\n            material.blending = AdditiveBlending;\r\n            this.applyMaterialOptions(material);\r\n            material.onBeforeCompile = (shader) => {\r\n                // see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/meshphysical.glsl.js#L181\r\n                // see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib.js#LL284C11-L284C11\r\n                // see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/shadow.glsl.js#L40\r\n                // see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js#L2\r\n                // see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js#L281\r\n\r\n                shader.fragmentShader = shader.fragmentShader.replace(\"vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\",\r\n                    `vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\r\n                // diffuse-only lighting with overdrive to somewhat compensate\r\n                // for the loss of indirect lighting and to make it more visible.\r\n                vec3 direct = reflectedLight.directDiffuse * 3.;\r\n                float max = max(direct.r, max(direct.g, direct.b));\r\n                \r\n                // early out - we're simply returning direct lighting and some alpha based on it so it can \r\n                // be blended onto the scene.\r\n                gl_FragColor = vec4(direct, max);\r\n                return;\r\n                `);\r\n            }\r\n        }\r\n    }\r\n\r\n    // THREE.ShadowMaterial: only does a mask; shadowed areas are fully black.\r\n    // doesn't take light attenuation into account.\r\n    // works great for Directional Lights.\r\n    applyShadowMaterial() {\r\n        const renderer = GameObject.getComponent(this.gameObject, Renderer);\r\n        if (renderer) {\r\n            if (renderer.sharedMaterial?.type !== \"ShadowMaterial\") {\r\n                const material = new ShadowMaterial();\r\n                material.color = this.shadowColor;\r\n                material.opacity = this.shadowColor.alpha;\r\n                this.applyMaterialOptions(material);\r\n                renderer.sharedMaterial = material;\r\n            }\r\n            else {\r\n                const material = renderer.sharedMaterial as ShadowMaterial;\r\n                material.color = this.shadowColor;\r\n                material.opacity = this.shadowColor.alpha;\r\n                this.applyMaterialOptions(material);\r\n            }\r\n        }\r\n    }\r\n\r\n    private applyMaterialOptions(material: Material) {\r\n        if (material) {\r\n            material.depthWrite = false;\r\n            material.stencilWrite = false;\r\n        }\r\n    }\r\n}", "import { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { EXRLoader } from \"three/examples/jsm/loaders/EXRLoader\";\r\nimport { EquirectangularRefractionMapping, sRGBEncoding, Texture, TextureLoader } from \"three\"\r\nimport { syncField } from \"../engine/engine_networking_auto\";\r\n\r\n\r\nexport class RemoteSkybox extends Behaviour {\r\n\r\n    @syncField(\"setSkybox\")\r\n    @serializable()\r\n    url?: string;\r\n\r\n    @serializable()\r\n    allowDrop: boolean = true;\r\n\r\n    @serializable()\r\n    background: boolean = true;\r\n\r\n    @serializable()\r\n    backgroundBlurriness: number = 0;\r\n\r\n    @serializable()\r\n    environment: boolean = true;\r\n\r\n    private _loader?: RGBELoader | EXRLoader | TextureLoader;\r\n    private _prevLoadedEnvironment?: Texture;\r\n    private _prevEnvironment: Texture | null = null;\r\n    private _prevBackground: any = null;\r\n\r\n    onEnable() {\r\n        this.setSkybox(this.url);\r\n        this.registerDropEvents();\r\n    }\r\n\r\n    onDisable() {\r\n        if (this.context.scene.environment === this._prevLoadedEnvironment) {\r\n            if (!this.context.isInXR) {\r\n                this.context.scene.environment = this._prevEnvironment;\r\n                this.context.scene.background = this._prevBackground;\r\n            }\r\n            this._prevLoadedEnvironment = undefined;\r\n        }\r\n        this.unregisterDropEvents();\r\n    }\r\n\r\n    async setSkybox(url: string | undefined | null) {\r\n        if (!url) return;\r\n        if (!url?.endsWith(\".hdr\") && !url.endsWith(\".exr\")) {\r\n            console.warn(\"Potentially invalid skybox url\", this.url, \"on\", this.name);\r\n        }\r\n\r\n        if (!this._loader) {\r\n            const isEXR = url.endsWith(\".exr\");\r\n            const isHdr = url.endsWith(\".hdr\");\r\n            if (isEXR) {\r\n                this._loader = new EXRLoader();\r\n            }\r\n            else if (isHdr) {\r\n                this._loader = new RGBELoader();\r\n            }\r\n            else {\r\n                this._loader = new TextureLoader();\r\n            }\r\n        }\r\n        const envMap = await this._loader.loadAsync(url);\r\n        if (!envMap) return;\r\n        if (!this.enabled) return;\r\n        this.url = url;\r\n        envMap.mapping = EquirectangularRefractionMapping;\r\n        if (this._loader instanceof TextureLoader) {\r\n            envMap.encoding = sRGBEncoding;\r\n        }\r\n        this._prevBackground = this.context.scene.background;\r\n        this._prevEnvironment = this.context.scene.environment;\r\n        console.log(\"Set skybox\", this.url);\r\n        if (this.environment)\r\n            this.context.scene.environment = envMap;\r\n        if (this.background)\r\n            this.context.scene.background = envMap;\r\n        this._prevLoadedEnvironment = envMap;\r\n        const nameIndex = url.lastIndexOf(\"/\");\r\n        envMap.name = url.substring(nameIndex >= 0 ? nameIndex + 1 : 0);\r\n        this.context.scene.backgroundBlurriness = this.backgroundBlurriness;\r\n    }\r\n\r\n\r\n    private dragOverEvent?: any;\r\n    private dropEvent?: any;\r\n\r\n    private registerDropEvents() {\r\n        if (this.dragOverEvent) return;\r\n\r\n        this.dragOverEvent = (e: DragEvent) => {\r\n            if (!this.allowDrop) return;\r\n            if (!e.dataTransfer) return;\r\n            for (const type of e.dataTransfer.types) {\r\n                // in ondragover we dont get access to the content\r\n                // but if we have a uri list we can assume\r\n                // someone is maybe dragging a image file\r\n                // so we want to capture this\r\n                if (type === \"text/uri-list\") {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.dropEvent = (e: DragEvent) => {\r\n            if (!this.allowDrop) return;\r\n            e.preventDefault();\r\n            if (!e.dataTransfer) return;\r\n            for (const type of e.dataTransfer.types) {\r\n                if (type === \"text/uri-list\") {\r\n                    const url = e.dataTransfer.getData(type);\r\n                    console.log(type, url);\r\n                    let name = new RegExp(/polyhaven.com\\/asset_img\\/.+?\\/(?<name>.+)\\.png/).exec(url)?.groups?.name;\r\n                    if (!name) {\r\n                        name = new RegExp(/polyhaven\\.com\\/a\\/(?<name>.+)/).exec(url)?.groups?.name;\r\n                    }\r\n                    console.log(name);\r\n                    if (name) {\r\n                        const envurl = \"https://dl.polyhaven.org/file/ph-assets/HDRIs/exr/1k/\" + name + \"_1k.exr\";\r\n                        this.setSkybox(envurl);\r\n                    }\r\n                    else console.warn(\"Could not resolve skybox name from dropped url\", url);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.context.domElement.addEventListener(\"dragover\", this.dragOverEvent);\r\n        this.context.domElement.addEventListener(\"drop\", this.dropEvent);\r\n    }\r\n\r\n    private unregisterDropEvents() {\r\n        if (!this.dragOverEvent) return;\r\n        this.context.domElement.removeEventListener(\"dragover\", this.dragOverEvent);\r\n        this.context.domElement.removeEventListener(\"drop\", this.dropEvent);\r\n    }\r\n}", "import { getParam } from \"./engine_utils\";\r\nimport { Component } from \"../engine-components/Component\";\r\nimport { RoomEvents } from \"./engine_networking\";\r\n\r\nconst debug = getParam(\"debugautosync\");\r\n\r\nclass ComponentsSyncerManager {\r\n    private _syncers: { [key: string]: ComponentPropertiesSyncer } = {};\r\n\r\n    getOrCreateSyncer(comp: Component): ComponentPropertiesSyncer | null {\r\n        if (!comp.guid) return null;\r\n        if (this._syncers[comp.guid]) return this._syncers[comp.guid];\r\n        const syncer = new ComponentPropertiesSyncer(comp);\r\n        this._syncers[comp.guid] = syncer;\r\n        return syncer;\r\n    }\r\n}\r\nconst syncerHandler = new ComponentsSyncerManager();\r\n\r\n/**\r\n * Collects and bundles all changes in properties per component in a frame\r\n */\r\nclass ComponentPropertiesSyncer {\r\n\r\n    comp: Component;\r\n\r\n    constructor(comp: Component) {\r\n        // console.log(\"CREATE NEW SYNC\", comp.name, comp.guid);\r\n        this.comp = comp;\r\n    }\r\n\r\n    // private getters: { [key: string]: Function } = {};\r\n    private hasChanges: boolean = false;\r\n    private changedProperties: { [key: string]: any } = {};\r\n    private data = {};\r\n\r\n    private _boundEvent?: Function;\r\n\r\n    get networkingKey(): string {\r\n        const obj = this.comp as object;\r\n        const key = obj.constructor.name;\r\n        return key;\r\n    }\r\n\r\n    /** is set to true in on receive call to avoid circular sending */\r\n    private _isReceiving: boolean = false;\r\n    private _isInit = false;\r\n\r\n    init(comp) {\r\n        if (this._isInit) return;\r\n        this._isInit = true;\r\n        this.comp = comp;\r\n        // console.log(\"INIT\", this.comp.name, this.networkingKey);\r\n        this._boundEvent = this.onHandleSending.bind(this);\r\n        this.comp.context.post_render_callbacks.push(this._boundEvent);\r\n        this.comp.context.connection.beginListen(this.networkingKey, this.onHandleReceiving.bind(this));\r\n\r\n        const state = this.comp.context.connection.tryGetState(this.comp.guid);\r\n        if(state) this.onHandleReceiving(state);\r\n    }\r\n\r\n    notifyChanged(propertyName: string, value: any) {\r\n        if (this._isReceiving) return;\r\n        // console.log(\"Property changed: \" + propertyName, value);\r\n        this.hasChanges = true;\r\n        this.changedProperties[propertyName] = value;\r\n    }\r\n\r\n    private onHandleSending() {\r\n        if (!this.hasChanges) return;\r\n        this.hasChanges = false;\r\n        // console.log(this.changedProperties);\r\n        const net = this.comp.context.connection;\r\n        if (!net || !net.isConnected) {\r\n            for (const key in this.changedProperties)\r\n                delete this.changedProperties[key];\r\n            return;\r\n        }\r\n        for (const key in this.data) {\r\n            delete this.data[key];\r\n        }\r\n        this.data[\"guid\"] = this.comp.guid;\r\n        for (const name in this.changedProperties) {\r\n            const value = this.changedProperties[name];\r\n            // console.log(value);\r\n            delete this.changedProperties[name];\r\n            this.data[name] = value;\r\n        }\r\n        // console.log(\"SEND\", this.comp.name, this.data, this.networkingKey);\r\n        net.send(this.networkingKey, this.data);\r\n    }\r\n\r\n    private onHandleReceiving(val) {\r\n        if (!this._isInit) return;\r\n        if (!this.comp) return;\r\n        const guid = val.guid;\r\n        if (guid && guid !== this.comp.guid) return;\r\n        if (debug)\r\n            console.log(\"RECEIVED\", this.comp.name, this.comp.guid, val);\r\n        try {\r\n            this._isReceiving = true;\r\n            for (const key in val) {\r\n                if (key === \"guid\") continue;\r\n                const value = val[key];\r\n                // console.log(\"SET\", key, value, this.comp.guid, this.comp);\r\n                this.comp[key] = value;\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this._isReceiving = false;\r\n        }\r\n    }\r\n\r\n    // private _seen: Set<any> = new Set();\r\n    // private uniqBy(a, key) {\r\n    //     this._seen.clear();\r\n    //     return a.filter(item => {\r\n    //         let k = key(item);\r\n    //         return this._seen.has(k) ? false : this._seen.add(k);\r\n    //     });\r\n    // }\r\n}\r\n\r\nfunction testValueChanged(newValue, previousValue): boolean {\r\n    let valueChanged = previousValue !== newValue;\r\n    if (!valueChanged && newValue && previousValue) {\r\n        // TODO: array are reference types \r\n        // so we need to copy the previous array if we really want to compare it\r\n        if (Array.isArray(newValue) && Array.isArray(previousValue)) {\r\n            valueChanged = true;\r\n            // if (value.length !== previousValue.length) {\r\n            //     shouldSend = true;\r\n            // }\r\n            // else {\r\n            //     for (let i = 0; i < value.length; i++) {\r\n            //         if (value[i] !== previousValue[i]) {\r\n            //             shouldSend = true;\r\n            //             break;\r\n            //         }\r\n            //     }\r\n            // }\r\n        }\r\n        else if (typeof newValue === \"object\" && typeof previousValue === \"object\") {\r\n            // do we want to traverse / recursively check if anything changed???\r\n            for (const key of Object.keys(newValue)) {\r\n                if (newValue[key] !== previousValue[key]) {\r\n                    valueChanged = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return valueChanged;\r\n}\r\n\r\nfunction getSyncer(instance): ComponentPropertiesSyncer | null {\r\n    if (instance[\"__autoPropertySyncHandler\"]) {\r\n        return instance[\"__autoPropertySyncHandler\"];\r\n    }\r\n    const syncer = syncerHandler.getOrCreateSyncer(instance);\r\n    syncer?.init(instance);\r\n    instance[\"__autoPropertySyncHandler\"] = syncer;\r\n    return syncer;\r\n}\r\n\r\nexport declare type SyncFieldOptions = {\r\n    onPropertyChanged: Function,\r\n};\r\n\r\n/**\r\n * Decorate a field to be automatically networked synced\r\n * @param onFieldChanged name of a callback function that will be called when the field is changed. \r\n * This function may return false to prevent notifyChanged from being called \r\n * (for example a networked color is sent as a number and may be converted to a color in the receiver again)\r\n * \r\n * Parameters: (newValue, previousValue)\r\n * @returns \r\n */\r\nexport const syncField = function (onFieldChanged?: string) {\r\n\r\n    return function (target: any, propertyKey: string) {\r\n\r\n        let syncer: ComponentPropertiesSyncer | null = null;\r\n        const fn = onFieldChanged ? target[onFieldChanged] : undefined;\r\n\r\n        const t = target;\r\n        const internalAwake = t.__internalAwake;\r\n        if (debug)\r\n            console.log(propertyKey);\r\n        const backingFieldName = propertyKey + \"k__BackingField\";\r\n\r\n        t.__internalAwake = function () {\r\n            if (this[backingFieldName] !== undefined) {\r\n                return;\r\n            }\r\n            this[backingFieldName] = this[propertyKey];\r\n            internalAwake.call(this);\r\n\r\n            syncer = syncerHandler.getOrCreateSyncer(this);\r\n\r\n            const desc = Object.getOwnPropertyDescriptor(this, propertyKey);\r\n            if (desc?.set === undefined) {\r\n                Object.defineProperty(this, propertyKey, {\r\n                    set: function (value) {\r\n                        const oldValue = this[backingFieldName];\r\n                        this[backingFieldName] = value;\r\n                        if (testValueChanged(value, oldValue)) {\r\n                            if (fn?.call(this, value, oldValue) !== false)\r\n                                getSyncer(this)?.notifyChanged(propertyKey, value);\r\n                        }\r\n                    },\r\n                    get: function () {\r\n                        return this[backingFieldName];\r\n                    },\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                });\r\n            }\r\n\r\n            syncer?.init(this);\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport declare type SyncOptions = {\r\n    key?: string,\r\n    fieldName?: string,\r\n};\r\n\r\nexport const sync = function (_options?: SyncOptions) {\r\n\r\n    return function <T>(target: any, _propertyKey: string, descriptor: PropertyDescriptor) {\r\n        // override awake\r\n        const comp = target as Component;\r\n        let syncer: ComponentPropertiesSyncer | null;\r\n        const internalAwake = comp.__internalAwake.bind(comp);\r\n        comp.__internalAwake = function () {\r\n            if (!this.guid) {\r\n                internalAwake?.call(this);\r\n                return;\r\n            }\r\n            internalAwake();\r\n            syncer = syncerHandler.getOrCreateSyncer(this);\r\n            syncer?.init(this);\r\n        }\r\n\r\n        // inject getter and setter\r\n        if (!descriptor.get) {\r\n            const previousSetter = descriptor.set;\r\n            const backingFieldName = _propertyKey + \"k__BackingField\";\r\n            Object.defineProperty(target, _propertyKey, {\r\n                set: function (value) {\r\n                    this[backingFieldName] = value;\r\n                    previousSetter?.call(this, value);\r\n                },\r\n                get: function () {\r\n                    return this[backingFieldName];\r\n                }\r\n            });\r\n            const newDescriptor = Object.getOwnPropertyDescriptor(target, _propertyKey);\r\n            if (newDescriptor) {\r\n                descriptor.set = newDescriptor.set;\r\n                descriptor.get = newDescriptor.get;\r\n            }\r\n        }\r\n\r\n        const setter = descriptor.set;\r\n        const getter = descriptor.get;\r\n        let previousValue: T | undefined = undefined;\r\n\r\n        if (setter) {\r\n            descriptor.set = function (value: T) {\r\n                let valueChanged = false;\r\n\r\n                const syncer = getSyncer(this);\r\n\r\n                // test change\r\n                if (syncer && comp.context && comp.context.connection?.isConnected) {\r\n                    testValueChanged(value, previousValue);\r\n                }\r\n\r\n                if (valueChanged) {\r\n                    // set the value\r\n                    previousValue = value;\r\n                    setter.call(this, value);\r\n                    syncer?.notifyChanged(_propertyKey, value);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n", "import { Camera } from \"./Camera\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { Mathf } from \"../engine/engine_math\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Object3D } from \"three\";\r\nimport { getWorldPosition, getWorldQuaternion } from \"../engine/engine_three_utils\";\r\nimport { Axes } from \"../engine/engine_physics.types\";\r\n\r\nexport class SmoothFollow extends Behaviour {\r\n\r\n    @serializable(Object3D)\r\n    target: THREE.Object3D | null = null;\r\n\r\n    @serializable()\r\n    followFactor = .1;\r\n    @serializable()\r\n    rotateFactor = .1;\r\n\r\n    @serializable()\r\n    positionAxes : Axes = Axes.All;\r\n\r\n    // @serializable()\r\n    // rotationAxes : Axes = Axes.All;\r\n\r\n    flipForward: boolean = false;\r\n\r\n    private static _invertForward: THREE.Quaternion = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI);\r\n    private _firstUpdate = true;\r\n\r\n\r\n    onBeforeRender(): void {\r\n        this.updateNow(false);\r\n    }\r\n\r\n    updateNow(hard: boolean) {\r\n        if (!this.target || this.target === this.gameObject) return;\r\n        if (this.followFactor > 0) {\r\n            const wp = getWorldPosition(this.target);\r\n            const fpos = this._firstUpdate || hard ? 1 : Mathf.clamp01(this.context.time.deltaTime * this.followFactor);\r\n            const currentPosition = this.worldPosition;\r\n            if(this.positionAxes & Axes.X) currentPosition.x = Mathf.lerp(currentPosition.x, wp.x, fpos);\r\n            if(this.positionAxes & Axes.Y) currentPosition.y = Mathf.lerp(currentPosition.y, wp.y, fpos);\r\n            if(this.positionAxes & Axes.Z) currentPosition.z = Mathf.lerp(currentPosition.z, wp.z, fpos);\r\n            this.worldPosition = currentPosition;\r\n        }\r\n        if (this.rotateFactor > 0) {\r\n            const wr = getWorldQuaternion(this.target);\r\n            if (this.flipForward) {\r\n                wr.premultiply(SmoothFollow._invertForward);\r\n            }\r\n            const frot = this._firstUpdate || hard ? 1 : Mathf.clamp01(this.context.time.deltaTime * this.rotateFactor);\r\n\r\n            this.worldQuaternion = this.worldQuaternion.slerp(wr, frot);\r\n        }\r\n        this._firstUpdate = false;\r\n    }\r\n}", "import { BoxHelper, Layers } from \"three\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { BoxHelperComponent } from \"./BoxHelperComponent\"\r\nimport { EventList } from \"./EventList\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debugspatialtrigger\");\r\n\r\nconst layer1 = new Layers();\r\nconst layer2 = new Layers();\r\nfunction testMask(mask1, mask2) {\r\n    layer1.mask = mask1;\r\n    layer2.mask = mask2;\r\n    return layer1.test(layer2);\r\n}\r\n\r\nexport class SpatialTriggerReceiver extends Behaviour {\r\n\r\n    // currently Layers in unity but maybe this should be a string or plane number? Or should it be a bitmask to allow receivers use multiple triggers?\r\n    @serializable()\r\n    triggerMask: number = 0;\r\n    @serializable(EventList)\r\n    onEnter?: EventList;\r\n    @serializable(EventList)\r\n    onStay?: EventList;\r\n    @serializable(EventList)\r\n    onExit?: EventList;\r\n\r\n    start() {\r\n        if (debug) console.log(this.name, this.triggerMask, this);\r\n    }\r\n\r\n    update(): void {\r\n        this.currentIntersected.length = 0;\r\n        for (const trigger of SpatialTrigger.triggers) {\r\n            if (testMask(trigger.triggerMask, this.triggerMask)) {\r\n                if (trigger.test(this.gameObject)) {\r\n                    this.currentIntersected.push(trigger);\r\n                }\r\n            }\r\n        }\r\n        for (let i = this.lastIntersected.length - 1; i >= 0; i--) {\r\n            const last = this.lastIntersected[i]\r\n            if (this.currentIntersected.indexOf(last) < 0) {\r\n                this.onExitTrigger(last);\r\n                this.lastIntersected.splice(i, 1);\r\n            }\r\n        }\r\n        for (const cur of this.currentIntersected) {\r\n            if (this.lastIntersected.indexOf(cur) < 0)\r\n                this.onEnterTrigger(cur);\r\n            this.onStayTrigger(cur);\r\n        }\r\n        this.lastIntersected.length = 0;\r\n        this.lastIntersected.push(...this.currentIntersected);\r\n\r\n    }\r\n\r\n    currentIntersected: SpatialTrigger[] = [];\r\n    lastIntersected: SpatialTrigger[] = [];\r\n\r\n    onEnterTrigger(trigger: SpatialTrigger): void {\r\n        if(debug) console.log(\"ENTER TRIGGER\", this.name, trigger.name, this, trigger);\r\n        trigger.raiseOnEnterEvent(this);\r\n        this.onEnter?.invoke(this, trigger);\r\n    }\r\n    onExitTrigger(trigger: SpatialTrigger): void {\r\n        if(debug) console.log(\"EXIT TRIGGER\", this.name, trigger.name, this, trigger);\r\n        trigger.raiseOnExitEvent(this);\r\n        this.onExit?.invoke(this, trigger);\r\n    }\r\n\r\n    onStayTrigger(trigger: SpatialTrigger): void {\r\n        trigger.raiseOnStayEvent(this);\r\n        this.onStay?.invoke(this, trigger);\r\n    }\r\n}\r\n\r\nexport class SpatialTrigger extends Behaviour {\r\n\r\n    static triggers: SpatialTrigger[] = [];\r\n\r\n    @serializable()\r\n    triggerMask?: number;\r\n\r\n    private boxHelper?: BoxHelperComponent;\r\n\r\n    start() {\r\n        if (debug)\r\n            console.log(this.name, this.triggerMask, this);\r\n    }\r\n\r\n    onEnable(): void {\r\n        SpatialTrigger.triggers.push(this);\r\n        if (!this.boxHelper) {\r\n            this.boxHelper = GameObject.addNewComponent(this.gameObject, BoxHelperComponent);\r\n            this.boxHelper?.showHelper(null, debug as boolean);\r\n        }\r\n    }\r\n    onDisable(): void {\r\n        SpatialTrigger.triggers.splice(SpatialTrigger.triggers.indexOf(this), 1);\r\n    }\r\n\r\n    test(obj: THREE.Object3D): boolean {\r\n        if (!this.boxHelper) return false;\r\n        return this.boxHelper.isInBox(obj) ?? false;\r\n    }\r\n\r\n    // private args: SpatialTriggerEventArgs = new SpatialTriggerEventArgs();\r\n\r\n    raiseOnEnterEvent(rec: SpatialTriggerReceiver) {\r\n        // this.args.trigger = this;\r\n        // this.args.source = rec;\r\n        GameObject.foreachComponent(this.gameObject, c => {\r\n            if (c === rec) return;\r\n            if(c instanceof SpatialTriggerReceiver) {\r\n                c.onEnterTrigger(this);\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    raiseOnStayEvent(rec: SpatialTriggerReceiver) {\r\n        // this.args.trigger = this;\r\n        // this.args.source = rec;\r\n        GameObject.foreachComponent(this.gameObject, c => {\r\n            if (c === rec) return;\r\n            if(c instanceof SpatialTriggerReceiver) {\r\n                c.onStayTrigger(this);\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    raiseOnExitEvent(rec: SpatialTriggerReceiver) {\r\n        GameObject.foreachComponent(this.gameObject, c => {\r\n            if (c === rec) return;\r\n            if(c instanceof SpatialTriggerReceiver) {\r\n                c.onExitTrigger(this);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n", "import { Behaviour, Component, GameObject } from \"./Component\";\r\nimport { Camera } from \"./Camera\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"./OrbitControls\";\r\nimport { WebXR, WebXREvent } from \"./WebXR\";\r\nimport { AvatarMarker } from \"./WebXRAvatar\";\r\nimport { XRStateFlag } from \"./XRFlag\";\r\nimport { SmoothFollow } from \"./SmoothFollow\";\r\nimport { Object3D } from \"three\";\r\nimport { InputEvents, KeyCode } from \"../engine/engine_input\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\nimport { PlayerView, ViewDevice } from \"../engine/engine_playerview\";\r\nimport { RaycastOptions } from \"../engine/engine_physics\";\r\nimport { RoomEvents } from \"../engine/engine_networking\";\r\nimport { ICamera } from \"../engine/engine_types\";\r\nimport { IModel } from \"../engine/engine_networking_types\";\r\n\r\n\r\nexport enum SpectatorMode {\r\n    FirstPerson = 0,\r\n    ThirdPerson = 1,\r\n}\r\n\r\nconst debug = getParam(\"debugspectator\");\r\n\r\nexport class SpectatorCamera extends Behaviour {\r\n\r\n    cam: Camera | null = null;\r\n\r\n    private _mode: SpectatorMode = SpectatorMode.FirstPerson;\r\n\r\n    get mode() { return this._mode; }\r\n    set mode(val: SpectatorMode) {\r\n        this._mode = val;\r\n    }\r\n\r\n    /** if this user is currently spectating someone else */\r\n    get isSpectating(): boolean {\r\n        return this._handler?.currentTarget !== undefined;\r\n    }\r\n\r\n    isSpectatingUser(userId: string): boolean {\r\n        return this.target?.userId === userId;\r\n    }\r\n\r\n    isFollowedBy(userId: string): boolean {\r\n        return this.followers?.includes(userId);\r\n    }\r\n\r\n    /** list of other users that are following me */\r\n    get followers(): string[] {\r\n        return this._networking.followers;\r\n    }\r\n\r\n    stopSpectating() {\r\n        if (this.context.isInXR) {\r\n            this.followSelf();\r\n            return;\r\n        }\r\n        this.target = undefined;\r\n    }\r\n\r\n    private get localId() : string {\r\n        return this.context.connection.connectionId ?? \"local\";\r\n    }\r\n\r\n    /** player view to follow */\r\n    set target(target: PlayerView | undefined) {\r\n        if (this._handler) {\r\n\r\n            // if (this.target?.userId) {\r\n            //     const isFollowedByThisUser = this.followers.includes(this.target.userId);\r\n            //     if (isFollowedByThisUser) {\r\n            //         console.warn(\"Can not follow follower\");\r\n            //         target = undefined;\r\n            //     }\r\n            // }\r\n\r\n            const prev = this._handler.currentTarget?.userId;\r\n            const self = this.context.players.getPlayerView(this.localId);\r\n\r\n            // if user is in XR and sets target to self disable it\r\n            if (target === undefined || (this.context.isInXR === false && self?.currentObject === target.currentObject)) {\r\n                if (this._handler.currentTarget !== undefined) {\r\n                    this._handler.disable();\r\n                    GameObject.setActive(this.gameObject, false);\r\n                    if (this.orbit) this.orbit.enabled = true;\r\n                    this._networking.onSpectatedObjectChanged(target, prev);\r\n                }\r\n            }\r\n            else if (this._handler.currentTarget !== target) {\r\n                this._handler.set(target);\r\n                GameObject.setActive(this.gameObject, true);\r\n                if (this.orbit) this.orbit.enabled = false;\r\n                this._networking.onSpectatedObjectChanged(target, prev);\r\n            }\r\n        }\r\n    }\r\n\r\n    get target(): PlayerView | undefined {\r\n        return this._handler?.currentTarget;\r\n    }\r\n\r\n    requestAllFollowMe() {\r\n        this._networking.onRequestFollowMe();\r\n    }\r\n\r\n    private get isSpectatingSelf() {\r\n        return this.isSpectating && this.target?.currentObject === this.context.players.getPlayerView(this.localId)?.currentObject;\r\n    }\r\n\r\n    // private currentViewport : THREE.Vector4 = new THREE.Vector4();\r\n    // private currentScissor : THREE.Vector4 = new THREE.Vector4();\r\n    // private currentScissorTest : boolean = false;\r\n\r\n    private orbit: OrbitControls | null = null;\r\n    private _handler?: ISpectatorHandler;\r\n    private eventSub_WebXRRequestStartEvent: Function | null = null;\r\n    private eventSub_WebXRStartEvent: Function | null = null;\r\n    private eventSub_WebXREndEvent: Function | null = null;\r\n    private _debug?: SpectatorSelectionController;\r\n    private _networking!: SpectatorCamNetworking;\r\n\r\n    awake(): void {\r\n\r\n        this._debug = new SpectatorSelectionController(this.context, this);\r\n        this._networking = new SpectatorCamNetworking(this.context, this);\r\n        this._networking.awake();\r\n\r\n        GameObject.setActive(this.gameObject, false);\r\n\r\n        this.cam = GameObject.getComponent(this.gameObject, Camera);\r\n        if (!this.cam) {\r\n            console.error(\"Spectator camera needs camera component\", this);\r\n            return;\r\n        }\r\n\r\n\r\n        if (!this._handler && this.cam)\r\n            this._handler = new SpectatorHandler(this.context, this.cam, this);\r\n\r\n\r\n        this.eventSub_WebXRRequestStartEvent = this.onXRSessionRequestStart.bind(this);\r\n        this.eventSub_WebXRStartEvent = this.onXRSessionStart.bind(this);\r\n        this.eventSub_WebXREndEvent = this.onXRSessionEnded.bind(this);\r\n\r\n        WebXR.addEventListener(WebXREvent.RequestVRSession, this.eventSub_WebXRRequestStartEvent);\r\n        WebXR.addEventListener(WebXREvent.XRStarted, this.eventSub_WebXRStartEvent);\r\n        WebXR.addEventListener(WebXREvent.XRStopped, this.eventSub_WebXREndEvent);\r\n\r\n        this.orbit = GameObject.getComponent(this.context.mainCamera, OrbitControls);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.stopSpectating();\r\n        WebXR.removeEventListener(WebXREvent.RequestVRSession, this.eventSub_WebXRStartEvent);\r\n        WebXR.removeEventListener(WebXREvent.XRStarted, this.eventSub_WebXRStartEvent);\r\n        WebXR.removeEventListener(WebXREvent.XRStopped, this.eventSub_WebXREndEvent);\r\n        this._handler?.destroy();\r\n        this._networking.destroy();\r\n    }\r\n\r\n    private isSupportedPlatform() {\r\n        const ua = window.navigator.userAgent;\r\n        const standalone = /Windows|MacOS/.test(ua);\r\n        const isHololens = /Windows NT/.test(ua) && /Edg/.test(ua) && !/Win64/.test(ua);\r\n        return standalone && !isHololens;\r\n    }\r\n\r\n    private onXRSessionRequestStart(_evt) {\r\n        if (!this.isSupportedPlatform()) return;\r\n        GameObject.setActive(this.gameObject, true);\r\n    }\r\n\r\n\r\n    private onXRSessionStart(_evt) {\r\n        if (!this.isSupportedPlatform()) return;\r\n        if (debug) console.log(this.context.mainCamera);\r\n        if (this.context.mainCamera) {\r\n            this.followSelf();\r\n        }\r\n    }\r\n\r\n    private onXRSessionEnded(_evt) {\r\n        this.context.removeCamera(this.cam as ICamera);\r\n        GameObject.setActive(this.gameObject, false);\r\n        if (this.orbit) this.orbit.enabled = true;\r\n        this._handler?.set(undefined);\r\n        this._handler?.disable();\r\n        if (this.isSpectatingSelf)\r\n            this.stopSpectating();\r\n    }\r\n\r\n\r\n    private followSelf() {\r\n        this.target = this.context.players.getPlayerView(this.context.connection.connectionId);\r\n        if (!this.target) {\r\n            this.context.players.setPlayerView(this.localId, this.context.mainCamera, ViewDevice.Headset);\r\n            this.target = this.context.players.getPlayerView(this.localId);\r\n        }\r\n        if (debug) console.log(\"Follow self\", this.target);\r\n    }\r\n\r\n    // TODO: only show Spectator cam for DesktopVR;\r\n    // don't show for AR, don't show on Quest\r\n    // TODO: properly align cameras on enter/exit VR, seems currently spectator cam breaks alignment\r\n    onAfterRender(): void {\r\n        if (!this.cam) return;\r\n\r\n        const renderer = this.context.renderer;\r\n        const xrWasEnabled = renderer.xr.enabled;\r\n\r\n        if (!renderer.xr.isPresenting && !this._handler?.currentTarget) return;\r\n\r\n        this._handler?.update(this._mode);\r\n\r\n        // remember XR render target so we can restore later\r\n        const previousRenderTarget = renderer.getRenderTarget();\r\n        let oldFramebuffer: WebGLFramebuffer | null = null;\r\n\r\n        // seems that in some cases, renderer.getRenderTarget returns null\r\n        // even when we're rendering to a headset.\r\n        if (!previousRenderTarget) {\r\n            if (!renderer.state.bindFramebuffer || !renderer.state.bindXRFramebuffer)\r\n                return;\r\n\r\n            oldFramebuffer = renderer[\"_framebuffer\"];\r\n            renderer.state.bindXRFramebuffer(null);\r\n        }\r\n\r\n        this.setAvatarFlagsBeforeRender();\r\n\r\n        const mainCam = this.context.mainCameraComponent;\r\n\r\n        // these should not be needed if we don't override viewport/scissor\r\n        // renderer.getViewport(this.currentViewport);\r\n        // renderer.getScissor(this.currentScissor);\r\n        // this.currentScissorTest = renderer.getScissorTest();\r\n        // for scissor rendering (e.g. just a part of the screen / viewport, multiplayer split view)\r\n        // let left = 0;\r\n        // let bottom = 100;\r\n        // let width = 300;\r\n        // let height = 300;\r\n        // renderer.setViewport(left, bottom, width, height);\r\n        // renderer.setScissor(left, bottom, width, height);\r\n        // renderer.setScissorTest(true);\r\n        if (mainCam) {\r\n            const backgroundColor = mainCam.backgroundColor;\r\n            if (backgroundColor)\r\n                renderer.setClearColor(backgroundColor, backgroundColor.alpha);\r\n            this.cam.backgroundColor = backgroundColor;\r\n            this.cam.clearFlags = mainCam.clearFlags;\r\n            this.cam.nearClipPlane = mainCam.nearClipPlane;\r\n            this.cam.farClipPlane = mainCam.farClipPlane;\r\n        }\r\n        else\r\n            renderer.setClearColor(new THREE.Color(1, 1, 1));\r\n        renderer.setRenderTarget(null); // null: direct to Canvas\r\n        renderer.xr.enabled = false;\r\n        const cam = this.cam?.cam;\r\n        this.context.updateAspect(cam as THREE.PerspectiveCamera);\r\n        const wasPresenting = renderer.xr.isPresenting;\r\n        renderer.xr.isPresenting = false;\r\n        renderer.setSize(this.context.domWidth, this.context.domHeight);\r\n        renderer.render(this.context.scene, cam);\r\n        renderer.xr.isPresenting = wasPresenting;\r\n\r\n        // restore previous settings so we can continue to render XR\r\n        renderer.xr.enabled = xrWasEnabled;\r\n        //renderer.setViewport(this.currentViewport);\r\n        //renderer.setScissor(this.currentScissor);\r\n        //renderer.setScissorTest(this.currentScissorTest);\r\n\r\n        if (previousRenderTarget)\r\n            renderer.setRenderTarget(previousRenderTarget);\r\n        else\r\n            renderer.state.bindXRFramebuffer(oldFramebuffer);\r\n\r\n        this.resetAvatarFlags();\r\n    }\r\n\r\n    private setAvatarFlagsBeforeRender() {\r\n        const isFirstPersonMode = this._mode === SpectatorMode.FirstPerson;\r\n\r\n        for (const av of AvatarMarker.instances) {\r\n            if (av.avatar && \"isLocalAvatar\" in av.avatar) {\r\n                let mask = XRStateFlag.All;\r\n                if (this.isSpectatingSelf)\r\n                    mask = isFirstPersonMode && av.avatar.isLocalAvatar ? XRStateFlag.FirstPerson : XRStateFlag.ThirdPerson;\r\n                const flags = av.avatar.flags;\r\n                if (!flags) continue;\r\n                for (const flag of flags) {\r\n                    flag.UpdateVisible(mask);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private resetAvatarFlags() {\r\n        for (const av of AvatarMarker.instances) {\r\n            if (av.avatar && \"flags\" in av.avatar) {\r\n                const flags = av.avatar.flags;\r\n                if (!flags) continue;\r\n                for (const flag of flags) {\r\n                    if (av.avatar?.isLocalAvatar) {\r\n                        flag.UpdateVisible(XRStateFlag.FirstPerson);\r\n                    }\r\n                    else {\r\n                        flag.UpdateVisible(XRStateFlag.ThirdPerson);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface ISpectatorHandler {\r\n    context: Context;\r\n    get currentTarget(): PlayerView | undefined;\r\n    set(target?: PlayerView): void;\r\n    update(mode: SpectatorMode);\r\n    disable();\r\n    destroy();\r\n}\r\n\r\nclass SpectatorHandler implements ISpectatorHandler {\r\n\r\n    readonly context: Context;\r\n    readonly cam: Camera;\r\n    readonly spectator: SpectatorCamera;\r\n\r\n    private follow?: SmoothFollow;\r\n    private target?: THREE.Object3D;\r\n    private view?: PlayerView;\r\n    private currentObject: Object3D | undefined;\r\n\r\n    get currentTarget(): PlayerView | undefined {\r\n        return this.view;\r\n    }\r\n\r\n    constructor(context: Context, cam: Camera, spectator: SpectatorCamera) {\r\n        this.context = context;\r\n        this.cam = cam;\r\n        this.spectator = spectator;\r\n    }\r\n\r\n    set(view?: PlayerView): void {\r\n        const followObject = view?.currentObject;\r\n        if (!followObject) {\r\n            this.spectator.stopSpectating();\r\n            return;\r\n        }\r\n        if (followObject === this.currentObject) return;\r\n        this.currentObject = followObject;\r\n        this.view = view;\r\n        if (!this.follow)\r\n            this.follow = GameObject.addNewComponent(this.cam.gameObject, SmoothFollow);\r\n        if (!this.target)\r\n            this.target = new THREE.Object3D();\r\n        followObject.add(this.target);\r\n\r\n        this.follow.enabled = true;\r\n        this.follow.target = this.target;\r\n        // this.context.setCurrentCamera(this.cam);\r\n        if (debug) console.log(\"FOLLOW\", followObject);\r\n        if (!this.context.isInXR) {\r\n            this.context.setCurrentCamera(this.cam as ICamera);\r\n        }\r\n        else this.context.removeCamera(this.cam as ICamera);\r\n    }\r\n\r\n    disable() {\r\n        if (debug) console.log(\"STOP FOLLOW\", this.currentObject);\r\n        this.view = undefined;\r\n        this.currentObject = undefined;\r\n        this.context.removeCamera(this.cam as ICamera);\r\n        if (this.follow)\r\n            this.follow.enabled = false;\r\n    }\r\n\r\n    destroy() {\r\n        this.target?.removeFromParent();\r\n        if (this.follow)\r\n            GameObject.destroy(this.follow);\r\n    }\r\n\r\n    update(mode: SpectatorMode) {\r\n        if (this.currentTarget?.isConnected === false || this.currentTarget?.removed === true) {\r\n            if (debug) console.log(\"Target disconnected or timeout\", this.currentTarget);\r\n            this.spectator.stopSpectating();\r\n            return;\r\n        }\r\n        if (this.currentTarget && this.currentTarget?.currentObject !== this.currentObject) {\r\n            if (debug) console.log(\"Target changed\", this.currentObject, \"to\", this.currentTarget.currentObject);\r\n            this.set(this.currentTarget);\r\n        }\r\n        const perspectiveCamera = this.context.mainCamera as THREE.PerspectiveCamera;\r\n        if (perspectiveCamera) {\r\n            if (this.cam.cam.near !== perspectiveCamera.near || this.cam.cam.far !== perspectiveCamera.far) {\r\n                this.cam.cam.near = perspectiveCamera.near;\r\n                this.cam.cam.far = perspectiveCamera.far;\r\n                this.cam.cam.updateProjectionMatrix();\r\n            }\r\n        }\r\n\r\n        const target = this.follow?.target;\r\n        if (!target || !this.follow) return;\r\n        switch (mode) {\r\n            case SpectatorMode.FirstPerson:\r\n                if (this.view?.viewDevice !== ViewDevice.Browser) {\r\n                    // soft follow for AR and VR\r\n                    this.follow.followFactor = 5;\r\n                    this.follow.rotateFactor = 5;\r\n                }\r\n                else {\r\n                    // snappy follow for desktop\r\n                    this.follow.followFactor = 50;\r\n                    this.follow.rotateFactor = 50;\r\n                }\r\n                target.position.set(0, 0, 0);\r\n                break;\r\n            case SpectatorMode.ThirdPerson:\r\n                this.follow.followFactor = 3;\r\n                this.follow.rotateFactor = 2;\r\n                target.position.set(0, .5, 1.5);\r\n                break;\r\n        }\r\n        this.follow.flipForward = false;\r\n        // console.log(this.view);\r\n        if (this.view?.viewDevice !== ViewDevice.Browser)\r\n            target.quaternion.copy(_inverseYQuat);\r\n        else target.quaternion.identity();\r\n    }\r\n\r\n\r\n}\r\n\r\nconst _inverseYQuat = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI);\r\n\r\n\r\nclass SpectatorSelectionController {\r\n\r\n    private readonly context: Context;\r\n    private readonly spectator: SpectatorCamera;\r\n\r\n    constructor(context: Context, spectator: SpectatorCamera) {\r\n        this.context = context;\r\n        this.spectator = spectator;\r\n        console.log(\"Click other avatars or cameras to follow them. Press ESC to exit spectator mode.\");\r\n        window.addEventListener(\"keydown\", (evt) => {\r\n            const key = evt.key;\r\n            if (key === \"Escape\") {\r\n                this.spectator.stopSpectating();\r\n            }\r\n        });\r\n        let downTime: number = 0;\r\n        this.context.input.addEventListener(InputEvents.PointerDown, _ => {\r\n            downTime = this.context.time.time;\r\n        });\r\n        this.context.input.addEventListener(InputEvents.PointerUp, _ => {\r\n            const dt = this.context.time.time - downTime;\r\n            if (dt > 1) {\r\n                this.spectator.stopSpectating();\r\n            }\r\n            else if (this.context.input.getPointerClicked(0) && dt < .3)\r\n                this.trySelectObject();\r\n        });\r\n    }\r\n\r\n    private trySelectObject() {\r\n        const opts = new RaycastOptions();\r\n        opts.setMask(0xffffff);\r\n        // opts.cam = this.spectator.cam?.cam;\r\n        const hits = this.context.physics.raycast(opts);\r\n        if (debug) console.log(...hits);\r\n        if (hits?.length) {\r\n            for (const hit of hits) {\r\n                if (hit.distance < .2) continue;\r\n                const obj = hit.object;\r\n                const avatar = GameObject.getComponentInParent(obj, AvatarMarker);\r\n                const id = avatar?.connectionId;\r\n                if (id) {\r\n                    const view = this.context.players.getPlayerView(id);\r\n                    this.spectator.target = view;\r\n                    if (debug) console.log(\"spectate\", id, avatar);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass SpectatorFollowerChangedEventModel implements IModel {\r\n    /** the user that is following */\r\n    guid: string;\r\n    readonly dontSave: boolean = true;\r\n\r\n    /** the user being followed */\r\n    targetUserId: string | undefined;\r\n    stoppedFollowing: boolean;\r\n\r\n    constructor(connectionId: string, userId: string | undefined, stoppedFollowing: boolean) {\r\n        this.guid = connectionId;\r\n        this.targetUserId = userId;\r\n        this.stoppedFollowing = stoppedFollowing;\r\n    }\r\n}\r\n\r\nclass SpectatorFollowEventModel implements IModel {\r\n    guid: string;\r\n    userId: string | undefined;\r\n\r\n    constructor(comp: Component, userId: string | undefined) {\r\n        this.guid = comp.guid;\r\n        this.userId = userId;\r\n    }\r\n}\r\n\r\nclass SpectatorCamNetworking {\r\n\r\n    readonly followers: string[] = [];\r\n\r\n\r\n    private readonly context: Context;\r\n    private readonly spectator: SpectatorCamera;\r\n    private _followerEventMethod: Function;\r\n    private _requestFollowMethod: Function;\r\n    private _joinedRoomMethod: Function;\r\n\r\n    constructor(context: Context, spectator: SpectatorCamera) {\r\n        this.context = context;\r\n        this.spectator = spectator;\r\n        this._followerEventMethod = this.onFollowerEvent.bind(this);\r\n        this._requestFollowMethod = this.onRequestFollowEvent.bind(this);\r\n        this._joinedRoomMethod = this.onUserJoinedRoom.bind(this);\r\n    }\r\n\r\n    awake() {\r\n        this.context.connection.beginListen(\"spectator-follower-changed\", this._followerEventMethod);\r\n        this.context.connection.beginListen(\"spectator-request-follow\", this._requestFollowMethod);\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, this._joinedRoomMethod);\r\n        document.addEventListener(\"keydown\", evt => {\r\n            if (evt.key === \"f\") {\r\n                this.onRequestFollowMe();\r\n            }\r\n            else if (evt.key === \"Escape\") {\r\n                this.onRequestFollowMe(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.context.connection.stopListening(\"spectator-follower-changed\", this._followerEventMethod);\r\n        this.context.connection.stopListening(\"spectator-request-follow\", this._requestFollowMethod);\r\n        this.context.connection.stopListening(RoomEvents.JoinedRoom, this._joinedRoomMethod);\r\n    }\r\n\r\n    onSpectatedObjectChanged(target: PlayerView | undefined, _prevId?: string) {\r\n        if (debug)\r\n            console.log(this.context.connection.connectionId, \"onSpectatedObjectChanged\", target, _prevId);\r\n        if (this.context.connection.connectionId) {\r\n            const stopped = target?.userId === undefined;\r\n            const userId = stopped ? _prevId : target?.userId;\r\n            const evt = new SpectatorFollowerChangedEventModel(this.context.connection.connectionId, userId, stopped);\r\n            this.context.connection.send(\"spectator-follower-changed\", evt)\r\n        }\r\n    }\r\n\r\n    onRequestFollowMe(stop: boolean = false) {\r\n        if (debug)\r\n            console.log(\"Request follow\", this.context.connection.connectionId);\r\n        if (this.context.connection.connectionId) {\r\n            this.spectator.stopSpectating();\r\n            const id = stop ? undefined : this.context.connection.connectionId;\r\n            const model = new SpectatorFollowEventModel(this.spectator, id);\r\n            this.context.connection.send(\"spectator-request-follow\", model);\r\n        }\r\n    }\r\n\r\n    private onUserJoinedRoom() {\r\n        if (getParam(\"followme\")) {\r\n            this.onRequestFollowMe();\r\n        }\r\n    }\r\n\r\n    private onFollowerEvent(evt: SpectatorFollowerChangedEventModel) {\r\n        const userBeingFollowed = evt.targetUserId;\r\n        const userThatIsFollowing = evt.guid;\r\n\r\n        if (debug)\r\n            console.log(evt);\r\n\r\n        if (userBeingFollowed === this.context.connection.connectionId) {\r\n            if (evt.stoppedFollowing) {\r\n                const index = this.followers.indexOf(userThatIsFollowing);\r\n                if (index !== -1) {\r\n                    this.followers.splice(index, 1);\r\n                    this.removeDisconnectedFollowers();\r\n                    console.log(userThatIsFollowing, \"unfollows you\", this.followers.length);\r\n                }\r\n            }\r\n            else {\r\n                if (!this.followers.includes(userThatIsFollowing)) {\r\n                    this.followers.push(userThatIsFollowing);\r\n                    this.removeDisconnectedFollowers();\r\n                    console.log(userThatIsFollowing, \"follows you\", this.followers.length);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeDisconnectedFollowers() {\r\n        for (let i = this.followers.length - 1; i >= 0; i--) {\r\n            const id = this.followers[i];\r\n            if (this.context.connection.userIsInRoom(id) === false) {\r\n                this.followers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _lastRequestFollowUser: SpectatorFollowEventModel | undefined;\r\n\r\n    private onRequestFollowEvent(evt: SpectatorFollowEventModel) {\r\n        this._lastRequestFollowUser = evt;\r\n\r\n        if (evt.userId === this.context.connection.connectionId) {\r\n            this.spectator.stopSpectating();\r\n        }\r\n        else if (evt.userId === undefined) {\r\n            // this will currently also stop spectating if the user is not following you\r\n            this.spectator.stopSpectating();\r\n        }\r\n        else {\r\n            const view = this.context.players.getPlayerView(evt.userId);\r\n            if (view) {\r\n                this.spectator.target = view;\r\n            }\r\n            else {\r\n                if (debug)\r\n                    console.warn(\"Could not find view\", evt.userId);\r\n                this.enforceFollow();\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _enforceFollowInterval: any;\r\n    private enforceFollow() {\r\n        if (this._enforceFollowInterval) return;\r\n        this._enforceFollowInterval = setInterval(() => {\r\n            if (this._lastRequestFollowUser === undefined || this._lastRequestFollowUser.userId && this.spectator.isFollowedBy(this._lastRequestFollowUser.userId)) {\r\n                clearInterval(this._enforceFollowInterval);\r\n                this._enforceFollowInterval = undefined;\r\n            }\r\n            else {\r\n                if (debug)\r\n                    console.log(\"REQUEST FOLLOW AGAIN\", this._lastRequestFollowUser.userId);\r\n                this.onRequestFollowEvent(this._lastRequestFollowUser);\r\n            }\r\n\r\n        }, 1000);\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as THREE from \"three\";\r\nimport { serializable, serializeable } from \"../engine/engine_serialization_decorator\";\r\nimport { Color, Material, NearestFilter, Texture, Vector2, TextureFilter } from \"three\";\r\nimport { RGBAColor } from \"./js-extensions/RGBAColor\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debugspriterenderer\")\r\n\r\nclass SpriteUtils {\r\n\r\n    static cache: { [key: string]: THREE.BufferGeometry } = {};\r\n\r\n    static getOrCreateGeometry(sprite: Sprite): THREE.BufferGeometry {\r\n        if (sprite._geometry) return sprite._geometry;\r\n        if (sprite.guid) {\r\n            if (SpriteUtils.cache[sprite.guid]) {\r\n                if (debug) console.log(\"Take cached geometry for sprite\", sprite.guid);\r\n                return SpriteUtils.cache[sprite.guid];\r\n            }\r\n        }\r\n        const geo = new THREE.BufferGeometry();\r\n        sprite._geometry = geo;\r\n        const vertices = new Float32Array(sprite.triangles.length * 3);\r\n        const uvs = new Float32Array(sprite.triangles.length * 2);\r\n        for (let i = 0; i < sprite.triangles.length; i += 1) {\r\n            const index = sprite.triangles[i];\r\n\r\n            vertices[i * 3] = -sprite.vertices[index].x;\r\n            vertices[i * 3 + 1] = sprite.vertices[index].y;\r\n\r\n            vertices[i * 3 + 2] = 0;\r\n            const uv = sprite.uv[index];\r\n            uvs[i * 2] = uv.x;\r\n            uvs[i * 2 + 1] = 1 - uv.y;\r\n        }\r\n        geo.setAttribute(\"position\", new THREE.BufferAttribute(vertices, 3));\r\n        geo.setAttribute(\"uv\", new THREE.BufferAttribute(uvs, 2));\r\n        if (sprite.guid)\r\n            this.cache[sprite.guid] = geo;\r\n        if (debug)\r\n            console.log(\"Built sprite geometry\", sprite, geo);\r\n        return geo;\r\n    }\r\n}\r\n\r\n/// <summary>\r\n///   <para>SpriteRenderer draw mode.</para>\r\n/// </summary>\r\nexport enum SpriteDrawMode {\r\n    /// <summary>\r\n    ///   <para>Displays the full sprite.</para>\r\n    /// </summary>\r\n    Simple = 0,\r\n    /// <summary>\r\n    ///   <para>The SpriteRenderer will render the sprite as a 9-slice image where the corners will remain constant and the other sections will scale.</para>\r\n    /// </summary>\r\n    Sliced = 1,\r\n    /// <summary>\r\n    ///   <para>The SpriteRenderer will render the sprite as a 9-slice image where the corners will remain constant and the other sections will tile.</para>\r\n    /// </summary>\r\n    Tiled = 2,\r\n}\r\n\r\nclass Vec2 {\r\n    x!: number;\r\n    y!: number;\r\n}\r\n\r\nexport class Sprite {\r\n\r\n    @serializable()\r\n    guid?: string;\r\n    @serializable(Texture)\r\n    texture?: THREE.Texture;\r\n    @serializeable()\r\n    triangles!: Array<number>;\r\n    @serializeable()\r\n    uv!: Array<Vec2>;\r\n    @serializeable()\r\n    vertices!: Array<Vec2>;\r\n\r\n    _geometry?: THREE.BufferGeometry;\r\n}\r\n\r\n\r\nclass Slice {\r\n    @serializable()\r\n    name!: string;\r\n    @serializable(Vector2)\r\n    offset!: Vector2;\r\n    @serializable(Vector2)\r\n    size!: Vector2;\r\n}\r\n\r\nconst $spriteTexOwner = Symbol(\"spriteOwner\");\r\n\r\nexport class SpriteSheet {\r\n\r\n    @serializable(Sprite)\r\n    sprite?: Sprite;\r\n    @serializable()\r\n    index: number = 0;\r\n    @serializable(Slice)\r\n    slices!: Slice[];\r\n\r\n    update() {\r\n        const index = this.index;\r\n        if (index < 0 || index >= this.slices.length)\r\n            return;\r\n        const slice = this.slices[index];\r\n        let tex = this.sprite?.texture;\r\n        if (!tex) return;\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        tex.offset.set(slice.offset.x, slice.offset.y);\r\n        // aniso > 1 makes the texture blurry\r\n        if (tex.minFilter == NearestFilter && tex.magFilter == NearestFilter)\r\n            tex.anisotropy = 1;\r\n        // tex.repeat.set(slice.size.x, -slice.size.y);\r\n        tex.needsUpdate = true;\r\n    }\r\n}\r\n\r\n\r\nexport class SpriteRenderer extends Behaviour {\r\n\r\n    @serializable()\r\n    drawMode: SpriteDrawMode = SpriteDrawMode.Simple;\r\n\r\n    size: Vec2 = { x: 1, y: 1 };\r\n\r\n    @serializable(RGBAColor)\r\n    color?: RGBAColor;\r\n\r\n    @serializable(Material)\r\n    sharedMaterial?: THREE.Material;\r\n\r\n    @serializable(SpriteSheet)\r\n    get sprite(): SpriteSheet | undefined {\r\n        return this._spriteSheet;\r\n    }\r\n    set sprite(value: SpriteSheet | undefined | number) {\r\n        if (value === this._spriteSheet) return;\r\n        if (typeof value === \"number\") {\r\n            const index = Math.floor(value);;\r\n            if (index === value)\r\n                this.spriteIndex = index;\r\n            return;\r\n        }\r\n        else {\r\n            this._spriteSheet = value;\r\n            this.updateSprite();\r\n        }\r\n    }\r\n\r\n    set spriteIndex(value: number) {\r\n        if (!this._spriteSheet) return;\r\n        this._spriteSheet.index = value;\r\n        this._spriteSheet.update();\r\n    }\r\n    get spriteIndex(): number {\r\n        return this._spriteSheet?.index ?? 0;\r\n    }\r\n    get spriteFrames(): number {\r\n        return this._spriteSheet?.slices.length ?? 0;\r\n    }\r\n\r\n    private _spriteSheet?: SpriteSheet;\r\n    private _currentSprite?: THREE.Mesh;\r\n\r\n    awake(): void {\r\n        this._currentSprite = undefined;\r\n        if(debug) {\r\n            console.log(\"Awake\", this.name, this, this.sprite?.sprite?.texture);\r\n            if(this.sprite?.sprite?.texture)\r\n                console.log(this.sprite.sprite.texture.minFilter.toString(), this.sprite.sprite.texture.magFilter.toString());\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (!this._currentSprite)\r\n            this.updateSprite();\r\n        else if (this.gameObject)\r\n            this.gameObject.add(this._currentSprite);\r\n    }\r\n\r\n    // frame : number = 0;\r\n    // update(){\r\n    //     // const frameRate = 12;\r\n    //     // this.frame += frameRate * this.context.time.deltaTime;\r\n    //     // if(this.frame >= this.spriteFrames)\r\n    //     //     this.frame = 0;\r\n    //     // this.spriteIndex = Math.floor(this.frame);\r\n    //     // console.log(this.spriteIndex);\r\n    // }\r\n\r\n    private updateSprite() {\r\n        if (!this.__didAwake) return;\r\n        if (!this.sprite?.sprite) return;\r\n        const sprite = this.sprite.sprite;\r\n        if (!this._currentSprite) {\r\n            const mat = new THREE.MeshBasicMaterial({ color: 0xffffff, side: THREE.DoubleSide });\r\n            if (!mat) return;\r\n            if (this.color) {\r\n                if (!mat[\"color\"]) mat[\"color\"] = new THREE.Color();\r\n                mat[\"color\"].copy(this.color);\r\n                mat[\"opacity\"] = this.color.alpha;\r\n            }\r\n            mat.alphaTest = 0.5;\r\n\r\n            if (sprite.texture && !mat.wireframe) {\r\n                let tex = sprite.texture;\r\n                // the sprite renderer modifies the textue offset \r\n                // so we need to clone the texture \r\n                // if the same texture is used multiple times\r\n                if (tex[$spriteTexOwner] !== undefined && tex[$spriteTexOwner] !== this && this.spriteFrames > 1) {\r\n                    tex = sprite!.texture = tex.clone();\r\n                }\r\n                tex[$spriteTexOwner] = this;\r\n                mat[\"map\"] = tex;\r\n            }\r\n            this.sharedMaterial = mat;\r\n            this._currentSprite = new THREE.Mesh(SpriteUtils.getOrCreateGeometry(sprite), mat);\r\n        }\r\n        else {\r\n            this._currentSprite.geometry = SpriteUtils.getOrCreateGeometry(sprite);\r\n            this._currentSprite.material[\"map\"] = sprite.texture;\r\n        }\r\n\r\n        if (this._currentSprite.parent !== this.gameObject) {\r\n            if (this.drawMode === SpriteDrawMode.Tiled)\r\n                this._currentSprite.scale.set(this.size.x, this.size.y, 1);\r\n            if (this.gameObject)\r\n                this.gameObject.add(this._currentSprite);\r\n        }\r\n\r\n        this._spriteSheet?.update();\r\n    }\r\n}\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nimport { Vec3 } from './vec3';\r\n\r\n\r\nexport class SyncedCameraModel {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SyncedCameraModel {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nstatic getRootAsSyncedCameraModel(bb:flatbuffers.ByteBuffer, obj?:SyncedCameraModel):SyncedCameraModel {\r\n  return (obj || new SyncedCameraModel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic getSizePrefixedRootAsSyncedCameraModel(bb:flatbuffers.ByteBuffer, obj?:SyncedCameraModel):SyncedCameraModel {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new SyncedCameraModel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nuserId():string|null\r\nuserId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nuserId(optionalEncoding?:any):string|Uint8Array|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n}\r\n\r\nguid():string|null\r\nguid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nguid(optionalEncoding?:any):string|Uint8Array|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n}\r\n\r\ndontSave():boolean {\r\n  const offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n}\r\n\r\npos(obj?:Vec3):Vec3|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Vec3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nrot(obj?:Vec3):Vec3|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Vec3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nstatic startSyncedCameraModel(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n}\r\n\r\nstatic addUserId(builder:flatbuffers.Builder, userIdOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, userIdOffset, 0);\r\n}\r\n\r\nstatic addGuid(builder:flatbuffers.Builder, guidOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, guidOffset, 0);\r\n}\r\n\r\nstatic addDontSave(builder:flatbuffers.Builder, dontSave:boolean) {\r\n  builder.addFieldInt8(2, +dontSave, +false);\r\n}\r\n\r\nstatic addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, posOffset, 0);\r\n}\r\n\r\nstatic addRot(builder:flatbuffers.Builder, rotOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(4, rotOffset, 0);\r\n}\r\n\r\nstatic endSyncedCameraModel(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  const offset = builder.endObject();\r\n  return offset;\r\n}\r\n\r\nstatic finishSyncedCameraModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset);\r\n}\r\n\r\nstatic finishSizePrefixedSyncedCameraModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, undefined, true);\r\n}\r\n\r\n}\r\n", "import { NetworkConnection } from \"../engine/engine_networking\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { Camera } from \"./Camera\";\r\nimport * as utils from \"../engine/engine_three_utils\"\r\nimport { WebXR } from \"./WebXR\";\r\nimport { Builder } from \"flatbuffers\";\r\nimport { SyncedCameraModel } from \"../engine-schemes/synced-camera-model\";\r\nimport { Vec3 } from \"../engine-schemes/vec3\";\r\nimport { registerType } from \"../engine-schemes/schemes\";\r\nimport { InstancingUtil } from \"../engine/engine_instancing\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Object3D } from \"three\";\r\nimport { AvatarMarker } from \"./WebXRAvatar\";\r\nimport { AssetReference } from \"../engine/engine_addressables\";\r\nimport { ViewDevice } from \"../engine/engine_playerview\";\r\nimport { InstantiateOptions } from \"../engine/engine_gameobject\";\r\n\r\nconst SyncedCameraModelIdentifier = \"SCAM\";\r\nregisterType(SyncedCameraModelIdentifier, SyncedCameraModel.getRootAsSyncedCameraModel);\r\nconst builder = new Builder();\r\n\r\n// enum CameraSyncEvent {\r\n//     Update = \"sync-update-camera\",\r\n// }\r\n\r\nclass CameraModel {\r\n    userId: string;\r\n    guid: string;\r\n    // dontSave: boolean = true;\r\n    // pos: { x: number, y: number, z: number } = { x: 0, y: 0, z: 0 };\r\n    // rot: { x: number, y: number, z: number } = { x: 0, y: 0, z: 0 };\r\n\r\n    constructor(connectionId: string, guid: string) {\r\n        this.guid = guid;\r\n        this.userId = connectionId;\r\n    }\r\n\r\n    send(cam: THREE.Camera | null | undefined, con: NetworkConnection) {\r\n        if (cam) {\r\n            builder.clear();\r\n            const guid = builder.createString(this.guid);\r\n            const userId = builder.createString(this.userId);\r\n            SyncedCameraModel.startSyncedCameraModel(builder);\r\n            SyncedCameraModel.addGuid(builder, guid);\r\n            SyncedCameraModel.addUserId(builder, userId);\r\n            const p = utils.getWorldPosition(cam);\r\n            const r = utils.getWorldRotation(cam);\r\n            SyncedCameraModel.addPos(builder, Vec3.createVec3(builder, p.x, p.y, p.z));\r\n            SyncedCameraModel.addRot(builder, Vec3.createVec3(builder, r.x, r.y, r.z));\r\n            const offset = SyncedCameraModel.endSyncedCameraModel(builder);\r\n            builder.finish(offset, SyncedCameraModelIdentifier);\r\n            con.sendBinary(builder.asUint8Array());\r\n        }\r\n    }\r\n}\r\n\r\ndeclare type UserCamInfo = {\r\n    obj: THREE.Object3D,\r\n    lastUpdate: number;\r\n    userId: string;\r\n};\r\n\r\nexport class SyncedCamera extends Behaviour {\r\n\r\n    static instances: UserCamInfo[] = [];\r\n\r\n    getCameraObject(userId: string): THREE.Object3D | null {\r\n        const guid = this.userToCamMap[userId];\r\n        if (!guid) return null;\r\n        return this.remoteCams[guid].obj;\r\n    }\r\n\r\n    @serializable([Object3D, AssetReference])\r\n    public cameraPrefab: THREE.Object3D | null | AssetReference = null;\r\n\r\n    private _lastWorldPosition!: THREE.Vector3;\r\n    private _lastWorldQuaternion!: THREE.Quaternion;\r\n    private _model: CameraModel | null = null;\r\n    private _needsUpdate: boolean = true;\r\n    private _lastUpdateTime: number = 0;\r\n\r\n    private remoteCams: { [id: string]: UserCamInfo } = {};\r\n    private userToCamMap: { [id: string]: string } = {};\r\n    private _camTimeoutInSeconds = 10;\r\n    private _receiveCallback: Function | null = null;\r\n\r\n    async awake() {\r\n        this._lastWorldPosition = this.worldPosition.clone();\r\n        this._lastWorldQuaternion = this.worldQuaternion.clone();\r\n\r\n        if (this.cameraPrefab) {\r\n\r\n            if (\"uri\" in this.cameraPrefab) {\r\n                this.cameraPrefab = await this.cameraPrefab.instantiate(this.gameObject);\r\n            }\r\n\r\n            if (this.cameraPrefab && \"isObject3D\" in this.cameraPrefab) {\r\n                this.cameraPrefab.visible = false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onEnable(): void {\r\n        this._receiveCallback = this.context.connection.beginListenBinrary(SyncedCameraModelIdentifier, this.onReceivedRemoteCameraInfoBin.bind(this));\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.context.connection.stopListenBinary(SyncedCameraModelIdentifier, this._receiveCallback);\r\n    }\r\n\r\n    update(): void {\r\n\r\n        for (const guid in this.remoteCams) {\r\n            const cam = this.remoteCams[guid];\r\n            const timeDiff = this.context.time.realtimeSinceStartup - cam.lastUpdate;\r\n            if (!cam || (timeDiff) > this._camTimeoutInSeconds) {\r\n                console.log(\"Remote cam timeout\", cam, timeDiff);\r\n                if (cam?.obj) {\r\n                    GameObject.destroy(cam.obj);\r\n                }\r\n                delete this.remoteCams[guid];\r\n                if (cam)\r\n                    delete this.userToCamMap[cam.userId];\r\n\r\n                SyncedCamera.instances.push(cam);\r\n                this.context.players.removePlayerView(cam.userId, ViewDevice.Browser);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (WebXR.IsInWebXR) return;\r\n\r\n        const cam = this.context.mainCamera\r\n        if (cam === null) {\r\n            this.enabled = false;\r\n            return;\r\n        }\r\n\r\n        if (!this.context.connection.isConnected || this.context.connection.connectionId === null) return;\r\n\r\n        if (this._model === null) {\r\n            this._model = new CameraModel(this.context.connection.connectionId, this.context.connection.connectionId + \"_camera\");\r\n        }\r\n\r\n        const wp = utils.getWorldPosition(cam);\r\n        const wq = utils.getWorldQuaternion(cam);\r\n        if (wp.distanceTo(this._lastWorldPosition) > 0.001 || wq.angleTo(this._lastWorldQuaternion) > 0.01) {\r\n            this._needsUpdate = true;\r\n        }\r\n        this._lastWorldPosition.copy(wp);\r\n        this._lastWorldQuaternion.copy(wq);\r\n\r\n        if (!this._needsUpdate || this.context.time.frameCount % 2 !== 0) {\r\n            if (this.context.time.realtimeSinceStartup - this._lastUpdateTime > this._camTimeoutInSeconds * .5) {\r\n                // send update anyways to avoid timeout\r\n            }\r\n            else return;\r\n        }\r\n\r\n        this._lastUpdateTime = this.context.time.realtimeSinceStartup;\r\n        this._needsUpdate = false;\r\n        this._model.send(cam, this.context.connection);\r\n        if (!this.context.isInXR)\r\n            this.context.players.setPlayerView(this.context.connection.connectionId, cam, ViewDevice.Browser);\r\n    }\r\n\r\n    private onReceivedRemoteCameraInfoBin(model: SyncedCameraModel) {\r\n        const guid = model.guid();\r\n        if (!guid) return;\r\n        const userId = model.userId();\r\n        if (!userId) return;\r\n        if (!this.context.connection.userIsInRoom(userId)) return;\r\n        if (!this.cameraPrefab) return;\r\n        let rc = this.remoteCams[guid];\r\n        if (!rc) {\r\n            if (\"isObject3D\" in this.cameraPrefab) {\r\n                const opt = new InstantiateOptions();\r\n                opt.context = this.context;\r\n                const instance = GameObject.instantiate(this.cameraPrefab, opt) as GameObject;\r\n                rc = this.remoteCams[guid] = { obj: instance, lastUpdate: this.context.time.realtimeSinceStartup, userId: userId };\r\n                rc.obj.visible = true;\r\n                this.gameObject.add(instance);\r\n                this.userToCamMap[userId] = guid;\r\n                SyncedCamera.instances.push(rc);\r\n\r\n                const marker = GameObject.getOrAddComponent(instance, AvatarMarker);\r\n                marker.connectionId = userId;\r\n                marker.avatar = instance;\r\n\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            // console.log(this.remoteCams);\r\n        }\r\n        const obj = rc.obj;\r\n        this.context.players.setPlayerView(userId, obj, ViewDevice.Browser);\r\n        rc.lastUpdate = this.context.time.realtimeSinceStartup;\r\n        InstancingUtil.markDirty(obj);\r\n        const pos = model.pos();\r\n        if (pos)\r\n            utils.setWorldPositionXYZ(obj, pos.x(), pos.y(), pos.z());\r\n        const rot = model.rot();\r\n        if (rot)\r\n            utils.setWorldRotationXYZ(obj, rot.x(), rot.y(), rot.z());\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport * as utils from \"../engine/engine_utils\"\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\n\r\nconst viewParamName = \"view\";\r\nconst debug = utils.getParam(\"debugsyncedroom\");\r\n\r\nexport class SyncedRoom extends Behaviour {\r\n\r\n    @serializable()\r\n    public roomName!: string;\r\n    @serializable()\r\n    public urlParameterName: string = \"room\";\r\n    @serializable()\r\n    public joinRandomRoom: boolean = true;\r\n    @serializable()\r\n    public requireRoomParameter: boolean = false;\r\n    @serializable()\r\n    public autoRejoin: boolean = true;\r\n\r\n    private _roomPrefix?: string;\r\n\r\n    awake() {\r\n        if(debug) console.log(\"Room\", this.roomName, this.urlParameterName, this.joinRandomRoom, this.requireRoomParameter, this.autoRejoin);\r\n        if (this._roomPrefix === undefined) {\r\n            this._roomPrefix = this.roomName;\r\n            this.roomName = \"\";\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        // if the url contains a view parameter override room and join in view mode\r\n        const viewId = utils.getParam(viewParamName);\r\n        if (viewId && typeof viewId === \"string\" && viewId.length > 0) {\r\n            console.log(\"Join as viewer\");\r\n            this.context.connection.joinRoom(viewId, true);\r\n            return;\r\n        }\r\n        this.tryJoinRoom();\r\n    }\r\n\r\n    onDisable(): void {\r\n        if (this.roomName && this.roomName.length > 0)\r\n            this.context.connection.leaveRoom(this.roomName);\r\n    }\r\n\r\n    tryJoinRoom(call: number = 0): boolean {\r\n        if (call === undefined) call = 0;\r\n        let hasRoomParameter = false;\r\n        if (this.urlParameterName) {\r\n            const val = utils.getParam(this.urlParameterName);\r\n            if (val && typeof val === \"string\") {\r\n                hasRoomParameter = true;\r\n                const roomNameParam = utils.sanitizeString(val);\r\n                this.roomName = roomNameParam;\r\n            }\r\n            else if (this.joinRandomRoom) {\r\n                console.log(\"No room name found in url, generating random one\");\r\n                this.setRandomRoomUrlParameter();\r\n                if (call < 1)\r\n                    return this.tryJoinRoom(call + 1);\r\n            }\r\n        }\r\n        else {\r\n            if (this.joinRandomRoom && (this.roomName === null || this.roomName === undefined || this.roomName.length <= 0)) {\r\n                console.log(\"generate room name\");\r\n                this.roomName = this.generateRoomName();\r\n            }\r\n        }\r\n\r\n        if (this.requireRoomParameter && !hasRoomParameter) {\r\n            if (debug)\r\n                console.log(\"No required room parameter \\\"\" + this.urlParameterName + \"\\\" in url - will not connect to networking backend.\");\r\n            return false;\r\n        }\r\n\r\n        if (!this.roomName || this.roomName.length <= 0) {\r\n            if (debug)\r\n                console.error(\"Missing room name on \\\"\" + this.name + \"\\\". Make sure this is correctly configured in Unity\", this.context.connection.isDebugEnabled ? this : \"\");\r\n            return false;\r\n        }\r\n\r\n        if (!this.context.connection.isConnected) {\r\n            this.context.connection.connect();\r\n        }\r\n\r\n        if (debug) console.log(\"Join \" + this.roomName)\r\n\r\n        if (this._roomPrefix)\r\n            this.roomName = this._roomPrefix + this.roomName;\r\n\r\n        this.context.connection.joinRoom(this.roomName);\r\n        return true;\r\n    }\r\n\r\n    private _lastPingTime: number = 0;\r\n    private _lastRoomTime: number = -1;\r\n\r\n    update(): void {\r\n        if (this.context.connection.isConnected) {\r\n            if (this.context.time.time - this._lastPingTime > 3) {\r\n                this._lastPingTime = this.context.time.time;\r\n                // console.log(\"PING\");\r\n                this.context.connection.send(\"ping\", { time: this.context.time.time });\r\n            }\r\n\r\n            if (this.context.connection.isInRoom) {\r\n                this._lastRoomTime = this.context.time.time;\r\n            }\r\n        }\r\n\r\n        if (this._lastRoomTime > 0 && this.context.time.time - this._lastRoomTime > .3) {\r\n            this._lastRoomTime = -1;\r\n\r\n            if (this.autoRejoin) {\r\n                console.log(\"Disconnected from networking backend - attempt reconnecting now\")\r\n                this.tryJoinRoom();\r\n            }\r\n            else\r\n                console.warn(\"You are not connected to a room anymore (possibly because the tab was inactive for too long and the server kicked you)\");\r\n        }\r\n    }\r\n\r\n    get currentRoomName(): string | null {\r\n        const view = utils.getParam(viewParamName);\r\n        if (view) return view as string;\r\n        return utils.getParam(this.urlParameterName) as string;\r\n    }\r\n\r\n    setRandomRoomUrlParameter() {\r\n        const params = utils.getUrlParams();\r\n        const room = this.generateRoomName();\r\n        // if we already have this parameter\r\n        if (utils.getParam(this.urlParameterName)) {\r\n            params.set(this.urlParameterName, room);\r\n        }\r\n        else\r\n            params.append(this.urlParameterName, room);\r\n        utils.setState(room, params);\r\n    }\r\n\r\n    generateRoomName(): string {\r\n        const words = utils.makeIdFromRandomWords();\r\n        const roomName = words + \"_\" + utils.randomNumber(100, 999);\r\n        return roomName;\r\n    }\r\n\r\n    getViewOnlyUrl(): string | null {\r\n        if (this.context.connection.isConnected && this.context.connection.currentRoomViewId) {\r\n            const url = window.location.search;\r\n            const urlParams = new URLSearchParams(url);\r\n            if (urlParams.has(this.urlParameterName))\r\n                urlParams.delete(this.urlParameterName);\r\n            urlParams.set(viewParamName, this.context.connection.currentRoomViewId);\r\n            return window.location.origin + window.location.pathname + \"?\" + urlParams.toString();\r\n        }\r\n\r\n\r\n        return null;\r\n    }\r\n}\r\n", "\r\nimport * as utils from \"../engine_utils\";\r\nimport { noVoip } from \"../../engine-components/Voip\";\r\n\r\n\r\nexport function detect_run_tests(){\r\n    const count = (utils.getParam(\"testwindowcount\") || 0) as number;\r\n    if(count && count > 0){\r\n        spawnWindows(count);\r\n    }\r\n}\r\n\r\nexport function spawnWindows(count: number): Window[] | null {\r\n\r\n    if(utils.getParam(\"testwindow\")) return null;\r\n\r\n    const url = new URL(window.location.href);\r\n    utils.setOrAddParamsToUrl(url.searchParams, noVoip, 1);\r\n    utils.setOrAddParamsToUrl(url.searchParams, \"testwindow\", 1);\r\n    const str = url.toString();\r\n\r\n    const windows : Window[] = [];\r\n\r\n    window.onbeforeunload = () =>{\r\n        for(const w of windows) w.close(); \r\n    }\r\n\r\n    const spacing = .05;\r\n    const size = 128;// (Math.min(window.innerWidth, window.innerHeight) / Math.sqrt(count)) * (1-spacing);\r\n    let x = 0;\r\n    let y = 0;\r\n    for (let i = 0; i < count; i++) {\r\n\r\n        if ((x * size + size*.01) >= window.innerWidth) {\r\n            y += 1;\r\n            x = 0;\r\n        }\r\n        const px = x * (size * (1+spacing)) + window.screenLeft;\r\n        const py = y * (size * (1+spacing)) + window.screenTop + 90 + 60 * y; \r\n        x += 1;\r\n\r\n        // console.log(size, px, py);\r\n        const testWindow = window.open(str, \"test window \" + i, `popup=yes width=${size} height=${size} top=${py} left=${px}`);\r\n\r\n        if(!testWindow){\r\n            console.warn(\"Failed to open window\");\r\n            continue;\r\n        }\r\n        windows.push(testWindow);\r\n        testWindow.onload = () => {\r\n            testWindow.onbeforeunload = () => {\r\n                for (let i = 0; i < windows.length; i++) {\r\n                    const w = windows[i];\r\n                    if (w === testWindow) continue;\r\n                    w.close();\r\n                }\r\n                windows.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return windows;\r\n}\r\n", "import { Behaviour } from \"./Component\";\r\nimport * as tests from \"../engine/tests/test_utils\";\r\nimport { createTransformModel, SyncedTransform, SyncedTransformIdentifier } from \"./SyncedTransform\";\r\nimport * as flatbuffers from 'flatbuffers';\r\nimport { SyncedTransformModel } from \"../engine-schemes/synced-transform-model\";\r\nimport { Rigidbody } from \"./Rigidbody\";\r\nimport { Vector3 } from \"three\";\r\nimport { IModel } from \"../engine/engine_networking_types\";\r\n\r\nexport class TestRunner extends Behaviour {\r\n    awake(): void {\r\n        tests.detect_run_tests();\r\n    }\r\n}\r\n\r\nexport class TestSimulateUserData extends Behaviour {\r\n\r\n    transformsPerFrame: number = 10;\r\n    interval: number = 0;\r\n    useFlatbuffers: boolean = true;\r\n\r\n    awake(): void {\r\n        if (this.useFlatbuffers) {\r\n            this.context.connection.beginListenBinrary(SyncedTransformIdentifier, (_mod: SyncedTransformModel) => {\r\n                // console.log(\"Received transform\");\r\n                // const sc = SyncedTransformModel.getRootAsSyncedTransformModel(bin);\r\n                // console.log(mod.guid());\r\n                // console.log(\"Received transform\", sc, sc.transform()?.position()?.x(), sc.fast(), bin.getBufferIdentifier());\r\n            });\r\n        }\r\n        else {\r\n            this.models = [];\r\n            for (let i = 0; i < this.transformsPerFrame; i++) {\r\n                this.models.push(new TransformModel(this.context.connection.connectionId + \"_simulatedTransform_\" + i, this));\r\n            }\r\n        }\r\n    }\r\n\r\n    private builder: flatbuffers.Builder | null = null;\r\n    private models: TransformModel[] | null = null;\r\n\r\n    update() {\r\n        if (!this.context.connection.isConnected) return;\r\n\r\n        if (this.useFlatbuffers) {\r\n            if (!this.context.connection.connectionId || this.context.time.frameCount % this.interval !== 0) return;\r\n            if (this.builder === null)\r\n                this.builder = new flatbuffers.Builder(1024);\r\n            const builder = this.builder;\r\n            for (let i = 0; i < this.transformsPerFrame; i++) {\r\n                builder.clear();\r\n                const buf = createTransformModel(this.context.connection.connectionId!, this);\r\n                this.context.connection.sendBinary(buf);\r\n            }\r\n        }\r\n        else {\r\n            if (this.models) {\r\n                for (let i = 0; i < this.models.length; i++) {\r\n                    const mod = this.models[i];\r\n                    mod.dontSave = true;\r\n                    mod.update(this, null);\r\n                    this.context.connection.send(\"TestSimulateUserData-\" + i, mod);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n// use flatbuffer SyncedTransformModel\r\nclass TransformModel implements IModel {\r\n    guid: string;\r\n    fast: boolean = false;\r\n    position: { x: number, y: number, z: number };\r\n    rotation: { x: number, y: number, z: number, w: number };\r\n    // scale : { x : number, y : number, z : number } | undefined = undefined;\r\n    velocity: { x: number, y: number, z: number } | undefined = undefined;\r\n    dontSave?: boolean | undefined;\r\n\r\n    isValid(): boolean {\r\n        return this.fast !== undefined || this.position !== undefined || this.rotation !== undefined || this.velocity !== undefined;\r\n    }\r\n\r\n    constructor(guid: string, obj: Behaviour) {\r\n        this.guid = guid;\r\n        this.position = { x: 0, y: 0, z: 0 };\r\n        this.rotation = { x: 0, y: 0, z: 0, w: 0 };\r\n        this.update(obj, null)\r\n    }\r\n    public static temp: THREE.Vector3 = new Vector3();\r\n\r\n    update(beh: Behaviour, rb: Rigidbody | undefined | null) {\r\n        const world = beh.worldPosition;// go.getWorldPosition(TransformModel.temp);\r\n        this.position.x = world.x;\r\n        this.position.y = world.y;\r\n        this.position.z = world.z;\r\n\r\n        const rot = beh.worldQuaternion;\r\n        this.rotation.x = rot.x;\r\n        this.rotation.y = rot.y;\r\n        this.rotation.z = rot.z;\r\n        this.rotation.w = rot.w;\r\n\r\n        this.fast = false;\r\n\r\n        if (rb) {\r\n            const vel = rb.getVelocity();\r\n            if (this.velocity === undefined) this.velocity = { x: 0, y: 0, z: 0 };\r\n            this.velocity.x = vel.x;\r\n            this.velocity.y = vel.y;\r\n            this.velocity.z = vel.z;\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"./Component\";\r\nimport { SyncedTransform } from \"./SyncedTransform\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport * as params from \"../engine/engine_default_parameters\";\r\nimport { Mesh, MathUtils, EventListener } from \"three\";\r\nimport { TransformControls } from \"three/examples/jsm/controls/TransformControls\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport class TransformGizmo extends Behaviour {\r\n\r\n    @serializable()\r\n    public isGizmo: boolean = true;\r\n\r\n    private control?: TransformControls;\r\n    private orbit?: OrbitControls;\r\n\r\n    awake() {\r\n        if (this.isGizmo && !params.showGizmos) return;\r\n        if (!this.context.mainCamera) return;\r\n        this.control = new TransformControls(this.context.mainCamera, this.context.renderer.domElement);\r\n        this.control.visible = true;\r\n        this.control.enabled = true;\r\n        this.control.getRaycaster().layers.set(2);\r\n\r\n        this.control.size = 0.6;\r\n        this.control.traverse(x => {\r\n            const mesh = x as Mesh;\r\n            mesh.layers.set(2);\r\n            if (mesh) {\r\n                const gizmoMat = mesh.material as THREE.MeshBasicMaterial;\r\n                if (gizmoMat) {\r\n                    gizmoMat.opacity = 0.3;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    start() {\r\n        if (this.context.mainCamera) {\r\n            const orbit = GameObject.getComponentInParent(this.context.mainCamera, OrbitControls) ?? undefined;\r\n            this.orbit = orbit;\r\n        }\r\n    }\r\n\r\n    private changeEventListener?: any;\r\n    private windowKeyDownListener?: any;\r\n    private windowKeyUpListener?: any;\r\n\r\n    onEnable() {\r\n        if (this.control) {\r\n            this.context.scene.add(this.control);\r\n            this.control.attach(this.gameObject);\r\n        }\r\n        this.changeEventListener = this.onControlChangedEvent.bind(this);\r\n        this.control?.addEventListener('dragging-changed', this.changeEventListener);\r\n        this.attachWindowEvents();\r\n    }\r\n\r\n    onDisable() {\r\n        this.control?.removeFromParent();\r\n        if (this.changeEventListener)\r\n            this.control?.removeEventListener('dragging-changed', this.changeEventListener);\r\n    }\r\n\r\n    private onControlChangedEvent(event) {\r\n        const orbit = this.orbit;\r\n        if (orbit) orbit.enabled = !event.value;\r\n        if (event.value) {\r\n            // request ownership on drag start\r\n            const sync = GameObject.getComponentInParent(this.gameObject, SyncedTransform);\r\n            if (sync) {\r\n                sync.requestOwnership();\r\n            }\r\n        }\r\n    }\r\n\r\n    private attachWindowEvents() {\r\n        const control = this.control;\r\n        if (!control) return;\r\n\r\n        if (!this.windowKeyDownListener) {\r\n            this.windowKeyDownListener = (event) => {\r\n                switch (event.keyCode) {\r\n\r\n                    case 81: // Q\r\n                        control.setSpace(control.space === 'local' ? 'world' : 'local');\r\n                        break;\r\n\r\n                    case 16: // Shift\r\n                        control.setTranslationSnap(100);\r\n                        control.setRotationSnap(MathUtils.degToRad(15));\r\n                        control.setScaleSnap(0.25);\r\n                        break;\r\n\r\n                    case 87: // W\r\n                        control.setMode('translate');\r\n                        break;\r\n\r\n                    case 69: // E\r\n                        control.setMode('rotate');\r\n                        break;\r\n\r\n                    case 82: // R\r\n                        control.setMode('scale');\r\n                        break;\r\n\r\n                    /*\r\n                    case 67: // C\r\n                        const position = currentCamera.position.clone();\r\n    \r\n                        currentCamera = currentCamera.isPerspectiveCamera ? cameraOrtho : cameraPersp;\r\n                        currentCamera.position.copy( position );\r\n    \r\n                        orbit.object = currentCamera;\r\n                        control.camera = currentCamera;\r\n    \r\n                        currentCamera.lookAt( orbit.target.x, orbit.target.y, orbit.target.z );\r\n                        onWindowResize();\r\n                        break;\r\n    \r\n                    case 86: // V\r\n                        const randomFoV = Math.random() + 0.1;\r\n                        const randomZoom = Math.random() + 0.1;\r\n    \r\n                        cameraPersp.fov = randomFoV * 160;\r\n                        cameraOrtho.bottom = - randomFoV * 500;\r\n                        cameraOrtho.top = randomFoV * 500;\r\n    \r\n                        cameraPersp.zoom = randomZoom * 5;\r\n                        cameraOrtho.zoom = randomZoom * 5;\r\n                        onWindowResize();\r\n                        break;\r\n                    */\r\n                    case 187:\r\n                    case 107: // +, =, num+\r\n                        control.setSize(control.size + 0.1);\r\n                        break;\r\n\r\n                    case 189:\r\n                    case 109: // -, _, num-\r\n                        control.setSize(Math.max(control.size - 0.1, 0.1));\r\n                        break;\r\n\r\n                    case 88: // X\r\n                        control.showX = !control.showX;\r\n                        break;\r\n\r\n                    case 89: // Y\r\n                        control.showY = !control.showY;\r\n                        break;\r\n\r\n                    case 90: // Z\r\n                        control.showZ = !control.showZ;\r\n                        break;\r\n\r\n                    case 32: // Spacebar\r\n                        control.enabled = !control.enabled;\r\n                        break;\r\n\r\n                }\r\n\r\n            };\r\n        }\r\n\r\n        if (!this.windowKeyUpListener) {\r\n            this.windowKeyUpListener = (event) => {\r\n\r\n                switch (event.keyCode) {\r\n\r\n                    case 16: // Shift\r\n                        control.setTranslationSnap(null);\r\n                        control.setRotationSnap(null);\r\n                        control.setScaleSnap(null);\r\n                        break;\r\n\r\n                }\r\n\r\n            };\r\n        }\r\n\r\n        \r\n        window.addEventListener('keydown', this.windowKeyDownListener);\r\n        window.addEventListener('keyup', this.windowKeyUpListener);\r\n    }\r\n}", "import { Behaviour } from \"./Component\";\r\nimport { NoToneMapping, LinearToneMapping, ACESFilmicToneMapping, ReinhardToneMapping } from \"three\";\r\nimport { serializable } from \"../engine/engine_serialization_decorator\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { getParam } from \"../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debugvolume\");\r\n\r\nexport enum TonemappingMode {\r\n    None = 0,\r\n    Neutral = 1, // Neutral tonemapper\r\n    ACES = 2,    // ACES Filmic reference tonemapper (custom approximation)\r\n}\r\n\r\nexport class VolumeParameter {\r\n    overrideState: boolean = false;\r\n    value: number = 0;\r\n}\r\n\r\nexport class VolumeComponent {\r\n    active: boolean = false;\r\n    parameters?: VolumeParameter[];\r\n}\r\n\r\nexport class ToneMapping extends VolumeComponent {\r\n    mode?: VolumeParameter;\r\n    get isToneMapping() { return true; }\r\n}\r\n\r\nexport class ColorAdjustments extends VolumeComponent {\r\n    postExposure?: VolumeParameter;\r\n}\r\n\r\n// resolve the types:\r\nfunction resolveComponentType(data) {\r\n    if (\"mode\" in data) return ToneMapping;\r\n    if (\"postExposure\" in data) return ColorAdjustments;\r\n    return VolumeComponent;\r\n}\r\n\r\nconst volumeKey = Symbol(\"volumeprofile\");\r\n\r\nexport class VolumeProfile {\r\n    @serializable([d => resolveComponentType(d), VolumeComponent])\r\n    components?: VolumeComponent[];\r\n\r\n    apply(context: Context) {\r\n        this.onUpdate(context, false);\r\n    }\r\n\r\n    unapply(context: Context) {\r\n        this.onUpdate(context, true);\r\n    }\r\n\r\n    private onUpdate(context: Context, remove: boolean) {\r\n        if (!this.components) return;\r\n        const renderer = context.renderer;\r\n        const currentProfile = renderer[volumeKey];\r\n        const isActive = currentProfile !== undefined;\r\n        if (remove) {\r\n            // can not remove volume profile that is not active\r\n            if (!isActive) return;\r\n        }\r\n        else {\r\n            renderer[volumeKey] = this;\r\n        }\r\n        for (const component of this.components) {\r\n\r\n            if (component instanceof ToneMapping) {\r\n                const tonemapping = component as ToneMapping;\r\n                if (!component.active || remove) {\r\n                    context.renderer.toneMapping = LinearToneMapping;\r\n                    continue;\r\n                }\r\n                if (debug) console.log(\"VOLUME:\", TonemappingMode[tonemapping.mode?.value ?? 0]);\r\n                const mode = tonemapping.mode;\r\n                const value = mode?.overrideState ? mode?.value : 0;\r\n                switch (value ?? 0) {\r\n                    case TonemappingMode.None:\r\n                        context.renderer.toneMapping = LinearToneMapping;\r\n                        break;\r\n                    case TonemappingMode.Neutral:\r\n                        context.renderer.toneMapping = ReinhardToneMapping;\r\n                        break;\r\n                    case TonemappingMode.ACES:\r\n                        context.renderer.toneMapping = ACESFilmicToneMapping;\r\n                        break;\r\n                }\r\n            }\r\n            else if (component instanceof ColorAdjustments) {\r\n                const colorAdjustments = component as ColorAdjustments;\r\n                // unity range goes from -15..15\r\n                // three.js range goes from 0..inf\r\n                if (debug)\r\n                    console.log(colorAdjustments.postExposure);\r\n                const exposure = Math.pow(2, colorAdjustments.postExposure?.value ?? 0);\r\n                const useExposure = colorAdjustments.postExposure?.overrideState && !remove;\r\n                context.renderer.toneMappingExposure = useExposure ? exposure : 1;\r\n                if (!context.renderer.toneMapping)\r\n                    context.renderer.toneMapping = LinearToneMapping;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Volume extends Behaviour {\r\n\r\n    @serializable(VolumeProfile)\r\n    sharedProfile?: VolumeProfile;\r\n\r\n    awake() {\r\n        if (debug) {\r\n            console.log(this);\r\n            console.log(\"Press P to toggle post processing\");\r\n            window.addEventListener(\"keydown\", (e) => {\r\n                if (e.key === \"p\") {\r\n                    console.log(\"Toggle volume: \" + this.name, !this.enabled);\r\n                    this.enabled = !this.enabled;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        if (debug) console.log(\"APPLY VOLUME\", this)\r\n        this.sharedProfile?.apply(this.context);\r\n    }\r\n\r\n    onDisable() {\r\n        this.sharedProfile?.unapply(this.context);\r\n    }\r\n}\r\n", "import { getWorldPosition, setWorldPosition, setWorldPositionXYZ } from \"../engine/engine_three_utils\";\r\nimport { Behaviour, GameObject } from \"./Component\";\r\nimport { AttachedObject, AttachedObjectEvents } from \"./WebXRController\";\r\nimport { Object3D, Vector3 } from \"three\";\r\nimport { PlayerColor } from \"./PlayerColor\";\r\nimport { Context } from \"../engine/engine_setup\";\r\nimport { IModel, SendQueue } from \"../engine/engine_networking_types\";\r\n\r\nenum XRGrabEvent {\r\n    StartOrUpdate = \"xr-grab-visual-start-or-update\",\r\n    End = \"xr-grab-visual-end\",\r\n}\r\n\r\nexport class XRGrabModel implements IModel {\r\n    guid!: any;\r\n    dontSave: boolean = true;\r\n\r\n    userId : string | null | undefined;\r\n    point: { x: number, y: number, z: number } = { x: 0, y: 0, z: 0 };\r\n    source: { x: number, y: number, z: number } = { x: 0, y: 0, z: 0 };\r\n    target: string | undefined;\r\n\r\n    update(context : Context, point: Vector3, source: Vector3, target: string | undefined = undefined) {\r\n        this.userId = context.connection.connectionId;\r\n        this.point.x = point.x;\r\n        this.point.y = point.y;\r\n        this.point.z = point.z;\r\n        this.source.x = source.x;\r\n        this.source.y = source.y;\r\n        this.source.z = source.z;\r\n        this.target = target;\r\n    }\r\n}\r\n\r\n// sends grab info to other users and creates rendering instances\r\nexport class XRGrabRendering extends Behaviour {\r\n    prefab: Object3D | null = null;\r\n\r\n    private _grabModels: Array<XRGrabModel> = [];\r\n    private _grabModelsUpdateTime: Array<number> = [];\r\n    private _addOrUpdateSub: Function | null = null;\r\n    private _endSub: Function | null = null;\r\n    private _freeSub: Function | null = null;\r\n    private _instances: { [key: string]: {instance:Object3D, model:XRGrabModel} } = {};\r\n\r\n    awake(): void {\r\n        if(this.prefab) this.prefab.visible = false;\r\n    }\r\n\r\n    onEnable(): void {\r\n        this._addOrUpdateSub = this.context.connection.beginListen(XRGrabEvent.StartOrUpdate, this.onRemoteGrabStartOrUpdate.bind(this));\r\n        this._endSub = this.context.connection.beginListen(XRGrabEvent.End, this.onRemoteGrabEnd.bind(this));\r\n        this._freeSub = AttachedObject.AddEventListener(AttachedObjectEvents.WillFree, this.onAttachedObjectFree.bind(this));\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.context.connection.stopListening(XRGrabEvent.StartOrUpdate, this._addOrUpdateSub);\r\n        this.context.connection.stopListening(XRGrabEvent.End, this._endSub);\r\n        AttachedObject.RemoveEventListener(AttachedObjectEvents.WillFree, this._freeSub);\r\n    }\r\n\r\n    addOrUpdateGrab(model: XRGrabModel) {\r\n        this.context.connection.send(XRGrabEvent.StartOrUpdate, model, SendQueue.Queued);\r\n    }\r\n\r\n    endGrab(model: XRGrabModel) {\r\n        this.context.connection.send(XRGrabEvent.End, model, SendQueue.Queued);\r\n    }\r\n\r\n    private onRemoteGrabStartOrUpdate(data: XRGrabModel) {\r\n        if(!this.prefab) return;\r\n        const inst = this._instances[data.guid];\r\n        if(!inst)\r\n        {\r\n            const instance = GameObject.instantiate(this.prefab) as Object3D;\r\n            instance.visible = true;\r\n            this._instances[data.guid] = {instance, model:data};\r\n            if(data.userId){\r\n                const playerColor = GameObject.getComponentsInChildren(instance, PlayerColor);\r\n                if(playerColor?.length > 0)\r\n                {\r\n                    for(const pl of playerColor){\r\n                        pl.assignUserColor(data.userId)\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        inst.model = data;\r\n    }\r\n\r\n    private onRemoteGrabEnd(data: XRGrabModel) {\r\n        if (!data) return;\r\n        const id = data.guid;\r\n        if(this._instances[id])\r\n        {\r\n            GameObject.destroy(this._instances[id].instance);\r\n            delete this._instances[id];\r\n        }\r\n    }\r\n\r\n    private onAttachedObjectFree(att: AttachedObject) {\r\n        if (this._grabModels.length <= 0) return;\r\n        const mod = this._grabModels[0];\r\n        this.updateModel(mod, att);\r\n        this.endGrab(mod);\r\n    }\r\n\r\n    onBeforeRender() {\r\n        this.updateRendering();\r\n\r\n        if (!this.prefab) return;\r\n        this.prefab.visible = false;\r\n        if (this.context.time.frameCount % 10 !== 0) return;\r\n        for (let i = 0; i < AttachedObject.Current.length; i++) {\r\n            const att = AttachedObject.Current[i];\r\n\r\n            if (!att.controller || !att.selected) continue;\r\n\r\n            if (this._grabModels.length <= i) {\r\n                this._grabModels.push(new XRGrabModel());\r\n                this._grabModelsUpdateTime.push(0);\r\n            }\r\n            this._grabModelsUpdateTime[i] = this.context.time.time;\r\n            const model = this._grabModels[i];\r\n            this.updateModel(model, att);\r\n            this.addOrUpdateGrab(model);\r\n        }\r\n    }\r\n\r\n    private updateModel(model: XRGrabModel, att: AttachedObject) {\r\n        if (!att.controller || !att.selected) return;\r\n        model.guid = att.grabUUID;\r\n        const targetObject = att.selected[\"guid\"];\r\n        model.update(this.context, att.grabPoint, att.controller.worldPosition, targetObject);\r\n    }\r\n\r\n    private temp : Vector3 = new Vector3();\r\n    private updateRendering() {\r\n        const step = this.context.time.deltaTime / .5;\r\n        for(const key in this._instances){\r\n            const { instance, model } = this._instances[key];\r\n            if(!instance || !model) continue;\r\n            const { point } = model;\r\n            const wp = getWorldPosition(instance);\r\n            this.temp.set(point.x, point.y, point.z);\r\n            wp.lerp(this.temp, step);\r\n            setWorldPosition(instance, wp);\r\n        }\r\n    }\r\n}", "import { Object3D } from \"three\";\r\nimport { Behaviour, GameObject } from \"../Component\";\r\nimport { XRFlag, XRState } from \"../XRFlag\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\n\r\n\r\nexport class AvatarBlink_Simple extends Behaviour {\r\n\r\n    @serializable(Object3D)\r\n    private eyes: THREE.Object3D[] = [];\r\n    @serializable()\r\n    private lastBlinkTime: number = 0;\r\n    @serializable()\r\n    private blinkLength: number = 0;\r\n    @serializable()\r\n    private eyesOpen: boolean = true;\r\n\r\n    private state : XRFlag | null = null;\r\n\r\n    awake(){\r\n        this.state = GameObject.getComponentInParent(this.gameObject, XRFlag);\r\n        // console.log(this.state, this.activeAndEnabled, this.gameObject);\r\n    }\r\n\r\n    public update() {\r\n        if (!this.gameObject || !this.gameObject.visible) return;\r\n        if(!this.eyes || !Array.isArray(this.eyes) || this.eyes.length === 0) return;\r\n\r\n        const needsUpdate = this.context.time.time - this.lastBlinkTime > this.blinkLength;\r\n\r\n        if (needsUpdate) {\r\n            this.lastBlinkTime = this.context.time.time;\r\n\r\n            // workaround until we propagate active state to all child components\r\n            if(this.state && !this.state.isOn) return;\r\n            if(!this.activeAndEnabled) return;\r\n\r\n            // console.log(this.state?.isOn, this.activeAndEnabled);\r\n\r\n            this.eyesOpen = !this.eyesOpen;\r\n            this.blinkLength = Math.random();\r\n            if (!this.eyesOpen) {\r\n                this.blinkLength *= Math.random() * .2;\r\n                this.blinkLength += .1;\r\n            }\r\n            else {\r\n                // eyes are open\r\n                this.blinkLength *= 3;\r\n                this.blinkLength += .5;\r\n                if (Math.random() < .1) this.blinkLength = .1 + Math.random() * .2;\r\n            }\r\n            if (Math.random() < .1) this.blinkLength *= 3;\r\n\r\n            // if(time.time - this.lastMouthChangeTime < .5 && Math.random() > .5){\r\n            //     this.blinkLength *= 1-(100/this.lastMouthChangeFrequency);\r\n            // }\r\n\r\n            this.blinkLength = Math.max(.2, this.blinkLength);\r\n            this.blinkLength = Math.min(3, this.blinkLength);\r\n            if (this.eyes) {\r\n                for (const eye of this.eyes) {\r\n                    if (eye)\r\n                        eye.visible = this.eyesOpen;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"../Component\";\r\nimport * as utils from \"../../engine/engine_three_utils\"\r\nimport * as THREE from \"three\";\r\nimport { Avatar_Brain_LookAt } from \"./Avatar_Brain_LookAt\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\nimport { Object3D } from \"three\";\r\n\r\nexport class AvatarEyeLook_Rotation extends Behaviour {\r\n\r\n    @serializable(Object3D)\r\n    public head: GameObject | null = null;\r\n    @serializable(Object3D)\r\n    public eyes: GameObject[] | null = null;\r\n    @serializable(Object3D)\r\n    public target: THREE.Object3D | null = null;\r\n\r\n    private brain: Avatar_Brain_LookAt | null = null;\r\n\r\n    awake(): void {\r\n        // console.log(this);\r\n        if (!this.brain) {\r\n            this.brain = GameObject.getComponentInParent(this.gameObject, Avatar_Brain_LookAt);\r\n        }\r\n        if (!this.brain) {\r\n            console.log(\"No look at brain found, adding it now\")\r\n            this.brain = GameObject.addNewComponent(this.gameObject, Avatar_Brain_LookAt);\r\n        }\r\n        if (this.brain && this.target) {\r\n            this.brain.controlledTarget = this.target;\r\n        }\r\n        // console.log(this);\r\n        // if(this.head){\r\n        //     this.head.add(new THREE.AxesHelper(1));\r\n        // }\r\n    }\r\n\r\n\r\n    private vec: THREE.Vector3 = new THREE.Vector3();\r\n    private static forward: THREE.Vector3 = new THREE.Vector3(0, 0, 1);\r\n    private currentTargetPoint: THREE.Vector3 = new THREE.Vector3();\r\n\r\n    update(): void {\r\n        // if(!this.activeAndEnabled) return;\r\n        const target = this.target;\r\n        // console.log(target);\r\n        if (target && this.head) {\r\n            const eyes = this.eyes;\r\n            if (eyes) {\r\n                const worldTarget = utils.getWorldPosition(target);\r\n                this.currentTargetPoint.lerp(worldTarget, this.context.time.deltaTime / .1);\r\n\r\n                const headPosition = utils.getWorldPosition(this.head);\r\n                const direction = this.vec.copy(this.currentTargetPoint).sub(headPosition).normalize();\r\n                if (direction.length() < .1) return;\r\n                const forward = AvatarEyeLook_Rotation.forward;\r\n                forward.set(0, 0, 1);\r\n                forward.applyQuaternion(utils.getWorldQuaternion(this.head));\r\n                const dot = forward.dot(direction);\r\n                if (dot > .45) {\r\n                    // console.log(dot);\r\n                    for (let i = 0; i < eyes.length; i++) {\r\n                        const eye = eyes[i];\r\n                        eye.lookAt(this.currentTargetPoint);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"../Component\";\r\nimport { Voip } from \"../Voip\";\r\nimport { AvatarMarker } from \"../WebXRAvatar\";\r\nimport * as utils from \"../../engine/engine_utils\";\r\nimport { Object3D } from \"three\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\n\r\nconst debug = utils.getParam(\"debugmouth\");\r\n\r\nexport class Avatar_MouthShapes extends Behaviour {\r\n    @serializable(Object3D)\r\n    public idle: THREE.Object3D[] = [];\r\n    @serializable(Object3D)\r\n    public talking: THREE.Object3D[] = [];\r\n\r\n    private marker: AvatarMarker | null = null;\r\n    private voip: Voip | null = null;\r\n    private lastMouthChangeTime = 0;\r\n    private mouthChangeLength = 0;\r\n\r\n    awake(): void {\r\n        setTimeout(()=>{\r\n            this.voip = GameObject.findObjectOfType(Voip, this.context);\r\n            if (!this.marker) this.marker = GameObject.getComponentInParent(this.gameObject, AvatarMarker);\r\n        }, 3000)\r\n    }\r\n\r\n    update(): void {\r\n        if (!this.voip) return;\r\n        if (this.context.time.frameCount % 10 !== 0) return;\r\n        let id = this.marker?.connectionId ?? null;\r\n        if (!id) {\r\n            if (debug) id = null;\r\n            return;\r\n        }\r\n        const freq = this.voip.getFrequency(id) ?? 0;\r\n        this.updateLips(freq);\r\n    }\r\n\r\n    private updateLips(frequency: number) {\r\n        if (this.context.time.time - this.lastMouthChangeTime > this.mouthChangeLength) {\r\n            this.mouthChangeLength = .05 + Math.random() * .1;\r\n            if (this.talking && this.talking.length > 0 && frequency > 30) {\r\n                this.lastMouthChangeTime = this.context.time.time;\r\n                const index = Math.floor(Math.random() * this.talking.length);\r\n                this.setMouthShapeActive(this.talking, index);\r\n            }\r\n            else if (this.idle.length > 0 && this.context.time.time - this.lastMouthChangeTime > .5) {\r\n                this.lastMouthChangeTime = this.context.time.time;\r\n                const index = Math.floor(Math.random() * this.idle.length);\r\n                this.setMouthShapeActive(this.idle, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setMouthShapeActive(arr: THREE.Object3D[], index: number) {\r\n        if (!arr) return;\r\n\r\n        // hide other\r\n        if (arr != this.idle) this.idle.map(i => i.visible = false);\r\n        else this.talking.map(i => i.visible = false);\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const shape = arr[i];\r\n            if (shape) {\r\n                shape.visible = i === index;\r\n            }\r\n        }\r\n    }\r\n\r\n    // private tryFindMouthShapes() {\r\n    //     if (this.mouthShapes) return;\r\n    //     this.mouthShapes = [];\r\n    //     this.head?.traverse(o => {\r\n    //         if (o && o.type === \"Mesh\") {\r\n    //             if (o.name.lastIndexOf(\"mouth\") > 0) {\r\n    //                 this.mouthShapes.push(o as THREE.Mesh);\r\n    //             }\r\n    //         }\r\n    //     });\r\n    // }\r\n}", "import { Behaviour, GameObject } from \"../Component\";\r\nimport { Voip } from \"../Voip\";\r\nimport { AvatarMarker } from \"../WebXRAvatar\";\r\n\r\nexport class Avatar_MustacheShake extends Behaviour {\r\n    private voip: Voip | null = null;\r\n    private marker: AvatarMarker | null = null;\r\n\r\n    private _startPosition : THREE.Vector3 | null = null;\r\n\r\n    awake() {\r\n        this.voip = GameObject.findObjectOfType(Voip, this.context);\r\n        this.marker = GameObject.getComponentInParent(this.gameObject, AvatarMarker);\r\n        // console.log(this);\r\n    }\r\n\r\n    update() {\r\n        if (!this.voip || !this.marker) return;\r\n        if(this.context.time.frameCount % 10 !== 0) return;\r\n        const id = this.marker.connectionId;\r\n        const freq = this.voip.getFrequency(id);\r\n        if(freq == null) return;\r\n        if(!this._startPosition) {\r\n            this._startPosition = this.gameObject.position.clone();\r\n        }\r\n        let t = freq / 100;\r\n        this.gameObject.position.y = this._startPosition.y + t * 0.07;\r\n    }\r\n}", "// Export types\r\nexport class __Ignore {}\r\nexport { AlignmentConstraint } from \"../AlignmentConstraint\";\r\nexport { Animation } from \"../Animation\";\r\nexport { AnimationCurve } from \"../AnimationCurve\";\r\nexport { Animator } from \"../Animator\";\r\nexport { AnimatorController } from \"../AnimatorController\";\r\nexport { AudioListener } from \"../AudioListener\";\r\nexport { AudioSource } from \"../AudioSource\";\r\nexport { AvatarModel } from \"../AvatarLoader\";\r\nexport { AvatarLoader } from \"../AvatarLoader\";\r\nexport { AxesHelper } from \"../AxesHelper\";\r\nexport { BasicIKConstraint } from \"../BasicIKConstraint\";\r\nexport { BoxHelperComponent } from \"../BoxHelperComponent\";\r\nexport { Camera } from \"../Camera\";\r\nexport { CharacterController } from \"../CharacterController\";\r\nexport { CharacterControllerInput } from \"../CharacterController\";\r\nexport { Collider } from \"../Collider\";\r\nexport { SphereCollider } from \"../Collider\";\r\nexport { BoxCollider } from \"../Collider\";\r\nexport { MeshCollider } from \"../Collider\";\r\nexport { CapsuleCollider } from \"../Collider\";\r\nexport { DeleteBox } from \"../DeleteBox\";\r\nexport { Deletable } from \"../DeleteBox\";\r\nexport { DeviceFlag } from \"../DeviceFlag\";\r\nexport { DragControls } from \"../DragControls\";\r\nexport { DropListener } from \"../DropListener\";\r\nexport { Duplicatable } from \"../Duplicatable\";\r\nexport { CallInfo } from \"../EventList\";\r\nexport { EventListEvent } from \"../EventList\";\r\nexport { EventList } from \"../EventList\";\r\nexport { EventTrigger } from \"../EventTrigger\";\r\nexport { FlyControls } from \"../FlyControls\";\r\nexport { BoxGizmo } from \"../Gizmos\";\r\nexport { GridHelper } from \"../GridHelper\";\r\nexport { GroundProjectedEnv } from \"../GroundProjection\";\r\nexport { Interactable } from \"../Interactable\";\r\nexport { UsageMarker } from \"../Interactable\";\r\nexport { FixedJoint } from \"../Joints\";\r\nexport { HingeJoint } from \"../Joints\";\r\nexport { Light } from \"../Light\";\r\nexport { LODModel } from \"../LODGroup\";\r\nexport { LODGroup } from \"../LODGroup\";\r\nexport { LookAtConstraint } from \"../LookAtConstraint\";\r\nexport { NestedGltf } from \"../NestedGltf\";\r\nexport { Networking } from \"../Networking\";\r\nexport { OffsetConstraint } from \"../OffsetConstraint\";\r\nexport { OrbitControls } from \"../OrbitControls\";\r\nexport { SubEmitterSystem } from \"../ParticleSystem\";\r\nexport { ParticleSystemRenderer } from \"../ParticleSystem\";\r\nexport { ParticleSystem } from \"../ParticleSystem\";\r\nexport { Gradient } from \"../ParticleSystemModules\";\r\nexport { MinMaxCurve } from \"../ParticleSystemModules\";\r\nexport { MinMaxGradient } from \"../ParticleSystemModules\";\r\nexport { MainModule } from \"../ParticleSystemModules\";\r\nexport { ParticleBurst } from \"../ParticleSystemModules\";\r\nexport { EmissionModule } from \"../ParticleSystemModules\";\r\nexport { ColorOverLifetimeModule } from \"../ParticleSystemModules\";\r\nexport { SizeOverLifetimeModule } from \"../ParticleSystemModules\";\r\nexport { ShapeModule } from \"../ParticleSystemModules\";\r\nexport { NoiseModule } from \"../ParticleSystemModules\";\r\nexport { TrailModule } from \"../ParticleSystemModules\";\r\nexport { VelocityOverLifetimeModule } from \"../ParticleSystemModules\";\r\nexport { TextureSheetAnimationModule } from \"../ParticleSystemModules\";\r\nexport { RotationOverLifetimeModule } from \"../ParticleSystemModules\";\r\nexport { RotationBySpeedModule } from \"../ParticleSystemModules\";\r\nexport { LimitVelocityOverLifetimeModule } from \"../ParticleSystemModules\";\r\nexport { InheritVelocityModule } from \"../ParticleSystemModules\";\r\nexport { SizeBySpeedModule } from \"../ParticleSystemModules\";\r\nexport { ColorBySpeedModule } from \"../ParticleSystemModules\";\r\nexport { ParticleSubEmitter } from \"../ParticleSystemSubEmitter\";\r\nexport { PlayerColor } from \"../PlayerColor\";\r\nexport { ReflectionProbe } from \"../ReflectionProbe\";\r\nexport { FieldWithDefault } from \"../Renderer\";\r\nexport { Renderer } from \"../Renderer\";\r\nexport { MeshRenderer } from \"../Renderer\";\r\nexport { SkinnedMeshRenderer } from \"../Renderer\";\r\nexport { RendererLightmap } from \"../RendererLightmap\";\r\nexport { Rigidbody } from \"../RigidBody\";\r\nexport { ScreenCapture } from \"../ScreenCapture\";\r\nexport { ShadowCatcher } from \"../ShadowCatcher\";\r\nexport { RemoteSkybox } from \"../Skybox\";\r\nexport { SmoothFollow } from \"../SmoothFollow\";\r\nexport { SpatialTriggerReceiver } from \"../SpatialTrigger\";\r\nexport { SpatialTrigger } from \"../SpatialTrigger\";\r\nexport { SpectatorCamera } from \"../SpectatorCamera\";\r\nexport { Sprite } from \"../SpriteRenderer\";\r\nexport { SpriteSheet } from \"../SpriteRenderer\";\r\nexport { SpriteRenderer } from \"../SpriteRenderer\";\r\nexport { SyncedCamera } from \"../SyncedCamera\";\r\nexport { SyncedRoom } from \"../SyncedRoom\";\r\nexport { SyncedTransform } from \"../SyncedTransform\";\r\nexport { TestRunner } from \"../TestRunner\";\r\nexport { TestSimulateUserData } from \"../TestRunner\";\r\nexport { TransformGizmo } from \"../TransformGizmo\";\r\nexport { VideoPlayer } from \"../VideoPlayer\";\r\nexport { Voip } from \"../Voip\";\r\nexport { VolumeParameter } from \"../Volume\";\r\nexport { VolumeComponent } from \"../Volume\";\r\nexport { ToneMapping } from \"../Volume\";\r\nexport { ColorAdjustments } from \"../Volume\";\r\nexport { VolumeProfile } from \"../Volume\";\r\nexport { Volume } from \"../Volume\";\r\nexport { WebARSessionRoot } from \"../WebARSessionRoot\";\r\nexport { WebXR } from \"../WebXR\";\r\nexport { WebAR } from \"../WebXR\";\r\nexport { AvatarMarker } from \"../WebXRAvatar\";\r\nexport { WebXRAvatar } from \"../WebXRAvatar\";\r\nexport { TeleportTarget } from \"../WebXRController\";\r\nexport { WebXRController } from \"../WebXRController\";\r\nexport { AttachedObject } from \"../WebXRController\";\r\nexport { XRGrabModel } from \"../WebXRGrabRendering\";\r\nexport { XRGrabRendering } from \"../WebXRGrabRendering\";\r\nexport { XRRig } from \"../WebXRRig\";\r\nexport { VRUserState } from \"../WebXRSync\";\r\nexport { WebXRSync } from \"../WebXRSync\";\r\nexport { XRState } from \"../XRFlag\";\r\nexport { XRFlag } from \"../XRFlag\";\r\nexport { AvatarBlink_Simple } from \"../avatar/AvatarBlink_Simple\";\r\nexport { AvatarEyeLook_Rotation } from \"../avatar/AvatarEyeLook_Rotation\";\r\nexport { Avatar_POI } from \"../avatar/Avatar_Brain_LookAt\";\r\nexport { Avatar_Brain_LookAt } from \"../avatar/Avatar_Brain_LookAt\";\r\nexport { Avatar_MouthShapes } from \"../avatar/Avatar_MouthShapes\";\r\nexport { Avatar_MustacheShake } from \"../avatar/Avatar_MustacheShake\";\r\nexport { LogStats } from \"../debug/LogStats\";\r\nexport { RGBAColor } from \"../js-extensions/RGBAColor\";\r\nexport { PlayableDirector } from \"../timeline/PlayableDirector\";\r\nexport { SignalAsset } from \"../timeline/SignalAsset\";\r\nexport { SignalReceiverEvent } from \"../timeline/SignalAsset\";\r\nexport { SignalReceiver } from \"../timeline/SignalAsset\";\r\nexport { AnimationTrackHandler } from \"../timeline/TimelineTracks\";\r\nexport { AudioTrackHandler } from \"../timeline/TimelineTracks\";\r\nexport { SignalTrackHandler } from \"../timeline/TimelineTracks\";\r\nexport { ControlTrackHandler } from \"../timeline/TimelineTracks\";\r\nexport { BaseUIComponent } from \"../ui/BaseUIComponent\";\r\nexport { UIRootComponent } from \"../ui/BaseUIComponent\";\r\nexport { Button } from \"../ui/Button\";\r\nexport { Canvas } from \"../ui/Canvas\";\r\nexport { CanvasGroup } from \"../ui/CanvasGroup\";\r\nexport { EventSystem } from \"../ui/EventSystem\";\r\nexport { Graphic } from \"../ui/Graphic\";\r\nexport { MaskableGraphic } from \"../ui/Graphic\";\r\nexport { Image } from \"../ui/Image\";\r\nexport { RawImage } from \"../ui/Image\";\r\nexport { InputField } from \"../ui/InputField\";\r\nexport { Keyboard } from \"../ui/Keyboard\";\r\nexport { LayoutGroup } from \"../ui/Layout\";\r\nexport { VerticalLayoutGroup } from \"../ui/Layout\";\r\nexport { HorizontalLayoutGroup } from \"../ui/Layout\";\r\nexport { GridLayoutGroup } from \"../ui/Layout\";\r\nexport { PointerEventData } from \"../ui/PointerEvents\";\r\nexport { Raycaster } from \"../ui/Raycaster\";\r\nexport { ObjectRaycaster } from \"../ui/Raycaster\";\r\nexport { GraphicRaycaster } from \"../ui/Raycaster\";\r\nexport { UIRaycastUtils } from \"../ui/RaycastUtils\";\r\nexport { Size } from \"../ui/RectTransform\";\r\nexport { Rect } from \"../ui/RectTransform\";\r\nexport { RectTransform } from \"../ui/RectTransform\";\r\nexport { SpatialHtml } from \"../ui/SpatialHtml\";\r\nexport { Text } from \"../ui/Text\";\r\nexport { GltfExportBox } from \"../export/gltf/GltfExport\";\r\nexport { GltfExport } from \"../export/gltf/GltfExport\";\r\nexport { USDZExporter } from \"../export/usdz/USDZExporter\";\r\nexport { RegisteredAnimationInfo } from \"../export/usdz/extensions/Animation\";\r\nexport { TransformData } from \"../export/usdz/extensions/Animation\";\r\nexport { AnimationExtension } from \"../export/usdz/extensions/Animation\";\r\n", "import { Behaviour } from \"../../engine-components/Component\";\r\nimport { FrameEvent } from \"../../engine/engine_setup\";\r\nimport { getParam } from \"../../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"logstats\");\r\n\r\nexport class LogStats extends Behaviour {\r\n\r\n    onEnable(): void {\r\n        console.log(this);\r\n        if (debug)\r\n            this.startCoroutine(this.run(), FrameEvent.OnAfterRender);\r\n    }\r\n\r\n    *run() {\r\n        while(this.enabled){\r\n            const info = this.context.renderer.info;\r\n            console.log(info.memory, info.render, info.programs);\r\n            yield;\r\n        }\r\n    }\r\n}", "import { Animator } from '../Animator';\r\nimport { Behaviour, GameObject } from '../Component';\r\nimport * as THREE from 'three';\r\nimport { AudioListener } from '../AudioListener';\r\nimport { AudioSource } from '../AudioSource';\r\nimport { SignalReceiver } from './SignalAsset';\r\nimport * as Models from \"./TimelineModels\";\r\nimport * as Tracks from \"./TimelineTracks\";\r\nimport { deepClone, getParam } from '../../engine/engine_utils';\r\nimport { GuidsMap } from '../../engine/engine_types';\r\n\r\nconst debug = getParam(\"debugtimeline\");\r\n\r\n/// <summary>\r\n///   <para>Wrap mode for Playables.</para>\r\n/// </summary>\r\nexport enum DirectorWrapMode {\r\n    /// <summary>\r\n    ///   <para>Hold the last frame when the playable time reaches it's duration.</para>\r\n    /// </summary>\r\n    Hold = 0,\r\n    /// <summary>\r\n    ///   <para>Loop back to zero time and continue playing.</para>\r\n    /// </summary>\r\n    Loop = 1,\r\n    /// <summary>\r\n    ///   <para>Do not keep playing when the time reaches the duration.</para>\r\n    /// </summary>\r\n    None = 2,\r\n}\r\n\r\n/// <summary>\r\n/// How the clip handles time outside its start and end range.\r\n/// </summary>\r\nexport enum ClipExtrapolation {\r\n    /// <summary>\r\n    /// No extrapolation is applied.\r\n    /// </summary>\r\n    None = 0,\r\n    /// <summary>\r\n    /// Hold the time at the end value of the clip.\r\n    /// </summary>\r\n    Hold = 1,\r\n    /// <summary>\r\n    /// Repeat time values outside the start/end range.\r\n    /// </summary>\r\n    Loop = 2,\r\n    /// <summary>\r\n    /// Repeat time values outside the start/end range, reversing direction at each loop\r\n    /// </summary>\r\n    PingPong = 3,\r\n    /// <summary>\r\n    /// Time values are passed in without modification, extending beyond the clips range\r\n    /// </summary>\r\n    Continue = 4\r\n};\r\n\r\nexport type CreateTrackFunction = (director: PlayableDirector, track: Models.TrackModel) => Tracks.TrackHandler | undefined | null;\r\n\r\nexport class PlayableDirector extends Behaviour {\r\n\r\n    private static createTrackFunctions: { [key: string]: CreateTrackFunction } = {};\r\n    static registerCreateTrack(type: string, fn: CreateTrackFunction) {\r\n        this.createTrackFunctions[type] = fn;\r\n    }\r\n\r\n    playableAsset?: Models.TimelineAssetModel;\r\n    playOnAwake?: boolean;\r\n    extrapolationMode: DirectorWrapMode = DirectorWrapMode.Loop;\r\n\r\n    get isPlaying(): boolean { return this._isPlaying; }\r\n    get isPaused(): boolean { return this._isPaused; }\r\n    get time(): number { return this._time; }\r\n    set time(value: number) { this._time = value; }\r\n    get duration(): number { return this._duration; }\r\n    set duration(value: number) { this._duration = value; }\r\n    get weight(): number { return this._weight; };\r\n    set weight(value: number) { this._weight = value; }\r\n\r\n    private _visibilityChangeEvt?: any;\r\n    private _clonedPlayableAsset: boolean = false;\r\n\r\n    awake(): void {\r\n        if (debug)\r\n            console.log(this, this.playableAsset?.tracks);\r\n\r\n        this.rebuildGraph();\r\n\r\n        if (!this.isValid()) console.warn(\"PlayableDirector is not valid\", this.playableAsset, this.playableAsset?.tracks, Array.isArray(this.playableAsset?.tracks), this);\r\n    }\r\n\r\n    onEnable() {\r\n        for (const track of this._audioTracks) {\r\n            track.onEnable?.();\r\n        }\r\n        for (const track of this._customTracks) {\r\n            track.onEnable?.();\r\n        }\r\n        if (this.playOnAwake) {\r\n            this.play();\r\n        }\r\n\r\n        if (!this._visibilityChangeEvt) this._visibilityChangeEvt = () => {\r\n            switch (document.visibilityState) {\r\n                case \"hidden\":\r\n                    this.setAudioTracksAllowPlaying(false);\r\n                    break;\r\n                case \"visible\":\r\n                    this.setAudioTracksAllowPlaying(true);\r\n                    break;\r\n            }\r\n        }\r\n        window.addEventListener('visibilitychange', this._visibilityChangeEvt);\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.stop();\r\n        for (const track of this._audioTracks) {\r\n            track.onDisable?.();\r\n        }\r\n        for (const track of this._customTracks) {\r\n            track.onDisable?.();\r\n        }\r\n        if (this._visibilityChangeEvt)\r\n            window.removeEventListener('visibilitychange', this._visibilityChangeEvt);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        for (const track of this._audioTracks) {\r\n            track.onDestroy?.();\r\n        }\r\n    }\r\n\r\n    rebuildGraph() {\r\n        if (!this.isValid()) return;\r\n        this.resolveBindings();\r\n        this.updateTimelineDuration();\r\n        this.setupAndCreateTrackHandlers();\r\n    }\r\n\r\n    play() {\r\n        if (!this.isValid()) return;\r\n        this._isPaused = false;\r\n        if (this._isPlaying) return;\r\n        this._isPlaying = true;\r\n        this._internalUpdateRoutine = this.startCoroutine(this.internalUpdate());\r\n    }\r\n\r\n    pause() {\r\n        this._isPaused = true;\r\n    }\r\n\r\n    stop() {\r\n        if (this._isPlaying) {\r\n            this._time = 0;\r\n            this._isPlaying = false;\r\n            this._isPaused = false;\r\n            this.evaluate();\r\n        }\r\n        this._isPlaying = false;\r\n        this._isPaused = false;\r\n        if (this._internalUpdateRoutine)\r\n            this.stopCoroutine(this._internalUpdateRoutine);\r\n        this._internalUpdateRoutine = null;\r\n    }\r\n\r\n    evaluate() {\r\n        if (!this.isValid()) return;\r\n        let t = this._time;\r\n        switch (this.extrapolationMode) {\r\n            case DirectorWrapMode.Hold:\r\n                t = Math.min(t, this._duration);\r\n                break;\r\n            case DirectorWrapMode.Loop:\r\n                t %= this._duration;\r\n                break;\r\n            case DirectorWrapMode.None:\r\n                if (t > this._duration) {\r\n                    this.stop();\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        this.internalEvaluate(t);\r\n    }\r\n\r\n    isValid() {\r\n        return this.playableAsset && this.playableAsset.tracks && Array.isArray(this.playableAsset.tracks);\r\n    }\r\n\r\n    *forEachTrack() {\r\n        for (const tracks of this._allTracks) {\r\n            for (const track of tracks)\r\n                yield track;\r\n        }\r\n    }\r\n\r\n    get audioTracks() : Tracks.AudioTrackHandler[] {\r\n        return this._audioTracks;\r\n    }\r\n\r\n    private _guidsMap?: GuidsMap;\r\n    resolveGuids(map: GuidsMap) {\r\n        this._guidsMap = map;\r\n    }\r\n\r\n    // INTERNALS\r\n\r\n    private _isPlaying: boolean = false;\r\n    private _internalUpdateRoutine: any;\r\n    private _isPaused: boolean = false;\r\n    private _time: number = 0;\r\n    private _duration: number = 0;\r\n    private _weight: number = 1;\r\n    private _animationTracks: Array<Tracks.AnimationTrackHandler> = [];\r\n    private _audioTracks: Array<Tracks.AudioTrackHandler> = [];\r\n    private _signalTracks: Array<Tracks.SignalTrackHandler> = [];\r\n    private _controlTracks: Array<Tracks.ControlTrackHandler> = [];\r\n    private _customTracks: Array<Tracks.TrackHandler> = [];\r\n\r\n    private _allTracks: Array<Array<Tracks.TrackHandler>> = [\r\n        this._animationTracks,\r\n        this._audioTracks,\r\n        this._signalTracks,\r\n        this._controlTracks,\r\n        this._customTracks\r\n    ];\r\n\r\n    private *internalUpdate() {\r\n        while (this._isPlaying && this.activeAndEnabled) {\r\n            if (!this._isPaused && this._isPlaying) {\r\n                this._time += this.context.time.deltaTime;\r\n                this.evaluate();\r\n            }\r\n            // for (let i = 0; i < 5; i++)\r\n            yield;\r\n        }\r\n    }\r\n\r\n    private internalEvaluate(time: number) {\r\n        for (const track of this.playableAsset!.tracks) {\r\n            if (track.muted) continue;\r\n            switch (track.type) {\r\n                case Models.TrackType.Activation:\r\n                    for (let i = 0; i < track.outputs.length; i++) {\r\n                        const binding = track.outputs[i];\r\n                        if (typeof binding === \"object\") {\r\n                            let isActive: boolean = false;\r\n                            for (const clip of track.clips) {\r\n                                if (clip.start <= time && time <= clip.end) {\r\n                                    isActive = true;\r\n                                }\r\n                            }\r\n                            const obj = binding as THREE.Object3D;\r\n                            if (obj.visible !== undefined)\r\n                                obj.visible = isActive;\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n        for (const handler of this._animationTracks) {\r\n            handler.evaluate(time);\r\n        }\r\n        for (const handler of this._audioTracks) {\r\n            handler.evaluate(time);\r\n        }\r\n        for (const sig of this._signalTracks) {\r\n            sig.evaluate(time);\r\n        }\r\n        for (const ctrl of this._controlTracks) {\r\n            ctrl.evaluate(time);\r\n        }\r\n        for (const cust of this._customTracks) {\r\n            cust.evaluate(time);\r\n        }\r\n\r\n    }\r\n\r\n    private resolveBindings() {\r\n        if (!this._clonedPlayableAsset) {\r\n            this._clonedPlayableAsset = true;\r\n            this.playableAsset = deepClone(this.playableAsset);\r\n        }\r\n\r\n        if (!this.playableAsset || !this.playableAsset.tracks) return;\r\n\r\n\r\n        // if the director has a parent we assume it is part of the current scene\r\n        // if not (e.g. when loaded via adressable but not yet added to any scene)\r\n        // we can only resolve objects that are children\r\n        const root = this.findRoot(this.gameObject);\r\n\r\n        for (const track of this.playableAsset.tracks) {\r\n            for (let i = track.outputs.length - 1; i >= 0; i--) {\r\n                let binding = track.outputs[i];\r\n                if (typeof binding === \"string\") {\r\n                    if (this._guidsMap && this._guidsMap[binding])\r\n                        binding = this._guidsMap[binding];\r\n                    const obj = GameObject.findByGuid(binding, root);\r\n                    if (obj === null || typeof obj !== \"object\") {\r\n                        // if the binding is missing remove it to avoid unnecessary loops\r\n                        track.outputs.splice(i, 1);\r\n                        console.warn(\"Failed to resolve binding\", binding, track.name, track.type);\r\n                    }\r\n                    else {\r\n                        if (debug)\r\n                            console.log(\"Resolved binding\", binding, \"to\", obj);\r\n                        track.outputs[i] = obj;\r\n                        if(obj instanceof Animator) {\r\n                            // TODO: should disable? animator but this is not the animator that is currently on the object? needs investigation\r\n                            // console.log(\"DISABLE ANIMATOR\", obj, obj.name, binding, this._guidsMap);\r\n                            // obj.enabled = false;\r\n                        }\r\n                    }\r\n                }\r\n                else if (binding === null) {\r\n                    track.outputs.splice(i, 1);\r\n                    if (PlayableDirector.createTrackFunctions[track.type]) {\r\n                        // if a custom track doesnt have a binding its ok\r\n                        continue;\r\n                    }\r\n                    // if the binding is missing remove it to avoid unnecessary loops\r\n                    if (track.type !== Models.TrackType.Audio && track.type !== Models.TrackType.Control && track.type !== Models.TrackType.Marker)\r\n                        console.warn(\"Missing binding\", binding, track.name, track.type, this.name, this.playableAsset.name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private findRoot(current: THREE.Object3D): THREE.Object3D {\r\n        if (current.parent)\r\n            return this.findRoot(current.parent);\r\n        return current;\r\n    }\r\n\r\n    private updateTimelineDuration() {\r\n        this._duration = 0;\r\n        if (!this.playableAsset || !this.playableAsset.tracks) return;\r\n        for (const track of this.playableAsset.tracks) {\r\n            if (track.muted === true) continue;\r\n            for (const clip of track.clips) {\r\n                if (clip.end > this._duration) this._duration = clip.end;\r\n            }\r\n        }\r\n        // console.log(\"timeline duration\", this._duration);\r\n    }\r\n\r\n    private setupAndCreateTrackHandlers() {\r\n        this._animationTracks.length = 0;\r\n        this._audioTracks.length = 0;\r\n        this._signalTracks.length = 0;\r\n\r\n        if (!this.playableAsset) return;\r\n        const audioTracks: Array<Models.TrackModel> = [];\r\n        for (const track of this.playableAsset!.tracks) {\r\n            const type = track.type;\r\n            const registered = PlayableDirector.createTrackFunctions[type];\r\n            if (registered !== null && registered !== undefined) {\r\n                const res = registered(this, track) as Tracks.TrackHandler;\r\n                if (typeof res.evaluate === \"function\") {\r\n                    res.director = this;\r\n                    res.track = track;\r\n                    this._customTracks.push(res);\r\n                    continue;\r\n                }\r\n            }\r\n            // only handle animation tracks\r\n            if (track.type === Models.TrackType.Animation) {\r\n                if (track.clips.length <= 0) continue;\r\n                // loop outputs / bindings, they should contain animator references\r\n                for (let i = track.outputs.length - 1; i >= 0; i--) {\r\n                    const binding = track.outputs[i] as Animator;\r\n                    if (typeof binding.enabled === \"boolean\") binding.enabled = false;\r\n                    const animationClips = binding?.gameObject?.animations;\r\n                    if (animationClips) {\r\n                        const handler = new Tracks.AnimationTrackHandler();\r\n                        handler.trackOffset = track.trackOffset;\r\n                        handler.director = this;\r\n                        handler.track = track;\r\n                        for (let i = 0; i < track.clips.length; i++) {\r\n                            const clipModel = track.clips[i];\r\n                            const animModel = clipModel.asset as Models.AnimationClipModel;\r\n                            if (!animModel) {\r\n                                console.error(\"MISSING anim model?\", \"clip#\" + i, clipModel, track, this.playableAsset, this.name);\r\n                                continue;\r\n                            }\r\n                            // console.log(clipModel, track);\r\n                            const targetObjectId = animModel.clip;\r\n                            let clip: any = targetObjectId;\r\n                            if (typeof clip === \"string\" || typeof clip === \"number\") {\r\n                                clip = animationClips.find(c => c.name === targetObjectId);\r\n                            }\r\n                            if (!clip) {\r\n                                console.warn(\"Could not find animationClip for model\", clipModel, track.name, this.name, this.playableAsset?.name);\r\n                                continue;\r\n                            }\r\n                            if (!handler.mixer)\r\n                                handler.mixer = new THREE.AnimationMixer(binding.gameObject);\r\n                            handler.clips.push(clip);\r\n                            // uncache because we want to create a new action\r\n                            // this is needed because if a clip is used multiple times in a track (or even multiple tracks)\r\n                            // we want to avoid setting weights on the same instance for clips/objects that are not active\r\n                            handler.mixer.uncacheAction(clip);\r\n                            handler.createHooks(clipModel.asset as Models.AnimationClipModel, clip);\r\n                            const clipAction = handler.mixer.clipAction(clip); // new THREE.AnimationAction(handler.mixer, clip, null, null);\r\n                            handler.actions.push(clipAction);\r\n                            handler.models.push(clipModel);\r\n                        }\r\n                        this._animationTracks.push(handler);\r\n                    }\r\n                }\r\n            }\r\n            else if (track.type === Models.TrackType.Audio) {\r\n                if (track.clips.length <= 0) continue;\r\n                audioTracks.push(track);\r\n            }\r\n            else if (track.type === Models.TrackType.Marker) {\r\n                const signalHandler: Tracks.SignalTrackHandler = new Tracks.SignalTrackHandler();\r\n                signalHandler.director = this;\r\n                signalHandler.track = track;\r\n                for (const marker of track.markers) {\r\n                    switch (marker.type) {\r\n                        case Models.MarkerType.Signal:\r\n                            signalHandler.models.push(marker as Models.SignalMarkerModel);\r\n                            signalHandler.didTrigger.push(false);\r\n                            break;\r\n                    }\r\n                }\r\n                if (signalHandler !== null && signalHandler.models.length > 0) {\r\n                    const rec = GameObject.getComponent(this.gameObject, SignalReceiver);\r\n                    if (rec) {\r\n                        signalHandler.receivers.push(rec);\r\n                        this._signalTracks.push(signalHandler);\r\n                    }\r\n                }\r\n            }\r\n            else if (track.type === Models.TrackType.Signal) {\r\n                const handler = new Tracks.SignalTrackHandler();\r\n                handler.director = this;\r\n                handler.track = track;\r\n                for (const marker of track.markers) {\r\n                    handler.models.push(marker as Models.SignalMarkerModel);\r\n                    handler.didTrigger.push(false);\r\n                }\r\n                for (const bound of track.outputs) {\r\n                    handler.receivers.push(bound as SignalReceiver);\r\n                }\r\n                this._signalTracks.push(handler);\r\n            }\r\n            else if (track.type === Models.TrackType.Control) {\r\n                const handler = new Tracks.ControlTrackHandler();\r\n                handler.director = this;\r\n                handler.track = track;\r\n                for (const clip of track.clips) {\r\n                    handler.models.push(clip);\r\n                }\r\n                handler.resolveSourceObjects(this.context);\r\n                this._controlTracks.push(handler);\r\n            }\r\n        }\r\n\r\n        AudioSource.registerWaitForAllowAudio(() => {\r\n            const listener = GameObject.findObjectOfType(AudioListener, this.context) as AudioListener;\r\n            if (!listener) return;\r\n            for (const track of audioTracks) {\r\n                const audio = new Tracks.AudioTrackHandler();\r\n                audio.director = this;\r\n                audio.track = track;\r\n                audio.listener = listener.listener;\r\n                for (let i = 0; i < track.clips.length; i++) {\r\n                    const clipModel = track.clips[i];\r\n                    audio.addModel(clipModel);\r\n                }\r\n                this._audioTracks.push(audio);\r\n            }\r\n        });\r\n    }\r\n\r\n    private setAudioTracksAllowPlaying(allow: boolean) {\r\n        for (const track of this._audioTracks) {\r\n            track.onAllowAudioChanged(allow);\r\n        }\r\n    }\r\n\r\n}\r\n", "import { EventList } from \"../EventList\";\r\nimport { Behaviour } from \"../Component\";\r\nimport { ISerializable, SerializationContext, TypeSerializer } from \"../../engine/engine_serialization_core\";\r\nimport { eventListSerializer } from \"../../engine/engine_serialization_builtin_serializer\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\n\r\n\r\n\r\nexport class SignalAsset {\r\n    guid!: string;\r\n}\r\n\r\nexport class SignalReceiverEvent implements ISerializable {\r\n    signal!: SignalAsset;\r\n    reaction!: EventList;\r\n\r\n    $serializedTypes = {\r\n        signal: SignalAsset,\r\n        reaction: EventList\r\n    }\r\n}\r\n\r\nexport class SignalReceiver extends Behaviour {\r\n\r\n\r\n    @serializable(SignalReceiverEvent)\r\n    events?: SignalReceiverEvent[];\r\n\r\n\r\n    start() {\r\n        console.log(this);\r\n    }\r\n\r\n    invoke(sig: SignalAsset | string) {\r\n        if (!this.events || !Array.isArray(this.events)) return;\r\n        let id = typeof sig === \"object\" ? sig.guid : sig;\r\n        for (const evt of this.events) {\r\n            if (evt.signal.guid === id) {\r\n                try {\r\n                    if (!evt.reaction) {\r\n                        console.warn(\"Missing reaction for signal\", evt, this);\r\n                        continue;\r\n                    }\r\n                    else if (!evt.reaction.invoke) {\r\n                        console.warn(\"Missing invoke - possibly a serialization error\", evt, this);\r\n                        continue;\r\n                    }\r\n                    evt.reaction.invoke();\r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // onDeserialize(key: string, value: any): any | void\r\n    // {\r\n    //     switch(key){\r\n    //         case \"events\":\r\n    //             console.log(value);\r\n    //             const evt = eventListSerializer;\r\n    //             for(const e in value){\r\n\r\n    //             }\r\n    //             break;\r\n    //     }\r\n    // }\r\n}\r\n\r\n\r\n\r\n// class SignalAssetSerializer extends TypeSerializer {\r\n//     constructor() {\r\n//         super(\"SignalReceiverEvent\");\r\n//     }\r\n\r\n//     onSerialize(_data: EventList, _context: SerializationContext) {\r\n//         console.log(\"TODO: SERIALIZE EVENT\");\r\n//         return undefined;\r\n//     }\r\n\r\n//     onDeserialize(data: SignalReceiverEvent, context: SerializationContext): EventList | undefined | null {\r\n//         console.log(\"DESERIALIZE\", data);\r\n//         // if (data && data.type === \"EventList\") {\r\n//         //     console.log(\"DESERIALIZE EVENT\", data);\r\n//         //     const fns = new Array<Function>();\r\n//         //     for (const call of data.calls) {\r\n//         //         const target = componentSerializer.findObjectForGuid(call.target, context.root);\r\n//         //         let fn;\r\n//         //         if (call.argument) {\r\n//         //             let arg = call.argument;\r\n//         //             if (typeof arg === \"object\") {\r\n//         //                 arg = objectSerializer.onDeserialize(call.argument, context);\r\n//         //                 if (!arg) arg = componentSerializer.onDeserialize(call.argument, context);\r\n//         //             }\r\n//         //             fn = () => target[call.method](arg);\r\n//         //         }\r\n//         //         else fn = () => target[call.method]();\r\n//         //         fns.push(fn);\r\n//         //     }\r\n//         //     const evt: EventList = new EventList(fns);\r\n//         //     return evt;\r\n//         // }\r\n//         return undefined;\r\n//     }\r\n// }\r\n// new SignalAssetSerializer();", "import { PlayableDirector } from \"./PlayableDirector\";\r\nimport * as Models from \"./TimelineModels\";\r\nimport * as THREE from 'three';\r\nimport { GameObject } from \"../Component\";\r\nimport { Context } from \"../../engine/engine_setup\";\r\nimport { SignalReceiver } from \"./SignalAsset\";\r\nimport { AnimationClip, Quaternion, Vector3 } from \"three\";\r\nimport { getParam, getPath } from \"../../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debugtimeline\");\r\n\r\nexport abstract class TrackHandler {\r\n    director!: PlayableDirector;\r\n    track!: Models.TrackModel;\r\n\r\n    get muted(): boolean { return this.track.muted; }\r\n    set muted(val: boolean) {\r\n        if (val !== this.track.muted) {\r\n            this.track.muted = val;\r\n            this.onMuteChanged?.call(this);\r\n        }\r\n    }\r\n\r\n    *forEachClip(backwards: boolean = false): IterableIterator<Models.ClipModel> {\r\n        if (!this.track?.clips) return;\r\n        if (backwards) {\r\n            for (let i = this.track.clips.length - 1; i >= 0; i--) {\r\n                yield this.track.clips[i];\r\n            }\r\n        }\r\n        else {\r\n            for (const clip of this.track.clips) {\r\n                yield clip;\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnable?();\r\n    onDisable?();\r\n    onDestroy?();\r\n    abstract evaluate(time: number);\r\n    onMuteChanged?();\r\n\r\n    getClipTime(time: number, model: Models.ClipModel) {\r\n        return model.clipIn + (time - model.start) * model.timeScale;\r\n    }\r\n\r\n    getClipTimeNormalized(time: number, model: Models.ClipModel) {\r\n        return (time - model.start) / model.duration;\r\n    }\r\n\r\n    evaluateWeight(time: number, index: number, models: Array<Models.ClipModel>, isActive: boolean = true) {\r\n        if (index < 0 || index >= models.length) return 0;\r\n        const model = models[index];\r\n        if (isActive || time >= model.start && time <= model.end) {\r\n            let weight = 1;\r\n            let isBlendingWithNext = false;\r\n\r\n            // this blending with next clips is already baked into easeIn/easeOut\r\n            // if (allowBlendWithNext && index + 1 < models.length) {\r\n            //     const next = models[index + 1];\r\n            //     const nextWeight = (time - next.start) / (model.end - next.start);\r\n            //     isBlendingWithNext = nextWeight > 0;\r\n            //     weight = 1 - nextWeight;\r\n            // }\r\n\r\n            if (model.easeInDuration > 0) {\r\n                const easeIn = Math.min((time - model.start) / model.easeInDuration, 1);\r\n                weight *= easeIn;\r\n            }\r\n            if (model.easeOutDuration > 0 && !isBlendingWithNext) {\r\n                const easeOut = Math.min((model.end - time) / model.easeOutDuration, 1);\r\n                weight *= easeOut;\r\n            }\r\n            return weight;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\nclass AnimationClipOffsetData {\r\n    clip: AnimationClip;\r\n    rootPositionOffset?: THREE.Vector3;\r\n    rootQuaternionOffset?: THREE.Quaternion;\r\n    get hasOffsets(): boolean { return this.rootPositionOffset !== undefined || this.rootQuaternionOffset !== undefined; }\r\n\r\n    // not necessary\r\n    rootStartPosition?: THREE.Vector3;\r\n    rootEndPosition?: THREE.Vector3;\r\n    rootStartQuaternion?: THREE.Quaternion;\r\n    rootEndQuaternion?: THREE.Quaternion;\r\n\r\n    constructor(action: THREE.AnimationAction) {\r\n        const clip = action.getClip();\r\n        this.clip = clip;\r\n        const root = action.getRoot();\r\n        const rootPositionTrackName = root.name + \".position\";\r\n        const rootRotationTrackName = root.name + \".quaternion\";\r\n        if (debug)\r\n            console.log(clip.name, clip.tracks, rootPositionTrackName);\r\n        for (const track of clip.tracks) {\r\n            if (track.times.length <= 0) continue;\r\n            if (track.name.endsWith(rootPositionTrackName)) {\r\n                this.rootStartPosition = new THREE.Vector3().fromArray(track.values, 0);\r\n                this.rootEndPosition = new THREE.Vector3().fromArray(track.values, track.values.length - 3);\r\n                this.rootPositionOffset = this.rootEndPosition.clone().sub(this.rootStartPosition);\r\n                if (debug)\r\n                    console.log(this.rootPositionOffset);\r\n                // this.rootPositionOffset.set(0, 0, 0);\r\n            }\r\n            else if (track.name.endsWith(rootRotationTrackName)) {\r\n                this.rootStartQuaternion = new THREE.Quaternion().fromArray(track.values, 0);\r\n                this.rootEndQuaternion = new THREE.Quaternion().fromArray(track.values, track.values.length - 4);\r\n                this.rootQuaternionOffset = this.rootEndQuaternion.clone().multiply(this.rootStartQuaternion);\r\n\r\n                if (debug) {\r\n                    const euler = new THREE.Euler().setFromQuaternion(this.rootQuaternionOffset);\r\n                    console.log(\"ROT\", euler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// TODO: add support for clip clamp modes (loop, pingpong, clamp)\r\nexport class AnimationTrackHandler extends TrackHandler {\r\n    models: Array<Models.ClipModel> = [];\r\n    trackOffset?: Models.TrackOffset;\r\n\r\n    target?: THREE.Object3D;\r\n    mixer?: THREE.AnimationMixer;\r\n    clips: Array<THREE.AnimationClip> = [];\r\n    actions: Array<THREE.AnimationAction> = [];\r\n\r\n    /** holds data/info about clips differences */\r\n    private _actionOffsets: Array<AnimationClipOffsetData> = [];\r\n    private _didBind: boolean = false;\r\n\r\n    createHooks(clipModel: Models.AnimationClipModel, clip) {\r\n        if (clip.tracks?.length <= 0) {\r\n            console.warn(\"No tracks in AnimationClip\", clip);\r\n            return;\r\n        }\r\n        // we only want to hook into the binding of the root object\r\n        // TODO: test with a clip with multiple roots\r\n        const parts = clip.tracks[0].name.split(\".\");\r\n        const rootName = parts[parts.length - 2];\r\n        const positionTrackName = rootName + \".position\";\r\n        const rotationTrackName = rootName + \".quaternion\";\r\n        let foundPositionTrack: boolean = false;\r\n        let foundRotationTrack: boolean = false;\r\n        for (const t of clip.tracks) {\r\n            if (t.name.endsWith(positionTrackName)) {\r\n                foundPositionTrack = true;\r\n                this.createPositionInterpolant(clip, clipModel, t);\r\n            }\r\n            else if (t.name.endsWith(rotationTrackName)) {\r\n                foundRotationTrack = true;\r\n                this.createRotationInterpolant(clip, clipModel, t);\r\n            }\r\n        }\r\n\r\n\r\n        // ensure we always have a position and rotation track so we can apply offsets in interpolator\r\n        // TODO: this currently assumes that there is only one root always that has offsets so it only does create the interpolator for the first track which might be incorrect. In general it would probably be better if we would not create additional tracks but apply the offsets for these objects elsewhere!?\r\n\r\n        if (!foundPositionTrack || !foundRotationTrack) {\r\n            const root = this.mixer?.getRoot() as THREE.Object3D;\r\n            const track = clip.tracks[0];\r\n            const indexOfProperty = track.name.lastIndexOf(\".\");\r\n            const baseName = track.name.substring(0, indexOfProperty);\r\n            const objName = baseName.substring(baseName.lastIndexOf(\".\") + 1);\r\n            const targetObj = root.getObjectByName(objName);\r\n            if (targetObj) {\r\n                if (!foundPositionTrack) {\r\n                    const trackName = baseName + \".position\";\r\n                    if (debug) console.warn(\"Create position track\", objName, targetObj);\r\n                    // apply initial local position so it doesnt get flipped or otherwise changed\r\n                    const pos = targetObj.position;\r\n                    const track = new THREE.VectorKeyframeTrack(trackName, [0, clip.duration], [pos.x, pos.y, pos.z, pos.x, pos.y, pos.z]);\r\n                    clip.tracks.push(track);\r\n                    this.createPositionInterpolant(clip, clipModel, track);\r\n                }\r\n                else if(!foundRotationTrack){\r\n                    const trackName = clip.tracks[0].name.substring(0, indexOfProperty) + \".quaternion\";\r\n                    if (debug) console.warn(\"Create quaternion track\", objName, targetObj);\r\n                    const rot = targetObj.quaternion;\r\n                    const track = new THREE.QuaternionKeyframeTrack(trackName, [0, clip.duration], [rot.x, rot.y, rot.z, rot.w, rot.x, rot.y, rot.z, rot.w]);\r\n                    clip.tracks.push(track);\r\n                    this.createRotationInterpolant(clip, clipModel, track);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    bind() {\r\n        if (this._didBind) return;\r\n        this._didBind = true;\r\n        if (debug) console.log(this.models);\r\n\r\n        // the object being animated\r\n        if (this.mixer) this.target = this.mixer.getRoot() as THREE.Object3D;\r\n        else console.warn(\"No mixer was assigned to animation track\")\r\n\r\n        for (const action of this.actions) {\r\n            const off = new AnimationClipOffsetData(action);\r\n            this._actionOffsets.push(off);\r\n        }\r\n\r\n        // Clip Offsets\r\n        for (const model of this.models) {\r\n            const clipData = model.asset as Models.AnimationClipModel;\r\n            const pos = clipData.position as any;\r\n            const rot = clipData.rotation as any;\r\n            if (pos.x !== undefined) {\r\n                if (!pos.isVector3) {\r\n                    clipData.position = new Vector3(pos.x, pos.y, pos.z);\r\n                }\r\n                if (!rot.isQuaternion) {\r\n                    clipData.rotation = new Quaternion(rot.x, rot.y, rot.z, rot.w);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.ensureTrackOffsets();\r\n    }\r\n\r\n    private ensureTrackOffsets() {\r\n        if (this.trackOffset) {\r\n            const pos = this.trackOffset.position as any;\r\n            if (pos) {\r\n                if (!pos.isVector3) {\r\n                    this.trackOffset.position = new THREE.Vector3(pos.x, pos.y, pos.z);\r\n                }\r\n            }\r\n            const rot = this.trackOffset.rotation as any;\r\n            if (rot) {\r\n                if (!rot.isQuaternion) {\r\n                    this.trackOffset.rotation = new THREE.Quaternion(rot.x, rot.y, rot.z, rot.w);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _useclipOffsets: boolean = true;\r\n\r\n    private _totalOffsetPosition: THREE.Vector3 = new THREE.Vector3();\r\n    private _totalOffsetRotation: THREE.Quaternion = new THREE.Quaternion();\r\n    private _totalOffsetPosition2: THREE.Vector3 = new THREE.Vector3();\r\n    private _totalOffsetRotation2: THREE.Quaternion = new THREE.Quaternion();\r\n    private _summedPos = new THREE.Vector3();\r\n    private _tempPos = new THREE.Vector3();\r\n    private _summedRot = new THREE.Quaternion();\r\n    private _tempRot = new THREE.Quaternion();\r\n\r\n    evaluate(time: number) {\r\n        if (this.track.muted) return;\r\n        if (!this.mixer) return;\r\n        this.bind();\r\n\r\n        this._totalOffsetPosition.set(0, 0, 0);\r\n        this._totalOffsetRotation.set(0, 0, 0, 1);\r\n        this._totalOffsetPosition2.set(0, 0, 0);\r\n        this._totalOffsetRotation2.set(0, 0, 0, 1);\r\n        let activeClips = 0;\r\n        let blend: number = 0;\r\n        let didPostExtrapolate = false;\r\n        for (let i = 0; i < this.clips.length; i++) {\r\n            const model = this.models[i];\r\n            const action = this.actions[i];\r\n            const clipModel = model.asset as Models.AnimationClipModel;\r\n            action.weight = 0;\r\n            const isInTimeRange = time >= model.start && time <= model.end;\r\n            const postExtrapolation: Models.ClipExtrapolation = model.postExtrapolationMode;\r\n            let isActive = isInTimeRange;\r\n            if (!isActive && !didPostExtrapolate && model.end < time && model.postExtrapolationMode !== Models.ClipExtrapolation.None) {\r\n                const nextClip = i < this.clips.length - 1 ? this.models[i + 1] : null;\r\n                // use post extrapolate if its the last clip of the next clip has not yet started\r\n                if (!nextClip || nextClip.start > time) {\r\n                    isActive = true;\r\n                    didPostExtrapolate = true;\r\n                }\r\n            }\r\n            if (isActive) {\r\n                // const clip = this.clips[i];\r\n                let weight = 1;\r\n                weight *= this.evaluateWeight(time, i, this.models, isActive);\r\n                // TODO: handle clipIn again\r\n                let t = this.getClipTime(time, model);\r\n                let loops = 0;\r\n                const duration = clipModel.duration;\r\n\r\n                if (isInTimeRange) {\r\n                    if (clipModel.loop) {\r\n                        // const t0 = t - .001;\r\n                        loops += Math.floor(t / (duration + .000001));\r\n                        while (t > duration) {\r\n                            t -= duration;\r\n                        }\r\n                    }\r\n                }\r\n                else if (!isInTimeRange) {\r\n                    switch (postExtrapolation) {\r\n                        case Models.ClipExtrapolation.Loop:\r\n                            t %= duration;\r\n                            break;\r\n                        case Models.ClipExtrapolation.PingPong:\r\n                            const loops = Math.floor(t / duration);\r\n                            const invert = loops % 2 !== 0;\r\n                            t %= duration;\r\n                            if (invert) t = duration - t;\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                action.time = t;\r\n                action.timeScale = 0;\r\n                const effectiveWeight = weight * this.director.weight;\r\n                action.weight = effectiveWeight;\r\n                action.clampWhenFinished = true;\r\n                if (!action.isRunning())\r\n                    action.play();\r\n\r\n                if (this._useclipOffsets) {\r\n                    const totalPosition = activeClips == 0 ? this._totalOffsetPosition : this._totalOffsetPosition2;\r\n                    const totalRotation = activeClips == 0 ? this._totalOffsetRotation : this._totalOffsetRotation2;\r\n                    if (activeClips < 1) blend = 1 - weight;\r\n                    activeClips += 1;\r\n\r\n                    const summedPos = this._summedPos.set(0, 0, 0);\r\n                    const tempPos = this._tempPos.set(0, 0, 0);\r\n                    const summedRot = this._summedRot.identity();\r\n                    const tempRot = this._tempRot.identity();\r\n\r\n                    const clipOffsetRot = clipModel.rotation as Quaternion;\r\n                    const clipRot = new THREE.Quaternion();\r\n                    clipRot.slerp(clipOffsetRot, weight);\r\n\r\n                    const offsets = this._actionOffsets[i];\r\n                    if (offsets.hasOffsets) {\r\n                        for (let i = 0; i < loops; i++) {\r\n                            if (offsets.rootPositionOffset)\r\n                                tempPos.copy(offsets.rootPositionOffset);\r\n                            else tempPos.set(0, 0, 0);\r\n\r\n                            tempPos.applyQuaternion(summedRot).applyQuaternion(clipRot)\r\n                            if (offsets.rootQuaternionOffset) {\r\n                                // console.log(new THREE.Euler().setFromQuaternion(offsets.rootQuaternionOffset).y.toFixed(2));\r\n                                tempRot.copy(offsets.rootQuaternionOffset);\r\n                                summedRot.multiply(tempRot);\r\n                            }\r\n                            summedPos.add(tempPos);\r\n                        }\r\n                    }\r\n\r\n                    totalRotation.multiply(clipRot);\r\n                    totalRotation.multiply(summedRot);\r\n\r\n                    summedPos.add(clipModel.position as THREE.Vector3);\r\n                    totalPosition.add(summedPos);\r\n                }\r\n\r\n            }\r\n        }\r\n        if (this._useclipOffsets) {\r\n            this._totalOffsetPosition.lerp(this._totalOffsetPosition2, blend);\r\n            this._totalOffsetRotation.slerp(this._totalOffsetRotation2, blend);\r\n        }\r\n\r\n\r\n        this.mixer.update(time);\r\n    }\r\n\r\n    private createRotationInterpolant(_clip: AnimationClip, _clipModel: Models.AnimationClipModel, track: any) {\r\n        const createInterpolantOriginal = track.createInterpolant.bind(track);\r\n        const quat: THREE.Quaternion = new THREE.Quaternion();\r\n        this.ensureTrackOffsets();\r\n        const trackOffsetRot: THREE.Quaternion | null = this.trackOffset?.rotation as Quaternion;\r\n        track.createInterpolant = () => {\r\n            const createdInterpolant: any = createInterpolantOriginal();\r\n            const interpolate = createdInterpolant.evaluate.bind(createdInterpolant);\r\n            // console.log(interpolate);\r\n            createdInterpolant.evaluate = (time) => {\r\n                const res = interpolate(time);\r\n                quat.set(res[0], res[1], res[2], res[3]);\r\n                quat.premultiply(this._totalOffsetRotation);\r\n                // console.log(new THREE.Euler().setFromQuaternion(quat).y.toFixed(2));\r\n                if (trackOffsetRot) quat.premultiply(trackOffsetRot);\r\n                res[0] = quat.x;\r\n                res[1] = quat.y;\r\n                res[2] = quat.z;\r\n                res[3] = quat.w;\r\n\r\n                return res;\r\n            };\r\n            return createdInterpolant;\r\n        }\r\n    }\r\n\r\n    private createPositionInterpolant(clip: AnimationClip, clipModel: Models.AnimationClipModel, track: any) {\r\n        const createInterpolantOriginal = track.createInterpolant.bind(track);\r\n        const currentPosition: THREE.Vector3 = new THREE.Vector3();\r\n        this.ensureTrackOffsets();\r\n        const trackOffsetRot: THREE.Quaternion | null = this.trackOffset?.rotation as Quaternion;\r\n        const trackOffsetPos: THREE.Vector3 | null = this.trackOffset?.position as Vector3;\r\n        let startOffset: Vector3 | null | undefined = undefined;\r\n        track.createInterpolant = () => {\r\n            const createdInterpolant: any = createInterpolantOriginal();\r\n            const evaluate = createdInterpolant.evaluate.bind(createdInterpolant);\r\n            createdInterpolant.evaluate = (time) => {\r\n                const res = evaluate(time);\r\n                currentPosition.set(res[0], res[1], res[2]);\r\n                if (clipModel.removeStartOffset) {\r\n                    if (startOffset === undefined) {\r\n                        startOffset = null;\r\n                        startOffset = this._actionOffsets.find(a => a.clip === clip)?.rootStartPosition?.clone();\r\n                    }\r\n                    else if (startOffset?.isVector3) {\r\n                        currentPosition.sub(startOffset);\r\n                    }\r\n                }\r\n                currentPosition.applyQuaternion(this._totalOffsetRotation);\r\n                currentPosition.add(this._totalOffsetPosition);\r\n                // apply track offset\r\n                if (trackOffsetRot) currentPosition.applyQuaternion(trackOffsetRot);\r\n                if (trackOffsetPos) {\r\n                    // flipped unity X\r\n                    currentPosition.x -= trackOffsetPos.x;\r\n                    currentPosition.y += trackOffsetPos.y;\r\n                    currentPosition.z += trackOffsetPos.z;\r\n                }\r\n                res[0] = currentPosition.x;\r\n                res[1] = currentPosition.y;\r\n                res[2] = currentPosition.z;\r\n                return res;\r\n            };\r\n            return createdInterpolant;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class AudioTrackHandler extends TrackHandler {\r\n    models: Array<Models.ClipModel> = [];\r\n\r\n    listener!: THREE.AudioListener;\r\n    audio: Array<THREE.Audio> = [];\r\n    audioContextTimeOffset: Array<number> = [];\r\n    lastTime: number = 0;\r\n\r\n    private getAudioFilePath(path: string) {\r\n        // TODO: this should be the timeline asset location probably which MIGHT be different\r\n        const glbLocation = this.director.sourceId;\r\n        return getPath(glbLocation, path);\r\n    }\r\n\r\n    onAllowAudioChanged(allow: boolean) {\r\n        for (let i = 0; i < this.models.length; i++) {\r\n            const model = this.models[i];\r\n            const audio = this.audio[i];\r\n            audio.setVolume(allow ? model.asset.volume : 0);\r\n        }\r\n    }\r\n\r\n    addModel(model: Models.ClipModel) {\r\n        const path = this.getAudioFilePath(model.asset.clip);\r\n        const audio = new THREE.Audio(this.listener);\r\n        audio.setVolume(model.asset.volume);\r\n        const loader = new THREE.AudioLoader();\r\n        console.log(path, this.director.sourceId);\r\n        loader.load(path, (buffer) => {\r\n            audio.setBuffer(buffer);\r\n            audio.loop = model.asset.loop;\r\n            this.audio.push(audio);\r\n            this.models.push(model);\r\n        });\r\n    }\r\n\r\n    onDisable() {\r\n        for (const audio of this.audio) {\r\n            if (audio.isPlaying)\r\n                audio.stop();\r\n        }\r\n    }\r\n\r\n    onMuteChanged() {\r\n        if (this.muted) {\r\n            for (let i = 0; i < this.audio.length; i++) {\r\n                const audio = this.audio[i];\r\n                if (audio?.isPlaying)\r\n                    audio.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    evaluate(time: number) {\r\n        if (this.track.muted) return;\r\n        for (let i = 0; i < this.models.length; i++) {\r\n            const model = this.models[i];\r\n            const audio = this.audio[i];\r\n            if (time >= model.start && time <= model.end) {\r\n                if (this.director.isPaused) {\r\n                    if (audio.isPlaying)\r\n                        audio.stop();\r\n                    if (this.lastTime === time) continue;\r\n                }\r\n                if (!audio.isPlaying) {\r\n                    audio.offset = model.clipIn + (time - model.start) * model.timeScale;\r\n                    audio.play();\r\n                }\r\n                let vol = model.asset.volume;\r\n                if (model.easeInDuration > 0) {\r\n                    const easeIn = Math.min((time - model.start) / model.easeInDuration, 1);\r\n                    vol *= easeIn;\r\n                }\r\n                if (model.easeOutDuration > 0) {\r\n                    const easeOut = Math.min((model.end - time) / model.easeOutDuration, 1);\r\n                    vol *= easeOut;\r\n                }\r\n                audio.setVolume(vol * this.director.weight);\r\n            }\r\n            else {\r\n                if (audio.isPlaying)\r\n                    audio.stop();\r\n            }\r\n        }\r\n        this.lastTime = time;\r\n    }\r\n}\r\n\r\nexport class SignalTrackHandler extends TrackHandler {\r\n    models: Models.SignalMarkerModel[] = [];\r\n    didTrigger: boolean[] = [];\r\n    receivers: Array<SignalReceiver | null> = [];\r\n\r\n    evaluate(time: number) {\r\n        if (this.receivers.length <= 0) return;\r\n        if (this.track.muted) return;\r\n        for (let i = 0; i < this.models.length; i++) {\r\n            const model = this.models[i];\r\n            const wasTriggered = this.didTrigger[i];\r\n            const td = model.time - time;\r\n            let isActive = model.retroActive ? td < 0 : (td < 0 && Math.abs(td) < .1);\r\n            if (isActive) {\r\n                if (!wasTriggered) {\r\n                    this.didTrigger[i] = true;\r\n                    for (const rec of this.receivers) {\r\n                        if (!rec) continue;\r\n                        rec.invoke(model.asset);\r\n                    }\r\n                    // console.log(\"TRIGGER \" + model.asset);\r\n                    // TimelineSignals.invoke(model.asset);\r\n                }\r\n            }\r\n            else {\r\n                if (!model.emitOnce)\r\n                    this.didTrigger[i] = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ControlTrackHandler extends TrackHandler {\r\n    models: Array<Models.ClipModel> = [];\r\n    timelines: Array<PlayableDirector | null> = [];\r\n\r\n    private static resolved: { [key: string]: THREE.Object3D } = {};\r\n\r\n    resolveSourceObjects(context: Context) {\r\n        for (let i = this.models.length - 1; i >= 0; i--) {\r\n            const model = this.models[i];\r\n            const asset = model.asset as Models.ControlClipModel;\r\n            if (typeof asset.sourceObject === \"string\") {\r\n                const key = asset.sourceObject;\r\n                if (ControlTrackHandler.resolved[key]) {\r\n                    asset.sourceObject = ControlTrackHandler.resolved[key];\r\n                }\r\n                else {\r\n                    asset.sourceObject = GameObject.findByGuid(key, context.scene) as THREE.Object3D\r\n                    ControlTrackHandler.resolved[key] = asset.sourceObject;\r\n                }\r\n            }\r\n            if (!asset.sourceObject) {\r\n                this.models.splice(i, 1);\r\n                continue;\r\n            }\r\n            else {\r\n                const timeline = GameObject.getComponent(asset.sourceObject, PlayableDirector)!;\r\n                // always add it to keep size of timelines and models in sync (index of model is index of timeline)\r\n                this.timelines.push(timeline);\r\n                if (timeline) {\r\n                    if (asset.updateDirector) {\r\n                        timeline.playOnAwake = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _previousActiveModel: Models.ClipModel | null = null;\r\n\r\n    evaluate(time: number) {\r\n        this._previousActiveModel = null;\r\n        for (let i = 0; i < this.models.length; i++) {\r\n            const model = this.models[i];\r\n            const asset = model.asset as Models.ControlClipModel;\r\n\r\n            if (time >= model.start && time <= model.end) {\r\n                this._previousActiveModel = model;\r\n                const clipTime = this.getClipTime(time, model);\r\n\r\n                if (asset.controlActivation) {\r\n                    const obj = asset.sourceObject as THREE.Object3D;\r\n                    obj.visible = true;\r\n                }\r\n\r\n                if (asset.updateDirector) {\r\n                    const timeline = this.timelines[i];\r\n                    if (timeline) {\r\n                        if (timeline.isPlaying) {\r\n                            timeline.pause();\r\n                        }\r\n                        timeline.time = clipTime;\r\n                        timeline.evaluate();\r\n                    }\r\n                }\r\n                // control tracks can not overlap/blend\r\n                // break;\r\n            }\r\n            else {\r\n                const previousActiveAsset = this._previousActiveModel?.asset as Models.ControlClipModel;\r\n                if (asset.controlActivation) {\r\n                    const obj = asset.sourceObject as THREE.Object3D;\r\n                    if (previousActiveAsset?.sourceObject !== obj)\r\n                        obj.visible = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { serializable } from '../../engine/engine_serialization_decorator';\r\nimport { Color, Texture } from 'three';\r\nimport { MaskableGraphic } from './Graphic';\r\n\r\n\r\nclass Sprite {\r\n    @serializable(Texture)\r\n    texture?: THREE.Texture;\r\n\r\n    rect?: { width: number, height: number };\r\n}\r\n\r\nexport class Image extends MaskableGraphic {\r\n\r\n    @serializable(Sprite)\r\n    sprite?: Sprite;\r\n\r\n    private isBuiltinSprite() {\r\n        switch (this.sprite?.texture?.name) {\r\n            case \"InputFieldBackground\":\r\n            case \"UISprite\":\r\n            case \"Background\":\r\n                return true;\r\n        }\r\n        // this is a hack/workaround for production builds where the name of the sprite is missing\r\n        // need to remove this!!!!\r\n        if(this.sprite?.texture?.image?.width === 32 && this.sprite?.texture?.image?.height === 32) \r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    protected onBeforeCreate(opts: any): void {\r\n        if (this.isBuiltinSprite()) {\r\n            opts.borderRadius = 5;\r\n            opts.borderColor = new Color(.4, .4, .4);\r\n            opts.borderOpacity = this.color.alpha;\r\n            opts.borderWidth = .3;\r\n        }\r\n    }\r\n\r\n    protected onAfterCreated(): void {\r\n        super.onAfterCreated();\r\n        if (this.isBuiltinSprite()) return;\r\n        this.setTexture(this.sprite?.texture);\r\n    }\r\n}\r\n\r\nexport class RawImage extends MaskableGraphic {\r\n    @serializable(Texture)\r\n    mainTexture?: Texture;\r\n\r\n    protected onAfterCreated(): void {\r\n        super.onAfterCreated();\r\n        // console.log(this);\r\n        // if (this.mainTexture) {\r\n        //     this.mainTexture.flipY = true;\r\n        //     this.mainTexture.needsUpdate = true;\r\n        // }\r\n        this.setTexture(this.mainTexture);\r\n    }\r\n}\r\n", "import { IGraphic } from './Interfaces';\r\nimport * as ThreeMeshUI from 'three-mesh-ui'\r\nimport { RGBAColor } from \"../js-extensions/RGBAColor\"\r\nimport { BaseUIComponent } from \"./BaseUIComponent\";\r\nimport { serializable } from '../../engine/engine_serialization_decorator';\r\nimport { Color, LinearEncoding, sRGBEncoding, Texture } from 'three';\r\nimport { RectTransform } from './RectTransform';\r\nimport { onChange, scheduleAction } from \"./Utils\"\r\nimport { GameObject } from '../Component';\r\n\r\n\r\nexport class Graphic extends BaseUIComponent implements IGraphic {\r\n\r\n    get isGraphic() { return true; }\r\n\r\n    @serializable(RGBAColor)\r\n    get color(): RGBAColor {\r\n        if (!this._color) this._color = new RGBAColor(1, 1, 1, 1);\r\n        return this._color;\r\n    }\r\n    set color(col: RGBAColor) {\r\n        const changed = !this._color || this._color.r !== col.r || this._color.g !== col.g || this._color.b !== col.b || this._color.alpha !== col.alpha;\r\n        if (!changed) return;\r\n        if (!this._color) {\r\n            this._color = new RGBAColor(1, 1, 1, 1);\r\n        }\r\n        this._color.copy(col);\r\n    }\r\n    protected onColorChanged() {\r\n        const newcolor = this.color;\r\n        this.setOptions({ backgroundColor: newcolor, backgroundOpacity: newcolor.alpha, borderOpacity: newcolor.alpha });\r\n    }\r\n\r\n    // used via animations\r\n    private get m_Color() {\r\n        return this._color;\r\n    }\r\n\r\n    @serializable()\r\n    raycastTarget: boolean = true;\r\n\r\n    protected uiObject: ThreeMeshUI.Block | null = null;\r\n    private _color: RGBAColor = null!;\r\n\r\n\r\n    private _rect: RectTransform | null = null;\r\n    protected get rectTransform(): RectTransform {\r\n        if (!this._rect) {\r\n            this._rect = GameObject.getComponent(this.gameObject, RectTransform);\r\n        }\r\n        return this._rect!;\r\n    }\r\n\r\n    setState(state: string) {\r\n        this.makePanel();\r\n        if (this.uiObject) {\r\n            //@ts-ignore\r\n            this.uiObject.setState(state);\r\n        }\r\n    }\r\n\r\n    setupState(state: object) {\r\n        this.makePanel();\r\n        if (this.uiObject) {\r\n            //@ts-ignore\r\n            this.uiObject.setupState(state);\r\n        }\r\n    }\r\n\r\n    setOptions(opts: object) {\r\n        this.makePanel();\r\n        if (this.uiObject) {\r\n            //@ts-ignore\r\n            this.uiObject.set(opts);\r\n            if (opts[\"backgroundColor\"] !== undefined || opts[\"backgroundOpacity\"] !== undefined)\r\n                this.uiObject[\"updateBackgroundMaterial\"]?.call(this.uiObject);\r\n        }\r\n    }\r\n\r\n    awake() {\r\n        super.awake();\r\n        this.makePanel();\r\n\r\n        // when _color is written to\r\n        onChange(this, \"_color\", () => scheduleAction(this, this.onColorChanged));\r\n    }\r\n\r\n    onEnable(): void {\r\n        super.onEnable();\r\n        if (this.uiObject) {\r\n            this.rectTransform.shadowComponent?.add(this.uiObject);\r\n            this.addShadowComponent(this.uiObject, this.rectTransform);\r\n        }\r\n\r\n    }\r\n\r\n    onDisable(): void {\r\n        super.onDisable();\r\n        if (this.uiObject)\r\n            this.removeShadowComponent();\r\n    }\r\n\r\n    private _currentlyCreatingPanel: boolean = false;\r\n    protected makePanel() {\r\n        if (this.uiObject) return;\r\n        if (this._currentlyCreatingPanel) return;\r\n        this._currentlyCreatingPanel = true;\r\n\r\n        const opts = {\r\n            backgroundColor: this.color,\r\n            backgroundOpacity: this.color.alpha,\r\n            offset: 1, // without a tiny offset we get z fighting\r\n        };\r\n        this.onBeforeCreate(opts);\r\n        this.onCreate(opts);\r\n        this.controlsChildLayout = false;\r\n        this._currentlyCreatingPanel = false;\r\n        this.onAfterCreated();\r\n    }\r\n\r\n    protected onBeforeCreate(_opts: any) { }\r\n\r\n    protected onCreate(opts: any) {\r\n        this.uiObject = this.rectTransform.createNewBlock(opts);\r\n        this.uiObject.name = this.name;\r\n    }\r\n    protected onAfterCreated() { }\r\n\r\n    /** used internally to ensure textures assigned to UI use linear encoding */\r\n    static textureCache: Map<Texture, Texture> = new Map();\r\n\r\n    protected async setTexture(tex: Texture | null | undefined) {\r\n        if (!tex) return;\r\n        this.setOptions({ backgroundOpacity: 0 });\r\n        if (tex) {\r\n            // workaround for https://github.com/needle-tools/needle-engine-support/issues/109\r\n            if(tex.encoding === sRGBEncoding) {\r\n                if(Graphic.textureCache.has(tex)) {\r\n                    tex = Graphic.textureCache.get(tex)!;\r\n                } else {\r\n                    const clone = tex.clone();\r\n                    clone.encoding = LinearEncoding;\r\n                    Graphic.textureCache.set(tex, clone);\r\n                    tex = clone;\r\n                }\r\n            }\r\n            this.setOptions({ backgroundTexture: tex, borderRadius: 0, backgroundOpacity: this.color.alpha, backgroundSize: \"stretch\" });\r\n        }\r\n    }\r\n\r\n    protected onAfterAddedToScene(): void {\r\n        super.onAfterAddedToScene();\r\n        if (this.shadowComponent) {\r\n            //@ts-ignore\r\n            this.shadowComponent.offset = this.shadowComponent.position.z;\r\n\r\n            // console.log(this.shadowComponent);\r\n            // setTimeout(()=>{\r\n            //     this.shadowComponent?.traverse(c => {\r\n            //         console.log(c);\r\n            //         if(c.material) c.material.depthTest = false;\r\n            //     });\r\n            // },1000);\r\n        }\r\n    }\r\n}\r\n\r\nexport class MaskableGraphic extends Graphic {\r\n\r\n    protected onAfterCreated() {\r\n        // flip image\r\n        if (this.uiObject)\r\n            this.uiObject.scale.y *= -1;\r\n    }\r\n}", "import { Behaviour } from \"../Component\";\r\nimport * as ThreeMeshUI from 'three-mesh-ui'\r\nimport { BaseUIComponent } from \"./BaseUIComponent\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\nimport { Color, Matrix4, Object3D, Vector2, Vector3 } from \"three\";\r\nimport { EventSystem } from \"./EventSystem\";\r\nimport { getParam } from \"../../engine/engine_utils\";\r\nimport { onChange } from \"./Utils\";\r\n\r\nconst debug = getParam(\"debugui\");\r\n\r\nexport class Size {\r\n    width!: number;\r\n    height!: number;\r\n}\r\n\r\nexport class Rect {\r\n    x!: number;\r\n    y!: number;\r\n    width!: number;\r\n    height!: number;\r\n}\r\n\r\nexport class RectTransform extends BaseUIComponent {\r\n\r\n    offset: number = 0.01;\r\n\r\n    // @serializable(Object3D)\r\n    // root? : Object3D;\r\n\r\n    get translation() { return this.gameObject.position; }\r\n    get rotation() { return this.gameObject.quaternion; }\r\n    get scale(): THREE.Vector3 { return this.gameObject.scale; }\r\n\r\n    private _anchoredPosition!: Vector3;\r\n    private get anchoredPosition() {\r\n        if (!this._anchoredPosition) this._anchoredPosition = new Vector3();\r\n        return this._anchoredPosition;\r\n    }\r\n\r\n    @serializable(Rect)\r\n    rect?: Rect;\r\n    @serializable(Vector2)\r\n    sizeDelta!: THREE.Vector2;\r\n    @serializable(Vector3)\r\n    anchoredPosition3D?: THREE.Vector3;\r\n    @serializable(Vector2)\r\n    pivot?: THREE.Vector2;\r\n\r\n    private lastMatrix!: Matrix4;\r\n    private rectBlock!: Object3D;\r\n    private _transformNeedsUpdate: boolean = false;\r\n\r\n    awake() {\r\n        super.awake();\r\n        this.lastMatrix = new Matrix4();\r\n        this.rectBlock = new Object3D();;\r\n        this.rectBlock.position.z = .1;\r\n        this.rectBlock.name = this.name;\r\n\r\n        // this is required if an animator animated the transform anchoring\r\n        if (!this._anchoredPosition) this._anchoredPosition = new Vector3();\r\n        onChange(this, \"_anchoredPosition\", () => { this._transformNeedsUpdate = true; });\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n        this.addShadowComponent(this.rectBlock);\r\n        this._transformNeedsUpdate = true;\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n        this.removeShadowComponent();\r\n    }\r\n\r\n    private applyTransform() {\r\n        const uiobject = this.shadowComponent;\r\n        if (!uiobject) return;\r\n        this._transformNeedsUpdate = false;\r\n\r\n        if (!this.isRoot()) {\r\n            // this.gameObject transform has authority over three mesh ui shadow components\r\n            // so we keep copy the transform to the threemesh ui components\r\n            uiobject.position.copy(this.gameObject.position);\r\n            uiobject.position.x *= -1;\r\n            uiobject.position.z *= -1;\r\n            // move slightly forward to avoid z fighting\r\n            uiobject.position.z -= this.offset;\r\n\r\n            uiobject.quaternion.copy(this.gameObject.quaternion);\r\n            uiobject.rotation.x *= -1;\r\n            // flip images\r\n            uiobject.rotation.z *= -1;\r\n\r\n            uiobject.scale.copy(this.gameObject.scale);\r\n        }\r\n        else {\r\n            uiobject.rotation.y = Math.PI;\r\n        }\r\n\r\n        this.applyAnchoring(uiobject.position);\r\n        this.lastMatrix.copy(this.gameObject.matrix);\r\n    }\r\n\r\n    markDirty() {\r\n        this._transformNeedsUpdate = true;\r\n    }\r\n\r\n    onBeforeRender() {\r\n        // only handle update here if this is not the canvas\r\n        // the canvas component does inherit from this class but it only serves as a root\r\n        // it does not emit any UI elements and therefor we dont want to change its transform\r\n        // if (this._parentComponent) \r\n        // {\r\n        const transformChanged = this._transformNeedsUpdate || this.lastMatrix.equals(this.gameObject.matrix) === false;\r\n        if (transformChanged) {\r\n            if (debug)\r\n                console.log(\"updating\", this.name);\r\n            this.applyTransform();\r\n        }\r\n        // }\r\n        EventSystem.ensureUpdateMeshUI(ThreeMeshUI, this.context);\r\n    }\r\n\r\n    private applyAnchoring(pos: THREE.Vector3) {\r\n        if (this.pivot && this.sizeDelta) {\r\n            let tx = (this.pivot.x * 2 - 1);\r\n            let ty = (this.pivot.y * 2 - 1);\r\n            // tx -= this.m_AnchoredPosition.x * .05;\r\n            ty -= this.anchoredPosition.y * .05;\r\n            const offx = this.sizeDelta.x * tx;\r\n            const offy = this.sizeDelta.y * ty;\r\n            // console.log(this.name, this.pivot, tx, ty, \"offset\", offx, offy);\r\n            pos.x -= offx * .5;\r\n            pos.y -= offy * .5;\r\n        }\r\n    }\r\n\r\n    getBasicOptions(): ThreeMeshUI.BlockOptions {\r\n        const opts = {\r\n            width: this.rect!.width,\r\n            height: this.rect!.height,// * this.context.mainCameraComponent!.aspect,\r\n            offset: this.offset,\r\n            backgroundOpacity: 0,\r\n            borderWidth: 0, // if we dont specify width here a border will automatically propagated to child blocks\r\n            borderRadius: 0,\r\n            borderOpacity: 0,\r\n            // justifyContent: 'center',\r\n            // alignItems: 'center',\r\n            // alignContent: 'center',\r\n            // backgroundColor: new Color(1, 1, 1),\r\n        };\r\n        this.ensureValidSize(opts);\r\n        return opts;\r\n    }\r\n\r\n    // e.g. when a transform has the size 0,0 we still want to render the text\r\n    private ensureValidSize(opts: Size, fallbackWidth = 0.0001): Size {\r\n        if (opts.width <= 0) {\r\n            opts.width = fallbackWidth;\r\n        }\r\n        if (opts.height <= 0) opts.height = 0.0001;\r\n        return opts;\r\n    }\r\n\r\n    private _createdBlocks : ThreeMeshUI.Block[] = [];\r\n\r\n    createNewBlock(opts?: ThreeMeshUI.BlockOptions | object): ThreeMeshUI.Block {\r\n        opts = {\r\n            ...this.getBasicOptions(),\r\n            ...opts\r\n        };\r\n        if (debug)\r\n            console.log(this.name, opts);\r\n        const block = new ThreeMeshUI.Block(opts as ThreeMeshUI.BlockOptions);\r\n        this._createdBlocks.push(block);\r\n        return block;\r\n    }\r\n}", "\r\nimport { FrontSide, DoubleSide, BackSide, TetrahedronGeometry } from \"three\"\r\nimport { FrameEvent } from \"../../engine/engine_setup\";\r\nimport { Behaviour, GameObject } from \"../Component\";\r\nimport { $shadowDomOwner } from \"./BaseUIComponent\";\r\n\r\n// export function makeNonRaycastable(obj: THREE.Object3D | null | undefined, recursive: boolean = false) {\r\n//     if (!obj) return;\r\n//     obj.layers.mask = 2;\r\n//     if (recursive && obj.children) {\r\n//         for (const ch of obj.children) {\r\n//             if (recursive) makeNonRaycastable(ch, true);\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport function isUIObject(obj: THREE.Object3D) {\r\n    return obj[\"isUI\"] === true || typeof obj[$shadowDomOwner] === \"object\";\r\n}\r\n\r\nexport type RenderSettings = {\r\n    renderOnTop?: boolean;\r\n    doubleSided?: boolean;\r\n    depthWrite?: boolean;\r\n    castShadows?: boolean;\r\n    receiveShadows?: boolean;\r\n}\r\n\r\nexport function updateRenderSettings(shadowComponent: THREE.Object3D, settings: RenderSettings) {\r\n    if (!shadowComponent) return;\r\n    // const owner = shadowComponent[$shadowDomOwner];\r\n    // if (!owner)\r\n    //     console.log(shadowComponent)\r\n    const mat = shadowComponent[\"material\"];\r\n    if (mat?.isMaterial === true) {\r\n        // console.log(shadowComponent, shadowComponent.name);\r\n        // console.log(mat, component.renderOnTop, component.doubleSided, component.depthWrite);\r\n        mat.depthTest = !settings.renderOnTop ?? true;\r\n        mat.side = (settings.doubleSided ?? true) ? DoubleSide : FrontSide;\r\n        mat.depthWrite = settings.depthWrite ?? false;\r\n        mat.shadowSide = settings.doubleSided ? DoubleSide : FrontSide;\r\n        shadowComponent.castShadow = settings.castShadows ? settings.castShadows : false;\r\n        shadowComponent.receiveShadow = settings.receiveShadows ? settings.receiveShadows : false;\r\n    }\r\n    for (const ch of shadowComponent.children) {\r\n        updateRenderSettings(ch, settings);\r\n    }\r\n}\r\n\r\nexport declare type RevocableProxy = {\r\n    proxy: any;\r\n    revoke: () => void;\r\n}\r\n\r\n// TODO: change to use utils Watch since a revocable proxy makes a object completely useless once it is revoked\r\n/** internal method to proxy a field to detect changes */\r\n/**@deprecated use watcher instead */\r\nexport function onChange<T extends object>(caller: T, field: string, callback: (newValue: any, oldValue: any) => void): RevocableProxy {\r\n\r\n    if (caller[field] === undefined) {\r\n        console.warn(\"Field\", field, \"is undefined on\", caller);\r\n    }\r\n    // create proxy that notifies on value change\r\n    const res = Proxy.revocable(caller[field], {\r\n        // get(target, prop, receiver) {\r\n        //     return Reflect.get(target, prop, receiver);\r\n        // },\r\n        set(target, prop, value, receiver) {\r\n            const currentValue = target[prop];\r\n            const res = Reflect.set(target, prop, value, receiver);\r\n            callback(value, currentValue);\r\n            return res;\r\n        }\r\n    });\r\n    // setup revokeable\r\n    const revoke = res.revoke;\r\n    const original = caller[field];\r\n    res.revoke = () => {\r\n        caller[field] = original;\r\n        revoke();\r\n    };\r\n    caller[field] = res.proxy;\r\n    return res;\r\n}\r\n\r\n\r\ndeclare type ScheduleCache = { [key: number]: { [key: string]: Generator | null } };\r\nconst $scheduledActionKey = Symbol(\"Scheduled action\");\r\n\r\n// use to schedule a callback at a specific moment in the frame\r\n/** internal method to schedule a function at a specific moment in the update loop */\r\nexport function scheduleAction(caller: Behaviour, action: Function, timing: FrameEvent = FrameEvent.OnBeforeRender) {\r\n    let cache: ScheduleCache = caller[$scheduledActionKey];\r\n    if (!cache) cache = caller[$scheduledActionKey] = {};\r\n\r\n    const key = action.name;\r\n    if (!cache[timing]) cache[timing] = {};\r\n    const actions = cache[timing];\r\n    const existing = actions[key];\r\n    if (existing) return;\r\n    function* gen() {\r\n        // yield;\r\n        action?.call(caller);\r\n        actions[key] = null;\r\n    }\r\n    const coroutine = caller.startCoroutine(gen(), timing);\r\n    actions[key] = coroutine;\r\n}", "import { Behaviour, GameObject } from \"../Component\";\r\nimport { EventList } from \"../EventList\";\r\nimport { IPointerClickHandler, IPointerEnterHandler, IPointerEventHandler, IPointerExitHandler, PointerEventData } from \"./PointerEvents\";\r\nimport { Image } from \"./Image\";\r\nimport { RGBAColor } from \"../js-extensions/RGBAColor\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\nimport { Animator } from \"../Animator\";\r\nimport { getParam } from \"../../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debugbutton\");\r\n\r\n/// <summary>\r\n///Transition mode for a Selectable.\r\n/// </summary>\r\nexport enum Transition {\r\n    /// <summary>\r\n    /// No Transition.\r\n    /// </summary>\r\n    None,\r\n    /// <summary>\r\n    /// Use an color tint transition.\r\n    /// </summary>\r\n    ColorTint,\r\n    /// <summary>\r\n    /// Use a sprite swap transition.\r\n    /// </summary>\r\n    SpriteSwap,\r\n    /// <summary>\r\n    /// Use an animation transition.\r\n    /// </summary>\r\n    Animation\r\n}\r\n\r\ndeclare class ButtonColors {\r\n    @serializable()\r\n    colorMultiplier: 1;\r\n    @serializable(RGBAColor)\r\n    disabledColor: RGBAColor;\r\n    @serializable()\r\n    fadeDuration: number;\r\n    @serializable(RGBAColor)\r\n    highlightedColor: RGBAColor;\r\n    @serializable(RGBAColor)\r\n    normalColor: RGBAColor;\r\n    @serializable(RGBAColor)\r\n    pressedColor: RGBAColor;\r\n    @serializable(RGBAColor)\r\n    selectedColor: RGBAColor;\r\n}\r\n\r\ndeclare type AnimationTriggers = {\r\n    disabledTrigger: string,\r\n    highlightedTrigger: string,\r\n    normalTrigger: string,\r\n    pressedTrigger: string,\r\n    selectedTrigger: string,\r\n}\r\n\r\nexport class Button extends Behaviour implements IPointerEventHandler {\r\n\r\n    @serializable(EventList)\r\n    onClick?: EventList;\r\n\r\n    private _isHovered: boolean = false;\r\n\r\n    onPointerEnter(_) {\r\n        if (debug)\r\n            console.log(\"Button Enter\", this.animationTriggers?.highlightedTrigger, this.animator);\r\n        this._isHovered = true;\r\n        if (this.transition == Transition.Animation && this.animationTriggers && this.animator) {\r\n            this.animator.SetTrigger(this.animationTriggers.highlightedTrigger);\r\n        }\r\n        else if(this.transition === Transition.ColorTint && this.colors) {\r\n            this._image?.setState(\"hovered\");\r\n        }\r\n        this.context.input.setCursorPointer();\r\n    }\r\n\r\n    onPointerExit() {\r\n        if (debug)\r\n            console.log(\"Button Exit\", this.animationTriggers?.highlightedTrigger, this.animator);\r\n        this._isHovered = false;\r\n        if (this.transition == Transition.Animation && this.animationTriggers && this.animator) {\r\n            this.animator.SetTrigger(this.animationTriggers.normalTrigger);\r\n        }\r\n        else if(this.transition === Transition.ColorTint && this.colors) {\r\n            this._image?.setState(\"normal\");\r\n        }\r\n        this.context.input.setCursorNormal();\r\n    }\r\n\r\n    onPointerDown(_) {\r\n        if (debug)\r\n            console.log(\"Button Down\", this.animationTriggers?.highlightedTrigger, this.animator);\r\n        if (this.transition == Transition.Animation && this.animationTriggers && this.animator) {\r\n            this.animator.SetTrigger(this.animationTriggers.pressedTrigger);\r\n        }\r\n        else if(this.transition === Transition.ColorTint && this.colors) {\r\n            this._image?.setState(\"pressed\");\r\n        }\r\n    }\r\n\r\n    onPointerUp(_) {\r\n        if (debug)\r\n            console.log(\"Button Down\", this.animationTriggers?.highlightedTrigger, this.animator);\r\n        if (this.transition == Transition.Animation && this.animationTriggers && this.animator) {\r\n            this.animator.SetTrigger(this._isHovered ? this.animationTriggers.highlightedTrigger : this.animationTriggers.normalTrigger);\r\n        }\r\n        else if(this.transition === Transition.ColorTint && this.colors) {\r\n            this._image?.setState(this._isHovered ? \"hovered\" : \"normal\");\r\n        }\r\n    }\r\n\r\n    onPointerClick(_args: PointerEventData) {\r\n        if (debug)\r\n            console.trace(\"Button Click\", this.onClick);\r\n        this.onClick?.invoke();\r\n    }\r\n\r\n    @serializable()\r\n    colors?: ButtonColors;\r\n    @serializable()\r\n    transition?: Transition;\r\n\r\n    @serializable()\r\n    animationTriggers?: AnimationTriggers;\r\n\r\n    @serializable(Animator)\r\n    animator?: Animator;\r\n\r\n    // @serializable(Image)\r\n    // image? : Image;\r\n\r\n    @serializable()\r\n    set interactable(value) {\r\n        this._interactable = value;\r\n        if (this._image) {\r\n            this._image.setInteractable(value);\r\n            if (value)\r\n                this._image.setState(\"normal\");\r\n            else\r\n                this._image.setState(\"disabled\");\r\n        }\r\n    }\r\n    get interactable(): boolean { return this._interactable; }\r\n\r\n    private _interactable: boolean = true;\r\n    private set_interactable(value: boolean) {\r\n        this.interactable = value;\r\n    }\r\n\r\n    awake(): void {\r\n        super.awake();\r\n        if (debug)\r\n            console.log(this);\r\n        this.init();\r\n    }\r\n\r\n    start() {\r\n        this._image?.setInteractable(this.interactable);\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    private _requestedAnimatorTrigger?: string;\r\n    private *setAnimatorTriggerAtEndOfFrame(requestedTriggerId: string) {\r\n        this._requestedAnimatorTrigger = requestedTriggerId;\r\n        yield;\r\n        yield;\r\n        if (this._requestedAnimatorTrigger == requestedTriggerId) {\r\n            this.animator?.SetTrigger(requestedTriggerId);\r\n        }\r\n    }\r\n\r\n    private _isInit: boolean = false;\r\n    private _image?: Image;\r\n\r\n    private init() {\r\n        if (this._isInit) return;\r\n        this._isInit = true;\r\n        this._image = GameObject.getComponent(this.gameObject, Image) as Image;\r\n        if (this._image) {\r\n            this.stateSetup(this._image);\r\n            if (this.interactable)\r\n                this._image.setState(\"normal\");\r\n            else\r\n                this._image.setState(\"disabled\");\r\n        }\r\n    }\r\n\r\n    private stateSetup(image: Image) {\r\n        image.setInteractable(this.interactable);\r\n\r\n        const normal = this.getFinalColor(image.color, this.colors?.normalColor);\r\n        const normalState = {\r\n            state: \"normal\",\r\n            attributes: {\r\n                backgroundColor: normal,\r\n                backgroundOpacity: normal.alpha,\r\n            },\r\n        };\r\n        image.setupState(normalState);\r\n\r\n        const hover = this.getFinalColor(image.color, this.colors?.highlightedColor);\r\n        const hoverState = {\r\n            state: \"hovered\",\r\n            attributes: {\r\n                backgroundColor: hover,\r\n                backgroundOpacity: hover.alpha,\r\n            },\r\n        };\r\n        image.setupState(hoverState);\r\n\r\n        const pressed = this.getFinalColor(image.color, this.colors?.pressedColor);\r\n        const pressedState = {\r\n            state: \"pressed\",\r\n            attributes: {\r\n                backgroundColor: pressed,\r\n                backgroundOpacity: pressed.alpha,\r\n            }\r\n        };\r\n        image.setupState(pressedState);\r\n\r\n        const selected = this.getFinalColor(image.color, this.colors?.selectedColor);\r\n        const selectedState = {\r\n            state: \"selected\",\r\n            attributes: {\r\n                backgroundColor: selected,\r\n                backgroundOpacity: selected.alpha,\r\n            }\r\n        };\r\n        image.setupState(selectedState);\r\n\r\n        const disabled = this.getFinalColor(image.color, this.colors?.disabledColor);\r\n        const disabledState = {\r\n            state: \"disabled\",\r\n            attributes: {\r\n                backgroundColor: disabled,\r\n                backgroundOpacity: disabled.alpha,\r\n            }\r\n        };\r\n        image.setupState(disabledState);\r\n    }\r\n\r\n    private getFinalColor(col: RGBAColor, col2?: RGBAColor) {\r\n        if (col2) {\r\n            return col.clone().multiply(col2);\r\n        }\r\n        return col.clone();\r\n    }\r\n}", "import { onChange, updateRenderSettings as updateRenderSettingsRecursive } from \"./Utils\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\nimport { FrameEvent } from \"../../engine/engine_setup\";\r\nimport { BaseUIComponent, UIRootComponent } from \"./BaseUIComponent\";\r\nimport { Mathf } from \"../../engine/engine_math\";\r\nimport * as THREE from \"three\";\r\nimport { getComponentsInChildren } from \"../../engine/engine_components\";\r\nimport { IComponent } from \"../../engine/engine_types\";\r\nimport { GameObject } from \"../Component\";\r\n\r\nexport enum RenderMode {\r\n    ScreenSpaceOverlay = 0,\r\n    ScreenSpaceCamera = 1,\r\n    WorldSpace = 2,\r\n}\r\n\r\nexport class Canvas extends UIRootComponent {\r\n\r\n    @serializable()\r\n    set renderOnTop(val: boolean) {\r\n        if (val === this._renderOnTop) {\r\n            return;\r\n        }\r\n        this._renderOnTop = val;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n    get renderOnTop() { return this._renderOnTop; }\r\n    private _renderOnTop: boolean = false;\r\n\r\n    @serializable()\r\n    set depthWrite(val: boolean) {\r\n        if (this._depthWrite === val) return;\r\n        this._depthWrite = val;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n    get depthWrite() { return this._depthWrite; }\r\n    private _depthWrite: boolean = false;\r\n\r\n    @serializable()\r\n    set doubleSided(val: boolean) {\r\n        if (this._doubleSided === val) return;\r\n        this._doubleSided = val;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n    get doubleSided() { return this._doubleSided; }\r\n    private _doubleSided: boolean = true;\r\n\r\n    @serializable()\r\n    set castShadows(val: boolean) {\r\n        if (this._castShadows === val) return;\r\n        this._castShadows = val;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n    get castShadows() { return this._castShadows; }\r\n    private _castShadows: boolean = true;\r\n\r\n    @serializable()\r\n    set receiveShadows(val: boolean) {\r\n        if (this._receiveShadows === val) return;\r\n        this._receiveShadows = val;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n    get receiveShadows() { return this._receiveShadows; }\r\n    private _receiveShadows: boolean = true;\r\n\r\n\r\n    @serializable()\r\n    get renderMode(): RenderMode {\r\n        return this._renderMode;\r\n    }\r\n    set renderMode(val: RenderMode) {\r\n        if (this._renderMode === val) return;\r\n        this._renderMode = val;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n    private _renderMode: RenderMode = -1;\r\n\r\n    private _rootCanvas!: Canvas;\r\n\r\n    @serializable(Canvas)\r\n    set rootCanvas(val: Canvas) {\r\n        if (this._rootCanvas instanceof Canvas) return;\r\n        this._rootCanvas = val;\r\n    }\r\n\r\n    get rootCanvas(): Canvas {\r\n        return this._rootCanvas;\r\n    }\r\n\r\n    private _scaleFactor: number = 1;\r\n    @serializable()\r\n    get scaleFactor(): number {\r\n        return this._scaleFactor;\r\n    }\r\n    private set scaleFactor(val: number) {\r\n        this._scaleFactor = val;\r\n    }\r\n\r\n    awake() {\r\n        this.shadowComponent = this.gameObject;\r\n        super.awake();\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n        this._updateRenderSettingsRoutine = undefined;\r\n        this.onRenderSettingsChanged();\r\n    }\r\n\r\n    private previousAspect: number = -1;\r\n\r\n    onBeforeRender() {\r\n        if (this.isScreenSpace && this.context.mainCameraComponent && this.context.mainCameraComponent.aspect !== this.previousAspect) {\r\n            this.previousAspect = this.context.mainCameraComponent.aspect;\r\n            this.updateRenderMode();\r\n        }\r\n    }\r\n\r\n\r\n    private _updateRenderSettingsRoutine?: Generator;\r\n    private onRenderSettingsChanged() {\r\n        if (this._updateRenderSettingsRoutine) return;\r\n        this._updateRenderSettingsRoutine = this.startCoroutine(this._updateRenderSettingsDelayed(), FrameEvent.OnBeforeRender);\r\n    }\r\n\r\n    private *_updateRenderSettingsDelayed() {\r\n        yield;\r\n        this._updateRenderSettingsRoutine = undefined;\r\n        if (this.shadowComponent) {\r\n            this.updateRenderMode();\r\n            // this.onWillUpdateRenderSettings();\r\n            updateRenderSettingsRecursive(this.shadowComponent, this);\r\n            for (const ch of GameObject.getComponentsInChildren(this.gameObject, BaseUIComponent)) {\r\n                updateRenderSettingsRecursive(ch.shadowComponent!, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _activeRenderMode: RenderMode = -1;\r\n\r\n    private get isScreenSpace(): boolean {\r\n        return this._activeRenderMode === RenderMode.ScreenSpaceCamera || this._activeRenderMode === RenderMode.ScreenSpaceOverlay;\r\n    }\r\n\r\n    private updateRenderMode() {\r\n        if (this.renderMode === this._activeRenderMode) return;\r\n        switch (this.renderMode) {\r\n            case RenderMode.ScreenSpaceOverlay:\r\n            case RenderMode.ScreenSpaceCamera:\r\n                const camera = this.context.mainCameraComponent;\r\n                if (!camera) return;\r\n                const canvas = this.gameObject;\r\n                const camObj = camera.gameObject;\r\n                camObj?.add(canvas);\r\n                const pos = camera.farClipPlane;\r\n                canvas.position.x = 0;\r\n                canvas.position.y = 0;\r\n                canvas.position.z = -pos;\r\n\r\n                // console.log(this.shadowComponent)\r\n\r\n                const w = Math.tan(Mathf.toRadians(camera.fieldOfView) * pos) * (camera.aspect * 1.333333);\r\n                const h = w * (this.context.domHeight / this.context.domWidth);\r\n                canvas.scale.x = -w;\r\n                canvas.scale.y = h;\r\n\r\n                // const rects = this.gameObject.getComponentsInChildren(BaseUIComponent);\r\n                // for (const rect of rects) {\r\n                //     rect.set({ width: this.context.domWidth * .5, height: 100 })\r\n                // }\r\n\r\n                break;\r\n            case RenderMode.WorldSpace:\r\n\r\n                break;\r\n        }\r\n    }\r\n}", "import { Graphic } from \"./Graphic\";\r\nimport { FrameEvent } from \"../../engine/engine_setup\";\r\nimport { Behaviour, GameObject } from \"../Component\";\r\nimport { ICanvasGroup } from \"./Interfaces\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\n\r\n\r\nexport class CanvasGroup extends Behaviour implements ICanvasGroup {\r\n    @serializable()\r\n    get alpha(): number {\r\n        return this._alpha;\r\n    }\r\n    set alpha(val: number) {\r\n        if (val === this._alpha) return;\r\n        this._alpha = val;\r\n        this.markDirty();\r\n    }\r\n\r\n    get isCanvasGroup() { return true; }\r\n\r\n    private _alpha: number = 1;\r\n\r\n    @serializable()\r\n    interactable: boolean = true;\r\n    @serializable()\r\n    blocksRaycasts: boolean = true;\r\n\r\n\r\n    private _isDirty: boolean = false;\r\n    private markDirty() {\r\n        if (this._isDirty) return;\r\n        this._isDirty = true;\r\n        this.startCoroutine(this.applyChangesDelayed(), FrameEvent.OnBeforeRender);\r\n    }\r\n\r\n    private *applyChangesDelayed() {\r\n        this._isDirty = false;\r\n        this.applyChangesNow();\r\n    }\r\n\r\n    private _buffer : Graphic[] = [];\r\n    private applyChangesNow() {\r\n        for (const ch of GameObject.getComponentsInChildren(this.gameObject, Graphic, this._buffer)) {\r\n            const col = ch.color;\r\n            col.alpha = this._alpha;\r\n            ch.color = col;\r\n        }\r\n    }\r\n}", "import { Graphic } from './Graphic';\r\nimport * as ThreeMeshUI from 'three-mesh-ui'\r\nimport { $shadowDomOwner, includesDir } from \"./BaseUIComponent\";\r\nimport { RectTransform } from './RectTransform';\r\nimport { Color } from 'three';\r\nimport { FrameEvent } from '../../engine/engine_setup';\r\nimport { updateRenderSettings } from './Utils';\r\nimport { Canvas } from './Canvas';\r\nimport { serializable } from '../../engine/engine_serialization_decorator';\r\nimport { getParam, getPath } from '../../engine/engine_utils';\r\n\r\nconst debug = getParam(\"debugtext\");\r\n\r\nexport enum TextAnchor {\r\n    UpperLeft = 0,\r\n    UpperCenter = 1,\r\n    UpperRight = 2,\r\n    MiddleLeft = 3,\r\n    MiddleCenter = 4,\r\n    MiddleRight = 5,\r\n    LowerLeft = 6,\r\n    LowerCenter = 7,\r\n    LowerRight = 8,\r\n}\r\n\r\nexport enum VerticalWrapMode {\r\n    Truncate = 0,\r\n    Overflow = 1,\r\n}\r\nenum HorizontalWrapMode {\r\n    Wrap = 0,\r\n    Overflow = 1,\r\n}\r\n\r\nenum FontStyle {\r\n    Normal = 0,\r\n    Bold = 1,\r\n    Italic = 2,\r\n    BoldAndItalic = 3,\r\n}\r\n\r\nexport class Text extends Graphic {\r\n\r\n    @serializable(Canvas)\r\n    canvas?: Canvas;\r\n    @serializable()\r\n    alignment: TextAnchor = TextAnchor.UpperLeft;\r\n    @serializable()\r\n    verticalOverflow: VerticalWrapMode = VerticalWrapMode.Truncate;\r\n    @serializable()\r\n    horizontalOverflow: HorizontalWrapMode = HorizontalWrapMode.Wrap;\r\n    @serializable()\r\n    lineSpacing: number = 1;\r\n    @serializable()\r\n    supportRichText: boolean = false;\r\n    @serializable()\r\n    font?: string;\r\n    @serializable()\r\n    fontStyle: FontStyle = FontStyle.Normal;\r\n\r\n    @serializable()\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n    set text(val: string) {\r\n        this._text = val;\r\n        if (!this._textMeshUi && this._text.length > 0 && this.context.time.frame > 0) {\r\n            this.createText(val, this.getTextOpts(), this.supportRichText);\r\n        }\r\n        if (this._textMeshUi) {\r\n            if (this._textMeshUi.length > 1) {\r\n                this.requestRebuild();\r\n                return;\r\n            }\r\n            //@ts-ignore\r\n            this._textMeshUi[0].set({ content: val });\r\n            this.markDirty();\r\n        }\r\n    }\r\n    private set_text(val: string) {\r\n        this.text = val;\r\n    }\r\n\r\n    @serializable()\r\n    get fontSize(): number { return this._fontSize; }\r\n    set fontSize(val: number) {\r\n        this._fontSize = val;\r\n        if (this._textMeshUi) {\r\n            if (this._textMeshUi.length > 1) {\r\n                this.requestRebuild();\r\n                return;\r\n            }\r\n            //@ts-ignore\r\n            this._textMeshUi[0].set({ content: val });\r\n            this.markDirty();\r\n        }\r\n    }\r\n\r\n    protected onColorChanged(): void {\r\n        if (this._textMeshUi) {\r\n            if (this._textMeshUi.length > 1) {\r\n                this.requestRebuild();\r\n                return;\r\n            }\r\n            const col = this.color;\r\n            //@ts-ignore\r\n            this._textMeshUi[0].set({ fontColor: col, fontOpacity: col.alpha });\r\n            this.markDirty();\r\n        }\r\n    }\r\n\r\n    private _isWaitingForRebuild: boolean = false;\r\n    private requestRebuild() {\r\n        if (this._isWaitingForRebuild) return;\r\n        this._isWaitingForRebuild = true,\r\n            this.startCoroutine(this.rebuildDelayedRoutine(), FrameEvent.EarlyUpdate);\r\n    }\r\n    private *rebuildDelayedRoutine() {\r\n        this._isWaitingForRebuild = false;\r\n        if (this._textMeshUi) {\r\n            for (const text of this._textMeshUi) {\r\n                text.removeFromParent();\r\n            }\r\n            this._textMeshUi.length = 0;\r\n        }\r\n        this.createText(this.text, this.getTextOpts(), this.supportRichText);\r\n        this.markDirty();\r\n    }\r\n\r\n    protected onCreate(_opts: any): void {\r\n        if (debug) console.log(this);\r\n        const hideOverflow = this.verticalOverflow == VerticalWrapMode.Truncate && this.horizontalOverflow == HorizontalWrapMode.Wrap;\r\n        if (hideOverflow)\r\n            this.context.renderer.localClippingEnabled = true;\r\n\r\n        const rt = this.rectTransform;\r\n        // this._container = this._textMeshUi;\r\n        // every mesh ui component must be inside a block\r\n        // images emit nothing but blocks\r\n        // this code should probably be moved somewhere else and also handle raw image / anything that emits block (sprite?)\r\n        // so we only add extra blocks if the parent doesnt have one yet\r\n        // maybe we can just ask the component the text will be added to to not rely on our unity components?\r\n        // this can hopefully be removed once this is fixed/improved: https://github.com/felixmariotto/three-mesh-ui/issues/168\r\n        this._textContainer = this.uiObject = this.createBlock(rt, hideOverflow, null, true);\r\n\r\n\r\n        this.createText(this.text, this.getTextOpts(), this.supportRichText);\r\n        if (this.uiObject) {\r\n            //@ts-ignore\r\n            // this._container.width += this.fontSize * .333; // avoid word wrapping\r\n        }\r\n        this.uiObject = this.createBlock(rt, hideOverflow, this.uiObject, false);\r\n    }\r\n\r\n    onAfterAddedToScene() {\r\n        super.onAfterAddedToScene();\r\n        this.handleTextRenderOnTop();\r\n    }\r\n\r\n    private _text: string = \"\";\r\n    private _fontSize: number = 12;\r\n    private _textMeshUi: Array<ThreeMeshUI.Text> | null = null;\r\n    private _textContainer: any = null;\r\n\r\n    private getTextOpts(): object {\r\n        let fontSize = this.fontSize;\r\n        // if (this.canvas) {\r\n        //     fontSize /= this.canvas?.scaleFactor;\r\n        // }\r\n        const textOpts = {\r\n            content: this.text,\r\n            fontColor: this.color,\r\n            fontOpacity: this.color.alpha,\r\n            fontSize: fontSize,\r\n            fontKerning: \"normal\",\r\n        };\r\n        this.font = this.font?.toLocaleLowerCase();\r\n        this.setFont(textOpts, this.fontStyle);\r\n        return textOpts;\r\n    }\r\n\r\n\r\n    onEnable(): void {\r\n        super.onEnable();\r\n        this._didHandleTextRenderOnTop = false;\r\n        if (this.uiObject) {\r\n            // @ts-ignore\r\n            this.uiObject.onAfterUpdate = this.updateWidth.bind(this);\r\n        }\r\n    }\r\n\r\n    private createBlock(rt: RectTransform, hideOverflow: boolean, content: THREE.Object3D | Array<THREE.Object3D> | null, isTextIntermediate: boolean = false): ThreeMeshUI.Block | null {\r\n        //@ts-ignore\r\n        const opts: ThreeMeshUI.BlockOptions = {};\r\n        opts.hiddenOverflow = hideOverflow;\r\n        opts.interLine = (this.lineSpacing - 1) * this.fontSize * 1.333;\r\n        this.getAlignment(opts, isTextIntermediate);\r\n        const block = rt.createNewBlock(opts);\r\n        if (content) {\r\n            if (Array.isArray(content)) {\r\n                block.add(...content);\r\n            } else {\r\n                block.add(content);\r\n            }\r\n        }\r\n        return block;\r\n    }\r\n\r\n\r\n    private getAlignment(opts: ThreeMeshUI.BlockOptions | any, isTextIntermediate: boolean = false): ThreeMeshUI.BlockOptions {\r\n        if (!isTextIntermediate)\r\n            opts.contentDirection = \"row\";\r\n        switch (this.alignment) {\r\n            default:\r\n            case TextAnchor.UpperLeft:\r\n            case TextAnchor.UpperCenter:\r\n            case TextAnchor.UpperRight:\r\n                opts.justifyContent = \"start\";\r\n                break;\r\n            case TextAnchor.MiddleLeft:\r\n            case TextAnchor.MiddleCenter:\r\n            case TextAnchor.MiddleRight:\r\n                opts.justifyContent = \"center\";\r\n                break;\r\n            case TextAnchor.LowerLeft:\r\n            case TextAnchor.LowerCenter:\r\n            case TextAnchor.LowerRight:\r\n                opts.justifyContent = \"end\";\r\n                break;\r\n        }\r\n        switch (this.alignment) {\r\n            case TextAnchor.UpperLeft:\r\n            case TextAnchor.MiddleLeft:\r\n            case TextAnchor.LowerLeft:\r\n                opts.alignContent = isTextIntermediate ? \"left\" : \"top\";\r\n                break;\r\n            case TextAnchor.UpperCenter:\r\n            case TextAnchor.MiddleCenter:\r\n            case TextAnchor.LowerCenter:\r\n                opts.alignContent = \"center\";\r\n                break;\r\n            case TextAnchor.UpperRight:\r\n            case TextAnchor.MiddleRight:\r\n            case TextAnchor.LowerRight:\r\n                opts.alignContent = isTextIntermediate ? \"right\" : \"bottom\";\r\n                break;\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    private updateWidth() {\r\n        if (this.horizontalOverflow === HorizontalWrapMode.Overflow) {\r\n            setTimeout(() => {\r\n                if (!this._textMeshUi) return;\r\n                const container = this._textMeshUi[0].parent;\r\n                if (!container) return;\r\n                //@ts-ignore\r\n                if (container.lines) {\r\n                    //@ts-ignore\r\n                    let newWidth = container.lines.reduce((accu, line) => { return accu + line.width }, 0);\r\n                    //@ts-ignore\r\n                    newWidth += container.getFontSize() * 5;\r\n                    //@ts-ignore\r\n                    newWidth += (container.padding * 2 || 0);\r\n                    newWidth += this.fontSize * 1.5;\r\n                    // TODO: handle alignment!\r\n                    // const pos = container.position;\r\n                    // pos.x = this.gameObject.position.x * -.01 + newWidth * .5 - this.rect.sizeDelta.x * .005;\r\n                    // this._textMeshUi.set({ position: pos });\r\n                    //@ts-ignore\r\n                    container.set({ width: newWidth });\r\n                    this.ensureShadowComponentOwner();\r\n                }\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    private ensureShadowComponentOwner() {\r\n        if (this.shadowComponent) {\r\n            this.shadowComponent.traverse(c => {\r\n                if (c[$shadowDomOwner] === undefined)\r\n                    c[$shadowDomOwner] = this;\r\n            });\r\n        }\r\n    }\r\n\r\n    private createText(text: string, opts: any, richText: boolean) {\r\n        if (!text || text.length <= 0) return;\r\n        if (!this._textMeshUi)\r\n            this._textMeshUi = [];\r\n        if (!richText) {\r\n            // console.log(text)\r\n            const opt = { ...opts };\r\n            opt.content = text;\r\n            const element = new ThreeMeshUI.Text(opt);\r\n            this._textMeshUi.push(element);\r\n            if (this._textContainer) {\r\n                this._textContainer.add(element);\r\n            }\r\n        }\r\n        else {\r\n            let currentTag: TagInfo | null = this.getNextTag(text);\r\n            if (!currentTag) {\r\n                return this.createText(text, opts, false);\r\n            }\r\n            else if (currentTag.startIndex > 0) {\r\n                this.createText(text.substring(0, currentTag.startIndex), opts, false);\r\n            }\r\n            const stackArray: Array<TagStackEntry> = [];\r\n            while (currentTag) {\r\n                const next = this.getNextTag(text, currentTag.endIndex);\r\n                if (next) {\r\n                    const content = this.getText(text, currentTag, next);\r\n                    this.handleTag(currentTag, opts, stackArray);\r\n                    this.createText(content, opts, false);\r\n                }\r\n                else {\r\n                    const content = text.substring(currentTag.endIndex);\r\n                    this.handleTag(currentTag, opts, stackArray);\r\n                    this.createText(content, opts, false);\r\n                }\r\n                currentTag = next;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _didHandleTextRenderOnTop: boolean = false;\r\n    private handleTextRenderOnTop() {\r\n        if (this._didHandleTextRenderOnTop) return;\r\n        this._didHandleTextRenderOnTop = true;\r\n        this.startCoroutine(this.renderOnTopCoroutine());\r\n    }\r\n\r\n    // waits for all the text objects to be ready to set the render on top setting\r\n    private *renderOnTopCoroutine() {\r\n        if (!this.canvas) return;\r\n        const updatedRendering: boolean[] = [];\r\n        const canvas = this.canvas;\r\n        const settings = { renderOnTop: canvas.renderOnTop, depthWrite: canvas.depthWrite, doubleSided: canvas.doubleSided };\r\n        while (true) {\r\n            let isWaitingForElementToUpdate = false;\r\n            if (this._textMeshUi) {\r\n                for (let i = 0; i < this._textMeshUi.length; i++) {\r\n                    if (updatedRendering[i] === true) continue;\r\n                    isWaitingForElementToUpdate = true;\r\n                    const textMeshObject = this._textMeshUi[i];\r\n                    // text objects have this textContent which is the mesh\r\n                    // it is not ready immediately so we have to check if it exists \r\n                    // and only then setting the render on top property works\r\n                    if (!textMeshObject[\"textContent\"]) continue;\r\n                    updateRenderSettings(textMeshObject, settings);\r\n                    updatedRendering[i] = true;\r\n                    // console.log(textMeshObject);\r\n                }\r\n            }\r\n            if (!isWaitingForElementToUpdate) break;\r\n            yield;\r\n        }\r\n    }\r\n\r\n    private handleTag(tag: TagInfo, opts: any, stackArray: Array<TagStackEntry>) {\r\n        // console.log(tag);\r\n        if (!tag.isEndTag) {\r\n            if (tag.type.includes(\"color\")) {\r\n                const stackEntry = new TagStackEntry(tag, { fontColor: opts.fontColor });\r\n                stackArray.push(stackEntry);\r\n                if (tag.type.length > 6) // color=\r\n                {\r\n                    const col = tag.type.substring(6);\r\n                    opts.fontColor = getColorFromString(col);\r\n                }\r\n                else {\r\n                    // if it does not contain a color it is white\r\n                    opts.fontColor = new Color(1, 1, 1);\r\n                }\r\n            }\r\n            else if (tag.type == \"b\") {\r\n                const stackEntry = new TagStackEntry(tag, {\r\n                    fontFamily: opts.fontFamily,\r\n                    fontTexture: opts.fontTexture,\r\n                });\r\n                stackArray.push(stackEntry);\r\n                this.setFont(opts, FontStyle.Bold);\r\n            }\r\n            else if (tag.type == \"i\") {\r\n                const stackEntry = new TagStackEntry(tag, {\r\n                    fontFamily: opts.fontFamily,\r\n                    fontTexture: opts.fontTexture,\r\n                });\r\n                stackArray.push(stackEntry);\r\n                this.setFont(opts, FontStyle.Italic);\r\n            }\r\n        }\r\n        else {\r\n            if (stackArray.length > 0) {\r\n                const last = stackArray.pop();\r\n                if (last) {\r\n                    for (const key in last.previousValues) {\r\n                        const prevValue = last.previousValues[key];\r\n                        // console.log(key, val);\r\n                        opts[key] = prevValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getText(text: string, start: TagInfo, end: TagInfo) {\r\n        return text.substring(start.endIndex, end.startIndex);\r\n    }\r\n\r\n    private getNextTag(text: string, startIndex: number = 0): TagInfo | null {\r\n        const start = text.indexOf(\"<\", startIndex);\r\n        const end = text.indexOf(\">\", start);\r\n        if (start >= 0 && end >= 0) {\r\n            const tag = text.substring(start + 1, end);\r\n            return { type: tag, startIndex: start, endIndex: end + 1, isEndTag: tag.startsWith(\"/\") };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private setFont(opts: any, fontStyle: FontStyle) {\r\n        const name = this.getFontName(fontStyle);\r\n        let family = name;\r\n        if (!family?.endsWith(\"-msdf.json\")) family += \"-msdf.json\";\r\n        opts.fontFamily = family;\r\n\r\n        let texture = name;\r\n        if (!texture?.endsWith(\".png\")) texture += \".png\";\r\n        opts.fontTexture = texture;\r\n    }\r\n\r\n    private getFontName(_fontStyle: FontStyle): string | null {\r\n        if (!this.font) return null;\r\n        // switch (fontStyle) {\r\n        //     case FontStyle.Normal:\r\n        //         return this.font;\r\n        //     case FontStyle.Bold:\r\n        //         if (!this.font.includes(\"-bold\"))\r\n        //             return this.font + \"-bold\";\r\n        //     case FontStyle.Italic:\r\n        //         if (!this.font.includes(\"-italic\"))\r\n        //             return this.font + \"-italic\";\r\n        //     case FontStyle.BoldAndItalic:\r\n        //         if (!this.font.includes(\"-bold-italic\"))\r\n        //             return this.font + \"-bold-italic\";\r\n        // }\r\n        this.font = getPath(this.sourceId, this.font);\r\n        return this.font;\r\n    }\r\n}\r\n\r\nclass TagStackEntry {\r\n    tag: TagInfo;\r\n    previousValues: object;\r\n    constructor(tag: TagInfo, previousValues: object) {\r\n        this.tag = tag;\r\n        this.previousValues = previousValues;\r\n    }\r\n}\r\n\r\ndeclare type TagInfo = {\r\n    type: string,\r\n    startIndex: number,\r\n    endIndex: number,\r\n    isEndTag: boolean\r\n}\r\n\r\n\r\nfunction getColorFromString(str: string): Color {\r\n    if (str.startsWith(\"#\")) {\r\n        const hex = str.substring(1);\r\n        var bigint = parseInt(hex, 16);\r\n        const r = (bigint >> 16) & 255;\r\n        const g = (bigint >> 8) & 255;\r\n        const b = bigint & 255;\r\n        return new Color(r / 255, g / 255, b / 255);\r\n    }\r\n    switch (str) {\r\n        // basic colors // https://www.rapidtables.com/web/color/RGB_Color.html\r\n        case \"black\": return new Color(0, 0, 0);\r\n        case \"white\": return new Color(1, 1, 1);\r\n        case \"red\": return new Color(1, 0, 0);\r\n        case \"lime\": return new Color(0, 1, 0);\r\n        case \"blue\": return new Color(0, 0, 1);\r\n        case \"yellow\": return new Color(1, 1, 0);\r\n        case \"cyan\": return new Color(0, 1, 1);\r\n        case \"magenta\": return new Color(1, 0, 1);\r\n        case \"silver\": return new Color(0.75, 0.75, 0.75);\r\n        case \"gray\": return new Color(0.5, 0.5, 0.5);\r\n        case \"maroon\": return new Color(0.5, 0, 0);\r\n        case \"olive\": return new Color(0.5, 0.5, 0);\r\n        case \"green\": return new Color(0, 0.5, 0);\r\n        case \"purple\": return new Color(0.5, 0, 0.5);\r\n        case \"teal\": return new Color(0, 0.5, 0.5);\r\n        case \"navy\": return new Color(0, 0, 0.5);\r\n\r\n        // case \"maroon\": return new Color(0.5, 0, 0);\r\n        case \"darkred\": return new Color(0.54, 0, 0);\r\n        case \"brown\": return new Color(0.55, 0.27, 0);\r\n        case \"firebrick\": return new Color(0.69, 0.13, 0.13);\r\n        case \"crimson\": return new Color(0.86, 0.08, 0.24);\r\n        // case \"red\": return new Color(1, 0, 0);\r\n        case \"tomato\": return new Color(1, 0.39, 0.28);\r\n        case \"coral\": return new Color(1, 0.49, 0.31);\r\n        case \"indianred\": return new Color(0.6, 0.31, 0.51);\r\n        case \"lightcoral\": return new Color(0.94, 0.5, 0.5);\r\n        case \"darkorange\": return new Color(1, 0.55, 0);\r\n        case \"orange\": return new Color(1, 0.65, 0);\r\n        case \"gold\": return new Color(1, 0.84, 0);\r\n        case \"darkgoldenrod\": return new Color(0.72, 0.53, 0.04);\r\n        case \"goldenrod\": return new Color(0.85, 0.65, 0.13);\r\n        case \"palegoldenrod\": return new Color(0.93, 0.87, 0.67);\r\n        case \"darkkhaki\": return new Color(0.74, 0.7, 0.42);\r\n        case \"khaki\": return new Color(0.94, 0.9, 0.55);\r\n        // case \"olive\": return new Color(0.5, 0.5, 0);\r\n        // case \"yellow\": return new Color(1, 1, 0);\r\n        case \"yellowgreen\": return new Color(0.6, 0.8, 0.19);\r\n        case \"darkolivegreen\": return new Color(0.33, 0.42, 0.18);\r\n        case \"olivedrab\": return new Color(0.42, 0.56, 0.14);\r\n        case \"lawngreen\": return new Color(0.49, 0.99, 0.0);\r\n        case \"chartreuse\": return new Color(0.5, 1, 0);\r\n        case \"greenyellow\": return new Color(0.68, 1, 0.18);\r\n        case \"darkgreen\": return new Color(0, 0.39, 0);\r\n        // case \"green\": return new Color(0, 1, 0);\r\n        case \"forestgreen\": return new Color(0.13, 0.55, 0.13);\r\n        // case \"lime\": return new Color(0, 1, 0);\r\n        case \"limegreen\": return new Color(0.19, 0.80, 0.19);\r\n        case \"lightgreen\": return new Color(0.56, 0.93, 0.56);\r\n        case \"palegreen\": return new Color(0.59, 0.98, 0.59);\r\n        case \"darkseagreen\": return new Color(0.56, 0.74, 0.56);\r\n        case \"mediumspringgreen\": return new Color(0, 0.98, 0.6);\r\n        case \"springgreen\": return new Color(0, 1, 0.5);\r\n        case \"seagreen\": return new Color(0.18, 0.31, 0.31);\r\n        case \"mediumaquamarine\": return new Color(0.4, 0.8, 0.66);\r\n        case \"mediumseagreen\": return new Color(0.24, 0.70, 0.44);\r\n        case \"lightseagreen\": return new Color(0.13, 0.70, 0.67);\r\n        case \"darkslategray\": return new Color(0.18, 0.31, 0.31);\r\n        // case \"teal\": return new Color(0, 0.5, 0.5);\r\n        case \"darkcyan\": return new Color(0, 0.55, 0.55);\r\n        case \"aqua\": return new Color(0, 1, 1);\r\n        // case \"cyan\": return new Color(0, 1, 1);\r\n        case \"lightcyan\": return new Color(0.8, 1, 1);\r\n        case \"darkturquoise\": return new Color(0, 0.81, 0.82);\r\n        case \"turquoise\": return new Color(0, 0.82, 0.82);\r\n        case \"mediumturquoise\": return new Color(0.28, 0.82, 0.8);\r\n        case \"paleturquoise\": return new Color(0.68, 1, 0.93);\r\n        case \"aquamarine\": return new Color(0.5, 1, 0.83);\r\n        case \"powderblue\": return new Color(0.69, 0.88, 0.9);\r\n        case \"cadetblue\": return new Color(0.37, 0.62, 0.63);\r\n        case \"steelblue\": return new Color(0.27, 0.51, 0.71);\r\n        case \"cornflowerblue\": return new Color(0.39, 0.58, 0.93);\r\n        case \"deepskyblue\": return new Color(0, 0.7, 1);\r\n        case \"dodgerblue\": return new Color(0.12, 0.56, 1);\r\n        case \"lightblue\": return new Color(0.68, 0.85, 0.9);\r\n        case \"skyblue\": return new Color(0.53, 0.81, 0.92);\r\n        case \"lightskyblue\": return new Color(0.53, 0.81, 0.98);\r\n        case \"midnightblue\": return new Color(0.18, 0.18, 0.31);\r\n        // case \"navy\": return new Color(0, 0, 0.5);\r\n        case \"darkblue\": return new Color(0, 0, 0.55);\r\n        case \"mediumblue\": return new Color(0, 0, 0.82);\r\n        // case \"blue\": return new Color(0, 0, 1);\r\n        case \"royalblue\": return new Color(0.25, 0.41, 0.88);\r\n        case \"blueviolet\": return new Color(0.54, 0.17, 0.89);\r\n        case \"indigo\": return new Color(0.29, 0, 0.51);\r\n        case \"darkslateblue\": return new Color(0.28, 0.24, 0.55);\r\n        case \"slateblue\": return new Color(0.42, 0.35, 0.80);\r\n        case \"mediumslateblue\": return new Color(0.48, 0.41, 0.9);\r\n        case \"mediumpurple\": return new Color(0.58, 0.44, 0.86);\r\n        case \"darkmagenta\": return new Color(0.55, 0, 0.55);\r\n        case \"darkviolet\": return new Color(0.58, 0, 0.83);\r\n        case \"darkorchid\": return new Color(0.6, 0.2, 0.8);\r\n        case \"mediumorchid\": return new Color(0.73, 0.33, 0.83);\r\n        // case \"purple\": return new Color(0.5, 0, 0.5);\r\n        case \"thistle\": return new Color(0.84, 0.75, 0.85);\r\n        case \"plum\": return new Color(0.87, 0.63, 0.87);\r\n        case \"violet\": return new Color(0.93, 0.51, 0.93);\r\n        // case \"magenta\": return new Color(1, 0, 1);\r\n        case \"fuchsia\": return new Color(1, 0, 1);\r\n        case \"orchid\": return new Color(0.85, 0.44, 0.84);\r\n        case \"mediumvioletred\": return new Color(0.78, 0.08, 0.52);\r\n        case \"palevioletred\": return new Color(0.86, 0.44, 0.58);\r\n        case \"hotpink\": return new Color(1, 0.4, 0.71);\r\n        case \"deeppink\": return new Color(1, 0.08, 0.58);\r\n        case \"lightpink\": return new Color(1, 0.71, 0.76);\r\n        case \"pink\": return new Color(1, 0.75, 0.78);\r\n        case \"antiquewhite\": return new Color(0.98, 0.92, 0.84);\r\n        case \"beige\": return new Color(0.96, 0.96, 0.86);\r\n        case \"bisque\": return new Color(1, 0.89, 0.77);\r\n        case \"blanchedalmond\": return new Color(1, 0.92, 0.82);\r\n        case \"wheat\": return new Color(0.96, 0.87, 0.87);\r\n        case \"cornsilk\": return new Color(1, 0.97, 0.86);\r\n        case \"lemonchiffon\": return new Color(1, 0.98, 0.8);\r\n        case \"lightgoldenrodyellow\": return new Color(0.98, 0.98, 0.82);\r\n        case \"lightyellow\": return new Color(1, 1, 0.8);\r\n        case \"saddlebrown\": return new Color(0.55, 0.27, 0.07);\r\n        case \"sienna\": return new Color(0.63, 0.32, 0.18);\r\n        case \"chocolate\": return new Color(0.82, 0.41, 0.12);\r\n        case \"peru\": return new Color(0.82, 0.52, 0.25);\r\n        case \"sandybrown\": return new Color(0.96, 0.64, 0.38);\r\n        case \"burlywood\": return new Color(0.87, 0.72, 0.53);\r\n        case \"tan\": return new Color(0.82, 0.71, 0.55);\r\n        case \"rosybrown\": return new Color(0.74, 0.56, 0.56);\r\n        case \"moccasin\": return new Color(1, 0.89, 0.71);\r\n        case \"navajowhite\": return new Color(1, 0.87, 0.68);\r\n        case \"peachpuff\": return new Color(1, 0.85, 0.73);\r\n        case \"mistyrose\": return new Color(1, 0.89, 0.88);\r\n        case \"lavenderblush\": return new Color(1, 0.94, 0.93);\r\n        case \"linen\": return new Color(0.98, 0.94, 0.9);\r\n        case \"oldlace\": return new Color(0.99, 0.96, 0.9);\r\n        case \"papayawhip\": return new Color(1, 0.94, 0.84);\r\n        case \"seashell\": return new Color(1, 0.96, 0.93);\r\n        case \"mintcream\": return new Color(0.98, 1, 0.98);\r\n        case \"slategray\": return new Color(0.44, 0.5, 0.56);\r\n        case \"lightslategray\": return new Color(0.47, 0.53, 0.6);\r\n        case \"lightsteelblue\": return new Color(0.69, 0.77, 0.87);\r\n        case \"lavender\": return new Color(0.9, 0.9, 0.98);\r\n        case \"floralwhite\": return new Color(1, 0.98, 0.98);\r\n        case \"aliceblue\": return new Color(0.94, 0.97, 1);\r\n        case \"ghostwhite\": return new Color(0.97, 0.97, 1);\r\n        case \"honeydew\": return new Color(0.94, 1, 0.94);\r\n        case \"ivory\": return new Color(1, 1, 0.94);\r\n        case \"azure\": return new Color(0.94, 1, 1);\r\n        case \"snow\": return new Color(1, 0.98, 0.98);\r\n        // case \"black\": return new Color(0, 0, 0);\r\n        case \"dimgray\": return new Color(0.4, 0.4, 0.4);\r\n        // case \"gray\": return new Color(0.5, 0.5, 0.5);\r\n        case \"darkgray\": return new Color(0.66, 0.66, 0.66);\r\n        // case \"silver\": return new Color(0.75, 0.75, 0.75);\r\n        case \"lightgray\": return new Color(0.83, 0.83, 0.83);\r\n        case \"gainsboro\": return new Color(0.86, 0.86, 0.86);\r\n        case \"whitesmoke\": return new Color(0.96, 0.96, 0.96);\r\n\r\n    }\r\n    return new Color(1, 1, 1);\r\n}\r\n\r\n// const anyTag = new RegExp('<.+?>', 'g');\r\n// const regex = new RegExp('<(?<type>.+?)>(?<text>.+?)<\\/.+?>', 'g');\r\n", "import { Behaviour, GameObject } from \"../Component\";\r\nimport { IPointerClickHandler, IPointerEventHandler } from \"./PointerEvents\";\r\nimport { FrameEvent } from \"../../engine/engine_setup\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\nimport { Text } from \"./Text\";\r\nimport { getParam } from \"../../engine/engine_utils\";\r\nimport { EventList } from \"../EventList\";\r\n\r\nconst debug = getParam(\"debuginputfield\");\r\n\r\nexport class InputField extends Behaviour implements IPointerEventHandler {\r\n\r\n    get text() : string {\r\n        return this.textComponent?.text ?? \"\";\r\n    }\r\n\r\n    get isFocused() {\r\n        return InputField.active === this;\r\n    }\r\n\r\n    @serializable(Text)\r\n    private textComponent?: Text;\r\n\r\n    @serializable(Text)\r\n    private placeholder?: Text;\r\n\r\n    @serializable(EventList)\r\n    onValueChanged?: EventList;\r\n\r\n    @serializable(EventList)\r\n    onEndEdit?: EventList;\r\n\r\n\r\n    private static active: InputField | null = null;\r\n    private static activeTime: number = -1;\r\n    private static htmlField: HTMLInputElement | null = null;\r\n\r\n    private inputEventFn: any;\r\n\r\n    start() {\r\n        if (debug)\r\n            console.log(this.name, this);\r\n    }\r\n\r\n    onEnable() {\r\n        if (!InputField.htmlField) {\r\n            InputField.htmlField = document.createElement(\"input\");\r\n            InputField.htmlField.classList.add(\"ar\");\r\n            document.body.appendChild(InputField.htmlField);\r\n        }\r\n        if (!this.inputEventFn) {\r\n            this.inputEventFn = this.onInput.bind(this);\r\n        }\r\n        // InputField.htmlField.addEventListener(\"input\", this.mobileInputEventListener);\r\n        InputField.htmlField.addEventListener(\"keyup\", this.inputEventFn);\r\n        // InputField.htmlField.addEventListener(\"change\", this.inputEventFn);\r\n        if (this.placeholder && this.textComponent?.text.length) {\r\n            GameObject.setActive(this.placeholder.gameObject, false);\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        // InputField.htmlField?.removeEventListener(\"input\", this.mobileInputEventListener);\r\n        InputField.htmlField?.removeEventListener(\"keyup\", this.inputEventFn);\r\n        // InputField.htmlField?.removeEventListener(\"change\", this.inputEventFn);\r\n        this.onDeselected();\r\n    }\r\n\r\n    onPointerClick(_args) {\r\n        if (debug) console.log(\"CLICK\", _args, InputField.active);\r\n        InputField.activeTime = this.context.time.time;\r\n        if (InputField.active !== this) {\r\n            this.startCoroutine(this.activeLoop(), FrameEvent.LateUpdate);\r\n        }\r\n        this.selectInputField();\r\n    }\r\n\r\n    private *activeLoop() {\r\n        this.onSelected();\r\n        while (InputField.active === this) {\r\n            if (this.context.input.getPointerUp(0)) {\r\n                if (this.context.time.time - InputField.activeTime > 0.2) {\r\n                    break;\r\n                }\r\n            }\r\n            this.setTextFromInputField();\r\n            yield;\r\n        }\r\n        this.onDeselected();\r\n    }\r\n\r\n    private onSelected() {\r\n        if (InputField.active === this) return;\r\n        if (debug) console.log(\"Select\", this.name, this, InputField.htmlField, this.context.isInXR, this.context.arOverlayElement, this.textComponent?.text, InputField.htmlField?.value);\r\n\r\n        InputField.active?.onDeselected();\r\n        InputField.active = this;\r\n\r\n        if (this.placeholder)\r\n            GameObject.setActive(this.placeholder.gameObject, false);\r\n\r\n        if (InputField.htmlField) {\r\n\r\n            InputField.htmlField.value = this.textComponent?.text || \"\";\r\n            if (debug)\r\n                console.log(\"set input field value\", InputField.htmlField.value);\r\n\r\n            if (this.context.isInXR) {\r\n                const overlay = this.context.arOverlayElement;\r\n                if (overlay) {\r\n                    InputField.htmlField.style.width = \"0px\";\r\n                    InputField.htmlField.style.height = \"0px\";\r\n                    overlay.append(InputField.htmlField)\r\n                }\r\n            }\r\n\r\n            this.selectInputField();\r\n        }\r\n    }\r\n\r\n    private onDeselected() {\r\n        if (InputField.active !== this) return;\r\n        InputField.active = null;\r\n\r\n        if (debug) console.log(\"Deselect\", this.name, this);\r\n        if (InputField.htmlField) {\r\n            InputField.htmlField.blur();\r\n            document.body.append(InputField.htmlField);\r\n            InputField.htmlField.style.width = \"\";\r\n            InputField.htmlField.style.height = \"\";\r\n        }\r\n        if (this.placeholder && (!this.textComponent || this.textComponent.text.length <= 0))\r\n            GameObject.setActive(this.placeholder.gameObject, true);\r\n\r\n        this.onEndEdit?.invoke();\r\n    }\r\n\r\n\r\n    private onInput(evt: KeyboardEvent) {\r\n        if (InputField.active !== this) return;\r\n        if (debug)\r\n            console.log(evt.code, evt, InputField.htmlField?.value, this.textComponent?.text);\r\n        if (evt.code === \"Escape\" || evt.code === \"Enter\") {\r\n            this.onDeselected();\r\n            return;\r\n        }\r\n        if (InputField.htmlField) {\r\n            if (this.textComponent) {\r\n                this.setTextFromInputField();\r\n                if (this.placeholder) {\r\n                    GameObject.setActive(this.placeholder.gameObject, this.textComponent.text.length <= 0);\r\n                }\r\n            }\r\n            this.selectInputField();\r\n        }\r\n        // switch (evt.inputType) {\r\n        //     case \"insertCompositionText\":\r\n        //         this.appendLetter(evt.data?.charAt(evt.data.length - 1) || null);\r\n        //         break;\r\n        //     case \"insertText\":\r\n        //         console.log(evt.data);\r\n        //         this.appendLetter(evt.data);\r\n        //         break;\r\n        //     case \"deleteContentBackward\":\r\n        //         this.deleteLetter();\r\n        //         break;\r\n        // }\r\n    }\r\n\r\n    private setTextFromInputField() {\r\n        if (this.textComponent && InputField.htmlField) {\r\n            if (this.textComponent.text !== InputField.htmlField.value) {\r\n                if (debug)\r\n                    console.log(\"VALUE CHANGED\");\r\n                const oldValue = this.textComponent.text;\r\n                const newValue = InputField.htmlField.value;\r\n                this.onValueChanged?.invoke(newValue, oldValue);\r\n            }\r\n            this.textComponent.text = InputField.htmlField.value;\r\n        }\r\n    }\r\n\r\n    private selectInputField() {\r\n        if (InputField.htmlField) {\r\n            InputField.htmlField.setSelectionRange(InputField.htmlField.value.length, InputField.htmlField.value.length);\r\n            InputField.htmlField.focus();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // private static _lastDeletionTime: number = 0;\r\n    // private static _lastKeyInputTime: number = 0;\r\n\r\n    // TODO: support modifiers, refactor to not use backspace as string etc\r\n    // private handleKey(key: string | null) {\r\n    //     if (!this.textComponent) return;\r\n    //     if (!key) return;\r\n\r\n    //     InputField._lastKey = key || \"\";\r\n\r\n    //     const text = this.textComponent.text;\r\n    //     if (debug)\r\n    //         console.log(key, text);\r\n    //     switch (key) {\r\n    //         case \"Backspace\":\r\n    //             this.deleteLetter();\r\n    //             break;\r\n\r\n    //         default:\r\n    //             this.appendLetter(key);\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n    // private appendLetter(key: string | null) {\r\n    //     if (this.textComponent && key) {\r\n    //         const timeSinceLastInput = this.context.time.time - InputField._lastKeyInputTime;\r\n    //         if (key.length === 1 && (this.context.input.getKeyDown() === key || timeSinceLastInput > .1)) {\r\n    //             this.textComponent.text += key;\r\n    //             InputField._lastKeyInputTime = this.context.time.time;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // private deleteLetter() {\r\n    //     if (this.textComponent) {\r\n    //         const text = this.textComponent.text;\r\n    //         if (text.length > 0 && this.context.time.time - InputField._lastDeletionTime > 0.05) {\r\n    //             this.textComponent.text = text.slice(0, -1);\r\n    //             InputField._lastDeletionTime = this.context.time.time;\r\n    //         }\r\n    //     }\r\n    // }\r\n}", "import * as ThreeMeshUI from 'three-mesh-ui'\r\nimport * as THREE from 'three'\r\nimport { BaseUIComponent, includesDir } from './BaseUIComponent';\r\nimport { Text } from './Text';\r\nimport { getWorldScale } from '../../engine/engine_three_utils';\r\nimport { RectTransform } from './RectTransform';\r\nimport { GameObject } from '../Component';\r\n\r\n\r\nenum KeymapOption {\r\n    fr,\r\n    ru,\r\n    de,\r\n    es,\r\n    el,\r\n    nord,\r\n    eng\r\n}\r\n\r\n\r\n// see https://github.com/felixmariotto/three-mesh-ui/blob/master/examples/keyboard.js\r\nexport class Keyboard extends BaseUIComponent {\r\n\r\n    font?: string;\r\n    text?: Text;\r\n    keymap?: KeymapOption;\r\n    padding?: number;\r\n    margin?: number;\r\n    fontSize?: number;\r\n    borderRadius?: number;\r\n\r\n\r\n    private colors = {\r\n        keyboardBack: 0x858585,\r\n        panelBack: 0x262626,\r\n        button: 0x363636,\r\n        hovered: 0x1c1c1c,\r\n        selected: 0x109c5d,\r\n    };\r\n\r\n\r\n    awake() {\r\n        super.awake();\r\n        const langKey = KeymapOption[this.keymap || KeymapOption.eng];\r\n        this.makeKeyboard(langKey);\r\n    }\r\n    onEnable(): void {\r\n        this.addShadowComponent(this.keyboard);\r\n    }\r\n    onDisable(): void {\r\n        this.removeShadowComponent();\r\n    }\r\n\r\n    private keyboard: ThreeMeshUI.Keyboard | null = null!;\r\n    private _lastKeyPressed: any;\r\n    private _lastKeyPressedStartTime: number = 0;\r\n    private _lastKeyPressedTime: number = 0;\r\n\r\n    private makeKeyboard(language?: string) {\r\n\r\n        if (!language && !navigator.language) {\r\n            language = \"en\";\r\n        }\r\n\r\n        const fontName = this.font ? this.font : \"arial\";\r\n\r\n        const rt = GameObject.getComponent(this.gameObject, RectTransform);\r\n        if(!rt){\r\n            console.error(\"Missing rect transform, please add this component inside a canvas\");\r\n            return;\r\n        }\r\n        const opts = {\r\n            ...rt.getBasicOptions(),\r\n            margin: this.margin || 0,\r\n            padding: this.padding || 0,\r\n            language: language,\r\n            fontFamily: includesDir + \"/\" + fontName + \"-msdf.json\",\r\n            fontTexture: includesDir + \"/\" + fontName + \".png\",\r\n            fontSize: this.fontSize || 6, // fontSize will propagate to the keys blocks\r\n            backgroundColor: new THREE.Color(this.colors.keyboardBack),\r\n            backspaceTexture: includesDir + '/backspace.png',\r\n            shiftTexture: includesDir + '/shift.png',\r\n            enterTexture: includesDir + '/enter.png',\r\n            borderRadius: this.borderRadius || 0,\r\n            autoLayout: false,\r\n\r\n        };\r\n        // const ws = getWorldScale(this.gameObject);\r\n        const scale = this.gameObject.scale;\r\n        opts.width *= this.gameObject.scale.x;\r\n        opts.height *= this.gameObject.scale.y;\r\n        opts.fontSize *= Math.max(scale.x, scale.y);\r\n        this.keyboard = new ThreeMeshUI.Keyboard(opts);\r\n\r\n        // const scale = this.gameObject.scale;\r\n        // const max = Math.max(scale.x, scale.y, scale.z);\r\n        this.gameObject.scale.set(1, 1, 1);\r\n\r\n        //@ts-ignore\r\n        this.keyboard.keys.forEach((key) => {\r\n\r\n            key.setupState({\r\n                state: 'normal',\r\n                attributes: {\r\n                    offset: 0.003,\r\n                    backgroundColor: new THREE.Color(this.colors.button),\r\n                    backgroundOpacity: 1\r\n                }\r\n            });\r\n            key.setState(\"normal\");\r\n\r\n            key.setupState({\r\n                state: 'hovered',\r\n                attributes: {\r\n                    offset: 0.3,\r\n                    backgroundColor: new THREE.Color(this.colors.hovered),\r\n                    backgroundOpacity: 1\r\n                }\r\n            });\r\n\r\n            key.setupState({\r\n                state: 'pressed',\r\n                attributes: {\r\n                    offset: 0.1,\r\n                    backgroundColor: new THREE.Color(this.colors.selected),\r\n                    backgroundOpacity: 1\r\n                },\r\n                // triggered when the user clicked on a keyboard's key\r\n                onSet: () => {\r\n                    const input = key.info.input;\r\n                    const cmd = key.info.command;\r\n                    if (this._lastKeyPressed !== input) {\r\n                        this._lastKeyPressedStartTime = this.context.time.time;\r\n                    }\r\n                    else if (this.context.time.time - this._lastKeyPressedTime > .05) {\r\n                        // there was probably a key up inbetween\r\n                        this._lastKeyPressedStartTime = this.context.time.time;\r\n                    }\r\n                    else if (this.context.time.time - this._lastKeyPressedStartTime < .5\r\n                        || cmd == \"switch\"\r\n                        || cmd == \"shift\"\r\n                        || cmd == \"switch-set\"\r\n                    ) {\r\n                        this._lastKeyPressedTime = this.context.time.time;\r\n                        return;\r\n                    }\r\n                    this._lastKeyPressedTime = this.context.time.time;\r\n                    this._lastKeyPressed = input;\r\n                    // if the key have a command (eg: 'backspace', 'switch', 'enter'...)\r\n                    // special actions are taken\r\n                    if (cmd) {\r\n                        switch (cmd) {\r\n                            // switch between panels\r\n                            case 'switch':\r\n                                //@ts-ignore\r\n                                this.keyboard.setNextPanel();\r\n                                break;\r\n\r\n                            // switch between panel charsets (eg: russian/english)\r\n                            case 'switch-set':\r\n                                //@ts-ignore\r\n                                this.keyboard.setNextCharset();\r\n                                break;\r\n\r\n                            case 'enter':\r\n                                this.tryAppend('\\n');\r\n                                break;\r\n\r\n                            case 'space':\r\n                                this.tryAppend(' ');\r\n                                break;\r\n\r\n                            case 'backspace':\r\n                                //@ts-ignore\r\n                                if (!this.text?.text?.length) break\r\n                                if (this.text?.text)\r\n                                    this.text.text = this.text.text.substring(0, this.text.text.length - 1) || \"\"\r\n                                break;\r\n\r\n                            case 'shift':\r\n                                //@ts-ignore\r\n                                this.keyboard.toggleCase();\r\n                                break;\r\n\r\n                        };\r\n\r\n                        // print a glyph, if any\r\n                    } else if (key.info.input !== undefined) {\r\n                        this.tryAppend(key.info.input);\r\n                    };\r\n\r\n                }\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    private tryAppend(char: string) {\r\n        if (this.text) {\r\n            this.text.text += char;\r\n            this.markDirty();\r\n        }\r\n    }\r\n}", "import { Behaviour } from \"../Component\";\r\n\r\nexport class LayoutGroup extends Behaviour {\r\n    reverseArrangement: boolean = false;\r\n}\r\n\r\nexport class VerticalLayoutGroup extends LayoutGroup {\r\n\r\n}\r\n\r\nexport class HorizontalLayoutGroup extends LayoutGroup {\r\n\r\n}\r\n\r\nexport class GridLayoutGroup extends LayoutGroup {\r\n\r\n}", "import { Camera } from \"three\";\r\nimport { RaycastOptions } from \"../../engine/engine_physics\";\r\nimport { Behaviour } from \"../Component\";\r\nimport { EventSystem } from \"./EventSystem\";\r\n\r\nexport class Raycaster extends Behaviour {\r\n    awake(): void {\r\n        EventSystem.createIfNoneExists(this.context);\r\n    }\r\n\r\n    onEnable(): void {\r\n        EventSystem.instance?.register(this);\r\n    }\r\n\r\n    onDisable(): void {\r\n        EventSystem.instance?.unregister(this);\r\n    }\r\n\r\n    performRaycast(_opts: RaycastOptions | null = null): THREE.Intersection[] | null {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class ObjectRaycaster extends Raycaster {\r\n    private targets: THREE.Object3D[] | null = null;\r\n    private raycastHits: THREE.Intersection[] = [];\r\n\r\n    start(): void {\r\n        this.targets = [this.gameObject];\r\n    }\r\n\r\n    performRaycast(opts: RaycastOptions | null = null): THREE.Intersection[] | null {\r\n        if (!this.targets) return null;\r\n        opts ??= new RaycastOptions();\r\n        opts.targets = this.targets;\r\n        opts.results = this.raycastHits;\r\n        const hits = this.context.physics.raycast(opts);\r\n        // console.log(this.context.alias, hits);\r\n        return hits;\r\n    }\r\n}\r\n\r\nexport class GraphicRaycaster extends ObjectRaycaster {\r\n    // eventCamera: Camera | null = null;\r\n    // ignoreReversedGraphics: boolean = false;\r\n    // rootRaycaster: GraphicRaycaster | null = null;\r\n}", "import * as THREE from 'three'\r\nimport { HTMLMesh } from 'three/examples/jsm/interactive/HTMLMesh.js';\r\nimport { InteractiveGroup } from 'three/examples/jsm/interactive/InteractiveGroup.js';\r\nimport { getWorldEuler, getWorldRotation, setWorldRotationXYZ } from '../../engine/engine_three_utils';\r\nimport { Behaviour } from '../Component';\r\n\r\nexport class SpatialHtml extends Behaviour {\r\n\r\n    id: string | null = null;\r\n    keepAspect: boolean = false;\r\n\r\n    start() {\r\n        if (!this.id || !this.context.mainCamera) return;\r\n        const div = document.getElementById(this.id);\r\n        if (!div) {\r\n            console.warn(\"Could not find element with id \\\"\" + this.id + \"\\\"\");\r\n            return;\r\n        }\r\n        div.style.display = \"block\";\r\n        div.style.visibility = \"hidden\";\r\n\r\n        const group = new InteractiveGroup(this.context.renderer, this.context.mainCamera!);\r\n        this.gameObject.add(group);\r\n\r\n        const mesh = new HTMLMesh(div);\r\n        group.add(mesh);\r\n        mesh.visible = false;\r\n\r\n        console.log(mesh);\r\n        const mat = mesh.material as THREE.MeshBasicMaterial;\r\n        mat.transparent = true;\r\n\r\n        // need to wait one frame for it to render to get bounds\r\n        setTimeout(() => {\r\n            mesh.visible = true;\r\n            // align box to get bounding box\r\n            const rot = getWorldRotation(this.gameObject).clone();\r\n            setWorldRotationXYZ(this.gameObject, 0, 0, 0);\r\n            this.gameObject.updateMatrixWorld();\r\n            const aabb = new THREE.Box3();\r\n            aabb.setFromObject(group);\r\n            this.setWorldRotation(rot.x, rot.y, rot.z);\r\n            // apply bounds\r\n            const width = aabb.max.x - aabb.min.x;\r\n            const height = aabb.max.y - aabb.min.y;\r\n            if (this.keepAspect) {\r\n                const aspect = width / height;\r\n                if (width > height) {\r\n                    mesh.scale.set(1 / width, 1 / height / aspect, 1);\r\n                }\r\n                else {\r\n                    mesh.scale.set(1 / width * aspect, 1 / height, 1);\r\n                }\r\n            }\r\n            else {\r\n                mesh.scale.set(1 / width, 1 / height, 1);\r\n            }\r\n            // TODO: replace with world scale once we have that\r\n            const factor = this.gameObject.scale;\r\n            mesh.scale.multiply(factor);\r\n        }, 1);\r\n    }\r\n}\r\n", "import { Behaviour, GameObject } from \"../../Component\";\r\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter.js';\r\nimport GLTFMeshGPUInstancingExtension from '../../../include/three/EXT_mesh_gpu_instancing_exporter.js';\r\nimport { Renderer } from \"../../Renderer\";\r\nimport { Object3D, Vector3 } from \"three\";\r\nimport { SerializationContext } from \"../../../engine/engine_serialization_core\";\r\nimport { NEEDLE_components } from \"../../../engine/extensions/NEEDLE_components\";\r\nimport { getWorldPosition } from \"../../../engine/engine_three_utils\";\r\nimport { BoxHelperComponent } from \"../../BoxHelperComponent\";\r\nimport { AnimationClip } from \"three\";\r\n\r\n\r\ndeclare type ExportOptions = {\r\n    binary: boolean,\r\n    pivot?: THREE.Vector3\r\n}\r\n\r\nexport const componentsArrayExportKey = \"$___Export_Components\";\r\n\r\n// @generate-component\r\nexport class GltfExportBox extends BoxHelperComponent {\r\n    sceneRoot?: THREE.Object3D;\r\n\r\n    start() {\r\n        this.startCoroutine(this.updateGltfBox());\r\n    }\r\n\r\n    *updateGltfBox() {\r\n        while (true) {\r\n            for (let i = 0; i < 10; i++) yield;\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport class GltfExport extends Behaviour {\r\n    binary: boolean = true;\r\n    objects: Object3D[] = [];\r\n\r\n    private exporter?: GLTFExporter;\r\n    private ext?: NEEDLE_components;\r\n\r\n    async exportNow(name: string) {\r\n        console.log(\"DO EXPORT\", this.objects);\r\n        const opts = { binary: this.binary, pivot: GltfExport.calculateCenter(this.objects) };\r\n        const res = await this.export(this.objects, opts);\r\n\r\n        if (!this.binary) {\r\n            if (!name.endsWith(\".gltf\"))\r\n                name += \".gltf\";\r\n        }\r\n        else if (!name.endsWith(\".glb\"))\r\n            name += \".glb\";\r\n        if (this.binary)\r\n            GltfExport.saveArrayBuffer(res, name);\r\n        else\r\n            GltfExport.saveJson(res, name);\r\n    }\r\n\r\n    async export(objectsToExport: Object3D[], opts?: ExportOptions): Promise<any> {\r\n\r\n        if (objectsToExport === null || objectsToExport.length <= 0) {\r\n            console.log(\"no objects set to export\");\r\n            return;\r\n        }\r\n\r\n        if (!this.exporter) {\r\n            // Instantiate a exporter\r\n            this.exporter = new GLTFExporter();\r\n            //@ts-ignore\r\n            this.exporter.register(writer => new GLTFMeshGPUInstancingExtension(writer));\r\n\r\n            this.ext = new NEEDLE_components();\r\n            //@ts-ignore\r\n            this.ext.registerExport(this.exporter);\r\n        }\r\n\r\n        GltfExport.filterTopmostParent(objectsToExport);\r\n\r\n        // TODO export only worldglb BUT exclude \"World\" child which contains all build tools\r\n        // TODO add filtering / tags for what to export and what not\r\n\r\n        // https://threejs.org/docs/#examples/en/exporters/GLTFExporter\r\n        const options = {\r\n            trs: false,\r\n            onlyVisible: true,\r\n            truncateDrawRange: false,\r\n            binary: opts?.binary ?? true,\r\n            maxTextureSize: Infinity, // To prevent NaN value,\r\n            embedImages: true,\r\n            includeCustomExtensions: true,\r\n            animations: GltfExport.collectAnimations(objectsToExport),\r\n        };\r\n\r\n        // hide objects that we don't want to export\r\n\r\n        const exportScene = new Object3D();\r\n        // set the pivot position\r\n        if (opts?.pivot) exportScene.position.sub(opts.pivot);\r\n        // console.log(exportScene.position);\r\n\r\n        // add objects for export\r\n        console.log(\"EXPORT\", objectsToExport);\r\n        objectsToExport.forEach(obj => {\r\n            if (obj) {\r\n                // adding directly does not require us to change parents and mess with the hierarchy actually\r\n                exportScene.children.push(obj);\r\n                // TODO: we should probably be doing this before writing nodes?? apply world scale, position, rotation etc for export only\r\n                obj.matrixAutoUpdate = false;\r\n                obj.matrix.copy(obj.matrixWorld);\r\n                // disable instancing\r\n                GameObject.getComponentsInChildren(obj, Renderer).forEach(r => {\r\n                    if (GameObject.isActiveInHierarchy(r.gameObject)) r.setInstancingEnabled(false)\r\n                });\r\n            }\r\n        });\r\n\r\n        const serializationContext = new SerializationContext(exportScene);\r\n        this.ext!.context = serializationContext;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            try {\r\n                // Parse the input and generate the glTF output\r\n                this.exporter?.parse(\r\n                    exportScene,\r\n                    // called when the gltf has been generated\r\n                    res => {\r\n                        cleanup();\r\n                        resolve(res);\r\n                    },\r\n                    // called when there is an error in the generation\r\n                    err => {\r\n                        cleanup();\r\n                        reject(err);\r\n                    },\r\n                    //@ts-ignore\r\n                    options\r\n                );\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                reject(err);\r\n            }\r\n            finally {\r\n                console.log(\"FINALLY\");\r\n            }\r\n        });\r\n\r\n        function cleanup() {\r\n            objectsToExport.forEach(obj => {\r\n                if (!obj) return;\r\n                obj.matrixAutoUpdate = true;\r\n                GameObject.getComponentsInChildren(obj, Renderer).forEach(r => {\r\n                    if (GameObject.isActiveInHierarchy(r.gameObject)) r.setInstancingEnabled(false)\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    private static saveArrayBuffer(buffer, filename) {\r\n        this.save(new Blob([buffer], { type: 'application/octet-stream' }), filename);\r\n    }\r\n\r\n    private static saveJson(json, filename) {\r\n        this.save(\"data: text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(json)), filename);\r\n    }\r\n\r\n    private static save(blob, filename) {\r\n        const link = document.createElement('a');\r\n        link.style.display = 'none';\r\n        document.body.appendChild(link); // Firefox workaround, see #6594\r\n        if (typeof blob === \"string\")\r\n            link.href = blob;\r\n        else\r\n            link.href = URL.createObjectURL(blob);\r\n        link.download = filename;\r\n        link.click();\r\n        link.remove();\r\n        // console.log(link.href);\r\n        // URL.revokeObjectURL( url ); breaks Firefox...\r\n    }\r\n\r\n    private static collectAnimations(objs: THREE.Object3D[], target?: Array<AnimationClip>): Array<AnimationClip> {\r\n        target = target || [];\r\n        for (const obj of objs) {\r\n            if (!obj) continue;\r\n            obj.traverseVisible(o => {\r\n                if (o.animations && o.animations.length > 0)\r\n                    target!.push(...o.animations);\r\n            });\r\n        }\r\n        return target;\r\n    }\r\n\r\n\r\n    private static calculateCenter(objs: THREE.Object3D[], target?: Vector3): Vector3 {\r\n        const center = target || new Vector3();\r\n        center.set(0, 0, 0);\r\n        objs.forEach(obj => {\r\n            center.add(getWorldPosition(obj));\r\n        });\r\n        console.log(center);\r\n        center.divideScalar(objs.length);\r\n        // center.y -= 1;\r\n        return center;\r\n    }\r\n\r\n    private static filterTopmostParent(objs: THREE.Object3D[]) {\r\n        if (objs.length <= 0) return;\r\n        for (let index = 0; index < objs.length; index++) {\r\n            let obj = objs[index];\r\n            if (!obj) {\r\n                objs.splice(index, 1);\r\n                index--;\r\n                continue;\r\n            }\r\n            // loop hierarchy up and kick object if any of its parents is already in this list\r\n            // because then this object will already be exported (and we dont want to export it)\r\n            while (obj.parent) {\r\n                if (objs.includes(obj.parent)) {\r\n                    // console.log(\"FILTER\", objs[index]);\r\n                    objs.splice(index, 1);\r\n                    index--;\r\n                    break;\r\n                }\r\n                obj = obj.parent;\r\n            }\r\n        }\r\n    }\r\n\r\n}", "/**\r\n * Mesh GPU Instancing extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\r\n */\r\n\r\n import {\r\n\tBufferAttribute,\r\n\tMatrix4,\r\n\tVector3,\r\n\tQuaternion,\r\n} from 'three';\r\n\r\nexport default class GLTFMeshGPUInstancingExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'EXT_mesh_gpu_instancing';\r\n\r\n\t}\r\n\r\n\twriteNode( node, nodeDef ) {\r\n\r\n\t\tif(node.constructor.name !== \"InstancedMesh\") return;\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\t\tconst extensionDef = {};\r\n\t\t\r\n\t\tnodeDef.extensions = nodeDef.extensions || {};\r\n\t\tnodeDef.extensions[ this.name ] = extensionDef;\r\n\r\n\t\tlet mat = new Matrix4();\r\n\t\tconst pos0 = new Array();\r\n\t\tconst rot0 = new Array();\r\n\t\tconst scl0 = new Array();\r\n\r\n\t\tfor(let i = 0; i < node.count; i++)\r\n\t\t{\r\n\t\t\tnode.getMatrixAt(i, mat);\r\n\t\t\t\r\n\t\t\tlet p = new Vector3();\r\n\t\t\tlet r = new Quaternion();\r\n\t\t\tlet s = new Vector3();\r\n\r\n\t\t\tmat.decompose(p,r,s);\r\n\t\t\t\r\n\t\t\tpos0.push(p.x,p.y,p.z);\r\n\t\t\trot0.push(r.x,r.y,r.z,r.w);\r\n\t\t\tscl0.push(s.x,s.y,s.z);\r\n\t\t};\r\n\r\n\t\tconst pos = new Float32Array(pos0);\r\n\t\tconst rot = new Float32Array(rot0);\r\n\t\tconst scl = new Float32Array(scl0);\r\n\r\n\t\textensionDef.attributes = {\r\n\t\t\t\"TRANSLATION\" : writer.processAccessor( new BufferAttribute( pos, 3 ) ),\r\n\t\t\t\"ROTATION\" : writer.processAccessor( new BufferAttribute( rot, 4 ) ),\r\n\t\t\t\"SCALE\" : writer.processAccessor( new BufferAttribute( scl, 3 ) ),\r\n\t\t};\r\n\r\n\t\textensionsUsed[ this.name ] = true;\r\n\r\n\t}\r\n}", "import { delay, getParam, isiOS, isMobileDevice, isSafari } from \"../../../engine/engine_utils\";\r\nimport { Object3D, Color } from \"three\";\r\nimport * as THREE from \"three\";\r\nimport { USDZExporter as ThreeUSDZExporter } from \"three/examples/jsm/exporters/USDZExporter\";\r\nimport { AnimationExtension } from \"./extensions/Animation\"\r\nimport { ensureQuicklookLinkIsCreated } from \"./utils/quicklook\";\r\nimport { getFormattedDate } from \"./utils/timeutils\";\r\nimport { registerAnimatorsImplictly } from \"./utils/animationutils\";\r\nimport { IUSDZExporterExtension } from \"./Extension\";\r\nimport { Behaviour, GameObject } from \"../../Component\";\r\nimport { WebXR } from \"../../WebXR\"\r\nimport { serializable } from \"../../../engine/engine_serialization\";\r\nimport { showBalloonWarning } from \"../../../engine/debug/debug\";\r\nimport { Context } from \"../../../engine/engine_setup\";\r\n\r\nconst debug = getParam(\"debugusdz\");\r\n\r\nexport type QuickLookOverlay = {\r\n    callToAction?: string;\r\n    checkoutTitle?: string;\r\n    checkoutSubtitle?: string;\r\n}\r\n\r\nexport class USDZExporter extends Behaviour {\r\n\r\n    @serializable(Object3D)\r\n    objectToExport?: THREE.Object3D;\r\n\r\n    @serializable()\r\n    autoExportAnimations: boolean = false;\r\n\r\n    extensions: IUSDZExporterExtension[] = [];\r\n\r\n    private link!: HTMLAnchorElement;\r\n    private webxr?: WebXR;\r\n\r\n\r\n    start() {\r\n        if (debug) {\r\n            window.addEventListener(\"keydown\", (evt) => {\r\n                switch (evt.key) {\r\n                    case \"t\":\r\n                        this.exportAsync();\r\n                        break;\r\n                }\r\n            });\r\n            if (isMobileDevice()) {\r\n                setTimeout(() => {\r\n                    this.exportAsync();\r\n                }, 2000)\r\n            }\r\n        }\r\n        document.getElementById(\"open-in-ar\")?.addEventListener(\"click\", (evt) => {\r\n            evt.preventDefault();\r\n            this.exportAsync();\r\n        });\r\n\r\n        if (!this.objectToExport) this.objectToExport = this.gameObject;\r\n    }\r\n\r\n\r\n\r\n    onEnable() {\r\n        const ios = isiOS()\r\n        const safari = isSafari();\r\n        if (debug || (ios && safari)) {\r\n            this.createQuicklookButton();\r\n            this.lastCallback = this.quicklookCallback.bind(this);\r\n            this.link = ensureQuicklookLinkIsCreated(this.context);\r\n            this.link.addEventListener('message', this.lastCallback);\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        this.link?.removeEventListener('message', this.lastCallback);\r\n    }\r\n\r\n    async exportAsync() {\r\n        if (!this.objectToExport) return;\r\n\r\n        const exporter = new ThreeUSDZExporter();\r\n        const extensions: any = [...this.extensions]\r\n\r\n        // collect animators and their clips\r\n        const animExt = new AnimationExtension();\r\n        extensions.push(animExt);\r\n\r\n        if (this.autoExportAnimations)\r\n            registerAnimatorsImplictly(this.objectToExport, animExt);\r\n\r\n        const eventArgs = { self: this, exporter: exporter, extensions: extensions };\r\n        this.dispatchEvent(new CustomEvent(\"before-export\", { detail: eventArgs }))\r\n\r\n        let name = \"needle\";\r\n        if (debug) name += \"-\" + getFormattedDate();\r\n\r\n        //@ts-ignore\r\n        exporter.debug = debug;\r\n        //@ts-ignore\r\n        const arraybuffer = await exporter.parse(this.objectToExport, extensions);\r\n        const blob = new Blob([arraybuffer], { type: 'application/octet-stream' });\r\n\r\n        // second file: USDA (without assets)\r\n        //@ts-ignore\r\n        // const usda = exporter.lastUsda;\r\n        // const blob2 = new Blob([usda], { type: 'text/plain' });\r\n        // this.link.download = name + \".usda\";\r\n        // this.link.href = URL.createObjectURL(blob2);\r\n        // this.link.click();\r\n\r\n        // see https://developer.apple.com/documentation/arkit/adding_an_apple_pay_button_or_a_custom_action_in_ar_quick_look\r\n        const overlay = this.buildQuicklookOverlay();\r\n        const callToAction = overlay.callToAction ? encodeURIComponent(overlay.callToAction) : \"\";\r\n        const checkoutTitle = overlay.checkoutTitle ? encodeURIComponent(overlay.checkoutTitle) : \"\";\r\n        const checkoutSubtitle = overlay.checkoutSubtitle ? encodeURIComponent(overlay.checkoutSubtitle) : \"\";\r\n        this.link.href = URL.createObjectURL(blob) + `#callToAction=${callToAction}&checkoutTitle=${checkoutTitle}&checkoutSubtitle=${checkoutSubtitle}&`;\r\n\r\n\r\n        if (!this.lastCallback) {\r\n            this.lastCallback = this.quicklookCallback.bind(this);\r\n            this.link.addEventListener('message', this.lastCallback);\r\n        }\r\n\r\n        // open quicklook\r\n        this.link.download = name + \".usdz\";\r\n        this.link.click();\r\n\r\n        // TODO detect QuickLook availability:\r\n        // https://webkit.org/blog/8421/viewing-augmented-reality-assets-in-safari-for-ios/#:~:text=inside%20the%20anchor.-,Feature%20Detection,-To%20detect%20support\r\n    }\r\n\r\n    private lastCallback?: any;\r\n\r\n    private quicklookCallback(event) {\r\n        if ((event as any)?.data == '_apple_ar_quicklook_button_tapped') {\r\n            if (debug) showBalloonWarning(\"Quicklook closed via call to action button\");\r\n            this.dispatchEvent(new CustomEvent(\"quicklook-button-tapped\", { detail: this }));\r\n        }\r\n    }\r\n\r\n    private buildQuicklookOverlay(): QuickLookOverlay {\r\n        const obj: QuickLookOverlay = {};\r\n        obj.callToAction = \"Close\";\r\n        obj.checkoutTitle = \"\uD83C\uDF35 Made with Needle\";\r\n        obj.checkoutSubtitle = \"_\";\r\n        // Use the quicklook-overlay event to customize the overlay\r\n        this.dispatchEvent(new CustomEvent(\"quicklook-overlay\", { detail: obj }));\r\n        return obj;\r\n    }\r\n\r\n    private _arButton?: HTMLElement;\r\n    private async createQuicklookButton() {\r\n        if (!this.webxr) {\r\n            await delay(1);\r\n            this.webxr = GameObject.findObjectOfType(WebXR) ?? undefined;\r\n            if (this.webxr) {\r\n                if(this.webxr.VRButton) this.webxr.VRButton.parentElement?.removeChild(this.webxr.VRButton);\r\n                // check if we have an AR button already and re-use that\r\n                if (this.webxr.ARButton && this._arButton !== this.webxr.ARButton) {\r\n                    this._arButton = this.webxr.ARButton;\r\n                    // Hack to remove the immersiveweb link\r\n                    const linkInButton = this.webxr.ARButton.parentElement?.querySelector(\"a\");\r\n                    if (linkInButton) {\r\n                        linkInButton.href = \"\";\r\n                    }\r\n                    this.webxr.ARButton.innerText = \"Open in Quicklook\";\r\n                    this.webxr.ARButton.disabled = false;\r\n                    this.webxr.ARButton.addEventListener(\"click\", evt => {\r\n                        evt.preventDefault();\r\n                        this.exportAsync();\r\n                    });\r\n                    this.webxr.ARButton.classList.add(\"quicklook-ar-button\");\r\n                }\r\n                // create a button if WebXR didnt create one yet\r\n                else {\r\n                    this.webxr.createARButton = false;\r\n                    this.webxr.createVRButton = false;\r\n                    let container = window.document.querySelector(\".webxr-buttons\");\r\n                    if (!container) {\r\n                        container = document.createElement(\"div\");\r\n                        container.classList.add(\"webxr-buttons\");\r\n                    }\r\n                    const button = document.createElement(\"button\");\r\n                    button.innerText = \"Open in Quicklook\";\r\n                    button.addEventListener(\"click\", () => {\r\n                        this.exportAsync();\r\n                    });\r\n                    button.classList.add('webxr-ar-button');\r\n                    button.classList.add('webxr-button');\r\n                    button.classList.add(\"quicklook-ar-button\");\r\n                    container.appendChild(button);\r\n                }\r\n            }\r\n            else {\r\n                console.warn(\"Could not find WebXR component: will not create Quicklook button\", Context.Current);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resetStyles(el: HTMLElement) {\r\n        el.style.position = \"\";\r\n        el.style.top = \"\";\r\n        el.style.left = \"\";\r\n        el.style.width = \"\";\r\n        el.style.height = \"\";\r\n        el.style.margin = \"\";\r\n        el.style.padding = \"\";\r\n        el.style.border = \"\";\r\n        el.style.background = \"\";\r\n        el.style.color = \"\";\r\n        el.style.font = \"\";\r\n        el.style.textAlign = \"\";\r\n        el.style.opacity = \"\";\r\n        el.style.zIndex = \"\";\r\n    }\r\n}\r\n", "import { GameObject } from \"../../../Component\";\r\nimport { getParam } from \"../../../../engine/engine_utils\";\r\nimport { Object3D, Color, Matrix4, MeshStandardMaterial, Vector3, Quaternion, Interpolant } from \"three\";\r\n//@ts-ignore\r\nimport { USDZObject, buildMatrix } from \"three/examples/jsm/exporters/USDZExporter\"\r\nimport { IUSDZExporterExtension } from \"../Extension\";\r\n\r\nconst debug = getParam(\"debugusdzanimation\");\r\n\r\nexport interface UsdzAnimation {\r\n    createAnimation(ext: AnimationExtension, model: USDZObject, context);\r\n}\r\n\r\nexport type AnimationClipCollection = Array<{ root: Object3D, clips: Array<THREE.AnimationClip> }>;\r\n\r\nexport class RegisteredAnimationInfo {\r\n\r\n    get start(): number { return this.ext.getStartTime01(this.root, this.clip); }\r\n    get duration(): number { return this.clip.duration; }\r\n\r\n    private ext: AnimationExtension;\r\n    private root: Object3D;\r\n    private clip: THREE.AnimationClip;\r\n\r\n    constructor(ext: AnimationExtension, root: THREE.Object3D, clip: THREE.AnimationClip) {\r\n        this.ext = ext;\r\n        this.root = root;\r\n        this.clip = clip;\r\n    }\r\n}\r\n\r\nexport class TransformData {\r\n    clip: THREE.AnimationClip;\r\n    pos?: THREE.KeyframeTrack;\r\n    rot?: THREE.KeyframeTrack;\r\n    scale?: THREE.KeyframeTrack;\r\n    get frameRate(): number { return 60; }\r\n\r\n    private ext: AnimationExtension;\r\n    private root: Object3D;\r\n    private target: Object3D;\r\n\r\n    constructor(ext: AnimationExtension, root: Object3D, target: Object3D, clip: THREE.AnimationClip) {\r\n        this.ext = ext;\r\n        this.root = root;\r\n        this.target = target;\r\n        this.clip = clip;\r\n    }\r\n\r\n    addTrack(track) {\r\n        if (track.name.endsWith(\"position\")) this.pos = track;\r\n        if (track.name.endsWith(\"quaternion\")) this.rot = track;\r\n        if (track.name.endsWith(\"scale\")) this.scale = track;\r\n    }\r\n\r\n    getFrames(): number {\r\n        return Math.max(this.pos?.times?.length ?? 0, this.rot?.times?.length ?? 0, this.scale?.times?.length ?? 0);\r\n    }\r\n\r\n    getDuration(): number {\r\n        const times = this.pos?.times ?? this.rot?.times ?? this.scale?.times;\r\n        if (!times) return 0;\r\n        return times[times.length - 1];\r\n    }\r\n\r\n    getStartTime(arr: TransformData[]): number {\r\n        let sum = 0;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const entry = arr[i];\r\n            if (entry === this) {\r\n                return sum;\r\n            }\r\n            else sum += entry.getDuration();\r\n        }\r\n        return sum;\r\n    }\r\n}\r\n\r\ndeclare type AnimationDict = Map<Object3D, Array<TransformData>>;\r\n\r\nexport class AnimationExtension implements IUSDZExporterExtension {\r\n\r\n    get extensionName(): string { return \"animation\" }\r\n    private dict: AnimationDict = new Map();\r\n    // private rootTargetMap: Map<Object3D, Object3D[]> = new Map();\r\n    private rootTargetMap: Map<Object3D, Object3D[]> = new Map();\r\n\r\n    getStartTime01(root: Object3D, clip: THREE.AnimationClip) {\r\n        const targets = this.rootTargetMap.get(root);\r\n        if (!targets) return Infinity;\r\n        let longestStartTime: number = -1;\r\n        for (const target of targets) {\r\n            const data = this.dict.get(target);\r\n            let startTimeInSeconds = 0;\r\n            if (data?.length) {\r\n                for (const entry of data) {\r\n                    if (entry.clip === clip) {\r\n                        break;\r\n                    }\r\n                    startTimeInSeconds += entry.getDuration();\r\n                }\r\n                longestStartTime = Math.max(longestStartTime, startTimeInSeconds);\r\n            }\r\n            else {\r\n                console.warn(\"No animation found on root\", root, clip, data);\r\n            }\r\n        }\r\n        return longestStartTime;\r\n    }\r\n\r\n    registerAnimation(root: Object3D, clip: THREE.AnimationClip): RegisteredAnimationInfo | null {\r\n        if (!clip || !root) return null;\r\n        if (!this.rootTargetMap.has(root)) this.rootTargetMap.set(root, []);\r\n        // this.rootTargetMap.get(root)?.push(clip);\r\n\r\n        for (const track of clip.tracks) {\r\n            const trackName = track.name.split(\".\")[2];\r\n            const animationTarget = root.getObjectByName(trackName); // object name\r\n            if (!animationTarget) {\r\n                console.warn(\"no object found for track\", track.name, \"using \" + root.name + \" instead\");\r\n                continue;\r\n                // // if no object was found it might be that we have a component that references an animation clip but wants to target another object\r\n                // // in that case UnityGLTF writes the name of the component as track targets because it doesnt know of the intented target\r\n                // animationTarget = root;\r\n            }\r\n            if (!this.dict.has(animationTarget)) {\r\n                this.dict.set(animationTarget, []);\r\n            }\r\n            const arr = this.dict.get(animationTarget);\r\n            if (!arr) continue;\r\n\r\n            let model = arr.find(x => x.clip === clip);\r\n            if (!model) {\r\n                model = new TransformData(this, root, animationTarget, clip);\r\n                arr.push(model);\r\n            }\r\n            model.addTrack(track);\r\n\r\n            const targets = this.rootTargetMap.get(root);\r\n            if (!targets?.includes(animationTarget)) targets?.push(animationTarget);\r\n        }\r\n\r\n        // get the entry for this object. \r\n        // This doesnt work if we have clips animating multiple objects\r\n        const info = new RegisteredAnimationInfo(this, root, clip);\r\n        return info;\r\n    }\r\n\r\n    onAfterHierarchy(_context) {\r\n        if (debug)\r\n            console.log(this.dict);\r\n    }\r\n\r\n    private serializers: SerializeAnimation[] = [];\r\n\r\n    onAfterBuildDocument(_context: any) {\r\n        for (const ser of this.serializers) {\r\n            const parent = ser.model?.parent;\r\n            const isEmptyParent = parent?.isDynamic === true;\r\n            if (debug)\r\n                console.log(isEmptyParent, ser.model?.parent);\r\n            if (isEmptyParent) {\r\n                ser.registerCallback(parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    onExportObject(object, model: USDZObject, _context) {\r\n\r\n        GameObject.foreachComponent(object, (comp) => {\r\n            const c = comp as unknown as UsdzAnimation;\r\n            if (typeof c.createAnimation === \"function\") {\r\n                c.createAnimation(this, model, _context);\r\n            }\r\n        }, false);\r\n\r\n        // we need to be able to retarget serialization to empty parents before actually serializing (we do that in another callback)\r\n        const ser = new SerializeAnimation(object, this.dict);\r\n        this.serializers.push(ser);\r\n        ser.registerCallback(model);\r\n    }\r\n\r\n}\r\n\r\n\r\nclass SerializeAnimation {\r\n\r\n    object: Object3D;\r\n    dict: AnimationDict;\r\n    model: USDZObject;\r\n\r\n    private callback?: Function;\r\n\r\n    constructor(object: Object3D, dict: AnimationDict) {\r\n        this.object = object;\r\n        this.dict = dict;\r\n    }\r\n\r\n    registerCallback(model: USDZObject) {\r\n        if (this.model && this.callback) {\r\n            this.model.removeEventListener(\"serialize\", this.callback);\r\n        }\r\n        if (!this.callback)\r\n            this.callback = this.onSerialize.bind(this);\r\n        if (debug)\r\n            console.log(\"REPARENT\", model);\r\n        this.model = model;\r\n        this.model.addEventListener(\"serialize\", this.callback);\r\n    }\r\n\r\n    onSerialize(writer, _context) {\r\n        if (debug)\r\n            console.log(\"SERIALIZE\", this.model.name, this.object.type);\r\n        // do we have a track for this?\r\n        const object = this.object;\r\n        const arr = this.dict.get(object);\r\n        if (!arr) return;\r\n\r\n        // console.log(\"found data for\", object, \"exporting animation now\");\r\n\r\n\r\n\r\n        // assumption: all tracks have the same time values\r\n        // TODO collect all time values and then use the interpolator to access\r\n\r\n        const composedTransform = new Matrix4();\r\n        const translation = new Vector3();\r\n        const rotation = new Quaternion();\r\n        const scale = new Vector3(1, 1, 1);\r\n\r\n        // TODO doesn't support individual time arrays right now\r\n        // could use these in case we don't have time values that are identical\r\n        /*\r\n        const translationInterpolant = o.pos?.createInterpolant() as THREE.Interpolant;\r\n        const rotationInterpolant = o.rot?.createInterpolant() as THREE.Interpolant;\r\n        const scaleInterpolant = o.scale?.createInterpolant() as THREE.Interpolant;\r\n        */\r\n\r\n        writer.appendLine(\"matrix4d xformOp:transform.timeSamples = {\");\r\n        writer.indent++;\r\n\r\n        for (const transformData of arr) {\r\n            let timesArray = transformData.pos?.times;\r\n            if (!timesArray || transformData.rot && transformData.rot.times?.length > timesArray?.length) timesArray = transformData.rot?.times;\r\n            if (!timesArray || transformData.scale && transformData.scale.times?.length > timesArray?.length) timesArray = transformData.scale?.times;\r\n            if (!timesArray) {\r\n                console.error(\"got an animated object but no time values??\", object, transformData);\r\n                continue;\r\n            }\r\n            const startTime = transformData.getStartTime(arr);\r\n\r\n            if (debug)\r\n                writer.appendLine(transformData.clip.name + \": start=\" + startTime.toFixed(3) + \", length=\" + transformData.getDuration().toFixed(3) + \", frames=\" + transformData.getFrames());\r\n\r\n            // ignore until https://github.com/three-types/three-ts-types/pull/293 gets merged\r\n            //@ts-ignore\r\n            const positionInterpolant: Interpolant | undefined = transformData.pos?.createInterpolant();\r\n            //@ts-ignore\r\n            const rotationInterpolant: Interpolant | undefined = transformData.rot?.createInterpolant();\r\n            //@ts-ignore\r\n            const scaleInterpolant: Interpolant | undefined = transformData.scale?.createInterpolant();\r\n\r\n            if (!positionInterpolant) translation.set(object.position.x, object.position.y, object.position.z);\r\n            if (!rotationInterpolant) rotation.set(object.quaternion.x, object.quaternion.y, object.quaternion.z, object.quaternion.w);\r\n            if (!scaleInterpolant) scale.set(object.scale.x, object.scale.y, object.scale.z);\r\n\r\n            for (let index = 0; index < timesArray.length; index++) {\r\n                const time = timesArray[index];\r\n\r\n                if (positionInterpolant) {\r\n                    const pos = positionInterpolant.evaluate(time);\r\n                    translation.set(pos[0], pos[1], pos[2]);\r\n                }\r\n                if (rotationInterpolant) {\r\n                    const quat = rotationInterpolant.evaluate(time);\r\n                    rotation.set(quat[0], quat[1], quat[2], quat[3]);\r\n                }\r\n                if (scaleInterpolant) {\r\n                    const scale = scaleInterpolant.evaluate(time);\r\n                    scale.set(scale[0], scale[1], scale[2]);\r\n                }\r\n\r\n                composedTransform.compose(translation, rotation, scale);\r\n\r\n                let line = `${(startTime + time) * transformData.frameRate}: ${buildMatrix(composedTransform)},`;\r\n                if (debug) line = \"#\" + index + \"\\t\" + line;\r\n                writer.appendLine(line);\r\n            }\r\n\r\n        }\r\n        writer.indent--;\r\n        writer.appendLine(\"}\");\r\n\r\n        /*\r\n        let transform3 = new Matrix4();\r\n        transform3.compose(0.2,0,0);\r\n        const transform = buildMatrix(model.matrix);\r\n        const transform2 = buildMatrix(transform3.multiply(model.matrix));\r\n        \r\n        writer.appendLine(`matrix4d xformOp:transform.timeSamples = {\r\n            0: ${transform},\r\n            30: ${transform2}\r\n        }`);\r\n        */\r\n    }\r\n}\r\n", "import { Context } from \"../../../../engine/engine_setup\";\r\n\r\n\r\nexport function ensureQuicklookLinkIsCreated(context: Context) : HTMLAnchorElement {\r\n    const existingLink = context.domElement.querySelector(\"link[rel='ar']\");\r\n    if(existingLink) return existingLink as HTMLAnchorElement;\r\n\r\n    /*\r\n    generating this:\r\n    <div class=\"menu\">\r\n      <button id=\"open-in-ar\">Open in QuickLook</button>\r\n      <a style=\"display:none;\" id=\"link\" rel=\"ar\" href=\"\" download=\"asset.usdz\">\r\n        <img id=\"button\" width=\"100\" src=\"files/arkit.png\">\r\n      </a>\r\n    </div>\r\n    */\r\n\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"menu\");\r\n    div.classList.add(\"quicklook-menu\");\r\n    div.style.display = \"none\";\r\n    div.style.visibility = \"hidden\";\r\n\r\n    const button = document.createElement(\"button\");\r\n    button.id = \"open-in-ar\";\r\n    button.innerText = \"Open in QuickLook\";\r\n    div.appendChild(button);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.id = \"needle-usdz-link\";\r\n    link.style.display = \"none\";\r\n    link.rel = \"ar\";\r\n    link.href = \"\";\r\n    div.appendChild(link);\r\n\r\n    const img = document.createElement(\"img\");\r\n    img.id = \"button\";\r\n    // img.src = \"files/arkit.png\";\r\n    link.appendChild(img);\r\n\r\n    context.domElement.appendChild(div);\r\n    return link as HTMLAnchorElement;\r\n}", "\r\n\r\n\r\nexport function getFormattedDate() {\r\n    var date = new Date();\r\n\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hour = date.getHours();\r\n    const min = date.getMinutes();\r\n    const sec = date.getSeconds();\r\n\r\n    const s_month = (month < 10 ? \"0\" : \"\") + month;\r\n    const s_day = (day < 10 ? \"0\" : \"\") + day;\r\n    const s_hour = (hour < 10 ? \"0\" : \"\") + hour;\r\n    const s_min = (min < 10 ? \"0\" : \"\") + min;\r\n    const s_sec = (sec < 10 ? \"0\" : \"\") + sec;\r\n\r\n    return date.getFullYear() + s_month + s_day + \"-\" + s_hour + s_min + s_sec;\r\n}", "import { Animator } from \"../../../Animator\";\r\nimport { Object3D, Color, AnimationClip, KeyframeTrack } from \"three\";\r\nimport { AnimationExtension } from \"../extensions/Animation\";\r\nimport { GameObject } from \"../../../Component\";\r\nimport { getParam } from \"../../../../engine/engine_utils\";\r\n\r\nconst debug = getParam(\"debugusdz\");\r\n\r\nexport function registerAnimatorsImplictly(root: Object3D, ext: AnimationExtension) {\r\n\r\n    // collect animators and their clips\r\n    const animationClips: { root: Object3D, clips: THREE.AnimationClip[] }[] = [];\r\n    const animators = GameObject.getComponentsInChildren(root, Animator);\r\n\r\n    // insert rest pose clip\r\n    let injectedRestPose = false;\r\n\r\n    if (debug)\r\n        console.log(animators);\r\n\r\n    for (const animator of animators) {\r\n        if (!animator || !animator.runtimeAnimatorController) continue;\r\n\r\n        if (debug)\r\n            console.log(animator);\r\n\r\n        const clips: THREE.AnimationClip[] = [];\r\n\r\n\r\n        for (const action of animator.runtimeAnimatorController.enumerateActions()) {\r\n            if (debug)\r\n                console.log(action);\r\n            const clip = action.getClip();\r\n\r\n            // we need to inject a rest pose clip so that the animation position is correct\r\n            // e.g. when the animation starts in the air and animates down we dont want the object to move under the ground\r\n            if (!injectedRestPose && clip.tracks.length > 0) {\r\n                injectedRestPose = true;\r\n                const track = clip.tracks[0];\r\n                const trackBaseName = track.name.substring(0, track.name.lastIndexOf(\".\"));\r\n                const currentPositionTrack = new KeyframeTrack(trackBaseName + \".position\", [0, .01], [0, 0, 0, 0, 0, 0]);\r\n                const currentRotationTrack = new KeyframeTrack(trackBaseName + \".quaternion\", [0, .01], [0, 0, 0, 1, 0, 0, 0, 1]);\r\n                clips.push(new AnimationClip(\"rest\", .01, [currentPositionTrack, currentRotationTrack]));\r\n            }\r\n\r\n            if (!clips.includes(clip))\r\n                clips.push(clip);\r\n        }\r\n\r\n        animationClips.push({ root: animator.gameObject, clips: clips });\r\n    }\r\n\r\n    if (debug)\r\n        console.log(animationClips);\r\n\r\n    for (const pair of animationClips) {\r\n        for (const clip of pair.clips)\r\n            ext.registerAnimation(pair.root, clip);\r\n    }\r\n}", "import { Behaviour } from \"../engine-components/Component\";\r\nimport { KeyCode } from \"../engine/engine_input\";\r\n\r\nexport class PresentationMode extends Behaviour {\r\n\r\n    toggleKey : KeyCode = KeyCode.KEY_P;\r\n\r\n    update(): void {\r\n        if (this.context.input.isKeyDown(KeyCode.KEY_P)) {\r\n            this.context.domElement.classList.toggle(\"presentation-mode\");\r\n        }\r\n    }\r\n}", "import { Behaviour, GameObject } from \"../../engine-components/Component\";\r\nimport { OrbitControls } from \"../../engine-components/OrbitControls\";\r\nimport * as THREE from 'three';\r\nimport { Color, Ray, Raycaster, Vector3 } from \"three\";\r\nimport { RaycastOptions } from \"../../engine/engine_physics\";\r\nimport { LineHandle, LinesManager } from \"./LinesManager\";\r\nimport { Mathf } from \"../../engine/engine_math\";\r\nimport { getWorldPosition } from \"../../engine/engine_three_utils\";\r\nimport { MeshLine, MeshLineMaterial } from 'three.meshline';\r\nimport { KeyCode } from \"../../engine/engine_input\";\r\nimport { PlayerColor } from \"../../engine-components/PlayerColor\";\r\nimport { ControllerEvents, WebXRController } from \"../../engine-components/WebXRController\";\r\n\r\nclass LineState {\r\n    isDrawing: boolean;\r\n    lastHit: Vector3;\r\n    currentHandle: LineHandle;\r\n    maxDistance: number;\r\n    prevDistance: number;\r\n    lastParent: THREE.Object3D | null;\r\n\r\n    constructor() {\r\n        this.isDrawing = false;\r\n        this.lastHit = new Vector3();\r\n        this.currentHandle = null;\r\n        this.maxDistance = 0;\r\n        this.prevDistance = 0;\r\n        this.lastParent = null;\r\n    }\r\n}\r\n\r\nexport class LinesDrawer extends Behaviour {\r\n\r\n    lines: LinesManager;\r\n    colliders?: THREE.Object3D[];\r\n    alignToSurface: boolean = true;\r\n    addToPaintedObject: boolean = true;\r\n\r\n    private orbit?: OrbitControls;\r\n\r\n    start() {\r\n        if (!this.lines) {\r\n            this.lines = GameObject.getComponent(this.gameObject, LinesManager);\r\n            if (!this.lines)\r\n                this.lines = GameObject.addNewComponent(this.gameObject, LinesManager);\r\n        }\r\n        this.orbit = GameObject.findObjectOfType(OrbitControls, this.context) ?? undefined;\r\n        this._states[\"mouse\"] = new LineState();\r\n\r\n\r\n        const xrControllerSelected: { [key: string]: boolean } = {};\r\n\r\n        WebXRController.addEventListener(ControllerEvents.SelectStart, (ctrl, _) => {\r\n            xrControllerSelected[ctrl.controller.uuid] = true;\r\n        });\r\n        WebXRController.addEventListener(ControllerEvents.Update, (ctrl, _) => {\r\n            if (xrControllerSelected[ctrl.controller.uuid] === true) {\r\n                const ray = ctrl.getRay();\r\n                this.updateLine(ctrl.controller.uuid, ray, true, false, false);\r\n            }\r\n        });\r\n        WebXRController.addEventListener(ControllerEvents.SelectEnd, (ctrl, _) => {\r\n            xrControllerSelected[ctrl.controller.uuid] = false;\r\n            const ray = ctrl.getRay();\r\n            this.updateLine(ctrl.controller.uuid, ray, true, true, false);\r\n        });\r\n    }\r\n\r\n    private _states: { [id: string]: LineState } = {};\r\n\r\n    update() {\r\n        if (this.orbit && this._states[\"mouse\"]) {\r\n            if (this.orbit) this.orbit.enabled = !this._states[\"mouse\"].isDrawing;\r\n        }\r\n\r\n        const multi = this.context.input.getPointerPressedCount() > 1;\r\n        const sp = this.context.input.getPointerPositionRC(0);\r\n        LinesDrawer._raycaster.setFromCamera(sp, this.context.mainCamera);\r\n        const ray = LinesDrawer._raycaster.ray;\r\n        this.updateLine(\"mouse\", ray,\r\n            this.context.input.getPointerPressed(0),\r\n            this.context.input.getPointerUp(0), multi || this.context.input.isKeyPressed(KeyCode.ALT)\r\n        );\r\n    }\r\n\r\n    private updateLine(id: string, ray: THREE.Ray, active: boolean, finish: boolean, cancel: boolean = false): LineState {\r\n        let state = this._states[id];\r\n        if (!state) {\r\n            this._states[id] = new LineState();\r\n            state = this._states[id];\r\n        }\r\n\r\n        if (finish) {\r\n            state.isDrawing = false;\r\n            if (state.currentHandle) {\r\n                // this.sendLineUpdate();\r\n                this.lines.endLine(state.currentHandle);\r\n                state.currentHandle = null;\r\n            }\r\n        }\r\n        else if (active) {\r\n            if (cancel) {\r\n                return state;\r\n            }\r\n            const hit = this.getHit(ray);\r\n            let pt: THREE.Vector3 | null = null;\r\n            let prev = state.prevDistance;\r\n            if (hit) {\r\n                if (!state.currentHandle) {\r\n                    state.maxDistance = hit.distance;\r\n                }\r\n                pt = hit.point;\r\n                pt.add(hit.face.normal.multiplyScalar(0.01));\r\n                state.prevDistance = hit.distance;\r\n            }\r\n            else if (state.maxDistance > 0) {\r\n                let dist = state.maxDistance;\r\n                // if we start drawing in thin air:\r\n                if (!state.currentHandle && state.lastHit) {\r\n                    const wp = getWorldPosition(this.context.mainCamera);\r\n                    dist = state.lastHit.distanceTo(wp);\r\n                }\r\n                pt = ray.origin.add(ray.direction.multiplyScalar(state.maxDistance));\r\n                state.prevDistance = state.maxDistance;\r\n            }\r\n\r\n            if (pt) {\r\n                if (!state.currentHandle) {\r\n                    let parent = state.lastParent ?? this.gameObject as THREE.Object3D;\r\n                    if (this.addToPaintedObject && hit) parent = hit.object;\r\n                    state.lastParent = parent;\r\n                    state.currentHandle = this.lines.startLine(parent, { material: this.createRandomMaterial() });\r\n                }\r\n\r\n                if (this.alignToSurface) {\r\n                    if (state.prevDistance > state.maxDistance || Math.abs(prev - state.prevDistance) > 0.2) {\r\n                        const newDistance = state.maxDistance;\r\n                        // if (state.maxDistance === 0) state.maxDistance = newDistance;\r\n                        // const camPos = getWorldPosition(this.context.mainCamera);\r\n                        pt = ray.origin.add(ray.direction.multiplyScalar(newDistance));\r\n                        // pt = camPos.add(dir.multiplyScalar(newDistance));\r\n                        state.prevDistance = newDistance;\r\n                    }\r\n                }\r\n                if (state.lastHit && state.lastHit.distanceTo(pt) < state.prevDistance * .01) {\r\n                    return state;\r\n                }\r\n                this.lines.updateLine(state.currentHandle, { point: pt });\r\n                state.lastHit.copy(pt);\r\n            }\r\n\r\n            state.isDrawing = state.currentHandle !== null;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    private _raycastOptions = new RaycastOptions();\r\n    private static _raycaster: Raycaster = new Raycaster();\r\n\r\n    private getHit(ray: THREE.Ray): THREE.Intersection | null {\r\n        if (!this.colliders || this.colliders.length === 0) {\r\n            this.colliders = [this.gameObject];\r\n        }\r\n        this._raycastOptions.targets = this.colliders;\r\n        this._raycastOptions.ray = ray;\r\n        const hits = this.context.physics.raycast(this._raycastOptions);\r\n        if (hits.length > 0) {\r\n            for(const hit of hits) {\r\n                if(!GameObject.isActiveInHierarchy(hit.object)) {\r\n                    continue;\r\n                }\r\n                return hit;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private createRandomMaterial() {\r\n        let col: Color;\r\n        if (this.context.connection.connectionId)\r\n            col = PlayerColor.colorFromHashCode(PlayerColor.hashCode(this.context.connection.connectionId));\r\n        else\r\n            col = new THREE.Color(\"hsl(\" + (Math.random() * 100).toFixed(0) + \", 80%, 30%)\");\r\n        // const col = new THREE.Color(\"hsl(0, 100%, 50%)\");\r\n\r\n        return new MeshLineMaterial({\r\n            color: col,\r\n            lineWidth: Mathf.lerp(0.005, 0.01, Math.random()),\r\n        });\r\n    }\r\n}", "import { Behaviour, GameObject } from \"../../engine-components/Component\";\r\nimport * as THREE from 'three';\r\nimport { Color, Material } from \"three\";\r\nimport { MeshLine, MeshLineMaterial } from 'three.meshline';\r\n\r\n\r\n\r\nexport declare type LineOptions = {\r\n    material?: Material;\r\n    options?: LineMaterialOptions;\r\n}\r\n\r\nexport declare type LineMaterialOptions = {\r\n    map?: THREE.Texture;\r\n    useMap?: number;\r\n    alphaMap?: THREE.Texture;\r\n    color?: Color;\r\n    opacity?: number;\r\n    lineWidth?: number;\r\n}\r\n\r\nexport class LineInstanceHandler {\r\n    id: number = 0;\r\n    points: Array<any> = [];\r\n    line: MeshLine = new MeshLine();\r\n    material?: MeshLineMaterial;\r\n    mesh?: THREE.Mesh;\r\n\r\n    constructor(owner: THREE.Object3D, options?: LineOptions) {\r\n        if (options) {\r\n            this.material = options.material;\r\n        }\r\n\r\n        if (!this.material)\r\n            this.material = this.defaultLineMaterial;\r\n        if (options) {\r\n            const opts = options.options;\r\n            if (opts) {\r\n                Object.assign(this.material, opts);\r\n            }\r\n        }\r\n        this.mesh = new THREE.Mesh(this.line, this.material);\r\n        owner.add(this.mesh);\r\n    }\r\n\r\n    private static wp: THREE.Vector3 = new THREE.Vector3();\r\n\r\n    appendPoint(vec: Vec3): Vec3 {\r\n        let localPoint = LineInstanceHandler.wp;\r\n        localPoint.set(vec.x, vec.y, vec.z);\r\n        const parent = this.mesh?.parent;\r\n        if (parent) {\r\n            localPoint = parent.worldToLocal(localPoint);\r\n            vec.x = localPoint.x;\r\n            vec.y = localPoint.y;\r\n            vec.z = localPoint.z;\r\n        }\r\n\r\n        this.points.push(vec.x, vec.y, vec.z);\r\n        this.line.setPoints(this.points);\r\n        return vec;\r\n    }\r\n\r\n    private defaultLineMaterial = new MeshLineMaterial({ color: 0x999999, lineWidth: 0.01 });\r\n}\r\n\r\ndeclare type Vec3 = {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ndeclare type StartLineModel = {\r\n    id: number;\r\n    parentGuid: string;\r\n}\r\n\r\ndeclare type LineModel = {\r\n    parentGuid: string;\r\n    guid: number; // it must be named guid\r\n    points: Array<Vec3>;\r\n    width: number;\r\n    color: Vec3;\r\n    startIndex: number;\r\n    finished: boolean;\r\n}\r\n\r\nexport declare type LineHandle = {\r\n    id: number;\r\n}\r\n\r\ndeclare type UpdateLineArgs = {\r\n    point: Vec3;\r\n}\r\n\r\n\r\nexport class LinesManager extends Behaviour {\r\n\r\n    public startLine(parent?: THREE.Object3D, options?: LineOptions): LineHandle {\r\n        const id = Math.random() * Number.MAX_SAFE_INTEGER;\r\n        return this.internalStartLine(parent, id, true, options);\r\n    }\r\n\r\n    public updateLine(handle: LineHandle, args: UpdateLineArgs) {\r\n        const line = this.inFlight[handle.id];\r\n        if (!line) return;\r\n        if (args.point) {\r\n            args.point = line.appendPoint(args.point);\r\n        }\r\n        const buf = this.buffer[handle.id];\r\n        if (buf) {\r\n            if (args.point)\r\n                buf.push(args.point.x, args.point.y, args.point.z);\r\n            if (buf.length > 5) {\r\n                this.sendLineUpdate(line, false, undefined, buf);\r\n                buf.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public endLine(handle: LineHandle, send: boolean = true): LineInstanceHandler | undefined {\r\n        const line = this.inFlight[handle.id];\r\n        if (!line) return;\r\n        this.finished.push(line);\r\n        delete this.inFlight[handle.id];\r\n\r\n        if (send)\r\n            this.sendLineUpdate(line, true, 0);\r\n\r\n        const buf = this.buffer[handle.id];\r\n        if (buf) {\r\n            delete this.buffer[handle.id];\r\n            const arr = buf;\r\n            arr.length = 0;\r\n            this.freeBuffer.push(arr);\r\n        }\r\n\r\n        return line;\r\n    }\r\n\r\n    public getLine(handle: LineHandle): LineInstanceHandler | undefined {\r\n        return this.inFlight[handle.id];\r\n    }\r\n\r\n    private finished: Array<LineInstanceHandler> = [];\r\n    private inFlight: { [key: number]: LineInstanceHandler } = [];\r\n    private buffer: { [key: number]: any[] } = {};\r\n    private freeBuffer = new Array<Vec3[]>();\r\n\r\n    awake(): void {\r\n\r\n        this.context.connection.beginListen(\"line-start\", (i: StartLineModel) => {\r\n            this.onEnsureLine(i.id, i.parentGuid);\r\n        });\r\n        this.context.connection.beginListen(\"line-update\", (evt: LineModel) => {\r\n            let line = this.onEnsureLine(evt.guid, evt.parentGuid);\r\n            if (line && evt.points) {\r\n                if (evt.startIndex <= 0) {\r\n                    line.points = evt.points;\r\n                }\r\n                else {\r\n                    if (evt.startIndex >= line.points.length) {\r\n                        line.points.push(...evt.points);\r\n                    }\r\n                }\r\n                line.line.setPoints(line.points);\r\n                line.material!.lineWidth = evt.width;\r\n                line.material!.color.fromArray(evt.color);\r\n                if (evt.finished === true) {\r\n                    this.endLine({ id: line.id }, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private onEnsureLine(lineId: number, parentGuid: string): LineInstanceHandler {\r\n        if (this.inFlight[lineId]) return this.inFlight[lineId];\r\n        let obj = GameObject.findByGuid(parentGuid, this.context.scene);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        this.internalStartLine(obj as THREE.Object3D, lineId, false);\r\n        return this.inFlight[lineId];\r\n    }\r\n    private internalStartLine(parent: THREE.Object3D, id: number, send: boolean = true, options?: LineOptions): LineHandle {\r\n        const line = new LineInstanceHandler(parent ?? this.context.scene, options);\r\n        line.id = id;\r\n        this.inFlight[id] = line;\r\n        if (send)\r\n            this.sendLineStart(line);\r\n\r\n        let buf;\r\n        if (this.freeBuffer.length <= 0) buf = new Array<Vec3>();\r\n        else buf = this.freeBuffer.pop();\r\n        this.buffer[id] = buf;\r\n        return { id: id };\r\n    }\r\n\r\n    private sendLineStart(instance: LineInstanceHandler) {\r\n        const parent = instance.mesh.parent;\r\n        this.context.connection.send(\"line-start\", { id: instance.id, parentGuid: parent ? parent[\"guid\"] : undefined })\r\n    }\r\n\r\n    private sendLineUpdate(instance: LineInstanceHandler, finished: boolean, startIndex?: number, points?: Array<any>) {\r\n        if (instance) {\r\n            const model: LineModel = {\r\n                parentGuid: instance.mesh.parent[\"guid\"],\r\n                guid: instance.id,\r\n                points: points ? [...points] : instance.points,\r\n                width: instance.material!.lineWidth,\r\n                color: instance.material!.color.toArray(),\r\n                startIndex: startIndex !== undefined ? startIndex : instance.points.length,\r\n                finished: finished,\r\n            };\r\n            this.context.connection.send(\"line-update\", model)\r\n        }\r\n    }\r\n}\r\n", "import { Behaviour, Component, GameObject } from \"../../engine-components/Component\";\r\nimport { AssetReference } from \"../../engine/engine_addressables\";\r\nimport { serializable } from \"../../engine/engine_serialization_decorator\";\r\nimport { syncField } from \"../../engine/engine_networking_auto\"\r\nimport { RoomEvents } from \"../../engine/engine_networking\";\r\nimport { Object3D } from \"three\";\r\nimport { syncDestroy } from \"../../engine/engine_networking_instantiate\";\r\nimport { Vector3 } from \"three\";\r\n\r\n\r\n\r\nexport class PlayerSync extends Behaviour {\r\n    @serializable(AssetReference)\r\n    asset?: AssetReference;\r\n\r\n    private joinedRoomFunction?: Function;\r\n\r\n    awake(): void {\r\n        this.watchTabVisible();\r\n        this.joinedRoomFunction = this.onUserJoined.bind(this);\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.context.connection.beginListen(RoomEvents.JoinedRoom, this.joinedRoomFunction!)\r\n    }\r\n    onDisable(): void {\r\n        this.context.connection.stopListening(RoomEvents.JoinedRoom, this.joinedRoomFunction!)\r\n    }\r\n\r\n    private async onUserJoined(_model) {\r\n        const instance = await this.asset?.instantiateSynced({parent:this.gameObject}, true);\r\n        if (instance) {\r\n            let pl = GameObject.getComponent(instance as Object3D, PlayerState);\r\n            if (pl) {\r\n                pl.owner = this.context.connection.connectionId!;\r\n            }\r\n        }\r\n\r\n        // TODO: previously created instances are not re-created when re-joining room\r\n        // const inRoom = this.context.connection.usersInRoom();\r\n        // console.log(inRoom);\r\n        // for (const user of inRoom) {\r\n        //     if(user !== this.context.connection.connectionId) {\r\n        //         console.log(this.context.connection.tryGetState(this.asset.uri))\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private watchTabVisible() {\r\n        window.addEventListener(\"visibilitychange\", s => {\r\n            if (document.visibilityState === \"visible\") {\r\n                for (let i = PlayerState.all.length - 1; i >= 0; i--) {\r\n                    const pl = PlayerState.all[i];\r\n                    if (!pl.owner || !this.context.connection.userIsInRoom(pl.owner)) {\r\n                        pl.doDestroy();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport class PlayerState extends Behaviour {\r\n\r\n    private static _all: PlayerState[] = [];\r\n    /** all instances for all players */\r\n    static get all(): PlayerState[] {\r\n        return PlayerState._all;\r\n    };\r\n\r\n    private static _local: PlayerState[] = [];\r\n    /** all instances for the local player */\r\n    static get local(): PlayerState[] {\r\n        return PlayerState._local;\r\n    }\r\n\r\n    //** use to check if a component or gameobject is part of a instance owned by the local player */\r\n    static isLocalPlayer(obj: THREE.Object3D | Component): boolean {\r\n        if (obj instanceof Object3D) {\r\n            return GameObject.getComponentInParent(obj, PlayerState)?.isLocalPlayer ?? false;\r\n        }\r\n        else if (obj instanceof Component) {\r\n            return GameObject.getComponentInParent(obj.gameObject, PlayerState)?.isLocalPlayer ?? false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @syncField()\r\n    @serializable()\r\n    owner?: string;\r\n\r\n    get isLocalPlayer(): boolean {\r\n        return this.owner === this.context.connection.connectionId;\r\n    }\r\n\r\n    awake(): void {\r\n        if (this.isLocalPlayer) PlayerState.local.push(this);\r\n        PlayerState.all.push(this);\r\n\r\n        this.context.connection.beginListen(RoomEvents.UserLeftRoom, (model: { userId: string }) => {\r\n            // console.log(\"USER LEFT\", model.userId)\r\n            if (model.userId === this.owner) {\r\n                // console.log(\"LEFT\", this.owner)\r\n                this.doDestroy();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    start() {\r\n        if (!this.owner || !this.context.connection.userIsInRoom(this.owner)) {\r\n            this.doDestroy();\r\n            return;\r\n        }\r\n    }\r\n\r\n    doDestroy() {\r\n        syncDestroy(this.gameObject, this.context.connection);\r\n    }\r\n\r\n    onDestroy() {\r\n        PlayerState.all.splice(PlayerState.all.indexOf(this), 1);\r\n\r\n        if (this.isLocalPlayer) {\r\n            const index = PlayerState._local.indexOf(this);\r\n            if (index >= 0)\r\n                PlayerState._local.splice(index, 1);\r\n        }\r\n    }\r\n}", "\uFEFFimport { TypeStore } from \"./../engine_typestore\"\r\n\r\n// Import types\r\nimport { AlignmentConstraint } from \"../../engine-components/AlignmentConstraint.ts\";\r\nimport { Animation } from \"../../engine-components/Animation.ts\";\r\nimport { AnimationCurve } from \"../../engine-components/AnimationCurve.ts\";\r\nimport { Animator } from \"../../engine-components/Animator.ts\";\r\nimport { AnimatorController } from \"../../engine-components/AnimatorController.ts\";\r\nimport { AudioListener } from \"../../engine-components/AudioListener.ts\";\r\nimport { AudioSource } from \"../../engine-components/AudioSource.ts\";\r\nimport { AvatarModel } from \"../../engine-components/AvatarLoader.ts\";\r\nimport { AvatarLoader } from \"../../engine-components/AvatarLoader.ts\";\r\nimport { AxesHelper } from \"../../engine-components/AxesHelper.ts\";\r\nimport { BasicIKConstraint } from \"../../engine-components/BasicIKConstraint.ts\";\r\nimport { BoxHelperComponent } from \"../../engine-components/BoxHelperComponent.ts\";\r\nimport { Camera } from \"../../engine-components/Camera.ts\";\r\nimport { CharacterController } from \"../../engine-components/CharacterController.ts\";\r\nimport { CharacterControllerInput } from \"../../engine-components/CharacterController.ts\";\r\nimport { Collider } from \"../../engine-components/Collider.ts\";\r\nimport { SphereCollider } from \"../../engine-components/Collider.ts\";\r\nimport { BoxCollider } from \"../../engine-components/Collider.ts\";\r\nimport { MeshCollider } from \"../../engine-components/Collider.ts\";\r\nimport { CapsuleCollider } from \"../../engine-components/Collider.ts\";\r\nimport { DeleteBox } from \"../../engine-components/DeleteBox.ts\";\r\nimport { Deletable } from \"../../engine-components/DeleteBox.ts\";\r\nimport { DeviceFlag } from \"../../engine-components/DeviceFlag.ts\";\r\nimport { DragControls } from \"../../engine-components/DragControls.ts\";\r\nimport { DropListener } from \"../../engine-components/DropListener.ts\";\r\nimport { Duplicatable } from \"../../engine-components/Duplicatable.ts\";\r\nimport { CallInfo } from \"../../engine-components/EventList.ts\";\r\nimport { EventListEvent } from \"../../engine-components/EventList.ts\";\r\nimport { EventList } from \"../../engine-components/EventList.ts\";\r\nimport { EventTrigger } from \"../../engine-components/EventTrigger.ts\";\r\nimport { FlyControls } from \"../../engine-components/FlyControls.ts\";\r\nimport { BoxGizmo } from \"../../engine-components/Gizmos.ts\";\r\nimport { GridHelper } from \"../../engine-components/GridHelper.ts\";\r\nimport { GroundProjectedEnv } from \"../../engine-components/GroundProjection.ts\";\r\nimport { Interactable } from \"../../engine-components/Interactable.ts\";\r\nimport { UsageMarker } from \"../../engine-components/Interactable.ts\";\r\nimport { FixedJoint } from \"../../engine-components/Joints.ts\";\r\nimport { HingeJoint } from \"../../engine-components/Joints.ts\";\r\nimport { Light } from \"../../engine-components/Light.ts\";\r\nimport { LODModel } from \"../../engine-components/LODGroup.ts\";\r\nimport { LODGroup } from \"../../engine-components/LODGroup.ts\";\r\nimport { LookAtConstraint } from \"../../engine-components/LookAtConstraint.ts\";\r\nimport { NestedGltf } from \"../../engine-components/NestedGltf.ts\";\r\nimport { Networking } from \"../../engine-components/Networking.ts\";\r\nimport { OffsetConstraint } from \"../../engine-components/OffsetConstraint.ts\";\r\nimport { OrbitControls } from \"../../engine-components/OrbitControls.ts\";\r\nimport { SubEmitterSystem } from \"../../engine-components/ParticleSystem.ts\";\r\nimport { ParticleSystemRenderer } from \"../../engine-components/ParticleSystem.ts\";\r\nimport { ParticleSystem } from \"../../engine-components/ParticleSystem.ts\";\r\nimport { Gradient } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { MinMaxCurve } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { MinMaxGradient } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { MainModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { ParticleBurst } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { EmissionModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { ColorOverLifetimeModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { SizeOverLifetimeModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { ShapeModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { NoiseModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { TrailModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { VelocityOverLifetimeModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { TextureSheetAnimationModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { RotationOverLifetimeModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { RotationBySpeedModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { LimitVelocityOverLifetimeModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { InheritVelocityModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { SizeBySpeedModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { ColorBySpeedModule } from \"../../engine-components/ParticleSystemModules.ts\";\r\nimport { ParticleSubEmitter } from \"../../engine-components/ParticleSystemSubEmitter.ts\";\r\nimport { PlayerColor } from \"../../engine-components/PlayerColor.ts\";\r\nimport { ReflectionProbe } from \"../../engine-components/ReflectionProbe.ts\";\r\nimport { FieldWithDefault } from \"../../engine-components/Renderer.ts\";\r\nimport { Renderer } from \"../../engine-components/Renderer.ts\";\r\nimport { MeshRenderer } from \"../../engine-components/Renderer.ts\";\r\nimport { SkinnedMeshRenderer } from \"../../engine-components/Renderer.ts\";\r\nimport { RendererLightmap } from \"../../engine-components/RendererLightmap.ts\";\r\nimport { Rigidbody } from \"../../engine-components/RigidBody.ts\";\r\nimport { ScreenCapture } from \"../../engine-components/ScreenCapture.ts\";\r\nimport { ShadowCatcher } from \"../../engine-components/ShadowCatcher.ts\";\r\nimport { RemoteSkybox } from \"../../engine-components/Skybox.ts\";\r\nimport { SmoothFollow } from \"../../engine-components/SmoothFollow.ts\";\r\nimport { SpatialTriggerReceiver } from \"../../engine-components/SpatialTrigger.ts\";\r\nimport { SpatialTrigger } from \"../../engine-components/SpatialTrigger.ts\";\r\nimport { SpectatorCamera } from \"../../engine-components/SpectatorCamera.ts\";\r\nimport { Sprite } from \"../../engine-components/SpriteRenderer.ts\";\r\nimport { SpriteSheet } from \"../../engine-components/SpriteRenderer.ts\";\r\nimport { SpriteRenderer } from \"../../engine-components/SpriteRenderer.ts\";\r\nimport { SyncedCamera } from \"../../engine-components/SyncedCamera.ts\";\r\nimport { SyncedRoom } from \"../../engine-components/SyncedRoom.ts\";\r\nimport { SyncedTransform } from \"../../engine-components/SyncedTransform.ts\";\r\nimport { TestRunner } from \"../../engine-components/TestRunner.ts\";\r\nimport { TestSimulateUserData } from \"../../engine-components/TestRunner.ts\";\r\nimport { TransformGizmo } from \"../../engine-components/TransformGizmo.ts\";\r\nimport { VideoPlayer } from \"../../engine-components/VideoPlayer.ts\";\r\nimport { Voip } from \"../../engine-components/Voip.ts\";\r\nimport { VolumeParameter } from \"../../engine-components/Volume.ts\";\r\nimport { VolumeComponent } from \"../../engine-components/Volume.ts\";\r\nimport { ToneMapping } from \"../../engine-components/Volume.ts\";\r\nimport { ColorAdjustments } from \"../../engine-components/Volume.ts\";\r\nimport { VolumeProfile } from \"../../engine-components/Volume.ts\";\r\nimport { Volume } from \"../../engine-components/Volume.ts\";\r\nimport { WebARSessionRoot } from \"../../engine-components/WebARSessionRoot.ts\";\r\nimport { WebXR } from \"../../engine-components/WebXR.ts\";\r\nimport { WebAR } from \"../../engine-components/WebXR.ts\";\r\nimport { AvatarMarker } from \"../../engine-components/WebXRAvatar.ts\";\r\nimport { WebXRAvatar } from \"../../engine-components/WebXRAvatar.ts\";\r\nimport { TeleportTarget } from \"../../engine-components/WebXRController.ts\";\r\nimport { WebXRController } from \"../../engine-components/WebXRController.ts\";\r\nimport { AttachedObject } from \"../../engine-components/WebXRController.ts\";\r\nimport { XRGrabModel } from \"../../engine-components/WebXRGrabRendering.ts\";\r\nimport { XRGrabRendering } from \"../../engine-components/WebXRGrabRendering.ts\";\r\nimport { XRRig } from \"../../engine-components/WebXRRig.ts\";\r\nimport { VRUserState } from \"../../engine-components/WebXRSync.ts\";\r\nimport { WebXRSync } from \"../../engine-components/WebXRSync.ts\";\r\nimport { XRState } from \"../../engine-components/XRFlag.ts\";\r\nimport { XRFlag } from \"../../engine-components/XRFlag.ts\";\r\nimport { AvatarBlink_Simple } from \"../../engine-components/avatar/AvatarBlink_Simple.ts\";\r\nimport { AvatarEyeLook_Rotation } from \"../../engine-components/avatar/AvatarEyeLook_Rotation.ts\";\r\nimport { Avatar_POI } from \"../../engine-components/avatar/Avatar_Brain_LookAt.ts\";\r\nimport { Avatar_Brain_LookAt } from \"../../engine-components/avatar/Avatar_Brain_LookAt.ts\";\r\nimport { Avatar_MouthShapes } from \"../../engine-components/avatar/Avatar_MouthShapes.ts\";\r\nimport { Avatar_MustacheShake } from \"../../engine-components/avatar/Avatar_MustacheShake.ts\";\r\nimport { __Ignore } from \"../../engine-components/codegen/components.ts\";\r\nimport { LogStats } from \"../../engine-components/debug/LogStats.ts\";\r\nimport { RGBAColor } from \"../../engine-components/js-extensions/RGBAColor.ts\";\r\nimport { PlayableDirector } from \"../../engine-components/timeline/PlayableDirector.ts\";\r\nimport { SignalAsset } from \"../../engine-components/timeline/SignalAsset.ts\";\r\nimport { SignalReceiverEvent } from \"../../engine-components/timeline/SignalAsset.ts\";\r\nimport { SignalReceiver } from \"../../engine-components/timeline/SignalAsset.ts\";\r\nimport { AnimationTrackHandler } from \"../../engine-components/timeline/TimelineTracks.ts\";\r\nimport { AudioTrackHandler } from \"../../engine-components/timeline/TimelineTracks.ts\";\r\nimport { SignalTrackHandler } from \"../../engine-components/timeline/TimelineTracks.ts\";\r\nimport { ControlTrackHandler } from \"../../engine-components/timeline/TimelineTracks.ts\";\r\nimport { BaseUIComponent } from \"../../engine-components/ui/BaseUIComponent.ts\";\r\nimport { UIRootComponent } from \"../../engine-components/ui/BaseUIComponent.ts\";\r\nimport { Button } from \"../../engine-components/ui/Button.ts\";\r\nimport { Canvas } from \"../../engine-components/ui/Canvas.ts\";\r\nimport { CanvasGroup } from \"../../engine-components/ui/CanvasGroup.ts\";\r\nimport { EventSystem } from \"../../engine-components/ui/EventSystem.ts\";\r\nimport { Graphic } from \"../../engine-components/ui/Graphic.ts\";\r\nimport { MaskableGraphic } from \"../../engine-components/ui/Graphic.ts\";\r\nimport { Image } from \"../../engine-components/ui/Image.ts\";\r\nimport { RawImage } from \"../../engine-components/ui/Image.ts\";\r\nimport { InputField } from \"../../engine-components/ui/InputField.ts\";\r\nimport { Keyboard } from \"../../engine-components/ui/Keyboard.ts\";\r\nimport { LayoutGroup } from \"../../engine-components/ui/Layout.ts\";\r\nimport { VerticalLayoutGroup } from \"../../engine-components/ui/Layout.ts\";\r\nimport { HorizontalLayoutGroup } from \"../../engine-components/ui/Layout.ts\";\r\nimport { GridLayoutGroup } from \"../../engine-components/ui/Layout.ts\";\r\nimport { PointerEventData } from \"../../engine-components/ui/PointerEvents.ts\";\r\nimport { Raycaster } from \"../../engine-components/ui/Raycaster.ts\";\r\nimport { ObjectRaycaster } from \"../../engine-components/ui/Raycaster.ts\";\r\nimport { GraphicRaycaster } from \"../../engine-components/ui/Raycaster.ts\";\r\nimport { UIRaycastUtils } from \"../../engine-components/ui/RaycastUtils.ts\";\r\nimport { Size } from \"../../engine-components/ui/RectTransform.ts\";\r\nimport { Rect } from \"../../engine-components/ui/RectTransform.ts\";\r\nimport { RectTransform } from \"../../engine-components/ui/RectTransform.ts\";\r\nimport { SpatialHtml } from \"../../engine-components/ui/SpatialHtml.ts\";\r\nimport { Text } from \"../../engine-components/ui/Text.ts\";\r\nimport { GltfExportBox } from \"../../engine-components/export/gltf/GltfExport.ts\";\r\nimport { GltfExport } from \"../../engine-components/export/gltf/GltfExport.ts\";\r\nimport { USDZExporter } from \"../../engine-components/export/usdz/USDZExporter.ts\";\r\nimport { RegisteredAnimationInfo } from \"../../engine-components/export/usdz/extensions/Animation.ts\";\r\nimport { TransformData } from \"../../engine-components/export/usdz/extensions/Animation.ts\";\r\nimport { AnimationExtension } from \"../../engine-components/export/usdz/extensions/Animation.ts\";\r\nimport { PresentationMode } from \"../../engine-components-experimental/Presentation.ts\";\r\nimport { LinesDrawer } from \"../../engine-components-experimental/annotation/LineDrawer.ts\";\r\nimport { LineInstanceHandler } from \"../../engine-components-experimental/annotation/LinesManager.ts\";\r\nimport { LinesManager } from \"../../engine-components-experimental/annotation/LinesManager.ts\";\r\nimport { PlayerSync } from \"../../engine-components-experimental/networking/PlayerSync.ts\";\r\nimport { PlayerState } from \"../../engine-components-experimental/networking/PlayerSync.ts\";\r\n\r\n// Register types\r\nTypeStore.add(\"AlignmentConstraint\", AlignmentConstraint);\r\nTypeStore.add(\"Animation\", Animation);\r\nTypeStore.add(\"AnimationCurve\", AnimationCurve);\r\nTypeStore.add(\"Animator\", Animator);\r\nTypeStore.add(\"AnimatorController\", AnimatorController);\r\nTypeStore.add(\"AudioListener\", AudioListener);\r\nTypeStore.add(\"AudioSource\", AudioSource);\r\nTypeStore.add(\"AvatarModel\", AvatarModel);\r\nTypeStore.add(\"AvatarLoader\", AvatarLoader);\r\nTypeStore.add(\"AxesHelper\", AxesHelper);\r\nTypeStore.add(\"BasicIKConstraint\", BasicIKConstraint);\r\nTypeStore.add(\"BoxHelperComponent\", BoxHelperComponent);\r\nTypeStore.add(\"Camera\", Camera);\r\nTypeStore.add(\"CharacterController\", CharacterController);\r\nTypeStore.add(\"CharacterControllerInput\", CharacterControllerInput);\r\nTypeStore.add(\"Collider\", Collider);\r\nTypeStore.add(\"SphereCollider\", SphereCollider);\r\nTypeStore.add(\"BoxCollider\", BoxCollider);\r\nTypeStore.add(\"MeshCollider\", MeshCollider);\r\nTypeStore.add(\"CapsuleCollider\", CapsuleCollider);\r\nTypeStore.add(\"DeleteBox\", DeleteBox);\r\nTypeStore.add(\"Deletable\", Deletable);\r\nTypeStore.add(\"DeviceFlag\", DeviceFlag);\r\nTypeStore.add(\"DragControls\", DragControls);\r\nTypeStore.add(\"DropListener\", DropListener);\r\nTypeStore.add(\"Duplicatable\", Duplicatable);\r\nTypeStore.add(\"CallInfo\", CallInfo);\r\nTypeStore.add(\"EventListEvent\", EventListEvent);\r\nTypeStore.add(\"EventList\", EventList);\r\nTypeStore.add(\"EventTrigger\", EventTrigger);\r\nTypeStore.add(\"FlyControls\", FlyControls);\r\nTypeStore.add(\"BoxGizmo\", BoxGizmo);\r\nTypeStore.add(\"GridHelper\", GridHelper);\r\nTypeStore.add(\"GroundProjectedEnv\", GroundProjectedEnv);\r\nTypeStore.add(\"Interactable\", Interactable);\r\nTypeStore.add(\"UsageMarker\", UsageMarker);\r\nTypeStore.add(\"FixedJoint\", FixedJoint);\r\nTypeStore.add(\"HingeJoint\", HingeJoint);\r\nTypeStore.add(\"Light\", Light);\r\nTypeStore.add(\"LODModel\", LODModel);\r\nTypeStore.add(\"LODGroup\", LODGroup);\r\nTypeStore.add(\"LookAtConstraint\", LookAtConstraint);\r\nTypeStore.add(\"NestedGltf\", NestedGltf);\r\nTypeStore.add(\"Networking\", Networking);\r\nTypeStore.add(\"OffsetConstraint\", OffsetConstraint);\r\nTypeStore.add(\"OrbitControls\", OrbitControls);\r\nTypeStore.add(\"SubEmitterSystem\", SubEmitterSystem);\r\nTypeStore.add(\"ParticleSystemRenderer\", ParticleSystemRenderer);\r\nTypeStore.add(\"ParticleSystem\", ParticleSystem);\r\nTypeStore.add(\"Gradient\", Gradient);\r\nTypeStore.add(\"MinMaxCurve\", MinMaxCurve);\r\nTypeStore.add(\"MinMaxGradient\", MinMaxGradient);\r\nTypeStore.add(\"MainModule\", MainModule);\r\nTypeStore.add(\"ParticleBurst\", ParticleBurst);\r\nTypeStore.add(\"EmissionModule\", EmissionModule);\r\nTypeStore.add(\"ColorOverLifetimeModule\", ColorOverLifetimeModule);\r\nTypeStore.add(\"SizeOverLifetimeModule\", SizeOverLifetimeModule);\r\nTypeStore.add(\"ShapeModule\", ShapeModule);\r\nTypeStore.add(\"NoiseModule\", NoiseModule);\r\nTypeStore.add(\"TrailModule\", TrailModule);\r\nTypeStore.add(\"VelocityOverLifetimeModule\", VelocityOverLifetimeModule);\r\nTypeStore.add(\"TextureSheetAnimationModule\", TextureSheetAnimationModule);\r\nTypeStore.add(\"RotationOverLifetimeModule\", RotationOverLifetimeModule);\r\nTypeStore.add(\"RotationBySpeedModule\", RotationBySpeedModule);\r\nTypeStore.add(\"LimitVelocityOverLifetimeModule\", LimitVelocityOverLifetimeModule);\r\nTypeStore.add(\"InheritVelocityModule\", InheritVelocityModule);\r\nTypeStore.add(\"SizeBySpeedModule\", SizeBySpeedModule);\r\nTypeStore.add(\"ColorBySpeedModule\", ColorBySpeedModule);\r\nTypeStore.add(\"ParticleSubEmitter\", ParticleSubEmitter);\r\nTypeStore.add(\"PlayerColor\", PlayerColor);\r\nTypeStore.add(\"ReflectionProbe\", ReflectionProbe);\r\nTypeStore.add(\"FieldWithDefault\", FieldWithDefault);\r\nTypeStore.add(\"Renderer\", Renderer);\r\nTypeStore.add(\"MeshRenderer\", MeshRenderer);\r\nTypeStore.add(\"SkinnedMeshRenderer\", SkinnedMeshRenderer);\r\nTypeStore.add(\"RendererLightmap\", RendererLightmap);\r\nTypeStore.add(\"Rigidbody\", Rigidbody);\r\nTypeStore.add(\"ScreenCapture\", ScreenCapture);\r\nTypeStore.add(\"ShadowCatcher\", ShadowCatcher);\r\nTypeStore.add(\"RemoteSkybox\", RemoteSkybox);\r\nTypeStore.add(\"SmoothFollow\", SmoothFollow);\r\nTypeStore.add(\"SpatialTriggerReceiver\", SpatialTriggerReceiver);\r\nTypeStore.add(\"SpatialTrigger\", SpatialTrigger);\r\nTypeStore.add(\"SpectatorCamera\", SpectatorCamera);\r\nTypeStore.add(\"Sprite\", Sprite);\r\nTypeStore.add(\"SpriteSheet\", SpriteSheet);\r\nTypeStore.add(\"SpriteRenderer\", SpriteRenderer);\r\nTypeStore.add(\"SyncedCamera\", SyncedCamera);\r\nTypeStore.add(\"SyncedRoom\", SyncedRoom);\r\nTypeStore.add(\"SyncedTransform\", SyncedTransform);\r\nTypeStore.add(\"TestRunner\", TestRunner);\r\nTypeStore.add(\"TestSimulateUserData\", TestSimulateUserData);\r\nTypeStore.add(\"TransformGizmo\", TransformGizmo);\r\nTypeStore.add(\"VideoPlayer\", VideoPlayer);\r\nTypeStore.add(\"Voip\", Voip);\r\nTypeStore.add(\"VolumeParameter\", VolumeParameter);\r\nTypeStore.add(\"VolumeComponent\", VolumeComponent);\r\nTypeStore.add(\"ToneMapping\", ToneMapping);\r\nTypeStore.add(\"ColorAdjustments\", ColorAdjustments);\r\nTypeStore.add(\"VolumeProfile\", VolumeProfile);\r\nTypeStore.add(\"Volume\", Volume);\r\nTypeStore.add(\"WebARSessionRoot\", WebARSessionRoot);\r\nTypeStore.add(\"WebXR\", WebXR);\r\nTypeStore.add(\"WebAR\", WebAR);\r\nTypeStore.add(\"AvatarMarker\", AvatarMarker);\r\nTypeStore.add(\"WebXRAvatar\", WebXRAvatar);\r\nTypeStore.add(\"TeleportTarget\", TeleportTarget);\r\nTypeStore.add(\"WebXRController\", WebXRController);\r\nTypeStore.add(\"AttachedObject\", AttachedObject);\r\nTypeStore.add(\"XRGrabModel\", XRGrabModel);\r\nTypeStore.add(\"XRGrabRendering\", XRGrabRendering);\r\nTypeStore.add(\"XRRig\", XRRig);\r\nTypeStore.add(\"VRUserState\", VRUserState);\r\nTypeStore.add(\"WebXRSync\", WebXRSync);\r\nTypeStore.add(\"XRState\", XRState);\r\nTypeStore.add(\"XRFlag\", XRFlag);\r\nTypeStore.add(\"AvatarBlink_Simple\", AvatarBlink_Simple);\r\nTypeStore.add(\"AvatarEyeLook_Rotation\", AvatarEyeLook_Rotation);\r\nTypeStore.add(\"Avatar_POI\", Avatar_POI);\r\nTypeStore.add(\"Avatar_Brain_LookAt\", Avatar_Brain_LookAt);\r\nTypeStore.add(\"Avatar_MouthShapes\", Avatar_MouthShapes);\r\nTypeStore.add(\"Avatar_MustacheShake\", Avatar_MustacheShake);\r\nTypeStore.add(\"__Ignore\", __Ignore);\r\nTypeStore.add(\"LogStats\", LogStats);\r\nTypeStore.add(\"RGBAColor\", RGBAColor);\r\nTypeStore.add(\"PlayableDirector\", PlayableDirector);\r\nTypeStore.add(\"SignalAsset\", SignalAsset);\r\nTypeStore.add(\"SignalReceiverEvent\", SignalReceiverEvent);\r\nTypeStore.add(\"SignalReceiver\", SignalReceiver);\r\nTypeStore.add(\"AnimationTrackHandler\", AnimationTrackHandler);\r\nTypeStore.add(\"AudioTrackHandler\", AudioTrackHandler);\r\nTypeStore.add(\"SignalTrackHandler\", SignalTrackHandler);\r\nTypeStore.add(\"ControlTrackHandler\", ControlTrackHandler);\r\nTypeStore.add(\"BaseUIComponent\", BaseUIComponent);\r\nTypeStore.add(\"UIRootComponent\", UIRootComponent);\r\nTypeStore.add(\"Button\", Button);\r\nTypeStore.add(\"Canvas\", Canvas);\r\nTypeStore.add(\"CanvasGroup\", CanvasGroup);\r\nTypeStore.add(\"EventSystem\", EventSystem);\r\nTypeStore.add(\"Graphic\", Graphic);\r\nTypeStore.add(\"MaskableGraphic\", MaskableGraphic);\r\nTypeStore.add(\"Image\", Image);\r\nTypeStore.add(\"RawImage\", RawImage);\r\nTypeStore.add(\"InputField\", InputField);\r\nTypeStore.add(\"Keyboard\", Keyboard);\r\nTypeStore.add(\"LayoutGroup\", LayoutGroup);\r\nTypeStore.add(\"VerticalLayoutGroup\", VerticalLayoutGroup);\r\nTypeStore.add(\"HorizontalLayoutGroup\", HorizontalLayoutGroup);\r\nTypeStore.add(\"GridLayoutGroup\", GridLayoutGroup);\r\nTypeStore.add(\"PointerEventData\", PointerEventData);\r\nTypeStore.add(\"Raycaster\", Raycaster);\r\nTypeStore.add(\"ObjectRaycaster\", ObjectRaycaster);\r\nTypeStore.add(\"GraphicRaycaster\", GraphicRaycaster);\r\nTypeStore.add(\"UIRaycastUtils\", UIRaycastUtils);\r\nTypeStore.add(\"Size\", Size);\r\nTypeStore.add(\"Rect\", Rect);\r\nTypeStore.add(\"RectTransform\", RectTransform);\r\nTypeStore.add(\"SpatialHtml\", SpatialHtml);\r\nTypeStore.add(\"Text\", Text);\r\nTypeStore.add(\"GltfExportBox\", GltfExportBox);\r\nTypeStore.add(\"GltfExport\", GltfExport);\r\nTypeStore.add(\"USDZExporter\", USDZExporter);\r\nTypeStore.add(\"RegisteredAnimationInfo\", RegisteredAnimationInfo);\r\nTypeStore.add(\"TransformData\", TransformData);\r\nTypeStore.add(\"AnimationExtension\", AnimationExtension);\r\nTypeStore.add(\"PresentationMode\", PresentationMode);\r\nTypeStore.add(\"LinesDrawer\", LinesDrawer);\r\nTypeStore.add(\"LineInstanceHandler\", LineInstanceHandler);\r\nTypeStore.add(\"LinesManager\", LinesManager);\r\nTypeStore.add(\"PlayerSync\", PlayerSync);\r\nTypeStore.add(\"PlayerState\", PlayerState);\r\n", "import \"./codegen/register_types\";\r\nimport { TypeStore } from \"./engine_typestore\";\r\nimport * as THREE from \"three\";\r\nimport { Component, GameObject } from \"../engine-components/Component\";\r\nimport { InstantiateIdProvider } from \"./engine_networking_instantiate\"\r\nimport { Context } from \"./engine_setup\";\r\nimport { deserializeObject, serializeObject } from \"./engine_serialization\";\r\nimport { assign, ImplementationInformation, ISerializable, SerializationContext } from \"./engine_serialization_core\";\r\nimport { NEEDLE_components } from \"./extensions/NEEDLE_components\";\r\nimport { debugExtension } from \"./engine_default_parameters\";\r\nimport { builtinComponentKeyName } from \"./engine_constants\";\r\nimport { SourceIdentifier } from \"./engine_types\";\r\nimport { UIDProvider } from \"./engine_types\";\r\nimport { addNewComponent } from \"./engine_components\";\r\nimport { getParam } from \"./engine_utils\";\r\nimport { LogType, showBalloonMessage } from \"./debug/debug\";\r\nimport { isLocalNetwork } from \"./engine_networking_utils\";\r\n\r\n\r\nconst debug = debugExtension;\r\nconst debugTypeStore = getParam(\"debugtypestore\");\r\nif (debugTypeStore) console.log(TypeStore);\r\n\r\nexport function writeBuiltinComponentData(comp: Component, context: SerializationContext): object | null {\r\n\r\n    // const fn = (comp as unknown as ISerializable)?.onBeforeSerialize;\r\n    // if (fn) {\r\n    //     const res = fn?.call(comp);\r\n    //     if (res !== undefined) {\r\n    //         res[\"name\"] = comp.constructor.name;\r\n    //         return res;\r\n    //     }\r\n    // }\r\n    const serializable = comp as unknown as ISerializable;\r\n    const data = serializeObject(serializable, context);\r\n    // console.log(data);\r\n    if (data !== undefined) return data;\r\n    return null;\r\n}\r\n\r\nconst typeImplementationInformation = new ImplementationInformation();\r\n\r\nexport async function createBuiltinComponents(context: Context, gltfId: SourceIdentifier, gltf, seed: number | null | UIDProvider = null, extension?: NEEDLE_components) {\r\n    if (!gltf) return;\r\n    const lateResolve: Array<(gltf: THREE.Object3D) => {}> = [];\r\n\r\n    let idProvider: UIDProvider | null = seed as UIDProvider;\r\n    if (typeof idProvider === \"number\") {\r\n        idProvider = new InstantiateIdProvider(seed as number);\r\n    }\r\n\r\n    const serializationContext = new SerializationContext(gltf.scene);\r\n    serializationContext.gltfId = gltfId;\r\n    serializationContext.context = context;\r\n    serializationContext.gltf = gltf;\r\n    serializationContext.nodeToObject = extension?.nodeToObjectMap;\r\n    serializationContext.implementationInformation = typeImplementationInformation;\r\n\r\n    const deserialize: DeserializeData[] = [];\r\n\r\n    if (gltf.scenes) {\r\n        for (const scene of gltf.scenes) {\r\n            await onCreateBuiltinComponents(serializationContext, scene, deserialize, lateResolve);\r\n        }\r\n    }\r\n    if (gltf.children) {\r\n        for (const ch of gltf.children) {\r\n            await onCreateBuiltinComponents(serializationContext, ch, deserialize, lateResolve);\r\n        }\r\n    }\r\n\r\n\r\n    context.new_scripts_pre_setup_callbacks.push(() => {\r\n\r\n        for (const des of deserialize) {\r\n            handleDeserialization(des, serializationContext);\r\n        }\r\n\r\n        // when dropping the same file multiple times we need to generate new guids\r\n        // e.g. SyncTransform sends its own guid to the server to know about ownership\r\n        // so it requires a unique guid for a new instance\r\n        // doing it here at the end of resolving of references should ensure that\r\n        // and this should run before awake and onenable of newly created components\r\n        if (idProvider) {\r\n            // TODO: should we do this after setup callbacks now?\r\n            recursiveCreateGuids(gltf, idProvider);\r\n            for (const scene of gltf.scenes)\r\n                recursiveCreateGuids(scene, idProvider);\r\n        }\r\n    });\r\n\r\n    // tools.findAnimationsLate(context, gltf, context.new_scripts_pre_setup_callbacks);\r\n\r\n    // console.log(\"finished creating builtin components\", gltf.scene?.name, gltf);\r\n}\r\n\r\nfunction recursiveCreateGuids(obj: GameObject, idProvider: UIDProvider | null) {\r\n    if (idProvider === null) return;\r\n    if (!obj) return;\r\n    obj.guid = idProvider.generateUUID();\r\n    // console.log(obj);\r\n    if (obj && obj.userData && obj.userData.components) {\r\n        for (const comp of obj.userData.components) {\r\n            if (comp === null) continue;\r\n            comp.guid = idProvider.generateUUID();\r\n            // console.log(comp.guid)\r\n        }\r\n\r\n    }\r\n    if (obj.children) {\r\n        for (const child of obj.children) {\r\n            recursiveCreateGuids(child as GameObject, idProvider);\r\n        }\r\n    }\r\n}\r\n\r\ndeclare interface IGltfbuiltinComponent {\r\n    name: string;\r\n}\r\n\r\ndeclare interface IGltfBuiltinComponentData {\r\n    [builtinComponentKeyName]: IGltfbuiltinComponent[];\r\n}\r\n\r\ndeclare class DeserializeData {\r\n    instance: any;\r\n    compData: IGltfbuiltinComponent;\r\n    obj: THREE.Object3D;\r\n}\r\n\r\ndeclare type LateResolveCallback = (gltf: THREE.Object3D) => void;\r\n\r\nconst unknownComponentsBuffer: Array<string> = [];\r\n\r\nasync function onCreateBuiltinComponents(context: SerializationContext, obj: THREE.Object3D,\r\n    deserialize: DeserializeData[], lateResolve: LateResolveCallback[]) {\r\n    if (!obj) return;\r\n\r\n    // iterate injected data\r\n    const data = obj.userData as IGltfBuiltinComponentData;\r\n    if (data) {\r\n        const components = data.builtin_components;\r\n        if (components && components.length > 0) {\r\n            // console.log(obj);\r\n            for (const compData of components) {\r\n                try {\r\n                    if (compData === null) continue;\r\n                    const type = TypeStore.get(compData.name);\r\n                    // console.log(compData, compData.name, type, TypeStore);\r\n                    if (type !== undefined && type !== null) {\r\n                        const instance: Component = new type() as Component;\r\n                        instance.sourceId = context.gltfId;\r\n\r\n                        // assign basic fields\r\n                        assign(instance, compData, context.implementationInformation);\r\n                        // Object.assign(instance, compData);\r\n                        // dont call awake here because some references might not be resolved yet and components that access those fields in awake will throw\r\n                        // for example Duplicatable reference to object might still be { node: id }\r\n                        const callAwake = false;\r\n                        addNewComponent(obj, instance, callAwake);\r\n                        deserialize.push({ instance, compData, obj });\r\n                    }\r\n                    else {\r\n                        if (debug)\r\n                            console.debug(\"unknown component: \" + compData.name);\r\n                        if (!unknownComponentsBuffer.includes(compData.name))\r\n                            unknownComponentsBuffer.push(compData.name);\r\n                    }\r\n                }\r\n                catch (err: any) {\r\n                    console.error(compData.name + \" - \" + err.message, err);\r\n                }\r\n            }\r\n            // console.debug(\"finished adding gltf builtin components\", obj);\r\n        }\r\n        if (unknownComponentsBuffer.length > 0) {\r\n            const unknown = unknownComponentsBuffer.join(\", \");\r\n            console.warn(\"unknown components: \" + unknown);\r\n            unknownComponentsBuffer.length = 0;\r\n            if (isLocalNetwork())\r\n                showBalloonMessage(`<strong>Unknown components in scene</strong>:\\n\\n${unknown}\\n\\nThis could mean you forgot to add a npmdef to your ExportInfo\\n<a href=\"https://engine.needle.tools/docs/project_structure.html#creating-and-installing-a-npmdef\" target=\"_blank\">documentation</a>`, LogType.Warn);\r\n        }\r\n    }\r\n\r\n    if (obj.children) {\r\n        for (const ch of obj.children) {\r\n            await onCreateBuiltinComponents(context, ch, deserialize, lateResolve);\r\n        }\r\n    }\r\n}\r\n\r\nfunction handleDeserialization(data: DeserializeData, context: SerializationContext) {\r\n    const { instance, compData, obj } = data;\r\n    context.object = obj;\r\n    context.target = instance;\r\n\r\n    // const beforeFn = (instance as ISerializationCallbackReceiver)?.onBeforeDeserialize;\r\n    // console.log(beforeFn, instance);\r\n    // if (beforeFn) beforeFn.call(instance, data.compData);\r\n\r\n    let deserialized: boolean = true;\r\n    // console.log(instance, compData);\r\n    // TODO: first build components and then deserialize data?\r\n    // currently a component referencing another component can not find it if the referenced component hasnt been added\r\n    // we should split this up in two steps then.\r\n    deserialized = deserializeObject(instance, compData, context) === true;\r\n\r\n    // if (!deserialized) {\r\n    //     // now loop through data again and search for special reference types\r\n    //     for (const key in compData) {\r\n    //         const entry = compData[key];\r\n    //         if (!entry) {\r\n    //             instance[key] = null;\r\n    //             continue;\r\n    //         }\r\n\r\n    //         const fn = (instance as ISerializationCallbackReceiver)?.onDeserialize;\r\n    //         if (fn) {\r\n    //             const res = fn.call(instance, key, entry);\r\n    //             if (res !== undefined) {\r\n    //                 instance[key] = res;\r\n    //                 continue;\r\n    //             }\r\n    //         }\r\n\r\n    //         // if (!resolve(instance, key, entry, lateResolve)) {\r\n    //         // }\r\n    //     }\r\n    // }\r\n\r\n    // console.log(instance);\r\n    // const afterFn = (instance as ISerializationCallbackReceiver)?.onAfterDeserialize;\r\n    // if (afterFn) afterFn.call(instance);\r\n    if (debug)\r\n        console.debug(\"add \" + compData.name, compData, instance);\r\n}\r\n\r\n// // TODO: THIS should be legacy once we update unity builtin component exports\r\n// function resolve(instance, key: string, entry, lateResolve: LateResolveCallback[]): boolean {\r\n\r\n//     switch (entry[\"$type\"]) {\r\n//         default:\r\n//             const type = entry[\"$type\"];\r\n//             if (type !== undefined) {\r\n//                 const res = tryResolveType(type, entry);\r\n//                 if (res !== undefined)\r\n//                     instance[key] = res;\r\n//                 return res !== undefined;\r\n//             }\r\n//             break;\r\n//         // the thing is a reference\r\n//         case \"reference\":\r\n//             // we expect some identifier entry to use for finding the reference\r\n//             const guid = entry[\"guid\"];\r\n//             lateResolve.push(async (gltf) => {\r\n//                 instance[key] = findInGltf(guid, gltf);\r\n//             });\r\n//             return true;\r\n//     }\r\n\r\n//     if (Array.isArray(entry)) {\r\n//         // the thing is an array\r\n//         const targetArray = instance[key];\r\n//         for (const index in entry) {\r\n//             const val = entry[index];\r\n//             if (val === null) {\r\n//                 targetArray[index] = null;\r\n//                 continue;\r\n//             }\r\n//             switch (val[\"$type\"]) {\r\n//                 default:\r\n//                     const type = val[\"$type\"];\r\n//                     if (type !== undefined) {\r\n//                         const res = tryResolveType(type, entry);\r\n//                         if (res !== undefined) targetArray[index] = res;\r\n//                     }\r\n//                     break;\r\n//                 case \"reference\":\r\n//                     // this entry is a reference\r\n//                     const guid = val[\"guid\"];\r\n//                     lateResolve.push(async (gltf) => {\r\n//                         targetArray[index] = findInGltf(guid, gltf);\r\n//                     });\r\n//                     break;\r\n//             }\r\n//         }\r\n//         return true;\r\n//     }\r\n//     return false;\r\n// }\r\n\r\n// function findInGltf(guid: string, gltf) {\r\n//     let res = tools.tryFindScript(guid);\r\n//     if (!res) res = tools.tryFindObject(guid, gltf, true);\r\n//     return res;\r\n// }\r\n\r\n// function tryResolveType(type, entry): any | undefined {\r\n//     switch (type) {\r\n//         case \"Vector2\":\r\n//             return new THREE.Vector2(entry.x, entry.y);\r\n//         case \"Vector3\":\r\n//             return new THREE.Vector3(entry.x, entry.y, entry.z);\r\n//         case \"Vector4\":\r\n//             return new THREE.Vector4(entry.x, entry.y, entry.z, entry.w);\r\n//         case \"Quaternion\":\r\n//             return new THREE.Quaternion(entry.x, entry.y, entry.z, entry.w);\r\n//     }\r\n//     return undefined;\r\n// }", "import { Context, build_scene_functions, LoadingOptions, LoadingProgressArgs } from \"./engine_setup\";\r\nimport { AROverlayHandler, arContainerClassName } from \"./engine_element_overlay\";\r\nimport { GameObject } from \"../engine-components/Component\";\r\nimport { processNewScripts } from \"./engine_mainloop_utils\";\r\nimport { calculateProgress01, EngineLoadingView, ILoadingViewHandler } from \"./engine_element_loading\";\r\nimport { delay, getParam } from \"./engine_utils\";\r\nimport { setDracoDecoderPath, setDracoDecoderType, setKtx2TranscoderPath } from \"./engine_loaders\";\r\nimport { getLoader, registerLoader } from \"../engine/engine_gltf\";\r\nimport { NeedleGltfLoader } from \"./engine_scenetools\";\r\nimport { INeedleEngineComponent } from \"./engine_types\";\r\n\r\n// registering loader here too to make sure it's imported when using engine via vanilla js\r\nregisterLoader(NeedleGltfLoader);\r\n\r\nconst debug = getParam(\"debugwebcomponent\");\r\n\r\nclass EngineElementSourceFileWatcher {\r\n\r\n    private id: string;\r\n    private context: Context;\r\n    private previouslyAdded: any;\r\n    private previousSource?: string;\r\n    private networkEvent: string;\r\n\r\n    constructor(id: string, context: Context) {\r\n        this.id = id;\r\n        this.context = context;\r\n        this.networkEvent = \"needle-engine-source-changed\";\r\n        if (this.id) this.networkEvent += \"-\" + this.id;\r\n        this.context.connection.beginListen(this.networkEvent, fn => {\r\n            this.onSourceChanged(fn, true);\r\n        });\r\n    }\r\n\r\n    async onSourceChanged(newSource: string, dontSend: boolean = false, isStartup: boolean = false) {\r\n        if (this.previouslyAdded) {\r\n            // if event was from remote and source didnt change do nothing\r\n            if (dontSend && newSource === this.previousSource) { }\r\n            else\r\n                GameObject.destroySynced(this.previouslyAdded);\r\n        }\r\n        this.previouslyAdded = null;\r\n\r\n        if (!dontSend) {\r\n            this.context.connection.send(this.networkEvent, newSource);\r\n        }\r\n\r\n        this.previousSource = newSource;\r\n        Context.Current = this.context;\r\n        const res = await getLoader().loadSync(this.context, newSource, this.getHashFromString(newSource), false);\r\n        if (!isStartup)\r\n            processNewScripts(this.context);\r\n        const obj = res?.scene;\r\n        if (obj) {\r\n            this.previouslyAdded = obj;\r\n            this.context.scene.add(obj);\r\n        }\r\n    }\r\n\r\n    private getHashFromString(str: string) {\r\n        let hash = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n        return hash;\r\n    }\r\n}\r\n\r\nconst htmlTagName = \"needle-engine\";\r\nconst vrContainerClassName = \"vr\";\r\nconst desktopContainerClassname = \"desktop\";\r\nconst knownClasses = [arContainerClassName, vrContainerClassName, desktopContainerClassname];\r\nconst arSessionActiveClassName = \"ar-session-active\";\r\nconst desktopSessionActiveClassName = \"desktop-session-active\";\r\n\r\n// https://developers.google.com/web/fundamentals/web-components/customelements\r\nexport class EngineElement extends HTMLElement implements INeedleEngineComponent {\r\n\r\n    public get loadingProgress01(): number { return this._loadingProgress01; }\r\n    public get loadingFinished(): boolean { return this.loadingProgress01 > .999; }\r\n\r\n    public getContext(): Promise<Context> {\r\n        return new Promise((res, _rej) => {\r\n            if (this._context && this.loadingFinished) {\r\n                res(this._context);\r\n            }\r\n            else {\r\n                const cb = () => {\r\n                    this.removeEventListener(\"loadfinished\", cb);\r\n                    if (this._context && this.loadingFinished) {\r\n                        res(this._context);\r\n                    }\r\n                };\r\n                this.addEventListener(\"loadfinished\", cb);\r\n            }\r\n        });\r\n    }\r\n\r\n    public get Context() { return this._context; }\r\n\r\n    /**@obsolete use GameObject */\r\n    private gameObject = GameObject; // used to access static methods from regular js\r\n    private GameObject = GameObject;\r\n\r\n    private _context: Context | null = null;\r\n    private _overlay_ar: AROverlayHandler;\r\n    private _loadingProgress01: number = 0;\r\n\r\n    private _watcher?: EngineElementSourceFileWatcher;\r\n    private _loadingView?: ILoadingViewHandler;\r\n\r\n    constructor() {\r\n        super();\r\n        this._overlay_ar = new AROverlayHandler();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        this.onSetupDesktop();\r\n\r\n        var observer = new MutationObserver(this.onElementsChanged.bind(this));\r\n        observer.observe(this, { childList: true })\r\n\r\n        // user can set a function name or a path to a gltf or glb to be loaded\r\n        const srcFile = () => {\r\n            const srcVal = this.getAttribute(\"src\");\r\n            if (srcVal?.endsWith(\".glb\") || srcVal?.endsWith(\".gltf\")) {\r\n                return srcVal;\r\n            }\r\n            return null;\r\n        };\r\n        let src: string | null = \"loadScene\";\r\n        const srcAttributeValue = srcFile();\r\n        if (srcAttributeValue) src = srcAttributeValue;\r\n\r\n        const alias = this.getAttribute(\"alias\");\r\n        const hash = this.getAttribute(\"hash\");\r\n        this._context = new Context({ name: src, domElement: this, alias: alias, hash: hash ?? undefined });\r\n        this._watcher = new EngineElementSourceFileWatcher(this.getAttribute(\"id\") ?? alias ?? \"\", this._context);\r\n\r\n        if (src && src.length > 0) {\r\n            // try to get the load function\r\n\r\n            // HACK: if no explicit glb is assigned we have to wait for the codegen function to be available\r\n            // it happened in one case during local development where the function was not yet registered\r\n            // but this component was connected already\r\n            if (!srcAttributeValue) {\r\n                while (Object.keys(build_scene_functions).length <= 0) {\r\n                    if (!this.isConnected) return;\r\n                    await delay(10);\r\n                }\r\n            }\r\n\r\n            let fn: (context: Context) => Promise<void> = build_scene_functions[src] ?? window[src];\r\n            // if no load function is found (e.g. when generated code was deleted or import removed) then just load the glb\r\n            // or if an explicit src file is provided\r\n            let previousFileLoaded: string | null = null;\r\n            if (!fn || srcAttributeValue) {\r\n                if (srcAttributeValue)\r\n                    src = srcAttributeValue;\r\n                fn = async _ => {\r\n                    const file = srcFile();\r\n                    if (file && this._watcher) {\r\n                        previousFileLoaded = file;\r\n                        await this._watcher.onSourceChanged(file, true, true);\r\n                    }\r\n                }\r\n            }\r\n            if (fn) {\r\n                this.classList.add(\"loading\");\r\n                console.log(\"Needle Engine: Begin loading\", alias ?? \"\");\r\n                const allowOverridingDefaultLoading = true;\r\n                // default loading can be overriden by calling preventDefault in the onload start event\r\n                const useDefaultLoading = this.dispatchEvent(new CustomEvent(\"loadstart\", {\r\n                    detail: {\r\n                        context: this._context,\r\n                        alias: alias\r\n                    },\r\n                    cancelable: allowOverridingDefaultLoading\r\n                }));\r\n                if (!this._loadingView && useDefaultLoading)\r\n                    this._loadingView = new EngineLoadingView(this);\r\n                if (useDefaultLoading)\r\n                    this._loadingView?.onLoadingBegin(\"begin load\");\r\n                // setup the loading callback for the default loading handler and the user defined one\r\n                const loadingCallback = (progress: LoadingProgressArgs, message?: string) => {\r\n                    this._loadingProgress01 = calculateProgress01(progress);\r\n                    if (useDefaultLoading)\r\n                        this._loadingView?.onLoadingUpdate(progress, message);\r\n                    this.dispatchEvent(new CustomEvent(\"progress\", {\r\n                        detail: {\r\n                            context: this._context,\r\n                            name: progress.name,\r\n                            progress: progress.progress,\r\n                            index: progress.index,\r\n                            count: progress.count,\r\n                            totalProgress01: this._loadingProgress01\r\n                        }\r\n                    }));\r\n                }\r\n                this.onBeforeBeginLoading();\r\n                await this._context.onCreate(fn, { progress: loadingCallback });\r\n                const file = srcFile();\r\n                if (file) {\r\n                    // only if we didnt load this file here already\r\n                    if (file !== previousFileLoaded)\r\n                        await this._watcher.onSourceChanged(file, true, true);\r\n                }\r\n                this._loadingProgress01 = 1;\r\n                if (useDefaultLoading)\r\n                    this._loadingView?.onLoadingFinished(\"create scene\");\r\n                this.classList.remove(\"loading\");\r\n                this.classList.add(\"loading-finished\");\r\n                console.log(\"Needle Engine: finished loading\", alias ?? \"\");\r\n                this.dispatchEvent(new CustomEvent(\"loadfinished\", {\r\n                    detail: {\r\n                        context: this._context,\r\n                        src: alias ?? src\r\n                    }\r\n                }));\r\n                this.onSetupDesktop();\r\n            }\r\n            else {\r\n                console.error(\"Could not find scene function named \\\"\" + src + \"\\\", it must be either in global scope \" +\r\n                    \"or added to build_scene_functions\", build_scene_functions);\r\n            }\r\n        } else {\r\n            console.error(\"Missing src attribute - please provide a function name\", this);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        if (this._context) {\r\n            this._context.onDestroy();\r\n        }\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return [\"hash\", \"src\", \"loadstart\", \"progress\", \"loadfinished\", \"dracoDecoderPath\", \"dracoDecoderType\", \"ktx2DecoderPath\"];\r\n    }\r\n\r\n    attributeChangedCallback(name: string, _oldValue: string, newValue: string) {\r\n        // console.log(name, oldValue, newValue);\r\n        switch (name) {\r\n            case \"src\":\r\n                this._watcher?.onSourceChanged(newValue);\r\n                break;\r\n            case \"loadstart\":\r\n            case \"progress\":\r\n            case \"loadfinished\":\r\n                if (typeof newValue === \"string\" && newValue.length > 0) {\r\n                    if (debug) console.log(name + \" attribute changed\", newValue);\r\n                    this.registerEventFromAttribute(name, newValue);\r\n                }\r\n                break;\r\n            case \"dracoDecoderPath\":\r\n                if (debug) console.log(\"dracoDecoderPath\", newValue);\r\n                setDracoDecoderPath(newValue);\r\n                break;\r\n            case \"dracoDecoderType\":\r\n                if (newValue === \"wasm\" || newValue === \"js\") {\r\n                    if (debug) console.log(\"dracoDecoderType\", newValue);\r\n                    setDracoDecoderType(newValue);\r\n                }\r\n                else console.error(\"Invalid dracoDecoderType\", newValue, \"expected js or wasm\");\r\n                break;\r\n            case \"ktx2DecoderPath\":\r\n                if (debug) console.log(\"ktx2DecoderPath\", newValue);\r\n                setKtx2TranscoderPath(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private registerEventFromAttribute(eventName: string, code: string) {\r\n        if (typeof code === \"string\" && code.length > 0) {\r\n            // indirect eval https://esbuild.github.io/content-types/#direct-eval\r\n            const fn = (0, eval)(code);\r\n            // const fn = new Function(newValue);\r\n            if (typeof fn === \"function\") {\r\n                this.addEventListener(eventName, evt => fn?.call(globalThis, this._context, evt));\r\n            }\r\n        }\r\n    }\r\n\r\n    getAROverlayContainer(): HTMLElement {\r\n        return this._overlay_ar.findOrCreateARContainer(this);\r\n    }\r\n\r\n    getVROverlayContainer(): HTMLElement | null {\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            const ch = this.children[i] as HTMLElement;\r\n            if (ch.classList.contains(\"vr\"))\r\n                return ch;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onEnterAR(session: XRSession, overlayContainer: HTMLElement) {\r\n        this.onSetupAR();\r\n        this._overlay_ar.onBegin(this._context!, overlayContainer, session);\r\n        this.dispatchEvent(new CustomEvent(\"enter-ar\", { detail: { session: session, context: this._context, htmlContainer: this._overlay_ar?.ARContainer } }));\r\n    }\r\n\r\n    onExitAR(session: XRSession) {\r\n        this._overlay_ar.onEnd(this._context!);\r\n        this.onSetupDesktop();\r\n        this.dispatchEvent(new CustomEvent(\"exit-ar\", { detail: { session: session, context: this._context, htmlContainer: this._overlay_ar?.ARContainer } }));\r\n    }\r\n\r\n    onEnterVR(session: XRSession) {\r\n        this.onSetupVR();\r\n        this.dispatchEvent(new CustomEvent(\"enter-vr\", { detail: { session: session, context: this._context } }));\r\n    }\r\n\r\n    onExitVR(session: XRSession) {\r\n        this.onSetupDesktop();\r\n        this.dispatchEvent(new CustomEvent(\"exit-vr\", { detail: { session: session, context: this._context } }));\r\n    }\r\n\r\n    private onElementsChanged() {\r\n\r\n    }\r\n\r\n    private onSetupAR() {\r\n        this.classList.add(arSessionActiveClassName);\r\n        this.classList.remove(desktopSessionActiveClassName);\r\n        const arContainer = this.getAROverlayContainer();\r\n        if (arContainer) {\r\n            arContainer.classList.add(arSessionActiveClassName);\r\n            arContainer.classList.remove(desktopSessionActiveClassName);\r\n        }\r\n        this.foreachHtmlElement(ch => this.setupElementsForMode(ch, arContainerClassName));\r\n    }\r\n\r\n    private onSetupVR() {\r\n        this.classList.remove(arSessionActiveClassName);\r\n        this.classList.remove(desktopSessionActiveClassName);\r\n        this.foreachHtmlElement(ch => this.setupElementsForMode(ch, vrContainerClassName));\r\n    }\r\n\r\n    private onSetupDesktop() {\r\n        this.classList.remove(arSessionActiveClassName);\r\n        this.classList.add(desktopSessionActiveClassName);\r\n        const arContainer = this.getAROverlayContainer();\r\n        if (arContainer) {\r\n            arContainer.classList.remove(arSessionActiveClassName);\r\n            arContainer.classList.add(desktopSessionActiveClassName);\r\n        }\r\n        this.foreachHtmlElement(ch => this.setupElementsForMode(ch, desktopContainerClassname));\r\n    }\r\n\r\n    private setupElementsForMode(el: HTMLElement, currentSessionType: string, _session: XRSession | null = null) {\r\n        if (el === this._context?.renderer.domElement) return;\r\n        if (el.id === \"VRButton\" || el.id === \"ARButton\") return;\r\n        el.style.position = \"absolute\";\r\n        // el.style.zIndex = \"100\";\r\n        // ch.style.width = \"100hv\";\r\n        // ch.style.height = \"100hv\";\r\n        // set pointer events to none by default (if not explicitly declared)\r\n        // if (!el.style.pointerEvents)\r\n        //     el.style.pointerEvents = \"none\";\r\n\r\n        const classList = el.classList;\r\n        if (classList.contains(currentSessionType)) {\r\n            el.style.visibility = \"visible\";\r\n            if (el.style.display === \"none\")\r\n                el.style.display = \"block\";\r\n        }\r\n        else {\r\n            // only modify style for elements that have a known class (e.g. marked as vr ar desktop)\r\n            for (const known of knownClasses) {\r\n                if (el.classList.contains(known)) {\r\n                    el.style.visibility = \"hidden\";\r\n                    el.style.display = \"none\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private foreachHtmlElement(cb: (HTMLElement) => void) {\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            const ch = this.children[i] as HTMLElement;\r\n            if (ch.style) cb(ch);\r\n        }\r\n    }\r\n\r\n    private onBeforeBeginLoading() {\r\n        const customDracoDecoderPath = this.getAttribute(\"dracoDecoderPath\");\r\n        if (customDracoDecoderPath) {\r\n            if (debug) console.log(\"using custom draco decoder path\", customDracoDecoderPath);\r\n            setDracoDecoderPath(customDracoDecoderPath);\r\n        }\r\n        const customDracoDecoderType = this.getAttribute(\"dracoDecoderType\");\r\n        if (customDracoDecoderType) {\r\n            if (debug) console.log(\"using custom draco decoder type\", customDracoDecoderType);\r\n            setDracoDecoderType(customDracoDecoderType);\r\n        }\r\n        const customKtx2DecoderPath = this.getAttribute(\"ktx2DecoderPath\");\r\n        if (customKtx2DecoderPath) {\r\n            if (debug) console.log(\"using custom ktx2 decoder path\", customKtx2DecoderPath);\r\n            setKtx2TranscoderPath(customKtx2DecoderPath);\r\n        }\r\n    }\r\n}\r\n\r\nwindow.customElements.define(htmlTagName, EngineElement);\r\n\r\n\r\n\r\n", "import { makeErrorsVisibleForDevelopment } from \"./engine/debug/debug_overlay\";\r\nmakeErrorsVisibleForDevelopment();\r\n\r\nimport \"./engine/engine_element\";\r\nimport \"./engine/engine_setup\";\r\n// import \"./engine/engine_mainloop\";\r\n// import \"./engine-components/DomOverlay\";\r\n\r\n\r\nexport { GameObject, Behaviour } from \"./engine-components/Component\";\r\nexport { serializable, serializeable } from \"./engine/engine_serialization_decorator\";\r\nexport { Collision } from \"./engine/engine_types\";\r\nexport * from \"./engine/api\";\r\nexport * from \"./engine-components/codegen/components\";\r\nexport * from \"./engine-components/js-extensions/Object3D\";\r\n\r\n\r\n// make accessible for external javascript\r\nimport { Context } from \"./engine/engine_setup\";\r\nconst Needle = { Context: Context };\r\nglobalThis[\"Needle\"] = Needle;\r\nfunction registerGlobal(obj: object) {\r\n    for (const key in obj) {\r\n        Needle[key] = obj[key];\r\n    }\r\n}\r\nimport * as Component from \"./engine-components/Component\";\r\nregisterGlobal(Component);\r\n\r\nimport * as Components from \"./engine-components/codegen/components\";\r\nregisterGlobal(Components);\r\n\r\nimport { GameObject } from \"./engine-components/Component\";\r\nfor (const method of Object.getOwnPropertyNames(GameObject)) {\r\n    switch (method) {\r\n        case \"prototype\":\r\n        case \"constructor\":\r\n        case \"length\":\r\n        case \"name\":\r\n            continue;\r\n        default:\r\n            Needle[method] = GameObject[method];\r\n            break;\r\n    }\r\n}\r\n\r\n// make three accessible\r\nimport * as THREE from \"three\";\r\nif(!globalThis[\"THREE\"]) {\r\n    globalThis[\"THREE\"] = THREE;\r\n}\r\nelse console.warn(\"Threejs is already imported\");\r\n"],
  "mappings": "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",
  "names": ["e", "module", "r", "t", "i", "u", "require", "n", "a", "p", "exports", "o", "s", "c", "f", "l", "v", "logDisabled_", "deprecationWarnings_", "extractVersion", "uastring", "expr", "pos", "match", "length", "parseInt", "wrapPeerConnectionEvent", "window", "eventNameToWrap", "wrapper", "RTCPeerConnection", "proto", "prototype", "nativeAddEventListener", "addEventListener", "nativeEventName", "cb", "apply", "arguments", "wrappedCallback", "modifiedEvent", "handleEvent", "_eventMap", "Map", "set", "nativeRemoveEventListener", "removeEventListener", "has", "unwrappedCb", "get", "delete", "size", "Object", "keys", "defineProperty", "enumerable", "configurable", "disableLog", "bool", "Error", "disableWarnings", "log", "console", "deprecated", "oldMethod", "newMethod", "warn", "detectBrowser", "result", "browser", "version", "navigator", "mozGetUserMedia", "userAgent", "webkitGetUserMedia", "isSecureContext", "webkitRTCPeerConnection", "RTCIceGatherer", "mediaDevices", "supportsUnifiedPlan", "RTCRtpTransceiver", "isObject", "val", "toString", "call", "compactObject", "data", "reduce", "accumulator", "key", "isObj", "value", "isEmptyObject", "assign", "walkStats", "stats", "base", "resultSet", "id", "forEach", "name", "endsWith", "filterStats", "track", "outbound", "streamStatsType", "filteredResult", "trackStats", "type", "trackIdentifier", "push", "trackStat", "trackId", "logging", "utils", "shimGetUserMedia", "browserDetails", "constraintsToChrome_", "mandatory", "optional", "cc", "ideal", "exact", "min", "max", "oldname_", "prefix", "charAt", "toUpperCase", "slice", "oc", "mix", "advanced", "concat", "shimConstraints_", "constraints", "func", "JSON", "parse", "stringify", "audio", "remap", "obj", "b", "video", "face", "facingMode", "getSupportedFacingModeLies", "matches", "getSupportedConstraints", "enumerateDevices", "then", "devices", "dev", "filter", "d", "kind", "find", "some", "label", "toLowerCase", "includes", "deviceId", "shimError_", "PermissionDeniedError", "PermissionDismissedError", "InvalidStateError", "DevicesNotFoundError", "ConstraintNotSatisfiedError", "TrackStartError", "MediaDeviceFailedDueToShutdown", "MediaDeviceKillSwitchOn", "TabCaptureError", "ScreenCaptureError", "DeviceCaptureError", "message", "constraint", "constraintName", "getUserMedia", "onSuccess", "onError", "bind", "origGetUserMedia", "cs", "stream", "getAudioTracks", "getVideoTracks", "getTracks", "stop", "DOMException", "Promise", "reject", "shimGetDisplayMedia", "getSourceId", "getDisplayMedia", "sourceId", "widthSpecified", "width", "heightSpecified", "height", "frameRateSpecified", "frameRate", "chromeMediaSource", "chromeMediaSourceId", "maxFrameRate", "maxWidth", "maxHeight", "error", "h", "m", "shimMediaStream", "MediaStream", "webkitMediaStream", "shimOnTrack", "transceiver", "receiver", "_ontrack", "origSetRemoteDescription", "setRemoteDescription", "_ontrackpoly", "te", "getReceivers", "event", "Event", "streams", "dispatchEvent", "shimGetSendersWithDtmf", "shimSenderWithDtmf", "pc", "dtmf", "_dtmf", "createDTMFSender", "_pc", "getSenders", "_senders", "origAddTrack", "addTrack", "sender", "origRemoveTrack", "removeTrack", "idx", "indexOf", "splice", "origAddStream", "addStream", "origRemoveStream", "removeStream", "RTCRtpSender", "origGetSenders", "senders", "shimGetStats", "origGetStats", "getStats", "selector", "onSucc", "onErr", "fixChromeStats_", "response", "standardReport", "report", "standardStats", "timestamp", "localcandidate", "remotecandidate", "names", "stat", "makeMapStats", "map", "resolve", "shimSenderReceiverGetStats", "RTCRtpReceiver", "origGetReceivers", "receivers", "srcElement", "MediaStreamTrack", "err", "shimAddTrackRemoveTrackWithNative", "getLocalStreams", "_shimmedLocalStreams", "streamId", "alreadyExists", "existingSenders", "newSenders", "newSender", "shimAddTrackRemoveTrack", "origGetLocalStreams", "nativeStreams", "_reverseStreams", "_streams", "newStream", "signalingState", "oldStream", "method", "nativeMethod", "methodObj", "args", "isLegacyCall", "description", "desc", "replaceInternalStreamId", "origSetLocalDescription", "setLocalDescription", "sdp", "internalId", "externalStream", "internalStream", "replace", "RegExp", "RTCSessionDescription", "replaceExternalStreamId", "origLocalDescription", "getOwnPropertyDescriptor", "streamid", "shimPeerConnection", "RTCIceCandidate", "fixNegotiationNeeded", "target", "getConfiguration", "sdpSemantics", "filterIceServers", "iceServers", "edgeVersion", "hasTurn", "server", "urls", "url", "isString", "validTurn", "startsWith", "SDPUtils", "fixStatsType", "inboundrtp", "outboundrtp", "candidatepair", "writeMediaSection", "caps", "dtlsRole", "writeRtpDescription", "writeIceParameters", "iceGatherer", "getLocalParameters", "writeDtlsParameters", "dtlsTransport", "mid", "rtpSender", "rtpReceiver", "_initialTrackId", "msid", "sendEncodingParameters", "ssrc", "rtx", "localCName", "getCommonCapabilities", "localCapabilities", "remoteCapabilities", "commonCapabilities", "codecs", "headerExtensions", "fecMechanisms", "findCodecByPayloadType", "pt", "payloadType", "preferredPayloadType", "rtxCapabilityMatches", "lRtx", "rRtx", "lCodecs", "rCodecs", "lCodec", "parameters", "apt", "rCodec", "clockRate", "numChannels", "Math", "rtcpFeedback", "fb", "j", "parameter", "lHeaderExtension", "rHeaderExtension", "uri", "isActionAllowedInSignalingState", "action", "offer", "answer", "maybeAddCandidate", "iceTransport", "candidate", "alreadyAdded", "getRemoteCandidates", "remoteCandidate", "foundation", "ip", "port", "priority", "protocol", "addRemoteCandidate", "makeError", "code", "NotSupportedError", "InvalidAccessError", "TypeError", "OperationError", "undefined", "addTrackToStreamAndFireEvent", "MediaStreamTrackEvent", "fireAddTrack", "trackEvent", "setTimeout", "_dispatchEvent", "config", "_eventTarget", "document", "createDocumentFragment", "canTrickleIceCandidates", "needNegotiation", "localStreams", "remoteStreams", "_localDescription", "_remoteDescription", "iceConnectionState", "connectionState", "iceGatheringState", "usingBundle", "bundlePolicy", "rtcpMuxPolicy", "iceTransportPolicy", "_iceGatherers", "iceCandidatePoolSize", "gatherPolicy", "_config", "transceivers", "_sdpSessionId", "generateSessionId", "_sdpSessionVersion", "_dtlsRole", "_isClosed", "onicecandidate", "onaddstream", "ontrack", "onremovestream", "onsignalingstatechange", "oniceconnectionstatechange", "onconnectionstatechange", "onicegatheringstatechange", "onnegotiationneeded", "ondatachannel", "_emitGatheringStateChange", "getRemoteStreams", "_createTransceiver", "doNotAdd", "hasBundleTransport", "recvEncodingParameters", "associatedRemoteMediaStreams", "wantReceive", "transports", "_createIceAndDtlsTransports", "_maybeFireNegotiationNeeded", "clonedStream", "clone", "clonedTrack", "enabled", "_createIceGatherer", "sdpMLineIndex", "shift", "writable", "bufferedCandidateEvents", "bufferCandidates", "end", "state", "_gather", "onlocalcandidate", "evt", "sdpMid", "cand", "component", "ufrag", "usernameFragment", "serializedCandidate", "writeCandidate", "parseCandidate", "toJSON", "sections", "getMediaSections", "getDescription", "join", "complete", "every", "RTCIceTransport", "onicestatechange", "_updateIceConnectionState", "_updateConnectionState", "RTCDtlsTransport", "ondtlsstatechange", "onerror", "_disposeIceAndDtlsTransports", "_transceive", "send", "recv", "params", "encodings", "rtcp", "cname", "compound", "rtcpParameters", "receive", "sessionpart", "splitSections", "mediaSection", "parseRtpParameters", "isIceLite", "matchPrefix", "isRejected", "rejected", "remoteIceParameters", "getIceParameters", "remoteDtlsParameters", "getDtlsParameters", "role", "start", "_updateSignalingState", "receiverList", "iceOptions", "substr", "split", "lines", "splitLines", "getKind", "direction", "getDirection", "remoteMsid", "parseMsid", "getMid", "generateIdentifier", "parseRtpEncodingParameters", "parseRtcpParameters", "isComplete", "cands", "setTransport", "setRemoteCandidates", "default", "getCapabilities", "codec", "isNewTrack", "nativeTrack", "sid", "item", "close", "newState", "states", "closed", "checking", "connected", "completed", "disconnected", "failed", "new", "connecting", "createOffer", "numAudioTracks", "numVideoTracks", "offerOptions", "offerToReceiveAudio", "offerToReceiveVideo", "writeSessionBoilerplate", "remoteCodec", "hdrExt", "rHdrExt", "getLocalCandidates", "createAnswer", "mediaSectionsInOffer", "localTrack", "reducedSize", "addIceCandidate", "candidateString", "trim", "senderOrReceiver", "promises", "all", "allStats", "results", "ortcObjectName", "nativeGetstats", "nativeStats", "mapStats", "methods", "catch", "origMSTEnabled", "ev", "RTCDtmfSender", "RTCDTMFSender", "RTCPeerConnectionShim", "shimReplaceTrack", "replaceTrack", "setTrack", "nativeGetUserMedia", "getSettings", "nativeGetSettings", "applyConstraints", "nativeApplyConstraints", "preferredMediaSource", "mediaSource", "C", "y", "RTCTrackEvent", "mozRTCPeerConnection", "modernStatsTypes", "nativeGetStats", "shimSenderGetStats", "shimReceiverGetStats", "shimRemoveStream", "shimRTCDataChannel", "DataChannel", "RTCDataChannel", "shimAddTransceiver", "origAddTransceiver", "addTransceiver", "setParametersPromises", "initParameters", "shouldPerformCheck", "sendEncodings", "encodingParam", "test", "rid", "parseFloat", "scaleResolutionDownBy", "RangeError", "maxFramerate", "getParameters", "setParameters", "shimGetParameters", "origGetParameters", "shimCreateOffer", "origCreateOffer", "finally", "shimCreateAnswer", "origCreateAnswer", "shimLocalStreamsAPI", "_localStreams", "_addTrack", "index", "tracks", "shimRemoteStreamsAPI", "_remoteStreams", "_onaddstream", "_onaddstreampoly", "shimCallbacksAPI", "successCallback", "failureCallback", "options", "promise", "withCallback", "_getUserMedia", "shimConstraints", "errcb", "shimRTCIceServerUrls", "OrigPeerConnection", "pcConfig", "pcConstraints", "newIceServers", "hasOwnProperty", "generateCertificate", "shimTrackEventTransceiver", "shimCreateOfferLegacy", "audioTransceiver", "getTransceivers", "setDirection", "videoTransceiver", "shimAudioContext", "AudioContext", "webkitAudioContext", "shimRTCIceCandidate", "NativeRTCIceCandidate", "nativeCandidate", "parsedCandidate", "augmentedCandidate", "shimMaxMessageSize", "_sctp", "sctpInDescription", "mLine", "parseMLine", "isFirefox", "maxMessageSize", "canSendMMS", "remoteIsFirefox", "canSendMaxMessageSize", "remoteMMS", "Number", "POSITIVE_INFINITY", "sctp", "shimSendThrowTypeError", "origCreateDataChannel", "createDataChannel", "dataChannel", "wrapDcSend", "channel", "dc", "origDataChannelSend", "byteLength", "readyState", "shimConnectionState", "_onconnectionstatechange", "origMethod", "_connectionstatechangepoly", "_lastConnectionState", "newEvent", "removeExtmapAllowMixed", "nativeSRD", "line", "shimAddIceCandidateNullOrEmpty", "nativeAddIceCandidate", "adapterFactory", "shimChrome", "shimFirefox", "shimEdge", "shimSafari", "adapter", "commonShim", "chromeShim", "browserShim", "firefoxShim", "edgeShim", "safariShim", "_", "require_crypt", "__commonJSMin", "exports", "module", "base64map", "crypt", "n", "b", "bytes", "words", "i", "hex", "c", "base64", "triplet", "j", "imod4", "require_charenc", "__commonJSMin", "exports", "module", "charenc", "str", "bytes", "i", "require_is_buffer", "__commonJSMin", "exports", "module", "obj", "isBuffer", "isSlowBuffer", "require_md5", "__commonJSMin", "exports", "module", "crypt", "utf8", "isBuffer", "bin", "md5", "message", "options", "m", "l", "a", "b", "c", "d", "i", "FF", "GG", "HH", "II", "aa", "bb", "cc", "dd", "x", "s", "t", "n", "digestbytes", "nameofFactory", "name", "CircularBuffer", "factory", "maxSize", "i", "saveParams", "requestedParams", "getUrlParams", "getParam", "paramName", "urlParams", "val", "setOrAddParamsToUrl", "url", "paramName", "paramValue", "setState", "title", "urlParams", "randomNumber", "min", "max", "adjectives", "nouns", "makeIdFromRandomWords", "randomAdjective", "randomNoun", "sanitizeString", "str", "tryFindObject", "globalObjectIdentifier", "obj", "recursive", "searchComponents", "comp", "i", "scene", "found", "child", "deepClone", "predicate", "clone", "key", "val", "delay", "milliseconds", "res", "_", "debugGetPath", "getParam", "getPath", "source", "uri", "pathIndex", "newUri", "uriDirectoryIndex", "WatchImpl", "callback", "object", "prop", "current", "value", "write", "Watch", "s", "w", "isMobileDevice", "isMozillaXR", "iosDevices", "isiOS", "isSafari", "isLocalNetwork", "hostname", "isHostedOnGlitch", "DepthTexture", "WebGLRenderer", "THREE", "THREE", "consoleInstance", "consoleHtmlElement", "consoleSwitchButton", "isLoading", "isVisible", "watchInterval", "defaultButtonIcon", "showConsole", "getParam", "suppressConsole", "showDebugConsole", "isLocalNetwork", "isMobile", "isMobileDevice", "beginWatchingLogs", "createConsole", "engineElement", "getErrorCount", "overlay", "consoleElement", "getConsoleElement", "onResetConsoleElementToDefaultParent", "$defaultConsoleParent", "hideDebugConsole", "consoleElementUpdateInterval", "lastErrorCount", "currentCount", "receivedNewErrors", "onNewConsoleErrors", "onConsoleSwitchButtonClicked", "startHidden", "script", "getConsoleSwitchButton", "buttonStyles", "size", "el", "showBalloonMessage", "text", "logType", "addLog", "showBalloonWarning", "showGizmos", "getParam", "debugExtension", "debug", "getParam", "rootExtensionPrefix", "defaultDependencies", "resolveReferences", "parser", "obj", "arr", "internalResolve", "res", "paths", "promises", "key", "val", "ext", "resolveExtension", "dep", "index", "tryGetIndex", "i", "entry", "tryResolveDependency", "str", "prefix", "name", "endIndex", "debugExtension", "path", "part", "_TypeStore", "key", "type", "existing", "$BuiltInTypeFlag", "TypeStore", "EXTENSION_NAME", "isPersistentAsset", "asset", "NEEDLE_persistent_assets", "parser", "_result", "ext", "debugExtension", "promises", "e", "p", "resolveReferences", "path", "index", "assetTypeInfo", "type", "TypeStore", "debug", "getParam", "SerializationHelper", "type", "ser", "level", "name", "res", "parent", "prot", "resultFromChildren", "typeName", "helper", "TypeSerializer", "key", "ImplementationInformation", "isLocalNetwork", "SerializationContext", "root", "serializeObject", "obj", "context", "types", "val", "buffer", "collectSerializedTypesInBaseTypes", "typeInfoObject", "parentTarget", "deserializeObject", "serializedData", "typeInfo", "serializedEntryInfo", "data", "tryResolve", "typeInfoOrConstructor", "deserializeObjectWithType", "i", "implictlyAssignPrimitiveTypes", "checkObjectAssignments", "blockChecks", "implementationInformation", "$BuiltInTypeFlag", "ownKeys", "value", "serialized", "showBalloonMessage", "member", "isPrimitiveType", "typeOrConstructor", "typeContext", "currentValue", "typeIsFunction", "err", "isPersistentAsset", "serializableInstance", "instance", "debugExtension", "assign", "newArr", "setBuffer", "$isAssigningProperties", "target", "source", "info", "onlyDeclared", "desc", "getPropertyDescriptor", "prop", "debug", "getParam", "KeyEventArgs", "evt", "Input", "count", "i", "pointerType", "type", "isInArray", "t", "index", "key", "k", "keyCode", "args", "debug", "showBalloonMessage", "vec2", "context", "kp", "pt", "evt", "ex", "KeyEventArgs", "p", "current", "touch", "rect", "px", "py", "isInRect", "isDown", "showBalloonWarning", "dx", "dy", "lastUp", "dt", "lf", "rc", "pointerId", "ids", "firstFreeIndex", "arr", "value", "name", "prevContext", "Context", "e", "assign", "Box3", "BufferAttribute", "BufferGeometry", "Layers", "LineBasicMaterial", "LineSegments", "Matrix4", "Quaternion", "Raycaster", "Sphere", "Vector2", "Vector3", "THREE", "MathHelper", "value", "min", "max", "value1", "value2", "t", "min1", "max1", "min2", "max2", "amount", "radians", "degrees", "gamma", "linear", "Mathf", "WebGLRenderer", "Vector3", "Quaternion", "Uniform", "Texture", "ShaderMaterial", "slerp", "vec", "end", "len1", "len2", "targetLen", "Mathf", "flipYQuat", "Quaternion", "Vector3", "_worldPositions", "CircularBuffer", "getWorldPosition", "obj", "vec", "updateParents", "wp", "setWorldPosition", "val", "setWorldPositionXYZ", "x", "y", "z", "_worldQuaternionBuffer", "_worldQuaternion", "_tempQuaternionBuffer2", "getWorldQuaternion", "target", "quat", "setWorldQuaternion", "tempVec", "q", "setWorldQuaternionXYZW", "w", "_worldScale", "_worldScale2", "getWorldScale", "_forward", "_forwardQuat", "_worldEulerBuffer", "_worldEuler", "_worldRotation", "getWorldEuler", "obj", "_worldQuaternion", "setWorldEuler", "val", "setWorldQuaternion", "getWorldRotation", "rot", "wr", "Mathf", "setWorldRotationXYZ", "obj", "x", "y", "z", "degrees", "Mathf", "_worldEulerBuffer", "_worldQuaternionBuffer", "setWorldQuaternion", "logHierarchy", "root", "collapsible", "printGraph", "s", "obj2", "isAnimationAction", "act", "_Graphics", "fragment", "ShaderMaterial", "Uniform", "texture", "blitMaterial", "material", "mesh", "tex", "Texture", "force", "copyTexture", "image", "isImageBitmap", "canvas", "context", "Graphics", "__publicField", "WebGLRenderer", "isImageBitmap", "image", "Vector3", "$physicsKey", "contactsVectorBuffer", "CircularBuffer", "Vector3", "ContactPoint", "point", "dist", "normal", "impulse", "friction", "Collision", "obj", "otherCollider", "contacts", "safeInvoke", "fun", "args", "err", "activeInHierarchyFieldName", "builtinComponentKeyName", "debug", "getParam", "new_scripts_buffer", "processNewScripts", "context", "cb", "i", "script", "updateActiveInHierarchyWithoutEventCall", "addScriptToArrays", "err", "removeScriptFromContext", "safeInvoke", "processRemoveFromScene", "processStart", "object", "removeFromArray", "array", "index", "previousActiveMap", "previousActiveInHierarchyMap", "updateIsActive", "obj", "Context", "updateIsActiveInHierarchyRecursiveRuntime", "isActiveSelf", "go", "activeInHierarchy", "allowEventCall", "activeStateChanged", "active", "activeInHierarchyFieldName", "prevActiveInHierarchy", "perComponent", "comp", "ch", "current", "foundScene", "evt", "THREE", "regex_default", "validate", "uuid", "regex_default", "validate_default", "byteToHex", "i", "unsafeStringify", "arr", "offset", "parse", "uuid", "validate_default", "v", "arr", "parse_default", "stringToBytes", "str", "bytes", "i", "DNS", "URL", "v35", "name", "version", "hashfunc", "generateUUID", "value", "namespace", "buf", "offset", "_namespace", "parse_default", "unsafeStringify", "f", "s", "x", "y", "z", "ROTL", "n", "sha1", "bytes", "K", "H", "msg", "i", "l", "N", "M", "arr", "j", "W", "t", "a", "b", "c", "e", "T", "sha1_default", "v5", "v35", "sha1_default", "v5_default", "debug", "getParam", "ID_NAMESPACE", "InstantiateIdProvider", "val", "seed", "str", "v5_default", "s", "strOrNumber", "hash", "DestroyInstanceModel", "guid", "syncDestroy", "obj", "con", "recursive", "go", "destroy", "model", "sendDestroyed", "beginListenDestroy", "context", "data", "debug", "findByGuid", "NewInstanceModel", "originalGuid", "newGuid", "syncInstantiate", "object", "opts", "hostData", "save", "obj", "Context", "originalOpts", "instance", "seed", "instantiateSeeded", "go", "debug", "model", "generateSeed", "beginListenInstantiate", "context", "tryResolvePrefab", "options", "InstantiateOptions", "InstantiateIdProvider", "inst", "instantiate", "registeredPrefabProviders", "registerPrefabProvider", "key", "fn", "guid", "prov", "res", "tryFindObjectByGuid", "ch", "found", "handlers", "applyPrototypeExtensions", "obj", "prototype", "handler", "registerPrototypeExtensions", "type", "createPrototypeExtensionHandler", "ApplyPrototypeExtension", "i", "key", "descriptor", "object", "desc", "Object3D", "debug", "getParam", "tryGetObject", "obj", "removeComponent", "go", "componentInstance", "index", "getOrAddComponent", "typeName", "comp", "getComponent", "newInstance", "addNewComponent", "callAwake", "apply", "registerComponent", "updateActiveInHierarchyWithoutEventCall", "err", "moveComponentInstance", "destroyComponentInstance", "removeScriptFromContext", "Context", "didWarnAboutComponentAccess", "onGetComponent", "componentType", "arr", "component", "parent", "getComponents", "getComponentInChildren", "includeInactive", "res", "i", "getComponentsInChildren", "getComponentInParent", "o", "getComponentsInParent", "findObjectOfType", "type", "contextOrScene", "scene", "child", "activeInHierarchyFieldName", "findObjectsOfType", "array", "apply", "object", "applyPrototypeExtensions", "Object3D", "active", "type", "addNewComponent", "inst", "removeComponent", "typeName", "getOrAddComponent", "getComponent", "arr", "getComponents", "getComponentInChildren", "getComponentsInChildren", "getComponentInParent", "getComponentsInParent", "isActiveSelf", "val", "setActive", "registerPrototypeExtensions", "NEED_UPDATE_INSTANCE_KEY", "InstancingUtil", "instance", "go", "recursive", "child", "debug", "getParam", "HideFlags", "InstantiateOptions", "$isActive", "isActiveSelf", "go", "visible", "isUsingInstancing", "setActive", "active", "setVisible", "isActiveInHierarchy", "activeInHierarchyFieldName", "markAsInstancedRendered", "instanced", "instance", "InstancingUtil", "findByGuid", "guid", "hierarchy", "tryFindObject", "destroy", "recursive", "isRoot", "comp", "obj", "ch", "components", "lastLength", "i", "foreachComponent", "cb", "res", "child", "instantiate", "opts", "options", "context", "Context", "InstantiateIdProvider", "goMapping", "skinnedMeshes", "clone", "internalInstantiate", "resolveReferences", "resolveAndBindSkinnedMeshBones", "logHierarchy", "guidsMap", "copy", "oldGuid", "registerComponent", "processNewScripts", "componentsList", "newGameObjectsMap", "skinnedMeshesMap", "userData", "children", "apply", "cloneGo", "parent", "setWorldPosition", "setWorldQuaternion", "requestedParent", "func", "key", "value", "newComponents", "assign", "newChild", "newObjectsMap", "val", "original", "originalSkeleton", "originalBones", "clonedSkeleton", "bones", "bone", "clonedBone", "entries", "clonedArray", "entry", "postProcessNewInstance", "originalGameObjectReference", "id", "newGameObject", "index", "RAPIER", "ActiveEvents", "Collider", "ColliderDesc", "EventQueue", "JointData", "RigidBody", "RigidBodyType", "World", "BufferAttribute", "Line", "BoxGeometry", "EdgesGeometry", "Color", "LineSegments", "LineBasicMaterial", "Mesh", "SphereGeometry", "Vector3", "Quaternion", "_tmp", "Vector3", "_quat", "Quaternion", "defaultColor", "Gizmos", "origin", "dir", "color", "duration", "depthTest", "obj", "Internal", "positions", "pt", "direction", "lengthFactor", "pt0", "pt1", "center", "radius", "setWorldPositionXYZ", "size", "box", "BoxGeometry", "CreateWireCube", "col", "Color", "edges", "EdgesGeometry", "LineSegments", "LineBasicMaterial", "$cacheSymbol", "geo", "Mesh", "Context", "line", "Line", "BufferAttribute", "wireframe", "sphere", "SphereGeometry", "context", "object", "cache", "cb", "ctx", "objects", "times", "time", "i", "__publicField", "debugPhysics", "getParam", "debugColliderPlacement", "debugCollisions", "showColliders", "$componentKey", "$bodyKey", "$colliderRigidbody", "RaycastOptions", "ox", "oy", "Vector2", "mask", "Layers", "lm", "__publicField", "SphereIntersection", "object", "distance", "point", "_Physics", "Raycaster", "spherePos", "radius", "traverseChildsAfterHit", "sphere", "Sphere", "ch", "a", "b", "Box3", "obj", "sp", "results", "mesh", "geo", "test", "dist", "getWorldPosition", "int", "len", "ray", "options", "opts", "mp", "rc", "cam", "targets", "ignorelist", "r", "RAPIER", "CircularBuffer", "Vector3", "origin", "direction", "maxDistance", "solid", "hit", "vec", "vec3", "o", "camPosition", "Quaternion", "Matrix4", "context", "gravity", "World", "collider", "center", "size", "scale", "getWorldScale", "desc", "ColliderDesc", "height", "convex", "positions", "indices", "key", "scaledPositions", "i", "matrix", "rigidBody", "useExplicitMassProperties", "col", "ActiveEvents", "_matrix", "rb", "kinematic", "rigidBodyDesc", "pos", "getWorldQuaternion", "body", "index", "Collider", "RigidBody", "comp", "translation", "rotation", "rigidbody", "physicsBody", "_deltaTime", "EventQueue", "world", "material", "LineBasicMaterial", "geometry", "BufferGeometry", "LineSegments", "buffers", "BufferAttribute", "PhysicsCollisionHandler", "rot", "offset", "setWorldPositionXYZ", "setWorldQuaternionXYZW", "worldPosition", "worldQuaternion", "RigidBodyType", "mat", "matrices", "body1", "body2", "b1", "b2", "params", "JointData", "joint", "anchor", "axis", "world1", "world2", "Physics", "eventQueue", "handle1", "handle2", "started", "col1", "col2", "colliderComponent1", "colliderComponent2", "self", "selfBody", "other", "otherBody", "collision", "foreachComponent", "c", "manifold", "_flipped", "hasDeclaredEventMethod", "contacts", "normal", "pt", "impulse", "friction", "contact", "ContactPoint", "Gizmos", "Collision", "info", "active", "arg", "Clock", "Time", "sum", "i", "WebsocketBuilder", "int32", "float32", "float64", "isLittleEndian", "Long", "low", "high", "other", "Encoding", "ByteBuffer", "bytes_", "byte_size", "position", "offset", "Long", "int32", "float32", "isLittleEndian", "float64", "value", "result", "i", "bb_pos", "vtable_offset", "vtable", "t", "opt_encoding", "length", "Encoding", "codePoint", "b", "c", "d", "o", "ident", "low", "high", "listAccessor", "listLength", "ret", "val", "Builder", "opt_initial_size", "initial_size", "ByteBuffer", "forceDefaults", "size", "additional_bytes", "align_size", "old_buf_size", "byte_size", "i", "value", "voffset", "defaultValue", "obj", "bb", "new_buf_size", "nbb", "offset", "numfields", "vtableloc", "trimmed_size", "standard_fields", "len", "existing_vtable", "vt1", "outer_loop", "vt2", "j", "root_table", "opt_file_identifier", "opt_size_prefix", "size_prefix", "file_identifier", "table", "field", "table_start", "vtable_start", "elem_size", "num_elems", "alignment", "s", "utf8", "codePoint", "a", "b", "bytes", "low", "high", "Long", "list", "ret", "val", "startFunc", "binaryIdentifierCasts", "registerType", "identifier", "cast", "tryCast", "bin", "id", "tryGetGuid", "obj", "import_peerjs", "PeerNetworking", "hostId", "id", "host", "Peer", "err", "_id", "PeerHost", "data", "AbstractPeerHandler", "peer", "PeerHost", "AbstractPeerHandler", "peer", "con", "_con", "connectionIds", "c", "id", "msg", "cur", "curCon", "entry", "serverUrl", "debugNet", "getParam", "debugOwner", "OwnershipModel", "connection", "guid", "res", "debugOwner", "resolve", "reject", "updates", "waitForOwnership", "NetworkConnection", "context", "PeerNetworking", "debugNet", "id", "target", "user", "room", "viewOnly", "key", "data", "queue", "bin", "count", "msg", "message", "callback", "index", "identifier", "prov", "overrideUrl", "serverUrl", "isHostedOnGlitch", "ws", "WebsocketBuilder", "_evt", "i", "ev", "_", "blob", "buf", "bb", "ByteBuffer", "callbacks", "obj", "tryCast", "tryGetGuid", "cb", "model", "time", "listeners", "listener", "arr", "str", "queued", "EffectComposer", "RenderPass", "THREE", "import_md5", "Upload_Result", "success", "filename", "hash", "size", "upload_file", "file", "url", "buffer", "hashString", "ext", "alias", "body", "answer", "formData", "headers", "upload_res", "res", "md5", "download_file", "expectedHash", "expectedSize", "serverUrl", "skipChecks", "download_res", "bin", "result_hash", "err", "download", "progressCallback", "response", "reader", "contentLength", "total", "received", "chunks", "done", "value", "final", "position", "chunk", "onDynamicObjectAdded", "_obj", "_idProv", "_gltf", "gltfLoader", "gltfLoaderType", "getLoader", "registerLoader", "loader", "FileSpawnModel", "connectionId", "seed", "guid", "name", "hash", "size", "position", "serverUrl", "addFile", "file", "context", "backendUrl", "resolve", "_reject", "reader", "_ev", "content", "generateSeed", "prov", "InstantiateIdProvider", "gltf", "getLoader", "obj", "handleUpload", "onDynamicObjectAdded", "addFileFromUrl", "url", "beginListenFileSpawn", "evt", "addPreview", "bin", "download_file", "removePreview", "parent", "findByGuid", "connection", "upload_result", "upload_file", "model", "previews", "sphere", "object", "box", "_context", "existing", "THREE", "debug", "getParam", "AssetDatabase", "event", "pathArray", "source", "url", "loading", "res", "guid", "name", "texture", "mesh", "material", "_gltf", "_asset", "Stats", "Vector4", "EquirectangularReflectionMapping", "sRGBEncoding", "WebGLCubeRenderTarget", "LightProbeGenerator", "THREE", "loader", "loadFileAsync", "url", "resolve", "reject", "Vector4", "FileLoader", "DataTexture", "RGBAFormat", "Color", "white", "whiteDefaultTexture", "DataTexture", "RGBAFormat", "createFlatTexture", "col", "size", "hasAlpha", "length", "data", "g", "b", "i", "k", "tex", "createTrilightTexture", "col0", "col1", "col2", "width", "height", "colors", "colorCount", "Color", "y", "colorIndex", "nextIndex", "Mathf", "t", "r", "x", "UnityShaderStage", "stage", "code", "ShaderLib", "url", "text", "loadFileAsync", "res", "rej", "obj", "entry", "lib", "ToUnityMatrixArray", "mat", "buffer", "arr", "col1", "col2", "col3", "col4", "el", "Vector4", "noAmbientLight", "copyBuffer", "SetUnitySphericalHarmonics", "array", "i", "ShaderBundle", "vertexShader", "fragmentShader", "technique", "FindShaderTechniques", "shaderData", "id", "program", "vertId", "fragId", "vertShader", "fragShader", "loadShaderCode", "shader", "uri", "FileLoader", "b64DecodeUnicode", "str", "c", "debug", "getParam", "AmbientMode", "RendererData", "context", "time", "Vector4", "sceneLightSettings", "sourceId", "reflectionTexture", "h", "LightData", "debug", "AmbientMode", "existing", "scene", "tex", "sRGBEncoding", "EquirectangularReflectionMapping", "colors", "createTrilightTexture", "createFlatTexture", "res", "_rej", "interval", "ex", "ambientScale", "intensityFactor", "reflection", "rt", "size", "WebGLCubeRenderTarget", "sampledProbe", "LightProbeGenerator", "lightFactor", "factor", "i", "err", "Object3D", "debug", "getParam", "Addressables", "context", "uri", "ref", "_AssetReference", "sourceId", "fullPath", "getPath", "addressables", "existing", "val", "hash", "registerPrefabProvider", "destroy", "res", "download", "p", "prog", "Context", "getLoader", "processNewScripts", "parent", "saveOnServer", "evt", "index", "list", "networked", "options", "InstantiateOptions", "Object3D", "prefab", "instance", "syncInstantiate", "instantiate", "asset", "scene", "AssetReference", "__publicField", "AddressableSerializer", "TypeSerializer", "data", "_context", "Application", "context", "evt", "FloatType", "HalfFloatType", "sRGBEncoding", "EXTENSION_NAME", "debug", "getParam", "LightmapType", "NEEDLE_lightmaps", "parser", "reg", "source", "_result", "extensions", "ext", "arr", "res", "_rej", "dependencies", "entry", "resolveReferences", "tex", "sRGBEncoding", "FloatType", "HalfFloatType", "THREE", "debugLightmap", "getParam", "LightDataRegistry", "context", "sourceId", "type", "tex", "index", "LightmapType", "map", "arr", "debug", "getParam", "PlayerView", "obj", "userId", "context", "PlayerViewManager", "id", "device", "view", "debug", "debug", "getParam", "stats", "debugActive", "build_scene_functions", "FrameEvent", "registerComponent", "script", "context", "new_scripts", "Context", "_Context", "val", "el", "cam", "stats", "args", "useComposer", "getParam", "WebGLRenderer", "EffectComposer", "Application", "Time", "Input", "Physics", "NetworkConnection", "AssetDatabase", "RendererData", "Addressables", "LightDataRegistry", "PlayerViewManager", "resizeCallback", "resizeObserver", "_", "intersectionObserver", "entries", "scaleFactor", "width", "height", "camera", "pa", "buildScene", "opts", "destroy", "cb", "e", "coroutine", "evt", "idx", "c", "rout", "i", "index", "last", "target", "callback", "onBeforeRenderCallback", "renderer", "scene", "geometry", "material", "group", "arr", "fn", "style", "prepare_succeeded", "err", "beginListenInstantiate", "beginListenDestroy", "beginListenFileSpawn", "foreachComponent", "comp", "processNewScripts", "renderPass", "RenderPass", "debug", "logHierarchy", "frame", "updateIsActive", "processStart", "physicsSteps", "dt", "paused", "debugActive", "DepthTexture", "rt", "prevTarget", "evts", "iter", "res", "isGenerator", "__publicField", "arContainerClassName", "quitARClassName", "AROverlayHandler", "context", "overlayContainer", "session", "el", "quit_Elements", "i", "_context", "created", "prev", "isMozillaXR", "canvas", "elements", "child", "element", "ch", "arElements", "svg", "path", "debug", "getParam", "hide", "errorContainer", "locationRegex", "LogType", "getErrorCount", "errorCount", "makeErrorsVisibleForDevelopment", "isLocalNetwork", "error", "args", "addLog", "onReceivedError", "event", "type", "message", "_file", "_line", "domElement", "Context", "newMessage", "i", "showMessage", "currentMessages", "element", "msg", "container", "getLogsContainer", "msgcontainer", "getMessageContainer", "returnMessageContainer", "logsContainerStyles", "arContainerClassName", "style", "typeSymbol", "containerCache", "containers", "Component_exports", "__export", "Behaviour", "Component", "GameObject", "THREE", "GameObject", "go", "active", "processStart", "setVisible", "setActive", "updateIsActive", "Context", "isActiveSelf", "isActiveInHierarchy", "instanced", "markAsInstancedRendered", "instance", "isUsingInstancing", "cb", "recursive", "foreachComponent", "opts", "syncInstantiate", "instantiate", "context", "syncDestroy", "isRoot", "destroy", "parent", "comp", "addScriptToArrays", "processRemoveFromScene", "functionName", "args", "children", "c", "fn", "type", "callAwake", "addNewComponent", "moveComponentInstance", "removeComponent", "typeName", "getOrAddComponent", "getComponent", "arr", "getComponents", "guid", "hierarchy", "findByGuid", "includeInactive", "findObjectOfType", "findObjectsOfType", "getComponentInChildren", "getComponentsInChildren", "getComponentInParent", "getComponentsInParent", "list", "_Component", "str", "res", "activeInHierarchyFieldName", "val", "routine", "evt", "destroyComponentInstance", "getWorldPosition", "setWorldPosition", "x", "y", "z", "getWorldQuaternion", "setWorldQuaternion", "w", "rot", "wr", "Mathf", "degrees", "listener", "index", "listeners", "Component", "__publicField", "Behaviour", "validate", "set", "get", "target", "propertyKey", "descriptor", "createPropertyWrapper", "showBalloonMessage", "$prop", "awake", "v", "$isAssigningProperties", "oldValue", "debug", "getParam", "currentFileProgress", "currentFileName", "calculateProgress01", "progress", "debug", "count", "total", "showBalloonWarning", "prog", "Mathf", "EngineLoadingView", "container", "opts", "message", "i", "el", "total01", "dt", "max", "t", "percent", "existing", "className", "c", "loadingBarContainer", "maxWidth", "getGradientPos", "messageContainer", "DRACOLoader", "KTX2Loader", "debug", "getParam", "dracoLoader", "ktx2Loader", "setDracoDecoderPath", "path", "DRACOLoader", "setDracoDecoderType", "type", "setKtx2TranscoderPath", "KTX2Loader", "addDracoAndKTX2Loaders", "loader", "context", "AnimationClip", "MathUtils", "AnimatorStateInfo", "state", "normalizedTime", "length", "speed", "createMotion", "name", "id", "MathUtils", "AnimationClip", "AnimationClip", "AnimationMixer", "AxesHelper", "Euler", "LoopOnce", "Quaternion", "Vector3", "THREE", "debug", "getParam", "debugRootMotion", "AnimatorController", "name", "layerIndex", "normalizedTime", "durationInSec", "sm", "state", "value", "key", "p", "val", "speed", "layer", "animator", "AnimationMixer", "clonedModel", "deepClone", "_owner", "_key", "_value", "isAnimationAction", "dt", "model", "i", "motion", "action", "start", "didEnterStateThisFrame", "index", "transition", "allConditionsAreMet", "cond", "param", "dur", "didTriggerLooping", "duration", "info", "AnimatorStateInfo", "beh", "offsetNormalized", "isSelf", "prevAction", "prev", "LoopOnce", "clip", "RootMotionHandler", "root", "_animator", "t", "createMotion", "mapping", "e", "AnimationClip", "behaviour", "type", "TypeStore", "instance", "assign", "TrackEvaluationWrapper", "track", "evaluate", "createOriginalInterpolator", "time", "res", "_RootMotionAction", "Vector3", "Quaternion", "context", "positionTrack", "rotationTrack", "values", "lastRotation", "euler", "Mathf", "_clip", "AxesHelper", "valuesDiff", "valuesPrev", "prevTime", "weight", "id", "arr", "firstKeyframe", "Euler", "lastKeyframe", "RootMotionAction", "__publicField", "controller", "mixer", "rootName", "handler", "hand", "entry", "tracks", "serializeable", "type", "serializable", "setNullForPrimitiveTypes", "i", "entry", "_target", "_propertyKey", "types", "debug", "getParam", "Animator", "Behaviour", "val", "AnimatorController", "name", "layer", "normalizedTime", "transitionDurationInSec", "value", "speed", "minMax", "Mathf", "clone", "__decorateClass", "serializable", "THREE", "AnimationClip", "debug", "getParam", "Animation", "Behaviour", "val", "animations", "index", "handle", "InstancingUtil", "name", "a", "i", "clipOrNumber", "options", "clip", "act", "action", "prev", "stopOther", "Mathf", "AnimationHandle", "_", "__decorateClass", "serializable", "AnimationClip", "mixer", "opts", "cb", "res", "rej", "reason", "_evt", "evt", "GLTFLoader", "THREE", "RawShaderMaterial", "debug", "getParam", "NEEDLE_TECHNIQUES_WEBGL_NAME", "ObjectRendererData", "obj", "ToUnityMatrixArray", "_CustomShader", "RawShaderMaterial", "clone", "createUniformProperties", "identifier", "args", "debug", "Context", "index", "context", "data", "array", "envTexture", "SetUnitySphericalHarmonics", "hdr", "ObjectRendererData", "_renderer", "_scene", "camera", "_geometry", "obj", "_group", "ToUnityMatrixArray", "mainLight", "lp", "getWorldPosition", "intensity", "params", "cam", "depthTexture", "colorTexture", "objData", "CustomShader", "__publicField", "NEEDLE_techniques_webgl", "NEEDLE_TECHNIQUES_WEBGL_NAME", "loader", "mat", "techniqueIndex", "shaders", "technique", "resolve", "reject", "bundle", "FindShaderTechniques", "frag", "vert", "uniforms", "techniqueUniforms", "u", "uniformName", "timeUniform", "isTransparent", "materialExtension", "key", "val", "indexString", "texIndex", "tex", "material", "type", "whiteDefaultTexture", "value", "debug", "debugExtension", "componentsArrayExportKey", "EXTENSION_NAME", "ExtensionData", "builtinComponentKeyName", "ExportData", "node", "nodeIndex", "nodeDef", "NEEDLE_components", "exp", "writer", "originalFunction", "o", "def", "_nodeDef", "components", "context", "input", "i", "data", "serializedComponentData", "comp", "res", "getLoader", "result", "parser", "ext", "hasExtension", "loadComponents", "nodes", "obj", "index", "apply", "componentData", "tasks", "serializedData", "resolveReferences", "EXRLoader", "debug", "getParam", "EXT_texture_exr", "parser", "textureIndex", "name", "textureDef", "extension", "loader", "_event", "EXTENSION_NAME", "NEEDLE_gameobject_data", "parser", "_result", "promises", "index", "node", "ext", "p", "nodeId", "obj", "AmbientLight", "Color", "HemisphereLight", "EXTENSION_NAME", "debug", "getParam", "NEEDLE_lighting_settings", "parser", "sourceId", "context", "_result", "extensions", "ext", "settings", "GameObject", "SceneLightSettings", "Color", "c", "Behaviour", "type", "tex", "evt", "isActive", "AmbientLight", "ground", "sky", "hemisphere", "HemisphereLight", "data", "NeverStencilFunc", "LessStencilFunc", "EqualStencilFunc", "LessEqualStencilFunc", "GreaterStencilFunc", "NotEqualStencilFunc", "GreaterEqualStencilFunc", "AlwaysStencilFunc", "ZeroStencilOp", "KeepStencilOp", "ReplaceStencilOp", "IncrementStencilOp", "DecrementStencilOp", "IncrementWrapStencilOp", "DecrementWrapStencilOp", "InvertStencilOp", "debug", "getParam", "matchesLayer", "stencilLayer", "comp", "_NEEDLE_render_objects", "obj", "source", "settings", "i", "stencil", "mat", "parser", "_result", "extensions", "ext", "EXTENSION_NAME", "stencils", "ToThreeCompareFunction", "ToThreeStencilOp", "NEEDLE_render_objects", "__publicField", "ToThreeStencilOp", "op", "KeepStencilOp", "ZeroStencilOp", "ReplaceStencilOp", "IncrementStencilOp", "DecrementStencilOp", "IncrementWrapStencilOp", "DecrementWrapStencilOp", "InvertStencilOp", "ToThreeCompareFunction", "func", "NeverStencilFunc", "LessStencilFunc", "EqualStencilFunc", "LessEqualStencilFunc", "GreaterStencilFunc", "NotEqualStencilFunc", "GreaterEqualStencilFunc", "AlwaysStencilFunc", "EXTENSION_NAME", "TextureLoader", "GLTFLoader", "EXTENSION_NAME", "debug", "getParam", "debug_toggle_maps", "show_lod0", "evt", "map", "material", "key", "value", "_NEEDLE_progressive", "context", "source", "level", "slot", "val", "t", "debug_map", "entry", "parser", "sourceId", "gltf", "textureInfo", "index", "ext", "prom", "current", "_level", "uri", "getPath", "resolveKey", "loader", "GLTFLoader", "addDracoAndKTX2Loaders", "found", "tex", "other", "loaded", "TextureLoader", "NEEDLE_progressive", "__publicField", "registerComponentExtension", "loader", "ext", "NEEDLE_components", "p", "PointerResolver", "path", "registerExtensions", "context", "sourceId", "NEEDLE_gameobject_data", "NEEDLE_persistent_assets", "NEEDLE_lightmaps", "NEEDLE_lighting_settings", "NEEDLE_techniques_webgl", "NEEDLE_render_objects", "NEEDLE_progressive", "EXT_texture_exr", "setPointerResolverFunction", "Vector3", "AlignmentConstraint", "Behaviour", "Vector3", "fromWorldPos", "getWorldPosition", "toWorldPos", "dist", "setWorldPosition", "__decorateClass", "serializable", "GameObject", "Keyframe", "__decorateClass", "serializable", "AnimationCurve", "time", "i", "kf", "nextKf", "t", "Mathf", "THREE", "THREE", "PositionalAudioHelper", "debug", "getParam", "_AudioSource", "Behaviour", "cb", "fn", "val", "debug", "listener", "GameObject", "AudioListener", "_evt", "x", "y", "a", "buffer", "sound", "dist", "PositionalAudioHelper", "clip", "_", "wasPlaying", "AudioSource", "__publicField", "__decorateClass", "serializable", "THREE", "Color", "RGBAColor", "r", "g", "b", "a", "cloned", "col", "color", "alpha", "rgba", "Mathf", "color1", "color2", "rgba1", "rgba2", "PerspectiveCamera", "Ray", "debug", "getParam", "debugscreenpointtoray", "_Camera", "Behaviour", "PerspectiveCamera", "val", "changed", "x", "y", "ray", "cam", "origin", "dir", "camPosition", "getWorldPosition", "Ray", "evt", "px", "py", "randomHex", "Gizmos", "cameraAlreadyCreated", "factor", "showBalloonMessage", "alpha", "session", "environmentBlendMode", "transparent", "CameraSkybox", "Camera", "__publicField", "__decorateClass", "serializable", "RGBAColor", "camera", "AudioListener", "Behaviour", "AudioSource", "listener", "cam", "GameObject", "Camera", "GLTFLoader", "THREE", "debug", "getParam", "AvatarModel", "root", "head", "leftHand", "rigthHand", "h", "AvatarLoader", "context", "avatarId", "opts", "InstantiateOptions", "GameObject", "tryFindObject", "model", "download_res", "bin", "blob", "download_file", "getLoader", "loader", "GLTFLoader", "addDracoAndKTX2Loaders", "resolve", "_reject", "url", "gltf", "progress", "error", "_id", "_model", "obj", "searchIn", "rightHand", "boundsSize", "maxAxis", "searchString", "name", "matchesAll", "str", "child", "found", "response", "_AxesHelper", "AxesHelper", "Behaviour", "showGizmos", "_AxesHelper", "mat", "__decorateClass", "serializable", "THREE", "BasicIKConstraint", "Behaviour", "toPos", "getWorldPosition", "fromPos", "dist", "dir0", "center", "hintDir", "offsetDir", "halfDist", "stretchDistance", "offsetLength", "resultPos", "setWorldPosition", "lookPos", "THREE", "gizmos", "getParam", "debug", "_BoxHelperComponent", "Behaviour", "obj", "scaleFactor", "i", "wp", "getWorldPosition", "size", "getWorldScale", "intersects", "Gizmos", "box", "force", "firstUpdate", "updateParents", "col", "CreateWireCube", "BoxHelperComponent", "__publicField", "Quaternion", "Ray", "Vector3", "THREE", "CallInfo", "method", "enabled", "args", "isUpperCase", "string", "EventListEvent", "EventList", "key", "target", "temp", "foundFirstLetter", "c", "evts", "m", "fn", "evt", "cb", "i", "Color", "Object3D", "Texture", "WebGLRenderTarget", "WebGLRenderTarget", "RenderTexture", "ColorSerializer", "TypeSerializer", "Color", "RGBAColor", "data", "colorSerializer", "ObjectSerializer", "Object3D", "context", "node", "debugExtension", "res", "gltfScene", "GameObject", "objectSerializer", "ComponentSerializer", "Component", "Behaviour", "_context", "guid", "root", "c", "i", "child", "componentSerializer", "EventListSerializer", "EventList", "_data", "CallInfo", "fns", "call", "target", "hasMethod", "printWarningMethodNotFound", "foundMethod", "fn", "args", "invokeFunction", "forwardedArgs", "method", "debugInfo", "evt", "eventListOwner", "eventListSerializer", "RenderTextureSerializer", "RenderTexture", "WebGLRenderTarget", "Texture", "tex", "rt", "THREE", "Matrix4", "Vector3", "TransformWatch", "clearPreviousValues", "key", "val", "obj", "context", "position", "rotation", "Watch", "prop", "prev", "original", "lastParentMatrix", "Matrix4", "parent", "matrix", "_Rigidbody", "Behaviour", "v", "pt", "localspace", "vec", "_rel", "x", "y", "z", "vel", "Vector3", "_velocity", "wp", "getWorldPosition", "Rigidbody", "__publicField", "__decorateClass", "validate", "serializable", "Mesh", "Vector3", "Collider", "Behaviour", "Rigidbody", "__decorateClass", "serializable", "SphereCollider", "Vector3", "BoxCollider", "MeshCollider", "Mesh", "getWorldScale", "CapsuleCollider", "CharacterController", "Behaviour", "Vector3", "Rigidbody", "rb", "collider", "CapsuleCollider", "vec", "col", "contact", "__decorateClass", "serializable", "CharacterControllerInput", "Quaternion", "forward", "backward", "rotateLeft", "rotateRight", "jump", "step", "rotation", "Mathf", "forwardVector", "canJump", "factor", "verticalSpeed", "Ray", "getWorldPosition", "currentLayer", "hits", "RaycastOptions", "Animator", "Interactable", "Behaviour", "_args", "UsageMarker", "DeleteBox", "BoxHelperComponent", "Deletable", "Behaviour", "GameObject", "box", "obj", "UsageMarker", "syncDestroy", "DeviceFlag", "Behaviour", "GameObject", "isMobile", "__decorateClass", "serializable", "_isMobile", "check", "a", "THREE", "Vec3", "i", "bb", "builder", "x", "y", "z", "Transform", "i", "bb", "obj", "Vec3", "builder", "position_x", "position_y", "position_z", "rotation_x", "rotation_y", "rotation_z", "scale_x", "scale_y", "scale_z", "SyncedTransformModel", "i", "bb", "obj", "optionalEncoding", "offset", "Transform", "builder", "guidOffset", "fast", "transformOffset", "dontSave", "debug", "getParam", "SyncedTransformIdentifier", "registerType", "SyncedTransformModel", "builder", "Builder", "createTransformModel", "guid", "b", "fast", "guidObj", "p", "Transform", "res", "SyncedTransform", "Behaviour", "GameObject", "Rigidbody", "OwnershipModel", "sendDestroyed", "model", "data", "transform", "InstancingUtil", "position", "rotation", "setWorldEuler", "wp", "wr", "worlddiff", "worldRot", "threshold", "t", "requireMarkDirty", "pos", "rot", "updateInterval", "fastUpdate", "st", "THREE", "Euler", "EventDispatcher", "Group", "Matrix4", "Mesh", "MeshBasicMaterial", "Object3D", "Quaternion", "RingGeometry", "Vector3", "ARButton", "renderer", "sessionInit", "button", "ARButtonControlsDomOverlay", "showStartAR", "overlay", "svg", "currentSession", "path", "originalDomOverlayParent", "onSessionStarted", "session", "overlayElement", "onSessionEnded", "disableButton", "showARNotSupported", "stylizeElement", "element", "supported", "message", "_VRButton", "renderer", "options", "button", "showEnterVR", "currentSession", "onSessionStarted", "session", "onSessionEnded", "sessionInit", "disableButton", "showWebXRNotFound", "stylizeElement", "element", "supported", "message", "VRButton", "__publicField", "THREE", "import_peerjs", "AudioAnalyser", "noVoip", "debug", "getParam", "allowVoip", "PeerModel", "id", "PeerConnection", "voip", "peer", "userId", "peerId", "debug", "track", "mute", "tracks", "Voip", "err", "remoteStream", "evt", "AudioConnection", "obj", "call", "stream", "AudioSource", "listener", "audio", "devices", "dev", "AudioAnalyser", "Behaviour", "value", "vol", "cur", "c", "getParam", "noVoip", "allowVoip", "isiOS", "isSafari", "Peer", "_evt", "cb", "prevConnection", "newConnection", "id", "activeConnection", "incoming", "key", "PeerModel", "conn", "data", "metadata", "currentCall", "Matrix4", "WebARSessionRoot", "Behaviour", "val", "Matrix4", "xr", "GameObject", "WebXR", "session", "rig", "_session", "pose", "mat", "rot", "InstancingUtil", "scale", "__decorateClass", "serializable", "BoxHelper", "BufferGeometry", "Color", "Euler", "Layers", "Line", "Mesh", "MeshBasicMaterial", "Quaternion", "Ray", "SphereGeometry", "Vector2", "Vector3", "OculusHandModel", "OculusHandPointerModel", "XRControllerModelFactory", "GLTFLoader", "THREE", "Quaternion", "Vector3", "debug", "getParam", "_XRState", "state", "debug", "XRFlag", "XRState", "__publicField", "_XRFlag", "Behaviour", "r", "i", "res", "flag", "st", "GameObject", "Object3D", "debug", "getParam", "_AvatarMarker", "Behaviour", "index", "cb", "visible", "GameObject", "AvatarMarker", "__publicField", "_WebXRAvatar", "Vector3", "context", "guid", "webXR", "mask", "f", "avatarId", "Object3D", "state", "_timeDiff", "device", "viewObj", "InstancingUtil", "ht", "t", "Avatar_POI", "root", "reference", "prefab", "model", "XRFlag", "flag", "WebXRAvatar", "AvatarLoader", "Quaternion", "Avatar_POI", "context", "obj", "ignoredBy", "e", "Context", "__publicField", "TargetModel", "Avatar_Brain_LookAt", "Behaviour", "target", "r", "TypeStore", "rm", "GameObject", "AvatarMarker", "marker", "OwnershipModel", "cb", "setWorldPosition", "Avatar_POI", "wp", "getWorldPosition", "pois", "poi", "ThreeMeshUI", "ThreeOrbitControls", "Object3D", "LookAtConstraint", "Behaviour", "__decorateClass", "serializable", "Object3D", "THREE", "freeCam", "getParam", "disabledKeys", "defaultKeys", "OrbitControls", "Behaviour", "func", "cam", "GameObject", "Camera", "ThreeOrbitControls", "isMobileDevice", "camGo", "forward", "opts", "RaycastOptions", "hits", "focusAtPointer", "step", "position", "slerp", "immediate", "index", "sources", "target", "delta", "rc", "hit", "pos", "getWorldPosition", "__decorateClass", "serializable", "LookAtConstraint", "PointerEventData", "events", "Object3D", "debug", "getParam", "_EventSystem", "Behaviour", "context", "GameObject", "sys", "go", "Object3D", "Context", "instance", "MeshUIHelper", "_context", "rc", "i", "grabbed", "ctrl", "args", "opts", "PointerEventData", "prevGrabbed", "comp", "controllerRcOpts", "RaycastOptions", "_ctrl", "WebXRController", "WebXR", "pos", "hits", "orbitControlComponent", "previousOrbitControlState", "OrbitControls", "obj", "behaviours", "beh", "inst", "arr", "res", "a", "b", "hit", "object", "originalObject", "parent", "isShadow", "clicked", "canvasGroup", "pressedOrClicked", "$shadowDomOwner", "actualGo", "UIRaycastUtils", "handled", "isHovered", "pressed", "meshUiObject", "EventSystem", "__publicField", "threeMeshUI", "lu", "intersect", "selectState", "foundBlock", "last", "elem", "AxesHelper", "includesDir", "value", "$shadowDomOwner", "BaseUIComponent", "Behaviour", "EventSystem", "val", "GameObject", "UIRootComponent", "container", "parent", "searchFrom", "c", "needsUpdate", "targetShadowComponent", "showGizmos", "_state", "current", "owner", "callback", "ch", "UIRaycastUtils", "obj", "shadowOwner", "$shadowDomOwner", "out", "canvasGroup", "graphic", "foreachComponent", "c", "res", "gr", "debug", "getParam", "TeleportTarget", "Behaviour", "_WebXRController", "line", "Line", "mat", "geometry", "SphereGeometry", "material", "MeshBasicMaterial", "sphere", "Mesh", "owner", "index", "addTo", "type", "ctrl", "GameObject", "context", "loader", "GLTFLoader", "addDracoAndKTX2Loaders", "getPath", "hand", "OculusHandModel", "x", "OculusHandPointerModel", "_", "event", "jnts", "key", "joint", "evt", "callback", "list", "idx", "r", "wrist", "Quaternion", "getWorldQuaternion", "Euler", "Vector3", "Vector2", "debug", "i", "_e", "subs", "sub", "wp", "getWorldPosition", "allowRaycastLineVisible", "setWorldPosition", "wr", "setWorldQuaternion", "session", "rig", "buttons", "speedFactor", "powFactor", "speed", "Mathf", "sideDir", "side", "forwardDir", "forward", "rotate", "rotAbs", "dir", "teleport", "pinched", "doTeleport", "isInMiniatureMode", "newRigScale", "btn", "cam", "rc", "hit", "point", "obj", "inputSource", "factor", "scale", "intersections", "closeGrab", "intersection", "object", "args", "AttachedObject", "UIRaycastUtils", "layer", "ch", "ray", "Ray", "overlapCenter", "BoxHelper", "opts", "RaycastOptions", "Layers", "hits", "WebXRController", "__publicField", "XRControllerModelFactory", "Color", "BufferGeometry", "_AttachedObject", "event", "callback", "idx", "obj", "x", "i", "controller", "candidate", "intersection", "closeGrab", "interactable", "GameObject", "Interactable", "debug", "objectToAttach", "sync", "SyncedTransform", "o", "att", "take", "hit", "_interactable", "args", "mesh", "UsageMarker", "Rigidbody", "getWorldPosition", "getGrabPoint", "rot", "getWorldQuaternion", "rig", "Avatar_POI", "object", "prevParent", "rb", "Vector3", "Quaternion", "rigPos", "rigDelta", "rigScale", "currentDist", "target", "targetQuat", "setWorldQuaternion", "setWorldPosition", "InstancingUtil", "AttachedObject", "__publicField", "Object3D", "THREE", "Color", "BoxGizmo", "Behaviour", "showGizmos", "CreateWireCube", "__decorateClass", "serializable", "Color", "debug", "getParam", "XRRig", "Behaviour", "gizmoObj", "Object3D", "gizmo", "BoxGizmo", "Quaternion", "Vector3", "Vector4", "Vec4", "i", "bb", "builder", "x", "y", "z", "w", "VrUserStateBuffer", "i", "bb", "obj", "optionalEncoding", "offset", "Vec3", "Vec4", "builder", "guidOffset", "time", "avatarIdOffset", "positionOffset", "rotationOffset", "scale", "posLeftHandOffset", "posRightHandOffset", "rotLeftHandOffset", "rotRightHandOffset", "debugLogs", "getParam", "debugAvatar", "VRUserStateBufferIdentifier", "registerType", "VrUserStateBuffer", "getTimeStampNow", "flatbuffers_long_from_number", "num", "low", "high", "Long", "_VRUserState", "Vector3", "Vector4", "Quaternion", "guid", "rig", "pos", "rot", "webXR", "avatarId", "q0", "q1", "ctrl0", "ctrl1", "wrist", "builder", "net", "id", "Vec3", "Vec4", "res", "arr", "state", "posLeftHand", "posRightHand", "rotLeftHand", "rotRightHand", "VRUserState", "__publicField", "WebXRSync", "Behaviour", "GameObject", "WebXR", "Voip", "debugAvatar", "debugGuid", "newUser", "WebXRAvatar", "debugState", "off", "_evt", "evt", "hasId", "time", "temp", "timeDiff", "debugLogs", "user", "err", "now", "key", "avatar", "utcnow", "rem", "connectionId", "Builder", "OwnershipModel", "frame", "xr", "pose", "transform", "getParam", "detectARSupport", "isMozillaXR", "detectVRSupport", "arSupported", "vrSupported", "res", "_WebXR", "Behaviour", "arSupported", "vrSupported", "type", "listener", "webXR", "opts", "vrButton", "VRButton", "domOverlayRoot", "features", "arButton", "ARButton", "button", "session", "AssetReference", "GameObject", "WebXRSync", "sync", "WebAR", "browserSupportsXR", "buttonsContainer", "Quaternion", "frame", "pose", "transform", "ctrl", "i", "WebXRController", "getWorldPosition", "getWorldQuaternion", "xrRig", "XRRig", "Group", "Vector3", "space", "rot", "quat", "eu", "Euler", "xr", "cam", "c", "flag", "XRState", "wasInAR", "setWorldPosition", "setWorldQuaternion", "_session", "getParam", "url", "setOrAddParamsToUrl", "noVoip", "str", "WebXR", "__publicField", "EventDispatcher", "__decorateClass", "serializable", "_WebAR", "webxr", "element", "active", "context", "deviceType", "controllerCount", "WebARSessionRoot", "referenceSpace", "source", "err", "Mesh", "RingGeometry", "MeshBasicMaterial", "Object3D", "eng", "el", "rig", "placementMatrix", "arPlacementWithoutHitTestMatrix", "positionFromRig", "Matrix4", "hitTestResults", "hit", "didPlace", "matrix", "debug", "_DragControls", "Interactable", "type", "cb", "GameObject", "OrbitControls", "_obj", "evt", "WebXR", "dc", "args", "delta", "DragHelper", "object", "listener", "sync", "SyncedTransform", "debug", "UsageMarker", "rbs", "Rigidbody", "l", "nameofFactory", "rb", "selected", "DragControls", "__publicField", "_DragHelper", "camera", "line", "mat", "geometry", "material", "sphere", "newSelected", "context", "Avatar_POI", "_context", "mainKey", "secondaryKey", "scaleKey", "isRotateKeyPressed", "isRotating", "dt", "rc", "lookDirection", "getWorldPosition", "lookDot", "switchModeKeyPressed", "dragOnGroundPlane", "changed", "y", "wp", "pointOnPlane", "heightOnly", "cur", "setWorldPosition", "s", "ray", "opts", "RaycastOptions", "hits", "i", "hit", "normal", "InstancingUtil", "obj", "toSearch", "child", "Networking", "Behaviour", "socketurl", "res", "getParam", "match", "url", "localhostFallback", "result", "useLocalHostUrl", "hostname", "isLocalNetwork", "DropListener", "Behaviour", "Networking", "evt", "items", "ite", "it", "file", "res", "addFile", "str", "url", "addFileFromUrl", "gltf", "opts", "RaycastOptions", "rc", "obj", "hit", "__decorateClass", "serializable", "Vector3", "Quaternion", "Object3D", "Duplicatable", "Interactable", "Vector3", "Quaternion", "drag", "GameObject", "DragControls", "_ctrls", "args", "res", "WebXRController", "_controller", "selected", "opts", "InstantiateOptions", "newInstance", "current", "search", "child", "__decorateClass", "serializable", "Object3D", "TriggerEvent", "__decorateClass", "serializable", "EventList", "EventTrigger", "Behaviour", "type", "trigger", "_", "ThreeFlyControls", "FlyControls", "Behaviour", "cam", "GameObject", "Camera", "ThreeFlyControls", "Color", "_GridHelper", "GridHelper", "Behaviour", "showGizmos", "size", "divisions", "_GridHelper", "Color", "__decorateClass", "serializable", "GroundProjection", "GroundProjectedEnv", "Behaviour", "val", "Watch", "_", "GroundProjection", "__decorateClass", "serializable", "Vector3", "Joint", "Behaviour", "Rigidbody", "__decorateClass", "serializable", "FixedJoint", "self", "other", "HingeJoint", "Vector3", "THREE", "Color", "toRadians", "degrees", "shadowMaxDistance", "debug", "getParam", "Light", "Behaviour", "val", "cam", "factor", "scaleFactor", "light", "vec", "WebXR", "GameObject", "WebARSessionRoot", "i", "lightAlreadyCreated", "dirLight", "shadowMaxDistance", "setWorldPositionXYZ", "debug", "spotLightHelper", "spotLight", "toRadians", "spotLightTarget", "pointLight", "sx", "sy", "__publicField", "__decorateClass", "serializable", "Color", "THREE", "Vector3", "debug", "getParam", "noLods", "LODModel", "__decorateClass", "serializable", "LOD", "group", "model", "guid", "rend", "debug", "go", "res", "GameObject", "comp", "ch", "LODGroup", "Behaviour", "noLods", "maxDistance", "renderers", "lod", "i", "handler", "empty", "obj", "lodDistanceDiff", "object", "dist", "cullDistance", "cam", "h", "setting", "factor", "level", "Vector3", "debug", "getParam", "NestedGltf", "Behaviour", "evt", "parent", "opts", "InstantiateOptions", "InstantiateIdProvider", "matrix", "res", "str", "hash", "__decorateClass", "serializable", "AssetReference", "Quaternion", "Euler", "Vector3", "Plane", "OffsetConstraint", "Behaviour", "Vector3", "pos", "getWorldPosition", "rot", "getWorldQuaternion", "l", "plane", "Plane", "refSpacePoint", "v2", "setWorldPosition", "euler", "Euler", "quat", "Quaternion", "setWorldQuaternion", "lookDirection", "__decorateClass", "serializable", "GameObject", "THREE", "Matrix4", "Quaternion", "Vector3", "Vector2", "Euler", "createNoise4D", "Gradient", "time", "target", "closestAlpha", "closestAlphaIndex", "closestColor", "closestColorIndex", "i", "key", "nextColor", "t", "Mathf", "nextAlpha", "__decorateClass", "serializable", "ParticleSystemShapeType", "MinMaxCurve", "t01", "lerpFactor", "t", "Mathf", "t1", "t2", "__decorateClass", "serializable", "AnimationCurve", "_MinMaxGradient", "MinMaxGradient", "__publicField", "RGBAColor", "Gradient", "MainModule", "ParticleBurst", "time", "amount", "nextTime", "EmissionModule", "b", "i", "burst", "ColorOverLifetimeModule", "SizeOverLifetimeModule", "Vector3", "target", "scale", "_ShapeModule", "ParticleSystemShapeType", "particle", "Euler", "Matrix4", "system", "_context", "simulationSpace", "obj", "pos", "isWorldSpace", "isRotated", "radius", "position", "rx", "ry", "rz", "rp", "direction", "randomQuat", "tempVec", "dir", "theta", "phi", "x", "y", "z", "v", "thickness", "arc", "vec", "u", "r", "_angle", "arcMode", "ShapeModule", "Quaternion", "NoiseModule", "context", "_index", "vel", "_deltaTime", "age", "life", "createNoise4D", "temp", "nx", "ny", "nz", "strengthFactor", "TrailModule", "size", "_life01", "pos01", "res", "color", "life01", "overTrail", "overLife", "__decorateClass", "serializable", "MinMaxGradient", "MinMaxCurve", "VelocityOverLifetimeModule", "system", "Vector3", "_index", "_pos", "vel", "_dt", "age", "life", "t", "speed", "x", "y", "z", "TextureSheetAnimationModule", "t01", "tiles", "index", "__decorateClass", "serializable", "MinMaxCurve", "RotationOverLifetimeModule", "RotationBySpeedModule", "_t01", "speed", "t", "Mathf", "LimitVelocityOverLifetimeModule", "Vector3", "_position", "baseVelocity", "currentVelocity", "_size", "_dt", "_scale", "max", "InheritVelocityModule", "Vector3", "_context", "vel", "factor", "t01", "lerpFactor", "__decorateClass", "serializable", "MinMaxCurve", "SizeBySpeedModule", "_t01", "size", "speed", "x", "Mathf", "Vector2", "ColorBySpeedModule", "color", "res", "MinMaxGradient", "AxesHelper", "Material", "Mesh", "Object3D", "Quaternion", "Vector3", "Vector4", "BatchedParticleRenderer", "ConstantColor", "ConstantValue", "_ParticleSystem", "RenderMode", "TrailParticle", "Vector3", "Quaternion", "Matrix4", "VECTOR_ONE", "Vector3", "VECTOR_Z", "$emitterMatrix", "ParticleSubEmitter", "system", "particleSystem", "subSystem", "subParticleSystem", "maxMatrices", "CircularBuffer", "Matrix4", "Quaternion", "particle", "delta", "m", "_delta", "debug", "getParam", "SubEmitterSystem", "context", "ps", "ParticleSystem", "GameObject", "ParticleSystemRenderer", "Behaviour", "trailEnabled", "geo", "Mesh", "__decorateClass", "serializable", "Material", "MinMaxCurveFunction", "curve", "t", "BaseValueGenerator", "system", "TextureSheetStartFrameGenerator", "ParticleSystemEmissionOverTime", "Vector3", "currentPosition", "getWorldPosition", "emission", "distanceEmission", "distanceEmissionValue", "burst", "maxEmission", "Mathf", "ParticleSystemEmissionOverDistance", "ParticleSystemBaseBehaviour", "ps", "_particle", "_delta", "TextureSheetAnimationBehaviour", "particle", "sheet", "t01", "index", "RotationBehaviour", "delta", "t", "speed", "$sizeLerpFactor", "SizeBehaviour", "age01", "size", "scaleFactor", "$particleLife", "$trailLifetime", "$trailStartLength", "TrailBehaviour", "TrailParticle", "trailParticle", "iter", "length", "i", "state", "pos01", "$startVelocity", "$gravityFactor", "$velocityLerpFactor", "temp3", "temp4", "Quaternion", "VelocityBehaviour", "factor", "gravityFactor", "baseVelocity", "noise", "sizeBySpeed", "colorBySpeed", "velocity", "limitVelocityOverLifetime", "$colorLerpFactor", "ColorBehaviour", "col", "ParticleSystemInterface", "MinMaxCurveFunction", "ConstantColor", "Vector4", "RenderMode", "ConstantValue", "mat", "tex", "createFlatTexture", "RGBAColor", "ParticlesEmissionState", "_ParticleSystem", "Behaviour", "includeChildren", "GameObject", "comp", "count", "emitEndedState", "arr", "ParticleBurst", "instance", "assign", "sub", "SubEmitterSystem", "ParticleSystemRenderer", "Object3D", "BatchedParticleRenderer", "emitter", "debug", "AxesHelper", "cam", "scale", "getWorldScale", "source", "getWorldQuaternion", "dt", "sys", "ParticleSubEmitter", "ParticleSystem", "__decorateClass", "serializable", "ColorOverLifetimeModule", "MainModule", "EmissionModule", "SizeOverLifetimeModule", "ShapeModule", "NoiseModule", "TrailModule", "VelocityOverLifetimeModule", "LimitVelocityOverLifetimeModule", "InheritVelocityModule", "ColorBySpeedModule", "TextureSheetAnimationModule", "RotationOverLifetimeModule", "RotationBySpeedModule", "SizeBySpeedModule", "THREE", "WaitForSeconds", "seconds", "context", "time", "Context", "start", "PlayerColor", "Behaviour", "WaitForSeconds", "marker", "GameObject", "AvatarMarker", "id", "hash", "color", "mesh", "ch", "obj", "col", "mat", "str", "chr", "r", "g", "b", "EquirectangularReflectionMapping", "sRGBEncoding", "Vector3", "debug", "getParam", "disable", "$reflectionProbeKey", "$originalMaterial", "_ReflectionProbe", "Behaviour", "object", "context", "isAnchor", "probes", "probe", "tex", "obj", "scaleFactor", "BoxHelperComponent", "EquirectangularReflectionMapping", "sRGBEncoding", "index", "_rend", "rendererCache", "material", "cached", "clone", "copy", "ReflectionProbe", "__publicField", "__decorateClass", "serializable", "Vector3", "THREE", "THREE", "RendererLightmap", "tex", "gameObject", "context", "lightmapIndex", "lightmapScaleOffset", "lightmapTexture", "debug", "_renderer", "_scene", "_camera", "_geometry", "material", "_group", "mesh", "mat", "shader", "_", "lightmap", "uniforms", "AxesHelper", "Object3D", "Vector4", "Layers", "$customVisibilityFlag", "setCustomVisibility", "obj", "visible", "$didPatch", "suppressInstancing", "getParam", "debugLightmap", "debugInstancing", "debugProgressiveLoading", "suppressProgressiveLoading", "FieldWithDefault", "SharedMaterialArray", "renderer", "setMaterial", "getMaterial", "go", "target", "key", "index", "value", "mat", "obj", "_Renderer", "Behaviour", "visible", "setCustomVisibility", "ShadowCastingMode", "suppressInstancing", "tex", "lm", "debug", "AxesHelper", "type", "child", "ch", "GameObject", "rm", "RendererLightmap", "debugLightmap", "enabled", "instancing", "handler", "i", "NEEDLE_render_objects", "needsUpdate", "NEED_UPDATE_INSTANCE_KEY", "handle", "layer", "_renderer", "_scene", "_camera", "_geometry", "material", "_group", "suppressProgressiveLoading", "debugProgressiveLoading", "NEEDLE_progressive", "factor", "isAnchor", "ReflectionProbe", "Renderer", "__publicField", "__decorateClass", "serializable", "Vector4", "Object3D", "MeshRenderer", "SkinnedMeshRenderer", "InstancingHandler", "context", "handlesArray", "args", "level", "res", "nextLevel", "mesh", "geo", "InstancedMeshRenderer", "InstanceHandle", "instanceIndex", "originalObject", "instancer", "updateChildren", "_InstancedMeshRenderer", "name", "count", "debugInstancing", "lastElement", "THREE", "Object3D", "ShaderMaterial", "Texture", "Vector2", "Vector4", "awaitInputAsync", "res", "_", "fn", "awaitInput", "cb", "PlaneGeometry", "MeshBasicMaterial", "Mesh", "ObjectUtils", "type", "opts", "obj", "geometry", "PlaneGeometry", "material", "MeshBasicMaterial", "Mesh", "debug", "getParam", "VideoRenderMode", "VideoPlayer", "Behaviour", "val", "video", "url", "debug", "_evt", "awaitInput", "getParam", "evt", "err", "playAutomatically", "src", "str", "VideoOverlay", "target", "GameObject", "Renderer", "mat", "id", "lastAspect", "stream", "aspect", "track", "settings", "i", "obj", "worldAspect", "parentScale", "getWorldScale", "__decorateClass", "serializable", "Object3D", "Texture", "context", "VideoOverlayInput", "index", "texture", "ObjectUtils", "ScreenspaceTexture", "quad", "overlay", "args", "delta", "Vector2", "normalizedMovement", "lastTouchStartTime", "e", "touch1", "touch2", "dx", "dy", "distance", "ShaderMaterial", "vec", "zoom", "tex", "Vector4", "import_peerjs", "EventDispatcher", "debug", "getParam", "disposeStream", "str", "cap", "ScreenCapture", "Behaviour", "tracks", "track", "debug", "AudioSource", "GameObject", "VideoPlayer", "handle", "PeerHandle", "NetworkedVideo", "PeerEvent", "opts", "settings", "displayMediaOptions", "myVideo", "fps", "stream", "err", "mode", "evt", "options", "devices", "d", "dev", "id", "userMedia", "__decorateClass", "serializable", "ReceiveVideoEvent", "target", "PeerUserConnectedModel", "peerId", "CallHandle", "EventDispatcher", "disposeStream", "userId", "call", "direction", "stream", "args", "ReceiveVideoEvent", "_PeerHandle", "context", "guid", "peer", "userConnectionId", "peerId", "opts", "id", "_", "Peer", "debug", "PeerUserConnectedModel", "meta", "arr", "handle", "err", "index", "e", "closeInterval", "PeerHandle", "__publicField", "NetworkedVideo", "_steam", "calls", "evt", "user", "startedNewCall", "c", "ShadowMaterial", "AdditiveBlending", "ShadowCatcher", "Behaviour", "RGBAColor", "renderer", "GameObject", "Renderer", "material", "AdditiveBlending", "shader", "ShadowMaterial", "__decorateClass", "serializable", "RGBELoader", "EXRLoader", "EquirectangularRefractionMapping", "sRGBEncoding", "TextureLoader", "debug", "getParam", "ComponentsSyncerManager", "comp", "syncer", "ComponentPropertiesSyncer", "syncerHandler", "state", "propertyName", "value", "net", "key", "name", "val", "guid", "err", "testValueChanged", "newValue", "previousValue", "valueChanged", "getSyncer", "instance", "syncField", "onFieldChanged", "target", "propertyKey", "fn", "t", "internalAwake", "backingFieldName", "oldValue", "RemoteSkybox", "Behaviour", "url", "isEXR", "isHdr", "EXRLoader", "RGBELoader", "TextureLoader", "envMap", "EquirectangularRefractionMapping", "sRGBEncoding", "nameIndex", "type", "name", "envurl", "__decorateClass", "syncField", "serializable", "THREE", "Object3D", "_SmoothFollow", "Behaviour", "hard", "wp", "getWorldPosition", "fpos", "Mathf", "currentPosition", "wr", "getWorldQuaternion", "frot", "SmoothFollow", "__publicField", "__decorateClass", "serializable", "Object3D", "Layers", "debug", "getParam", "layer1", "Layers", "layer2", "testMask", "mask1", "mask2", "SpatialTriggerReceiver", "Behaviour", "trigger", "SpatialTrigger", "i", "last", "cur", "__decorateClass", "serializable", "EventList", "_SpatialTrigger", "GameObject", "BoxHelperComponent", "obj", "rec", "c", "__publicField", "THREE", "debug", "getParam", "SpectatorCamera", "Behaviour", "val", "userId", "target", "prev", "self", "GameObject", "SpectatorSelectionController", "SpectatorCamNetworking", "Camera", "SpectatorHandler", "WebXR", "OrbitControls", "ua", "standalone", "isHololens", "_evt", "renderer", "xrWasEnabled", "previousRenderTarget", "oldFramebuffer", "mainCam", "backgroundColor", "cam", "wasPresenting", "isFirstPersonMode", "av", "AvatarMarker", "mask", "flags", "flag", "context", "spectator", "view", "followObject", "SmoothFollow", "mode", "perspectiveCamera", "_inverseYQuat", "evt", "downTime", "_", "dt", "opts", "RaycastOptions", "hits", "hit", "obj", "avatar", "id", "SpectatorFollowerChangedEventModel", "connectionId", "stoppedFollowing", "SpectatorFollowEventModel", "comp", "_prevId", "stopped", "stop", "model", "userBeingFollowed", "userThatIsFollowing", "index", "i", "THREE", "Material", "NearestFilter", "Texture", "Vector2", "debug", "getParam", "_SpriteUtils", "sprite", "geo", "vertices", "uvs", "i", "index", "uv", "SpriteUtils", "__publicField", "Sprite", "__decorateClass", "serializable", "Texture", "serializeable", "Slice", "Vector2", "$spriteTexOwner", "SpriteSheet", "index", "slice", "tex", "NearestFilter", "SpriteRenderer", "Behaviour", "value", "debug", "sprite", "SpriteUtils", "mat", "RGBAColor", "Material", "SyncedCameraModel", "i", "bb", "obj", "optionalEncoding", "offset", "Vec3", "builder", "userIdOffset", "guidOffset", "dontSave", "posOffset", "rotOffset", "Object3D", "SyncedCameraModelIdentifier", "registerType", "SyncedCameraModel", "builder", "Builder", "CameraModel", "connectionId", "guid", "cam", "con", "userId", "p", "getWorldPosition", "r", "getWorldRotation", "Vec3", "offset", "_SyncedCamera", "Behaviour", "timeDiff", "GameObject", "WebXR", "wp", "wq", "getWorldQuaternion", "model", "rc", "opt", "InstantiateOptions", "instance", "marker", "AvatarMarker", "obj", "InstancingUtil", "pos", "setWorldPositionXYZ", "rot", "setWorldRotationXYZ", "SyncedCamera", "__publicField", "__decorateClass", "serializable", "Object3D", "AssetReference", "viewParamName", "debug", "getParam", "SyncedRoom", "Behaviour", "viewId", "call", "hasRoomParameter", "val", "roomNameParam", "sanitizeString", "view", "params", "getUrlParams", "room", "setState", "makeIdFromRandomWords", "randomNumber", "url", "urlParams", "__decorateClass", "serializable", "detect_run_tests", "count", "getParam", "spawnWindows", "url", "setOrAddParamsToUrl", "noVoip", "str", "windows", "w", "spacing", "size", "x", "y", "i", "px", "py", "testWindow", "Vector3", "TestRunner", "Behaviour", "detect_run_tests", "TestSimulateUserData", "SyncedTransformIdentifier", "_mod", "i", "TransformModel", "Builder", "builder", "buf", "createTransformModel", "mod", "guid", "obj", "beh", "rb", "world", "rot", "vel", "__publicField", "Vector3", "MathUtils", "TransformControls", "OrbitControls", "TransformGizmo", "Behaviour", "showGizmos", "TransformControls", "x", "mesh", "gizmoMat", "orbit", "GameObject", "OrbitControls", "event", "sync", "SyncedTransform", "control", "MathUtils", "__decorateClass", "serializable", "LinearToneMapping", "ACESFilmicToneMapping", "ReinhardToneMapping", "debug", "getParam", "TonemappingMode", "VolumeParameter", "VolumeComponent", "ToneMapping", "ColorAdjustments", "resolveComponentType", "data", "volumeKey", "VolumeProfile", "context", "remove", "renderer", "isActive", "component", "tonemapping", "LinearToneMapping", "mode", "ReinhardToneMapping", "ACESFilmicToneMapping", "colorAdjustments", "exposure", "useExposure", "__decorateClass", "serializable", "d", "Volume", "Behaviour", "Vector3", "XRGrabModel", "context", "point", "source", "target", "XRGrabRendering", "Behaviour", "AttachedObject", "model", "data", "inst", "instance", "GameObject", "playerColor", "PlayerColor", "pl", "id", "att", "mod", "i", "targetObject", "Vector3", "step", "key", "wp", "getWorldPosition", "setWorldPosition", "Object3D", "AvatarBlink_Simple", "Behaviour", "GameObject", "XRFlag", "eye", "__decorateClass", "serializable", "Object3D", "THREE", "Object3D", "_AvatarEyeLook_Rotation", "Behaviour", "GameObject", "Avatar_Brain_LookAt", "target", "eyes", "worldTarget", "getWorldPosition", "headPosition", "direction", "forward", "getWorldQuaternion", "i", "AvatarEyeLook_Rotation", "__publicField", "__decorateClass", "serializable", "Object3D", "Object3D", "debug", "getParam", "Avatar_MouthShapes", "Behaviour", "GameObject", "Voip", "AvatarMarker", "id", "freq", "frequency", "index", "arr", "shape", "__decorateClass", "serializable", "Object3D", "Avatar_MustacheShake", "Behaviour", "GameObject", "Voip", "AvatarMarker", "id", "freq", "t", "components_exports", "__export", "AlignmentConstraint", "Animation", "AnimationCurve", "AnimationExtension", "AnimationTrackHandler", "Animator", "AnimatorController", "AttachedObject", "AudioListener", "AudioSource", "AudioTrackHandler", "AvatarBlink_Simple", "AvatarEyeLook_Rotation", "AvatarLoader", "AvatarMarker", "AvatarModel", "Avatar_Brain_LookAt", "Avatar_MouthShapes", "Avatar_MustacheShake", "Avatar_POI", "AxesHelper", "BaseUIComponent", "BasicIKConstraint", "BoxCollider", "BoxGizmo", "BoxHelperComponent", "Button", "CallInfo", "Camera", "Canvas", "CanvasGroup", "CapsuleCollider", "CharacterController", "CharacterControllerInput", "Collider", "ColorAdjustments", "ColorBySpeedModule", "ColorOverLifetimeModule", "ControlTrackHandler", "Deletable", "DeleteBox", "DeviceFlag", "DragControls", "DropListener", "Duplicatable", "EmissionModule", "EventList", "EventListEvent", "EventSystem", "EventTrigger", "FieldWithDefault", "FixedJoint", "FlyControls", "GltfExport", "GltfExportBox", "Gradient", "Graphic", "GraphicRaycaster", "GridHelper", "GridLayoutGroup", "GroundProjectedEnv", "HingeJoint", "HorizontalLayoutGroup", "Image", "InheritVelocityModule", "InputField", "Interactable", "Keyboard", "LODGroup", "LODModel", "LayoutGroup", "Light", "LimitVelocityOverLifetimeModule", "LogStats", "LookAtConstraint", "MainModule", "MaskableGraphic", "MeshCollider", "MeshRenderer", "MinMaxCurve", "MinMaxGradient", "NestedGltf", "Networking", "NoiseModule", "ObjectRaycaster", "OffsetConstraint", "OrbitControls", "ParticleBurst", "ParticleSubEmitter", "ParticleSystem", "ParticleSystemRenderer", "PlayableDirector", "PlayerColor", "PointerEventData", "RGBAColor", "RawImage", "Raycaster", "Rect", "RectTransform", "ReflectionProbe", "RegisteredAnimationInfo", "RemoteSkybox", "Renderer", "RendererLightmap", "Rigidbody", "RotationBySpeedModule", "RotationOverLifetimeModule", "ScreenCapture", "ShadowCatcher", "ShapeModule", "SignalAsset", "SignalReceiver", "SignalReceiverEvent", "SignalTrackHandler", "Size", "SizeBySpeedModule", "SizeOverLifetimeModule", "SkinnedMeshRenderer", "SmoothFollow", "SpatialHtml", "SpatialTrigger", "SpatialTriggerReceiver", "SpectatorCamera", "SphereCollider", "Sprite", "SpriteRenderer", "SpriteSheet", "SubEmitterSystem", "SyncedCamera", "SyncedRoom", "SyncedTransform", "TeleportTarget", "TestRunner", "TestSimulateUserData", "Text", "TextureSheetAnimationModule", "ToneMapping", "TrailModule", "TransformData", "TransformGizmo", "UIRaycastUtils", "UIRootComponent", "USDZExporter", "UsageMarker", "VRUserState", "VelocityOverLifetimeModule", "VerticalLayoutGroup", "VideoPlayer", "Voip", "Volume", "VolumeComponent", "VolumeParameter", "VolumeProfile", "WebAR", "WebARSessionRoot", "WebXR", "WebXRAvatar", "WebXRController", "WebXRSync", "XRFlag", "XRGrabModel", "XRGrabRendering", "XRRig", "XRState", "__Ignore", "debug", "getParam", "LogStats", "Behaviour", "info", "THREE", "SignalAsset", "SignalReceiverEvent", "EventList", "SignalReceiver", "Behaviour", "sig", "id", "evt", "err", "__decorateClass", "serializable", "THREE", "Quaternion", "Vector3", "debug", "getParam", "TrackHandler", "val", "backwards", "i", "clip", "time", "model", "index", "models", "isActive", "weight", "isBlendingWithNext", "easeIn", "easeOut", "AnimationClipOffsetData", "action", "root", "rootPositionTrackName", "rootRotationTrackName", "track", "euler", "AnimationTrackHandler", "clipModel", "parts", "rootName", "positionTrackName", "rotationTrackName", "foundPositionTrack", "foundRotationTrack", "t", "indexOfProperty", "baseName", "objName", "targetObj", "trackName", "rot", "pos", "off", "clipData", "Vector3", "Quaternion", "activeClips", "blend", "didPostExtrapolate", "isInTimeRange", "postExtrapolation", "nextClip", "loops", "duration", "invert", "effectiveWeight", "totalPosition", "totalRotation", "summedPos", "tempPos", "summedRot", "tempRot", "clipOffsetRot", "clipRot", "offsets", "_clip", "_clipModel", "createInterpolantOriginal", "quat", "trackOffsetRot", "createdInterpolant", "interpolate", "res", "currentPosition", "trackOffsetPos", "startOffset", "evaluate", "a", "AudioTrackHandler", "path", "glbLocation", "getPath", "allow", "audio", "loader", "buffer", "vol", "SignalTrackHandler", "wasTriggered", "td", "rec", "_ControlTrackHandler", "context", "asset", "key", "GameObject", "timeline", "PlayableDirector", "clipTime", "obj", "previousActiveAsset", "ControlTrackHandler", "__publicField", "debug", "getParam", "_PlayableDirector", "Behaviour", "type", "fn", "value", "debug", "track", "t", "tracks", "map", "time", "binding", "isActive", "clip", "obj", "handler", "sig", "ctrl", "cust", "deepClone", "root", "GameObject", "Animator", "current", "audioTracks", "registered", "res", "i", "animationClips", "AnimationTrackHandler", "clipModel", "animModel", "targetObjectId", "c", "clipAction", "signalHandler", "SignalTrackHandler", "marker", "rec", "SignalReceiver", "bound", "ControlTrackHandler", "AudioSource", "listener", "AudioListener", "audio", "AudioTrackHandler", "allow", "PlayableDirector", "__publicField", "Color", "Texture", "LinearEncoding", "sRGBEncoding", "ThreeMeshUI", "Matrix4", "Object3D", "Vector2", "Vector3", "FrontSide", "DoubleSide", "updateRenderSettings", "shadowComponent", "settings", "mat", "DoubleSide", "FrontSide", "ch", "onChange", "caller", "field", "callback", "res", "target", "prop", "value", "receiver", "currentValue", "revoke", "original", "$scheduledActionKey", "scheduleAction", "action", "timing", "cache", "key", "actions", "gen", "coroutine", "debug", "getParam", "Size", "Rect", "RectTransform", "BaseUIComponent", "Vector3", "Matrix4", "Object3D", "onChange", "uiobject", "EventSystem", "ThreeMeshUI", "pos", "tx", "ty", "offx", "offy", "opts", "fallbackWidth", "block", "__decorateClass", "serializable", "Vector2", "_Graphic", "BaseUIComponent", "RGBAColor", "col", "newcolor", "GameObject", "RectTransform", "state", "opts", "onChange", "scheduleAction", "_opts", "tex", "sRGBEncoding", "clone", "LinearEncoding", "Graphic", "__publicField", "__decorateClass", "serializable", "MaskableGraphic", "Sprite", "__decorateClass", "serializable", "Texture", "Image", "MaskableGraphic", "opts", "Color", "RawImage", "debug", "getParam", "Button", "Behaviour", "_", "debug", "_args", "value", "requestedTriggerId", "GameObject", "Image", "image", "normal", "normalState", "hover", "hoverState", "pressed", "pressedState", "selected", "selectedState", "disabled", "disabledState", "col", "col2", "__decorateClass", "serializable", "EventList", "Animator", "_Canvas", "UIRootComponent", "val", "updateRenderSettings", "ch", "GameObject", "BaseUIComponent", "camera", "canvas", "pos", "w", "Mathf", "h", "Canvas", "__decorateClass", "serializable", "CanvasGroup", "Behaviour", "val", "ch", "GameObject", "Graphic", "col", "__decorateClass", "serializable", "ThreeMeshUI", "Color", "debug", "getParam", "Text", "Graphic", "val", "col", "text", "_opts", "debug", "hideOverflow", "rt", "fontSize", "textOpts", "content", "isTextIntermediate", "opts", "block", "container", "newWidth", "accu", "line", "c", "$shadowDomOwner", "richText", "currentTag", "stackArray", "next", "opt", "element", "updatedRendering", "canvas", "settings", "isWaitingForElementToUpdate", "i", "textMeshObject", "updateRenderSettings", "tag", "last", "key", "prevValue", "stackEntry", "TagStackEntry", "getColorFromString", "Color", "start", "end", "startIndex", "fontStyle", "name", "family", "texture", "_fontStyle", "getPath", "__decorateClass", "serializable", "Canvas", "previousValues", "str", "hex", "bigint", "r", "g", "b", "debug", "getParam", "_InputField", "Behaviour", "GameObject", "_args", "overlay", "evt", "oldValue", "newValue", "InputField", "__publicField", "__decorateClass", "serializable", "Text", "EventList", "ThreeMeshUI", "THREE", "KeymapOption", "Keyboard", "BaseUIComponent", "langKey", "language", "fontName", "rt", "GameObject", "RectTransform", "opts", "includesDir", "scale", "key", "input", "cmd", "char", "LayoutGroup", "Behaviour", "VerticalLayoutGroup", "HorizontalLayoutGroup", "GridLayoutGroup", "Raycaster", "Behaviour", "EventSystem", "_opts", "ObjectRaycaster", "opts", "RaycastOptions", "GraphicRaycaster", "THREE", "HTMLMesh", "InteractiveGroup", "SpatialHtml", "Behaviour", "div", "group", "InteractiveGroup", "mesh", "HTMLMesh", "mat", "rot", "getWorldRotation", "setWorldRotationXYZ", "aabb", "width", "height", "aspect", "factor", "GLTFExporter", "BufferAttribute", "Matrix4", "Vector3", "Quaternion", "GLTFMeshGPUInstancingExtension", "writer", "node", "nodeDef", "extensionsUsed", "extensionDef", "mat", "pos0", "rot0", "scl0", "i", "p", "r", "s", "pos", "rot", "scl", "Object3D", "Vector3", "GltfExportBox", "BoxHelperComponent", "i", "GltfExport", "Behaviour", "name", "opts", "res", "objectsToExport", "GLTFExporter", "writer", "GLTFMeshGPUInstancingExtension", "NEEDLE_components", "options", "exportScene", "Object3D", "obj", "GameObject", "Renderer", "r", "serializationContext", "SerializationContext", "resolve", "reject", "cleanup", "err", "buffer", "filename", "json", "blob", "link", "objs", "target", "o", "center", "Vector3", "getWorldPosition", "index", "Object3D", "ThreeUSDZExporter", "Matrix4", "Vector3", "Quaternion", "buildMatrix", "debug", "getParam", "RegisteredAnimationInfo", "ext", "root", "clip", "TransformData", "target", "track", "times", "arr", "sum", "entry", "AnimationExtension", "targets", "longestStartTime", "data", "startTimeInSeconds", "trackName", "animationTarget", "model", "x", "_context", "ser", "parent", "isEmptyParent", "object", "GameObject", "comp", "c", "SerializeAnimation", "dict", "writer", "composedTransform", "translation", "rotation", "scale", "transformData", "timesArray", "startTime", "positionInterpolant", "rotationInterpolant", "scaleInterpolant", "index", "time", "pos", "quat", "line", "ensureQuicklookLinkIsCreated", "context", "existingLink", "div", "button", "link", "img", "getFormattedDate", "date", "month", "day", "hour", "min", "sec", "s_month", "s_day", "s_hour", "s_min", "s_sec", "AnimationClip", "KeyframeTrack", "debug", "getParam", "registerAnimatorsImplictly", "root", "ext", "animationClips", "animators", "GameObject", "Animator", "injectedRestPose", "animator", "clips", "action", "clip", "track", "trackBaseName", "currentPositionTrack", "KeyframeTrack", "currentRotationTrack", "AnimationClip", "pair", "debug", "getParam", "USDZExporter", "Behaviour", "evt", "isMobileDevice", "ios", "isiOS", "safari", "isSafari", "ensureQuicklookLinkIsCreated", "exporter", "ThreeUSDZExporter", "extensions", "animExt", "AnimationExtension", "registerAnimatorsImplictly", "eventArgs", "name", "getFormattedDate", "arraybuffer", "blob", "overlay", "callToAction", "checkoutTitle", "checkoutSubtitle", "event", "showBalloonWarning", "obj", "delay", "GameObject", "WebXR", "linkInButton", "container", "button", "Context", "el", "__decorateClass", "serializable", "Object3D", "__Ignore", "PresentationMode", "Behaviour", "THREE", "Raycaster", "Vector3", "THREE", "MeshLine", "MeshLineMaterial", "_LineInstanceHandler", "MeshLine", "owner", "options", "opts", "vec", "localPoint", "parent", "MeshLineMaterial", "LineInstanceHandler", "__publicField", "LinesManager", "Behaviour", "id", "handle", "args", "line", "buf", "send", "arr", "i", "evt", "lineId", "parentGuid", "obj", "GameObject", "instance", "finished", "startIndex", "points", "model", "MeshLineMaterial", "LineState", "Vector3", "_LinesDrawer", "Behaviour", "GameObject", "LinesManager", "OrbitControls", "xrControllerSelected", "WebXRController", "ctrl", "_", "ray", "multi", "sp", "id", "active", "finish", "cancel", "state", "hit", "pt", "prev", "dist", "wp", "getWorldPosition", "parent", "newDistance", "RaycastOptions", "hits", "col", "PlayerColor", "MeshLineMaterial", "Mathf", "LinesDrawer", "__publicField", "Raycaster", "Object3D", "PlayerSync", "Behaviour", "_model", "instance", "pl", "GameObject", "PlayerState", "s", "i", "__decorateClass", "serializable", "AssetReference", "_PlayerState", "obj", "Object3D", "Component", "model", "syncDestroy", "index", "__publicField", "syncField", "TypeStore", "AlignmentConstraint", "Animation", "AnimationCurve", "Animator", "AnimatorController", "AudioListener", "AudioSource", "AvatarModel", "AvatarLoader", "AxesHelper", "BasicIKConstraint", "BoxHelperComponent", "Camera", "CharacterController", "CharacterControllerInput", "Collider", "SphereCollider", "BoxCollider", "MeshCollider", "CapsuleCollider", "DeleteBox", "Deletable", "DeviceFlag", "DragControls", "DropListener", "Duplicatable", "CallInfo", "EventListEvent", "EventList", "EventTrigger", "FlyControls", "BoxGizmo", "GridHelper", "GroundProjectedEnv", "Interactable", "UsageMarker", "FixedJoint", "HingeJoint", "Light", "LODModel", "LODGroup", "LookAtConstraint", "NestedGltf", "Networking", "OffsetConstraint", "OrbitControls", "SubEmitterSystem", "ParticleSystemRenderer", "ParticleSystem", "Gradient", "MinMaxCurve", "MinMaxGradient", "MainModule", "ParticleBurst", "EmissionModule", "ColorOverLifetimeModule", "SizeOverLifetimeModule", "ShapeModule", "NoiseModule", "TrailModule", "VelocityOverLifetimeModule", "TextureSheetAnimationModule", "RotationOverLifetimeModule", "RotationBySpeedModule", "LimitVelocityOverLifetimeModule", "InheritVelocityModule", "SizeBySpeedModule", "ColorBySpeedModule", "ParticleSubEmitter", "PlayerColor", "ReflectionProbe", "FieldWithDefault", "Renderer", "MeshRenderer", "SkinnedMeshRenderer", "RendererLightmap", "Rigidbody", "ScreenCapture", "ShadowCatcher", "RemoteSkybox", "SmoothFollow", "SpatialTriggerReceiver", "SpatialTrigger", "SpectatorCamera", "Sprite", "SpriteSheet", "SpriteRenderer", "SyncedCamera", "SyncedRoom", "SyncedTransform", "TestRunner", "TestSimulateUserData", "TransformGizmo", "VideoPlayer", "Voip", "VolumeParameter", "VolumeComponent", "ToneMapping", "ColorAdjustments", "VolumeProfile", "Volume", "WebARSessionRoot", "WebXR", "WebAR", "AvatarMarker", "WebXRAvatar", "TeleportTarget", "WebXRController", "AttachedObject", "XRGrabModel", "XRGrabRendering", "XRRig", "VRUserState", "WebXRSync", "XRState", "XRFlag", "AvatarBlink_Simple", "AvatarEyeLook_Rotation", "Avatar_POI", "Avatar_Brain_LookAt", "Avatar_MouthShapes", "Avatar_MustacheShake", "__Ignore", "LogStats", "RGBAColor", "PlayableDirector", "SignalAsset", "SignalReceiverEvent", "SignalReceiver", "AnimationTrackHandler", "AudioTrackHandler", "SignalTrackHandler", "ControlTrackHandler", "BaseUIComponent", "UIRootComponent", "Button", "Canvas", "CanvasGroup", "EventSystem", "Graphic", "MaskableGraphic", "Image", "RawImage", "InputField", "Keyboard", "LayoutGroup", "VerticalLayoutGroup", "HorizontalLayoutGroup", "GridLayoutGroup", "PointerEventData", "Raycaster", "ObjectRaycaster", "GraphicRaycaster", "UIRaycastUtils", "Size", "Rect", "RectTransform", "SpatialHtml", "Text", "GltfExportBox", "GltfExport", "USDZExporter", "RegisteredAnimationInfo", "TransformData", "AnimationExtension", "PresentationMode", "LinesDrawer", "LineInstanceHandler", "LinesManager", "PlayerSync", "PlayerState", "debug", "debugExtension", "debugTypeStore", "getParam", "TypeStore", "writeBuiltinComponentData", "comp", "context", "data", "serializeObject", "typeImplementationInformation", "ImplementationInformation", "createBuiltinComponents", "gltfId", "gltf", "seed", "extension", "lateResolve", "idProvider", "InstantiateIdProvider", "serializationContext", "SerializationContext", "deserialize", "scene", "onCreateBuiltinComponents", "ch", "des", "handleDeserialization", "recursiveCreateGuids", "obj", "child", "unknownComponentsBuffer", "components", "compData", "type", "instance", "assign", "addNewComponent", "err", "unknown", "isLocalNetwork", "showBalloonMessage", "deserialized", "deserializeObject", "NeedleGltfLoader", "context", "gltfId", "gltf", "seed", "extension", "createBuiltinComponents", "comp", "writeBuiltinComponentData", "data", "path", "parseSync", "url", "_allowAddingAnimator", "prog", "loadSync", "registerLoader", "printGltf", "getParam", "GltfLoadEvent", "context", "path", "loader", "gltf", "eventListeners", "invokeEvents", "type", "event", "eventListeners", "listener", "handleLoadedGltf", "context", "gltfId", "gltf", "seed", "componentsExtension", "printGltf", "getLoader", "parseSync", "data", "path", "loader", "GLTFLoader", "registerExtensions", "registerComponentExtension", "resolve", "reject", "addDracoAndKTX2Loaders", "GltfLoadEvent", "err", "loadSync", "url", "_allowAddingAnimator", "prog", "evt", "registerLoader", "NeedleGltfLoader", "debug", "getParam", "EngineElementSourceFileWatcher", "id", "context", "fn", "newSource", "dontSend", "isStartup", "GameObject", "Context", "res", "getLoader", "processNewScripts", "obj", "str", "hash", "htmlTagName", "vrContainerClassName", "desktopContainerClassname", "knownClasses", "arContainerClassName", "arSessionActiveClassName", "desktopSessionActiveClassName", "EngineElement", "_rej", "cb", "AROverlayHandler", "observer", "srcFile", "srcVal", "src", "srcAttributeValue", "alias", "build_scene_functions", "delay", "previousFileLoaded", "_", "file", "allowOverridingDefaultLoading", "useDefaultLoading", "EngineLoadingView", "loadingCallback", "progress", "message", "calculateProgress01", "name", "_oldValue", "newValue", "setDracoDecoderPath", "setDracoDecoderType", "setKtx2TranscoderPath", "eventName", "code", "evt", "i", "ch", "session", "overlayContainer", "arContainer", "el", "currentSessionType", "_session", "known", "customDracoDecoderPath", "customDracoDecoderType", "customKtx2DecoderPath", "THREE", "makeErrorsVisibleForDevelopment", "Needle", "Context", "registerGlobal", "obj", "key", "Component_exports", "components_exports", "method", "GameObject"]
}
