import { TypeStore } from "./../engine_typestore"

// Import types
import { AlignmentConstraint } from "../../engine-components/AlignmentConstraint.ts";
import { Animation } from "../../engine-components/Animation.ts";
import { AnimationCurve } from "../../engine-components/AnimationCurve.ts";
import { Animator } from "../../engine-components/Animator.ts";
import { AnimatorController } from "../../engine-components/AnimatorController.ts";
import { AudioListener } from "../../engine-components/AudioListener.ts";
import { AudioSource } from "../../engine-components/AudioSource.ts";
import { AvatarModel } from "../../engine-components/AvatarLoader.ts";
import { AvatarLoader } from "../../engine-components/AvatarLoader.ts";
import { AxesHelper } from "../../engine-components/AxesHelper.ts";
import { BasicIKConstraint } from "../../engine-components/BasicIKConstraint.ts";
import { BoxHelperComponent } from "../../engine-components/BoxHelperComponent.ts";
import { Camera } from "../../engine-components/Camera.ts";
import { CharacterController } from "../../engine-components/CharacterController.ts";
import { CharacterControllerInput } from "../../engine-components/CharacterController.ts";
import { Collider } from "../../engine-components/Collider.ts";
import { SphereCollider } from "../../engine-components/Collider.ts";
import { BoxCollider } from "../../engine-components/Collider.ts";
import { MeshCollider } from "../../engine-components/Collider.ts";
import { CapsuleCollider } from "../../engine-components/Collider.ts";
import { DeleteBox } from "../../engine-components/DeleteBox.ts";
import { Deletable } from "../../engine-components/DeleteBox.ts";
import { DeviceFlag } from "../../engine-components/DeviceFlag.ts";
import { DragControls } from "../../engine-components/DragControls.ts";
import { DropListener } from "../../engine-components/DropListener.ts";
import { Duplicatable } from "../../engine-components/Duplicatable.ts";
import { CallInfo } from "../../engine-components/EventList.ts";
import { EventListEvent } from "../../engine-components/EventList.ts";
import { EventList } from "../../engine-components/EventList.ts";
import { EventTrigger } from "../../engine-components/EventTrigger.ts";
import { FlyControls } from "../../engine-components/FlyControls.ts";
import { BoxGizmo } from "../../engine-components/Gizmos.ts";
import { GridHelper } from "../../engine-components/GridHelper.ts";
import { GroundProjectedEnv } from "../../engine-components/GroundProjection.ts";
import { Interactable } from "../../engine-components/Interactable.ts";
import { UsageMarker } from "../../engine-components/Interactable.ts";
import { FixedJoint } from "../../engine-components/Joints.ts";
import { HingeJoint } from "../../engine-components/Joints.ts";
import { Light } from "../../engine-components/Light.ts";
import { LODModel } from "../../engine-components/LODGroup.ts";
import { LODGroup } from "../../engine-components/LODGroup.ts";
import { LookAtConstraint } from "../../engine-components/LookAtConstraint.ts";
import { NestedGltf } from "../../engine-components/NestedGltf.ts";
import { Networking } from "../../engine-components/Networking.ts";
import { OffsetConstraint } from "../../engine-components/OffsetConstraint.ts";
import { OrbitControls } from "../../engine-components/OrbitControls.ts";
import { SubEmitterSystem } from "../../engine-components/ParticleSystem.ts";
import { ParticleSystemRenderer } from "../../engine-components/ParticleSystem.ts";
import { ParticleSystem } from "../../engine-components/ParticleSystem.ts";
import { Gradient } from "../../engine-components/ParticleSystemModules.ts";
import { MinMaxCurve } from "../../engine-components/ParticleSystemModules.ts";
import { MinMaxGradient } from "../../engine-components/ParticleSystemModules.ts";
import { MainModule } from "../../engine-components/ParticleSystemModules.ts";
import { ParticleBurst } from "../../engine-components/ParticleSystemModules.ts";
import { EmissionModule } from "../../engine-components/ParticleSystemModules.ts";
import { ColorOverLifetimeModule } from "../../engine-components/ParticleSystemModules.ts";
import { SizeOverLifetimeModule } from "../../engine-components/ParticleSystemModules.ts";
import { ShapeModule } from "../../engine-components/ParticleSystemModules.ts";
import { NoiseModule } from "../../engine-components/ParticleSystemModules.ts";
import { TrailModule } from "../../engine-components/ParticleSystemModules.ts";
import { VelocityOverLifetimeModule } from "../../engine-components/ParticleSystemModules.ts";
import { TextureSheetAnimationModule } from "../../engine-components/ParticleSystemModules.ts";
import { RotationOverLifetimeModule } from "../../engine-components/ParticleSystemModules.ts";
import { RotationBySpeedModule } from "../../engine-components/ParticleSystemModules.ts";
import { LimitVelocityOverLifetimeModule } from "../../engine-components/ParticleSystemModules.ts";
import { InheritVelocityModule } from "../../engine-components/ParticleSystemModules.ts";
import { SizeBySpeedModule } from "../../engine-components/ParticleSystemModules.ts";
import { ColorBySpeedModule } from "../../engine-components/ParticleSystemModules.ts";
import { ParticleSubEmitter } from "../../engine-components/ParticleSystemSubEmitter.ts";
import { PlayerColor } from "../../engine-components/PlayerColor.ts";
import { ReflectionProbe } from "../../engine-components/ReflectionProbe.ts";
import { FieldWithDefault } from "../../engine-components/Renderer.ts";
import { Renderer } from "../../engine-components/Renderer.ts";
import { MeshRenderer } from "../../engine-components/Renderer.ts";
import { SkinnedMeshRenderer } from "../../engine-components/Renderer.ts";
import { RendererLightmap } from "../../engine-components/RendererLightmap.ts";
import { Rigidbody } from "../../engine-components/RigidBody.ts";
import { ScreenCapture } from "../../engine-components/ScreenCapture.ts";
import { ShadowCatcher } from "../../engine-components/ShadowCatcher.ts";
import { RemoteSkybox } from "../../engine-components/Skybox.ts";
import { SmoothFollow } from "../../engine-components/SmoothFollow.ts";
import { SpatialTriggerReceiver } from "../../engine-components/SpatialTrigger.ts";
import { SpatialTrigger } from "../../engine-components/SpatialTrigger.ts";
import { SpectatorCamera } from "../../engine-components/SpectatorCamera.ts";
import { Sprite } from "../../engine-components/SpriteRenderer.ts";
import { SpriteSheet } from "../../engine-components/SpriteRenderer.ts";
import { SpriteRenderer } from "../../engine-components/SpriteRenderer.ts";
import { SyncedCamera } from "../../engine-components/SyncedCamera.ts";
import { SyncedRoom } from "../../engine-components/SyncedRoom.ts";
import { SyncedTransform } from "../../engine-components/SyncedTransform.ts";
import { TestRunner } from "../../engine-components/TestRunner.ts";
import { TestSimulateUserData } from "../../engine-components/TestRunner.ts";
import { TransformGizmo } from "../../engine-components/TransformGizmo.ts";
import { VideoPlayer } from "../../engine-components/VideoPlayer.ts";
import { Voip } from "../../engine-components/Voip.ts";
import { VolumeParameter } from "../../engine-components/Volume.ts";
import { VolumeComponent } from "../../engine-components/Volume.ts";
import { ToneMapping } from "../../engine-components/Volume.ts";
import { ColorAdjustments } from "../../engine-components/Volume.ts";
import { VolumeProfile } from "../../engine-components/Volume.ts";
import { Volume } from "../../engine-components/Volume.ts";
import { WebARSessionRoot } from "../../engine-components/WebARSessionRoot.ts";
import { WebXR } from "../../engine-components/WebXR.ts";
import { WebAR } from "../../engine-components/WebXR.ts";
import { AvatarMarker } from "../../engine-components/WebXRAvatar.ts";
import { WebXRAvatar } from "../../engine-components/WebXRAvatar.ts";
import { TeleportTarget } from "../../engine-components/WebXRController.ts";
import { WebXRController } from "../../engine-components/WebXRController.ts";
import { AttachedObject } from "../../engine-components/WebXRController.ts";
import { XRGrabModel } from "../../engine-components/WebXRGrabRendering.ts";
import { XRGrabRendering } from "../../engine-components/WebXRGrabRendering.ts";
import { XRRig } from "../../engine-components/WebXRRig.ts";
import { VRUserState } from "../../engine-components/WebXRSync.ts";
import { WebXRSync } from "../../engine-components/WebXRSync.ts";
import { XRState } from "../../engine-components/XRFlag.ts";
import { XRFlag } from "../../engine-components/XRFlag.ts";
import { AvatarBlink_Simple } from "../../engine-components/avatar/AvatarBlink_Simple.ts";
import { AvatarEyeLook_Rotation } from "../../engine-components/avatar/AvatarEyeLook_Rotation.ts";
import { Avatar_POI } from "../../engine-components/avatar/Avatar_Brain_LookAt.ts";
import { Avatar_Brain_LookAt } from "../../engine-components/avatar/Avatar_Brain_LookAt.ts";
import { Avatar_MouthShapes } from "../../engine-components/avatar/Avatar_MouthShapes.ts";
import { Avatar_MustacheShake } from "../../engine-components/avatar/Avatar_MustacheShake.ts";
import { __Ignore } from "../../engine-components/codegen/components.ts";
import { LogStats } from "../../engine-components/debug/LogStats.ts";
import { RGBAColor } from "../../engine-components/js-extensions/RGBAColor.ts";
import { PlayableDirector } from "../../engine-components/timeline/PlayableDirector.ts";
import { SignalAsset } from "../../engine-components/timeline/SignalAsset.ts";
import { SignalReceiverEvent } from "../../engine-components/timeline/SignalAsset.ts";
import { SignalReceiver } from "../../engine-components/timeline/SignalAsset.ts";
import { AnimationTrackHandler } from "../../engine-components/timeline/TimelineTracks.ts";
import { AudioTrackHandler } from "../../engine-components/timeline/TimelineTracks.ts";
import { SignalTrackHandler } from "../../engine-components/timeline/TimelineTracks.ts";
import { ControlTrackHandler } from "../../engine-components/timeline/TimelineTracks.ts";
import { BaseUIComponent } from "../../engine-components/ui/BaseUIComponent.ts";
import { UIRootComponent } from "../../engine-components/ui/BaseUIComponent.ts";
import { Button } from "../../engine-components/ui/Button.ts";
import { Canvas } from "../../engine-components/ui/Canvas.ts";
import { CanvasGroup } from "../../engine-components/ui/CanvasGroup.ts";
import { EventSystem } from "../../engine-components/ui/EventSystem.ts";
import { Graphic } from "../../engine-components/ui/Graphic.ts";
import { MaskableGraphic } from "../../engine-components/ui/Graphic.ts";
import { Image } from "../../engine-components/ui/Image.ts";
import { RawImage } from "../../engine-components/ui/Image.ts";
import { InputField } from "../../engine-components/ui/InputField.ts";
import { Keyboard } from "../../engine-components/ui/Keyboard.ts";
import { LayoutGroup } from "../../engine-components/ui/Layout.ts";
import { VerticalLayoutGroup } from "../../engine-components/ui/Layout.ts";
import { HorizontalLayoutGroup } from "../../engine-components/ui/Layout.ts";
import { GridLayoutGroup } from "../../engine-components/ui/Layout.ts";
import { PointerEventData } from "../../engine-components/ui/PointerEvents.ts";
import { Raycaster } from "../../engine-components/ui/Raycaster.ts";
import { ObjectRaycaster } from "../../engine-components/ui/Raycaster.ts";
import { GraphicRaycaster } from "../../engine-components/ui/Raycaster.ts";
import { UIRaycastUtils } from "../../engine-components/ui/RaycastUtils.ts";
import { Size } from "../../engine-components/ui/RectTransform.ts";
import { Rect } from "../../engine-components/ui/RectTransform.ts";
import { RectTransform } from "../../engine-components/ui/RectTransform.ts";
import { SpatialHtml } from "../../engine-components/ui/SpatialHtml.ts";
import { Text } from "../../engine-components/ui/Text.ts";
import { GltfExportBox } from "../../engine-components/export/gltf/GltfExport.ts";
import { GltfExport } from "../../engine-components/export/gltf/GltfExport.ts";
import { USDZExporter } from "../../engine-components/export/usdz/USDZExporter.ts";
import { RegisteredAnimationInfo } from "../../engine-components/export/usdz/extensions/Animation.ts";
import { TransformData } from "../../engine-components/export/usdz/extensions/Animation.ts";
import { AnimationExtension } from "../../engine-components/export/usdz/extensions/Animation.ts";
import { PresentationMode } from "../../engine-components-experimental/Presentation.ts";
import { LinesDrawer } from "../../engine-components-experimental/annotation/LineDrawer.ts";
import { LineInstanceHandler } from "../../engine-components-experimental/annotation/LinesManager.ts";
import { LinesManager } from "../../engine-components-experimental/annotation/LinesManager.ts";
import { PlayerSync } from "../../engine-components-experimental/networking/PlayerSync.ts";
import { PlayerState } from "../../engine-components-experimental/networking/PlayerSync.ts";

// Register types
TypeStore.add("AlignmentConstraint", AlignmentConstraint);
TypeStore.add("Animation", Animation);
TypeStore.add("AnimationCurve", AnimationCurve);
TypeStore.add("Animator", Animator);
TypeStore.add("AnimatorController", AnimatorController);
TypeStore.add("AudioListener", AudioListener);
TypeStore.add("AudioSource", AudioSource);
TypeStore.add("AvatarModel", AvatarModel);
TypeStore.add("AvatarLoader", AvatarLoader);
TypeStore.add("AxesHelper", AxesHelper);
TypeStore.add("BasicIKConstraint", BasicIKConstraint);
TypeStore.add("BoxHelperComponent", BoxHelperComponent);
TypeStore.add("Camera", Camera);
TypeStore.add("CharacterController", CharacterController);
TypeStore.add("CharacterControllerInput", CharacterControllerInput);
TypeStore.add("Collider", Collider);
TypeStore.add("SphereCollider", SphereCollider);
TypeStore.add("BoxCollider", BoxCollider);
TypeStore.add("MeshCollider", MeshCollider);
TypeStore.add("CapsuleCollider", CapsuleCollider);
TypeStore.add("DeleteBox", DeleteBox);
TypeStore.add("Deletable", Deletable);
TypeStore.add("DeviceFlag", DeviceFlag);
TypeStore.add("DragControls", DragControls);
TypeStore.add("DropListener", DropListener);
TypeStore.add("Duplicatable", Duplicatable);
TypeStore.add("CallInfo", CallInfo);
TypeStore.add("EventListEvent", EventListEvent);
TypeStore.add("EventList", EventList);
TypeStore.add("EventTrigger", EventTrigger);
TypeStore.add("FlyControls", FlyControls);
TypeStore.add("BoxGizmo", BoxGizmo);
TypeStore.add("GridHelper", GridHelper);
TypeStore.add("GroundProjectedEnv", GroundProjectedEnv);
TypeStore.add("Interactable", Interactable);
TypeStore.add("UsageMarker", UsageMarker);
TypeStore.add("FixedJoint", FixedJoint);
TypeStore.add("HingeJoint", HingeJoint);
TypeStore.add("Light", Light);
TypeStore.add("LODModel", LODModel);
TypeStore.add("LODGroup", LODGroup);
TypeStore.add("LookAtConstraint", LookAtConstraint);
TypeStore.add("NestedGltf", NestedGltf);
TypeStore.add("Networking", Networking);
TypeStore.add("OffsetConstraint", OffsetConstraint);
TypeStore.add("OrbitControls", OrbitControls);
TypeStore.add("SubEmitterSystem", SubEmitterSystem);
TypeStore.add("ParticleSystemRenderer", ParticleSystemRenderer);
TypeStore.add("ParticleSystem", ParticleSystem);
TypeStore.add("Gradient", Gradient);
TypeStore.add("MinMaxCurve", MinMaxCurve);
TypeStore.add("MinMaxGradient", MinMaxGradient);
TypeStore.add("MainModule", MainModule);
TypeStore.add("ParticleBurst", ParticleBurst);
TypeStore.add("EmissionModule", EmissionModule);
TypeStore.add("ColorOverLifetimeModule", ColorOverLifetimeModule);
TypeStore.add("SizeOverLifetimeModule", SizeOverLifetimeModule);
TypeStore.add("ShapeModule", ShapeModule);
TypeStore.add("NoiseModule", NoiseModule);
TypeStore.add("TrailModule", TrailModule);
TypeStore.add("VelocityOverLifetimeModule", VelocityOverLifetimeModule);
TypeStore.add("TextureSheetAnimationModule", TextureSheetAnimationModule);
TypeStore.add("RotationOverLifetimeModule", RotationOverLifetimeModule);
TypeStore.add("RotationBySpeedModule", RotationBySpeedModule);
TypeStore.add("LimitVelocityOverLifetimeModule", LimitVelocityOverLifetimeModule);
TypeStore.add("InheritVelocityModule", InheritVelocityModule);
TypeStore.add("SizeBySpeedModule", SizeBySpeedModule);
TypeStore.add("ColorBySpeedModule", ColorBySpeedModule);
TypeStore.add("ParticleSubEmitter", ParticleSubEmitter);
TypeStore.add("PlayerColor", PlayerColor);
TypeStore.add("ReflectionProbe", ReflectionProbe);
TypeStore.add("FieldWithDefault", FieldWithDefault);
TypeStore.add("Renderer", Renderer);
TypeStore.add("MeshRenderer", MeshRenderer);
TypeStore.add("SkinnedMeshRenderer", SkinnedMeshRenderer);
TypeStore.add("RendererLightmap", RendererLightmap);
TypeStore.add("Rigidbody", Rigidbody);
TypeStore.add("ScreenCapture", ScreenCapture);
TypeStore.add("ShadowCatcher", ShadowCatcher);
TypeStore.add("RemoteSkybox", RemoteSkybox);
TypeStore.add("SmoothFollow", SmoothFollow);
TypeStore.add("SpatialTriggerReceiver", SpatialTriggerReceiver);
TypeStore.add("SpatialTrigger", SpatialTrigger);
TypeStore.add("SpectatorCamera", SpectatorCamera);
TypeStore.add("Sprite", Sprite);
TypeStore.add("SpriteSheet", SpriteSheet);
TypeStore.add("SpriteRenderer", SpriteRenderer);
TypeStore.add("SyncedCamera", SyncedCamera);
TypeStore.add("SyncedRoom", SyncedRoom);
TypeStore.add("SyncedTransform", SyncedTransform);
TypeStore.add("TestRunner", TestRunner);
TypeStore.add("TestSimulateUserData", TestSimulateUserData);
TypeStore.add("TransformGizmo", TransformGizmo);
TypeStore.add("VideoPlayer", VideoPlayer);
TypeStore.add("Voip", Voip);
TypeStore.add("VolumeParameter", VolumeParameter);
TypeStore.add("VolumeComponent", VolumeComponent);
TypeStore.add("ToneMapping", ToneMapping);
TypeStore.add("ColorAdjustments", ColorAdjustments);
TypeStore.add("VolumeProfile", VolumeProfile);
TypeStore.add("Volume", Volume);
TypeStore.add("WebARSessionRoot", WebARSessionRoot);
TypeStore.add("WebXR", WebXR);
TypeStore.add("WebAR", WebAR);
TypeStore.add("AvatarMarker", AvatarMarker);
TypeStore.add("WebXRAvatar", WebXRAvatar);
TypeStore.add("TeleportTarget", TeleportTarget);
TypeStore.add("WebXRController", WebXRController);
TypeStore.add("AttachedObject", AttachedObject);
TypeStore.add("XRGrabModel", XRGrabModel);
TypeStore.add("XRGrabRendering", XRGrabRendering);
TypeStore.add("XRRig", XRRig);
TypeStore.add("VRUserState", VRUserState);
TypeStore.add("WebXRSync", WebXRSync);
TypeStore.add("XRState", XRState);
TypeStore.add("XRFlag", XRFlag);
TypeStore.add("AvatarBlink_Simple", AvatarBlink_Simple);
TypeStore.add("AvatarEyeLook_Rotation", AvatarEyeLook_Rotation);
TypeStore.add("Avatar_POI", Avatar_POI);
TypeStore.add("Avatar_Brain_LookAt", Avatar_Brain_LookAt);
TypeStore.add("Avatar_MouthShapes", Avatar_MouthShapes);
TypeStore.add("Avatar_MustacheShake", Avatar_MustacheShake);
TypeStore.add("__Ignore", __Ignore);
TypeStore.add("LogStats", LogStats);
TypeStore.add("RGBAColor", RGBAColor);
TypeStore.add("PlayableDirector", PlayableDirector);
TypeStore.add("SignalAsset", SignalAsset);
TypeStore.add("SignalReceiverEvent", SignalReceiverEvent);
TypeStore.add("SignalReceiver", SignalReceiver);
TypeStore.add("AnimationTrackHandler", AnimationTrackHandler);
TypeStore.add("AudioTrackHandler", AudioTrackHandler);
TypeStore.add("SignalTrackHandler", SignalTrackHandler);
TypeStore.add("ControlTrackHandler", ControlTrackHandler);
TypeStore.add("BaseUIComponent", BaseUIComponent);
TypeStore.add("UIRootComponent", UIRootComponent);
TypeStore.add("Button", Button);
TypeStore.add("Canvas", Canvas);
TypeStore.add("CanvasGroup", CanvasGroup);
TypeStore.add("EventSystem", EventSystem);
TypeStore.add("Graphic", Graphic);
TypeStore.add("MaskableGraphic", MaskableGraphic);
TypeStore.add("Image", Image);
TypeStore.add("RawImage", RawImage);
TypeStore.add("InputField", InputField);
TypeStore.add("Keyboard", Keyboard);
TypeStore.add("LayoutGroup", LayoutGroup);
TypeStore.add("VerticalLayoutGroup", VerticalLayoutGroup);
TypeStore.add("HorizontalLayoutGroup", HorizontalLayoutGroup);
TypeStore.add("GridLayoutGroup", GridLayoutGroup);
TypeStore.add("PointerEventData", PointerEventData);
TypeStore.add("Raycaster", Raycaster);
TypeStore.add("ObjectRaycaster", ObjectRaycaster);
TypeStore.add("GraphicRaycaster", GraphicRaycaster);
TypeStore.add("UIRaycastUtils", UIRaycastUtils);
TypeStore.add("Size", Size);
TypeStore.add("Rect", Rect);
TypeStore.add("RectTransform", RectTransform);
TypeStore.add("SpatialHtml", SpatialHtml);
TypeStore.add("Text", Text);
TypeStore.add("GltfExportBox", GltfExportBox);
TypeStore.add("GltfExport", GltfExport);
TypeStore.add("USDZExporter", USDZExporter);
TypeStore.add("RegisteredAnimationInfo", RegisteredAnimationInfo);
TypeStore.add("TransformData", TransformData);
TypeStore.add("AnimationExtension", AnimationExtension);
TypeStore.add("PresentationMode", PresentationMode);
TypeStore.add("LinesDrawer", LinesDrawer);
TypeStore.add("LineInstanceHandler", LineInstanceHandler);
TypeStore.add("LinesManager", LinesManager);
TypeStore.add("PlayerSync", PlayerSync);
TypeStore.add("PlayerState", PlayerState);
