import { serializable } from '../../engine/engine_serialization_decorator';
import { Color, Texture } from 'three';
import { MaskableGraphic } from './Graphic';


class Sprite {
    @serializable(Texture)
    texture?: THREE.Texture;

    rect?: { width: number, height: number };
}

export class Image extends MaskableGraphic {

    @serializable(Sprite)
    sprite?: Sprite;

    private isBuiltinSprite() {
        switch (this.sprite?.texture?.name) {
            case "InputFieldBackground":
            case "UISprite":
            case "Background":
                return true;
        }
        // this is a hack/workaround for production builds where the name of the sprite is missing
        // need to remove this!!!!
        if(this.sprite?.texture?.image?.width === 32 && this.sprite?.texture?.image?.height === 32) 
            return true;
        return false;
    }

    protected onBeforeCreate(opts: any): void {
        if (this.isBuiltinSprite()) {
            opts.borderRadius = 5;
            opts.borderColor = new Color(.4, .4, .4);
            opts.borderOpacity = this.color.alpha;
            opts.borderWidth = .3;
        }
    }

    protected onAfterCreated(): void {
        super.onAfterCreated();
        if (this.isBuiltinSprite()) return;
        this.setTexture(this.sprite?.texture);
    }
}

export class RawImage extends MaskableGraphic {
    @serializable(Texture)
    mainTexture?: Texture;

    protected onAfterCreated(): void {
        super.onAfterCreated();
        // console.log(this);
        // if (this.mainTexture) {
        //     this.mainTexture.flipY = true;
        //     this.mainTexture.needsUpdate = true;
        // }
        this.setTexture(this.mainTexture);
    }
}
