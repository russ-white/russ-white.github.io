import { Object3D } from "three";
import { Context } from "./engine_setup";
import { IComponent as Component, IComponent, IGameObject as GameObject, UIDProvider } from "./engine_types";
export declare enum HideFlags {
    None = 0,
    HideInHierarchy = 1,
    HideInInspector = 2,
    DontSaveInEditor = 4,
    NotEditable = 8,
    DontSaveInBuild = 16,
    DontUnloadUnusedAsset = 32,
    DontSave = 52,
    HideAndDontSave = 61
}
export declare class InstantiateOptions {
    idProvider?: UIDProvider | undefined;
    parent?: string | undefined | Object3D;
    /** for duplicatable parenting */
    keepWorldPosition?: boolean;
    position?: THREE.Vector3 | undefined;
    rotation?: THREE.Quaternion | undefined;
    scale?: THREE.Vector3 | undefined;
    visible?: boolean | undefined;
    context?: Context | undefined;
}
export declare function isActiveSelf(go: Object3D): boolean;
export declare function setActive(go: Object3D, active: boolean | number, setVisible?: boolean): boolean;
export declare function isActiveInHierarchy(go: Object3D): boolean;
export declare function markAsInstancedRendered(go: THREE.Object3D, instanced: boolean): void;
export declare function isUsingInstancing(instance: THREE.Object3D): boolean;
export declare function findByGuid(guid: string, hierarchy: THREE.Object3D): GameObject | IComponent | null | undefined;
export declare function destroy(instance: Object3D | Component, recursive?: boolean, isRoot?: boolean): void;
export declare function foreachComponent(instance: THREE.Object3D, cb: (comp: Component) => any, recursive?: boolean): any;
export declare function instantiate(instance: GameObject | Object3D | null, opts?: InstantiateOptions | null): GameObject | null;
