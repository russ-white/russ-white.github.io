/// <reference types="webxr" />
import { Context } from "./engine_setup";
import { INeedleEngineComponent } from "./engine_types";
export declare class EngineElement extends HTMLElement implements INeedleEngineComponent {
    get loadingProgress01(): number;
    get loadingFinished(): boolean;
    getContext(): Promise<Context>;
    get Context(): Context | null;
    /**@obsolete use GameObject */
    private gameObject;
    private GameObject;
    private _context;
    private _overlay_ar;
    private _loadingProgress01;
    private _watcher?;
    private _loadingView?;
    constructor();
    connectedCallback(): Promise<void>;
    disconnectedCallback(): void;
    static get observedAttributes(): string[];
    attributeChangedCallback(name: string, _oldValue: string, newValue: string): void;
    private registerEventFromAttribute;
    getAROverlayContainer(): HTMLElement;
    getVROverlayContainer(): HTMLElement | null;
    onEnterAR(session: XRSession, overlayContainer: HTMLElement): void;
    onExitAR(session: XRSession): void;
    onEnterVR(session: XRSession): void;
    onExitVR(session: XRSession): void;
    private onElementsChanged;
    private onSetupAR;
    private onSetupVR;
    private onSetupDesktop;
    private setupElementsForMode;
    private foreachHtmlElement;
    private onBeforeBeginLoading;
}
