import * as THREE from "three";
import { RGBAColor } from "../engine-components/js-extensions/RGBAColor";
import { SerializationContext, TypeSerializer } from "./engine_serialization_core";
import { Behaviour, GameObject } from "../engine-components/Component";
import { EventList } from "../engine-components/EventList";
import { RenderTexture } from "./engine_texture";
declare class ColorSerializer extends TypeSerializer {
    constructor();
    onDeserialize(data: any): THREE.Color | RGBAColor | void;
    onSerialize(data: any): any | void;
}
export declare const colorSerializer: ColorSerializer;
declare type ObjectData = {
    node?: number;
    guid?: string;
};
declare class ObjectSerializer extends TypeSerializer {
    constructor();
    onSerialize(data: any, context: SerializationContext): {
        node: number;
    } | undefined;
    onDeserialize(data: ObjectData, context: SerializationContext): THREE.Object3D<THREE.Event> | GameObject | Behaviour | null | undefined;
}
export declare const objectSerializer: ObjectSerializer;
declare class ComponentSerializer extends TypeSerializer {
    constructor();
    onSerialize(data: any, _context: SerializationContext): {
        guid: any;
    } | undefined;
    onDeserialize(data: any, context: SerializationContext): any;
    findObjectForGuid(guid: string, root: THREE.Object3D): any;
}
export declare const componentSerializer: ComponentSerializer;
declare class EventListData {
    type: string;
    calls: Array<EventListCall>;
}
declare type EventListCall = {
    method: string;
    target: string;
    argument?: any;
    enabled?: boolean;
};
declare class EventListSerializer extends TypeSerializer {
    constructor();
    onSerialize(_data: EventList, _context: SerializationContext): EventListData | undefined;
    onDeserialize(data: EventListData, context: SerializationContext): EventList | undefined | null;
}
export declare const eventListSerializer: EventListSerializer;
export declare class RenderTextureSerializer extends TypeSerializer {
    constructor();
    onSerialize(_data: any, _context: SerializationContext): void;
    onDeserialize(data: any, context: SerializationContext): RenderTexture | undefined;
}
export {};
