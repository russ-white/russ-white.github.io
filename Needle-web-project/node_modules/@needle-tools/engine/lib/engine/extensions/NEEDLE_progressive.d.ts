import { Material } from "three";
import { GLTF, GLTFLoaderPlugin, GLTFParser } from "three/examples/jsm/loaders/GLTFLoader";
import { SourceIdentifier } from "../engine_types";
import { Context } from "../engine_setup";
export declare const EXTENSION_NAME = "NEEDLE_progressive";
export declare class NEEDLE_progressive implements GLTFLoaderPlugin {
    static assignTextureLOD(context: Context, source: SourceIdentifier | undefined, material: Material, level?: number): void;
    get name(): string;
    private parser;
    private sourceId;
    private context;
    constructor(parser: GLTFParser, sourceId: SourceIdentifier, context: Context);
    private _loading;
    afterRoot(gltf: GLTF): null;
    private static cache;
    private static resolved;
    private static getOrLoadTexture;
}
