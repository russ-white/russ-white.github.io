import { Behaviour } from "./Component";
import { Object3D, Vector3 } from "three";
import { Context } from "../engine/engine_setup";
import { IModel } from "../engine/engine_networking_types";
export declare class XRGrabModel implements IModel {
    guid: any;
    dontSave: boolean;
    userId: string | null | undefined;
    point: {
        x: number;
        y: number;
        z: number;
    };
    source: {
        x: number;
        y: number;
        z: number;
    };
    target: string | undefined;
    update(context: Context, point: Vector3, source: Vector3, target?: string | undefined): void;
}
export declare class XRGrabRendering extends Behaviour {
    prefab: Object3D | null;
    private _grabModels;
    private _grabModelsUpdateTime;
    private _addOrUpdateSub;
    private _endSub;
    private _freeSub;
    private _instances;
    awake(): void;
    onEnable(): void;
    onDisable(): void;
    addOrUpdateGrab(model: XRGrabModel): void;
    endGrab(model: XRGrabModel): void;
    private onRemoteGrabStartOrUpdate;
    private onRemoteGrabEnd;
    private onAttachedObjectFree;
    onBeforeRender(): void;
    private updateModel;
    private temp;
    private updateRendering;
}
