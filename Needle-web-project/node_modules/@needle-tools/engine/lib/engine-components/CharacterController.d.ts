import { Vector3 } from "three";
import { Collision } from "../engine/engine_types";
import { Behaviour } from "./Component";
import { Rigidbody } from "./RigidBody";
import { Animator } from "./Animator";
export declare class CharacterController extends Behaviour {
    center: Vector3;
    radius: number;
    height: number;
    private _rigidbody;
    get rigidbody(): Rigidbody;
    onEnable(): void;
    move(vec: Vector3): void;
    private _activeGroundCollisions;
    onCollisionEnter(col: Collision): void;
    onCollisionExit(col: Collision): void;
    get isGrounded(): boolean;
}
export declare class CharacterControllerInput extends Behaviour {
    controller?: CharacterController;
    movementSpeed: number;
    rotationSpeed: number;
    jumpForce: number;
    animator?: Animator;
    lookForward: boolean;
    private _currentSpeed;
    private _currentAngularSpeed;
    private _temp;
    private _jumpCount;
    private _currentRotation;
    awake(): void;
    update(): void;
    private _raycastOptions;
}
