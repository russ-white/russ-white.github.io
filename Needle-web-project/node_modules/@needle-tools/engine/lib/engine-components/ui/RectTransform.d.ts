import * as ThreeMeshUI from 'three-mesh-ui';
import { BaseUIComponent } from "./BaseUIComponent";
import { Vector3 } from "three";
export declare class Size {
    width: number;
    height: number;
}
export declare class Rect {
    x: number;
    y: number;
    width: number;
    height: number;
}
export declare class RectTransform extends BaseUIComponent {
    offset: number;
    get translation(): Vector3;
    get rotation(): import("three").Quaternion;
    get scale(): THREE.Vector3;
    private _anchoredPosition;
    private get anchoredPosition();
    rect?: Rect;
    sizeDelta: THREE.Vector2;
    anchoredPosition3D?: THREE.Vector3;
    pivot?: THREE.Vector2;
    private lastMatrix;
    private rectBlock;
    private _transformNeedsUpdate;
    awake(): void;
    onEnable(): void;
    onDisable(): void;
    private applyTransform;
    markDirty(): void;
    onBeforeRender(): void;
    private applyAnchoring;
    getBasicOptions(): ThreeMeshUI.BlockOptions;
    private ensureValidSize;
    private _createdBlocks;
    createNewBlock(opts?: ThreeMeshUI.BlockOptions | object): ThreeMeshUI.Block;
}
