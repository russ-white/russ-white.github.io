import * as ThreeMeshUI from 'three-mesh-ui';
import { Behaviour } from "../Component";
export declare const includesDir = "./include";
export declare const $shadowDomOwner: unique symbol;
export declare class BaseUIComponent extends Behaviour {
    isRoot(): boolean;
    markDirty(): void;
    shadowComponent: ThreeMeshUI.Block | null;
    private _controlsChildLayout;
    get controlsChildLayout(): boolean;
    set controlsChildLayout(val: boolean);
    private _root?;
    protected get Root(): UIRootComponent | null;
    protected _parentComponent?: BaseUIComponent | null;
    onEnable(): void;
    protected addShadowComponent(container: any, parent?: BaseUIComponent): void;
    set(_state: object): void;
    private traverseOwnedShadowComponents;
    protected removeShadowComponent(): void;
    protected onAfterAddedToScene(): void;
    setInteractable(value: boolean): void;
}
export declare class UIRootComponent extends BaseUIComponent {
    awake(): void;
}
