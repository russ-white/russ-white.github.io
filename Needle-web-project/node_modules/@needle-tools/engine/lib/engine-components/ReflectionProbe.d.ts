import { Behaviour } from "./Component";
import { Object3D, Texture, Vector3 } from "three";
import { Context } from "../engine/engine_setup";
import { IRenderer } from "../engine/engine_types";
export declare const debug: string | boolean;
export declare class ReflectionProbe extends Behaviour {
    private static _probes;
    static get(object: Object3D | null | undefined, context: Context, isAnchor: boolean): ReflectionProbe | null;
    private _texture;
    set texture(tex: Texture);
    get texture(): Texture;
    center?: Vector3;
    size?: Vector3;
    private _boxHelper?;
    private isInBox;
    constructor();
    awake(): void;
    onDestroy(): void;
    private static _rendererMaterialsCache;
    onSet(_rend: IRenderer): void;
    onUnset(_rend: IRenderer): void;
}
