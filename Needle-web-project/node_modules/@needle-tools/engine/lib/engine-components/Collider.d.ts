import { Behaviour } from "./Component";
import { Rigidbody } from "./RigidBody";
import { Mesh, Vector3 } from "three";
import { ICollider } from "../engine/engine_types";
export declare class Collider extends Behaviour implements ICollider {
    get isCollider(): any;
    attachedRigidbody: Rigidbody | null;
    isTrigger: boolean;
    awake(): void;
    start(): void;
    onEnable(): void;
    onDisable(): void;
}
export declare class SphereCollider extends Collider {
    radius: number;
    center: Vector3;
    onEnable(): void;
}
export declare class BoxCollider extends Collider {
    size: Vector3;
    center: Vector3;
    onEnable(): void;
}
export declare class MeshCollider extends Collider {
    sharedMesh?: Mesh;
    convex: boolean;
    onEnable(): void;
}
export declare class CapsuleCollider extends Collider {
    center: Vector3;
    radius: number;
    height: number;
    onEnable(): void;
}
