import { Behaviour } from "./Component";
import { Context } from "../engine/engine_setup";
export declare enum TonemappingMode {
    None = 0,
    Neutral = 1,
    ACES = 2
}
export declare class VolumeParameter {
    overrideState: boolean;
    value: number;
}
export declare class VolumeComponent {
    active: boolean;
    parameters?: VolumeParameter[];
}
export declare class ToneMapping extends VolumeComponent {
    mode?: VolumeParameter;
    get isToneMapping(): boolean;
}
export declare class ColorAdjustments extends VolumeComponent {
    postExposure?: VolumeParameter;
}
export declare class VolumeProfile {
    components?: VolumeComponent[];
    apply(context: Context): void;
    unapply(context: Context): void;
    private onUpdate;
}
export declare class Volume extends Behaviour {
    sharedProfile?: VolumeProfile;
    awake(): void;
    onEnable(): void;
    onDisable(): void;
}
