import { Document, ILogger, vec2, Texture } from '@gltf-transform/core';
/**********************************************************************************************
 * Interfaces.
 */
export declare const Mode: {
    ETC1S: string;
    UASTC: string;
};
export declare const Filter: {
    BOX: string;
    TENT: string;
    BELL: string;
    BSPLINE: string;
    MITCHELL: string;
    LANCZOS3: string;
    LANCZOS4: string;
    LANCZOS6: string;
    LANCZOS12: string;
    BLACKMAN: string;
    KAISER: string;
    GAUSSIAN: string;
    CATMULLROM: string;
    QUADRATIC_INTERP: string;
    QUADRATIC_APPROX: string;
    QUADRATIC_MIX: string;
};
export declare type TextureModeArgs = {
    doc: Document;
    texture: Texture;
    index: number;
    options: ETC1SOptions | UASTCOptions;
};
export declare type TextureParamsArgs = {
    doc: Document;
    texture: Texture;
    index: number;
    params: Array<string | number>;
};
export interface ToktxOptions {
    toktxPath?: string;
    /** return false if texture should not be compressed */
    modifyOptions?: (args: TextureModeArgs) => void | boolean;
    modifyParams?: (args: TextureParamsArgs) => void;
}
export interface GlobalOptions {
    mode: string;
    slots?: string;
    filter?: string;
    filterScale?: number;
    powerOfTwo?: boolean;
    jobs?: number;
}
export interface ETC1SOptions extends GlobalOptions {
    quality?: number;
    compression?: number;
    maxEndpoints?: number;
    maxSelectors?: number;
    rdoOff?: boolean;
    rdoThreshold?: number;
}
export interface UASTCOptions extends GlobalOptions {
    level?: number;
    rdo?: number;
    rdoDictionarySize?: number;
    rdoBlockScale?: number;
    rdoStdDev?: number;
    rdoMultithreading?: boolean;
    zstd?: number;
}
export declare const ETC1S_DEFAULTS: Omit<ETC1SOptions, 'mode'>;
export declare const UASTC_DEFAULTS: Omit<UASTCOptions, 'mode'>;
/**********************************************************************************************
 * Utilities.
 */
/** Create CLI parameters from the given options. Attempts to write only non-default options. */
export declare function createParams(slots: string[], channels: number, size: vec2, logger: ILogger, numTextures: number, options: ETC1SOptions | UASTCOptions, version: string): (string | number)[];
export declare function checkKTXSoftware(logger: ILogger, env?: any): Promise<string>;
