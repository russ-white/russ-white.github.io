"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NEEDLE_progressive_texture_property = exports.NEEDLE_progressive = exports.generateGuid = exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME = void 0;
const core_1 = require("@gltf-transform/core");
// TODO: rename to NEEDLE_progressive_texture
exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME = "NEEDLE_progressive";
function generateGuid() {
    // TODO: replace with same uuid package as in needle engine
    return (0, core_1.uuid)();
}
exports.generateGuid = generateGuid;
class NEEDLE_progressive extends core_1.Extension {
    static EXTENSION_NAME = exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME;
    extensionName = exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME;
    create(data) {
        const ext = new NEEDLE_progressive_texture_property(this.document.getGraph(), "");
        ext.model = data;
        return ext;
    }
    read(_context) {
        console.log("READ " + exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME);
        return this;
    }
    write(context) {
        console.log("WRITE " + exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME);
        const textureDefinitions = context.jsonDoc.json.textures;
        if (!textureDefinitions)
            return;
        const root = this.document.getRoot();
        const textures = root.listTextures();
        // we use the texture image map to find the texture definition to write the extension to
        const textureImageIndexMap = context.imageIndexMap;
        for (const tex of textures) {
            const prop = tex.getExtension(exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME);
            if (prop && prop.model) {
                // get the image this texture is using
                const imageIndex = textureImageIndexMap.get(tex);
                // find the texture definition that uses this image and add the extension
                for (const def of textureDefinitions) {
                    if (def.source === imageIndex) {
                        def.extensions = def.extensions || {};
                        def.extensions[exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME] = prop.model;
                    }
                }
            }
        }
        return this;
    }
}
exports.NEEDLE_progressive = NEEDLE_progressive;
class NEEDLE_progressive_texture_property extends core_1.ExtensionProperty {
    static EXTENSION_NAME = exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME;
    extensionName = exports.NEEDLE_PROGRESSIVE_TEXTURE_EXTENSION_NAME;
    parentTypes = [core_1.PropertyType.TEXTURE];
    propertyType = "progressive_texture";
    init() { }
    model;
}
exports.NEEDLE_progressive_texture_property = NEEDLE_progressive_texture_property;
