"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stopOtherViteServers = void 0;
const fs_1 = require("fs");
const find = require('find-process');
async function stopOtherViteServers(directory) {
    if (!directory) {
        console.error("ERR: Please specify a directory");
        return;
    }
    if (!(0, fs_1.existsSync)(directory)) {
        console.error("ERR: Directory does not exist: " + directory);
        return;
    }
    // make full path
    directory = require('path').resolve(directory);
    console.log("Kill vite servers in other directories than: " + directory);
    // https://www.npmjs.com/package/find-process
    const res = await find("name", "node");
    console.log(res.length, "node processes found");
    for (const proc of res) {
        if (proc.name.includes("node") && proc.cmd.includes("vite") && proc.cmd.includes("--host")) {
            if (isRunningInOtherDirectory(directory, proc.cmd)) {
                stopProcess(proc.pid);
            }
            else
                console.log("Is running in same directory: " + proc.cmd);
        }
    }
}
exports.stopOtherViteServers = stopOtherViteServers;
function isRunningInOtherDirectory(dir, cmd) {
    cmd = cmd.replace(/\\/g, "/");
    dir = dir.replace(/\\/g, "/");
    return !cmd.includes(dir);
}
function stopProcess(pid) {
    console.log("KILL PROCESS", pid);
    process.kill(pid);
}
