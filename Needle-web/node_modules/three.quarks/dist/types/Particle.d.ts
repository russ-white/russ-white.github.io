import { Matrix4, Quaternion, Vector3, Vector4 } from "three";
import { EmissionState } from "./ParticleSystem";
export interface Particle {
    emissionState?: EmissionState;
    parentMatrix?: Matrix4;
    rotation?: number | Quaternion;
    startSpeed: number;
    startColor: Vector4;
    startSize: number;
    position: Vector3;
    velocity: Vector3;
    age: number;
    life: number;
    size: number;
    uvTile: number;
    color: Vector4;
    get died(): boolean;
}
export declare class SpriteParticle implements Particle {
    parentMatrix?: Matrix4;
    startSpeed: number;
    startColor: Vector4;
    startSize: number;
    position: Vector3;
    velocity: Vector3;
    age: number;
    life: number;
    size: number;
    angularVelocity?: number | Quaternion;
    rotation: number | Quaternion;
    color: Vector4;
    uvTile: number;
    get died(): boolean;
}
export declare class RecordState {
    position: Vector3;
    size: number;
    color: Vector4;
    constructor(position: Vector3, size: number, color: Vector4);
}
export declare class TrailParticle implements Particle {
    parentMatrix?: Matrix4;
    startSpeed: number;
    startColor: Vector4;
    startSize: number;
    position: Vector3;
    localPosition?: Vector3;
    velocity: Vector3;
    age: number;
    life: number;
    size: number;
    length: number;
    color: Vector4;
    previous: Array<RecordState>;
    uvTile: number;
    recordCurrentState(): void;
    get died(): boolean;
    reset(): void;
}
