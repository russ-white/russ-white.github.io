import { Vector4 } from "three";
import { FunctionJSON } from "./FunctionJSON";
import { RandomColor } from "./RandomColor";
import { ColorRange } from "./ColorRange";
export interface ColorGenerator {
    type: 'value';
    genColor(color: Vector4): Vector4;
    toJSON(): FunctionJSON;
    clone(): ColorGenerator;
}
export interface FunctionColorGenerator {
    type: 'function';
    genColor(color: Vector4, t: number): Vector4;
    toJSON(): FunctionJSON;
    clone(): FunctionColorGenerator;
}
export declare class ConstantColor implements ColorGenerator {
    color: Vector4;
    constructor(color: Vector4);
    genColor(color: Vector4): Vector4;
    type: "value";
    toJSON(): FunctionJSON;
    static fromJSON(json: FunctionJSON): ConstantColor;
    clone(): ColorGenerator;
}
export declare function ColorGeneratorFromJSON(json: FunctionJSON): RandomColor | ColorRange | ConstantColor;
