import { InstancedBufferGeometry, Matrix3, Vector3, Quaternion } from 'three';
import { ParticleSystemBatch, ParticleSystemBatchSettings } from "./ParticleSystemBatch";
export declare class SpriteBatch extends ParticleSystemBatch {
    geometry: InstancedBufferGeometry;
    private offsetBuffer;
    private rotationBuffer;
    private sizeBuffer;
    private colorBuffer;
    private uvTileBuffer;
    private velocityBuffer?;
    constructor(settings: ParticleSystemBatchSettings);
    buildExpandableBuffers(): void;
    setupBuffers(): void;
    expandBuffers(target: number): void;
    rebuildMaterial(): void;
    vector_: Vector3;
    quaternion_: Quaternion;
    quaternion2_: Quaternion;
    quaternion3_: Quaternion;
    rotationMat_: Matrix3;
    rotationMat2_: Matrix3;
    update(): void;
    dispose(): void;
}
