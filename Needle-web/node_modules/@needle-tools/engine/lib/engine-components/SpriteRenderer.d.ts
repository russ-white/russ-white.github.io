import { Behaviour } from "./Component";
import * as THREE from "three";
import { Vector2 } from "three";
import { RGBAColor } from "./js-extensions/RGBAColor";
export declare enum SpriteDrawMode {
    Simple = 0,
    Sliced = 1,
    Tiled = 2
}
declare class Vec2 {
    x: number;
    y: number;
}
export declare class Sprite {
    guid?: string;
    texture?: THREE.Texture;
    triangles: Array<number>;
    uv: Array<Vec2>;
    vertices: Array<Vec2>;
    _geometry?: THREE.BufferGeometry;
}
declare class Slice {
    name: string;
    offset: Vector2;
    size: Vector2;
}
export declare class SpriteSheet {
    sprite?: Sprite;
    index: number;
    slices: Slice[];
    update(): void;
}
export declare class SpriteRenderer extends Behaviour {
    drawMode: SpriteDrawMode;
    size: Vec2;
    color?: RGBAColor;
    sharedMaterial?: THREE.Material;
    get sprite(): SpriteSheet | undefined;
    set sprite(value: SpriteSheet | undefined | number);
    set spriteIndex(value: number);
    get spriteIndex(): number;
    get spriteFrames(): number;
    private _spriteSheet?;
    private _currentSprite?;
    awake(): void;
    start(): void;
    private updateSprite;
}
export {};
