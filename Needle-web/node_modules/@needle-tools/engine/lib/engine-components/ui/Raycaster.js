import { RaycastOptions } from "../../engine/engine_physics";
import { Behaviour } from "../Component";
import { EventSystem } from "./EventSystem";
export class Raycaster extends Behaviour {
    awake() {
        EventSystem.createIfNoneExists(this.context);
    }
    onEnable() {
        EventSystem.instance?.register(this);
    }
    onDisable() {
        EventSystem.instance?.unregister(this);
    }
    performRaycast(_opts = null) {
        return null;
    }
}
export class ObjectRaycaster extends Raycaster {
    targets = null;
    raycastHits = [];
    start() {
        this.targets = [this.gameObject];
    }
    performRaycast(opts = null) {
        if (!this.targets)
            return null;
        opts ??= new RaycastOptions();
        opts.targets = this.targets;
        opts.results = this.raycastHits;
        const hits = this.context.physics.raycast(opts);
        // console.log(this.context.alias, hits);
        return hits;
    }
}
export class GraphicRaycaster extends ObjectRaycaster {
}
//# sourceMappingURL=Raycaster.js.map