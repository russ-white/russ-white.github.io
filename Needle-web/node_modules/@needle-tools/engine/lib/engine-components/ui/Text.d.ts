import { Graphic } from './Graphic';
import { Canvas } from './Canvas';
export declare enum TextAnchor {
    UpperLeft = 0,
    UpperCenter = 1,
    UpperRight = 2,
    MiddleLeft = 3,
    MiddleCenter = 4,
    MiddleRight = 5,
    LowerLeft = 6,
    LowerCenter = 7,
    LowerRight = 8
}
export declare enum VerticalWrapMode {
    Truncate = 0,
    Overflow = 1
}
declare enum HorizontalWrapMode {
    Wrap = 0,
    Overflow = 1
}
declare enum FontStyle {
    Normal = 0,
    Bold = 1,
    Italic = 2,
    BoldAndItalic = 3
}
export declare class Text extends Graphic {
    canvas?: Canvas;
    alignment: TextAnchor;
    verticalOverflow: VerticalWrapMode;
    horizontalOverflow: HorizontalWrapMode;
    lineSpacing: number;
    supportRichText: boolean;
    font?: string;
    fontStyle: FontStyle;
    get text(): string;
    set text(val: string);
    private set_text;
    get fontSize(): number;
    set fontSize(val: number);
    protected onColorChanged(): void;
    private _isWaitingForRebuild;
    private requestRebuild;
    private rebuildDelayedRoutine;
    protected onCreate(_opts: any): void;
    onAfterAddedToScene(): void;
    private _text;
    private _fontSize;
    private _textMeshUi;
    private _textContainer;
    private getTextOpts;
    onEnable(): void;
    private createBlock;
    private getAlignment;
    private updateWidth;
    private ensureShadowComponentOwner;
    private createText;
    private _didHandleTextRenderOnTop;
    private handleTextRenderOnTop;
    private renderOnTopCoroutine;
    private handleTag;
    private getText;
    private getNextTag;
    private setFont;
    private getFontName;
}
export {};
