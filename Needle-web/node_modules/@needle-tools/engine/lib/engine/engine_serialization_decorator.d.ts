import { Constructor } from "./engine_types";
export declare type TypeResolver<T> = (data: any) => Constructor<T> | null;
/** Please use "@serializable" - this version has a typo and will be removed in future versions */
export declare const serializeable: <T>(type?: Constructor<T> | TypeResolver<T> | (Constructor<any> | TypeResolver<T>)[] | null | undefined) => (_target: any, _propertyKey: string) => void;
export declare const serializable: <T>(type?: Constructor<T> | TypeResolver<T> | (Constructor<any> | TypeResolver<T>)[] | null | undefined) => (_target: any, _propertyKey: string) => void;
export declare const ALL_PROPERTIES_MARKER = "__NEEDLE__ALL_PROPERTIES";
/** @deprecated current not used */
export declare function allProperties(constructor: Function): void;
export declare const STRICT_MARKER = "__NEEDLE__STRICT";
/** @deprecated  current not used */
export declare function strict(constructor: Function): void;
