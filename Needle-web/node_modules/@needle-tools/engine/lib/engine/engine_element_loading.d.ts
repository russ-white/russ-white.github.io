import { LoadingProgressArgs } from "./engine_setup";
export declare class LoadingElementOptions {
    className?: string;
    additionalClasses?: string[];
}
export interface ILoadingViewHandler {
    onLoadingBegin(message?: string): any;
    onLoadingUpdate(progress: LoadingProgressArgs, message?: string): any;
    onLoadingFinished(message?: string): any;
}
export declare function calculateProgress01(progress: LoadingProgressArgs): number;
export declare class EngineLoadingView implements ILoadingViewHandler {
    loadingProgress: number;
    private container;
    private _progress;
    private _allowCustomLoadingElement;
    private _loadingElement?;
    private _loadingTextContainer;
    private _loadingBar;
    private _messageContainer;
    private _loadingElementOptions?;
    constructor(container: HTMLElement, opts?: LoadingElementOptions);
    onLoadingBegin(message?: string): void;
    onLoadingUpdate(progress: LoadingProgressArgs | ProgressEvent | number, message?: string): void;
    onLoadingFinished(message?: string): void;
    setMessage(message: string): void;
    private _progressLoop;
    private smoothProgressLoop;
    private updateDisplay;
    private createLoadingElement;
}
