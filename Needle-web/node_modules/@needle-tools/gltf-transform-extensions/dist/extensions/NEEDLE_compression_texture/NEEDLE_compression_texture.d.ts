import { Extension, ExtensionProperty, PropertyType, ReaderContext, WriterContext } from "@gltf-transform/core";
export declare const EXTENSION_NAME = "NEEDLE_compression_texture";
export declare interface NEEDLE_compression_texture_schema {
    mode: string;
    slot: string;
    /** quality in range of 0 - 1 */
    quality: number;
    maxSize: number;
}
export declare class NEEDLE_compression_texture extends Extension {
    static EXTENSION_NAME: string;
    extensionName: string;
    create(toktxInfo: NEEDLE_compression_texture_schema): NEEDLE_compression_texture_property;
    read(context: ReaderContext): this;
    write(context: WriterContext): this;
}
export declare class NEEDLE_compression_texture_property extends ExtensionProperty {
    static EXTENSION_NAME: string;
    readonly extensionName: string;
    parentTypes: PropertyType[];
    propertyType: string;
    init(): void;
    model: NEEDLE_compression_texture_schema;
}
