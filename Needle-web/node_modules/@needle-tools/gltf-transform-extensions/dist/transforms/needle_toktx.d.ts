import { Document, Texture } from "@gltf-transform/core";
import { TextureBasisu } from "@gltf-transform/extensions";
import { NEEDLE_compression_texture_schema } from "../extensions";
import { INeedleTextureTransformContext } from "./needle_common";
export interface NeedleToktxOptions {
    jobs?: number;
    toktxPath?: string;
}
export declare class NeedleToktxContext implements INeedleTextureTransformContext {
    limit: any;
    basisuExtension: TextureBasisu;
    version: string;
    tmpPathBase: string;
    document: Document;
    env: undefined | object;
    numTextures: number;
    constructor(options: NeedleToktxOptions);
    prepare(document: Document): Promise<void>;
    process(index: number, texture: Texture, settings: NEEDLE_compression_texture_schema): Promise<boolean>;
    finalize(document: Document): Promise<void>;
}
